//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/org/apache/commons/math/geometry/Vector3D.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/ArithmeticException.h"
#include "java/lang/Double.h"
#include "org/apache/commons/math/MathRuntimeException.h"
#include "org/apache/commons/math/exception/util/LocalizedFormats.h"
#include "org/apache/commons/math/geometry/Vector3D.h"
#include "org/apache/commons/math/geometry/Vector3DFormat.h"
#include "org/apache/commons/math/util/FastMath.h"
#include "org/apache/commons/math/util/MathUtils.h"

#define OrgApacheCommonsMathGeometryVector3D_serialVersionUID 5133268763396045979LL

@interface OrgApacheCommonsMathGeometryVector3D () {
 @public
  jdouble x_;
  jdouble y_;
  jdouble z_;
}

@end

static OrgApacheCommonsMathGeometryVector3DFormat *OrgApacheCommonsMathGeometryVector3D_DEFAULT_FORMAT_;
J2OBJC_STATIC_FIELD_GETTER(OrgApacheCommonsMathGeometryVector3D, DEFAULT_FORMAT_, OrgApacheCommonsMathGeometryVector3DFormat *)

J2OBJC_STATIC_FIELD_GETTER(OrgApacheCommonsMathGeometryVector3D, serialVersionUID, jlong)

J2OBJC_INITIALIZED_DEFN(OrgApacheCommonsMathGeometryVector3D)

OrgApacheCommonsMathGeometryVector3D *OrgApacheCommonsMathGeometryVector3D_ZERO_;
OrgApacheCommonsMathGeometryVector3D *OrgApacheCommonsMathGeometryVector3D_PLUS_I_;
OrgApacheCommonsMathGeometryVector3D *OrgApacheCommonsMathGeometryVector3D_MINUS_I_;
OrgApacheCommonsMathGeometryVector3D *OrgApacheCommonsMathGeometryVector3D_PLUS_J_;
OrgApacheCommonsMathGeometryVector3D *OrgApacheCommonsMathGeometryVector3D_MINUS_J_;
OrgApacheCommonsMathGeometryVector3D *OrgApacheCommonsMathGeometryVector3D_PLUS_K_;
OrgApacheCommonsMathGeometryVector3D *OrgApacheCommonsMathGeometryVector3D_MINUS_K_;
OrgApacheCommonsMathGeometryVector3D *OrgApacheCommonsMathGeometryVector3D_NaN_;
OrgApacheCommonsMathGeometryVector3D *OrgApacheCommonsMathGeometryVector3D_POSITIVE_INFINITY_;
OrgApacheCommonsMathGeometryVector3D *OrgApacheCommonsMathGeometryVector3D_NEGATIVE_INFINITY_;

@implementation OrgApacheCommonsMathGeometryVector3D

- (instancetype)initWithDouble:(jdouble)x
                    withDouble:(jdouble)y
                    withDouble:(jdouble)z {
  OrgApacheCommonsMathGeometryVector3D_initWithDouble_withDouble_withDouble_(self, x, y, z);
  return self;
}

- (instancetype)initWithDouble:(jdouble)alpha
                    withDouble:(jdouble)delta {
  OrgApacheCommonsMathGeometryVector3D_initWithDouble_withDouble_(self, alpha, delta);
  return self;
}

- (instancetype)initWithDouble:(jdouble)a
withOrgApacheCommonsMathGeometryVector3D:(OrgApacheCommonsMathGeometryVector3D *)u {
  OrgApacheCommonsMathGeometryVector3D_initWithDouble_withOrgApacheCommonsMathGeometryVector3D_(self, a, u);
  return self;
}

- (instancetype)initWithDouble:(jdouble)a1
withOrgApacheCommonsMathGeometryVector3D:(OrgApacheCommonsMathGeometryVector3D *)u1
                    withDouble:(jdouble)a2
withOrgApacheCommonsMathGeometryVector3D:(OrgApacheCommonsMathGeometryVector3D *)u2 {
  OrgApacheCommonsMathGeometryVector3D_initWithDouble_withOrgApacheCommonsMathGeometryVector3D_withDouble_withOrgApacheCommonsMathGeometryVector3D_(self, a1, u1, a2, u2);
  return self;
}

- (instancetype)initWithDouble:(jdouble)a1
withOrgApacheCommonsMathGeometryVector3D:(OrgApacheCommonsMathGeometryVector3D *)u1
                    withDouble:(jdouble)a2
withOrgApacheCommonsMathGeometryVector3D:(OrgApacheCommonsMathGeometryVector3D *)u2
                    withDouble:(jdouble)a3
withOrgApacheCommonsMathGeometryVector3D:(OrgApacheCommonsMathGeometryVector3D *)u3 {
  OrgApacheCommonsMathGeometryVector3D_initWithDouble_withOrgApacheCommonsMathGeometryVector3D_withDouble_withOrgApacheCommonsMathGeometryVector3D_withDouble_withOrgApacheCommonsMathGeometryVector3D_(self, a1, u1, a2, u2, a3, u3);
  return self;
}

- (instancetype)initWithDouble:(jdouble)a1
withOrgApacheCommonsMathGeometryVector3D:(OrgApacheCommonsMathGeometryVector3D *)u1
                    withDouble:(jdouble)a2
withOrgApacheCommonsMathGeometryVector3D:(OrgApacheCommonsMathGeometryVector3D *)u2
                    withDouble:(jdouble)a3
withOrgApacheCommonsMathGeometryVector3D:(OrgApacheCommonsMathGeometryVector3D *)u3
                    withDouble:(jdouble)a4
withOrgApacheCommonsMathGeometryVector3D:(OrgApacheCommonsMathGeometryVector3D *)u4 {
  OrgApacheCommonsMathGeometryVector3D_initWithDouble_withOrgApacheCommonsMathGeometryVector3D_withDouble_withOrgApacheCommonsMathGeometryVector3D_withDouble_withOrgApacheCommonsMathGeometryVector3D_withDouble_withOrgApacheCommonsMathGeometryVector3D_(self, a1, u1, a2, u2, a3, u3, a4, u4);
  return self;
}

- (jdouble)getX {
  return x_;
}

- (jdouble)getY {
  return y_;
}

- (jdouble)getZ {
  return z_;
}

- (jdouble)getNorm1 {
  return OrgApacheCommonsMathUtilFastMath_absWithDouble_(x_) + OrgApacheCommonsMathUtilFastMath_absWithDouble_(y_) + OrgApacheCommonsMathUtilFastMath_absWithDouble_(z_);
}

- (jdouble)getNorm {
  return OrgApacheCommonsMathUtilFastMath_sqrtWithDouble_(x_ * x_ + y_ * y_ + z_ * z_);
}

- (jdouble)getNormSq {
  return x_ * x_ + y_ * y_ + z_ * z_;
}

- (jdouble)getNormInf {
  return OrgApacheCommonsMathUtilFastMath_maxWithDouble_withDouble_(OrgApacheCommonsMathUtilFastMath_maxWithDouble_withDouble_(OrgApacheCommonsMathUtilFastMath_absWithDouble_(x_), OrgApacheCommonsMathUtilFastMath_absWithDouble_(y_)), OrgApacheCommonsMathUtilFastMath_absWithDouble_(z_));
}

- (jdouble)getAlpha {
  return OrgApacheCommonsMathUtilFastMath_atan2WithDouble_withDouble_(y_, x_);
}

- (jdouble)getDelta {
  return OrgApacheCommonsMathUtilFastMath_asinWithDouble_(z_ / [self getNorm]);
}

- (OrgApacheCommonsMathGeometryVector3D *)addWithOrgApacheCommonsMathGeometryVector3D:(OrgApacheCommonsMathGeometryVector3D *)v {
  return [new_OrgApacheCommonsMathGeometryVector3D_initWithDouble_withDouble_withDouble_(x_ + ((OrgApacheCommonsMathGeometryVector3D *) nil_chk(v))->x_, y_ + v->y_, z_ + v->z_) autorelease];
}

- (OrgApacheCommonsMathGeometryVector3D *)addWithDouble:(jdouble)factor
               withOrgApacheCommonsMathGeometryVector3D:(OrgApacheCommonsMathGeometryVector3D *)v {
  return [new_OrgApacheCommonsMathGeometryVector3D_initWithDouble_withDouble_withDouble_(x_ + factor * ((OrgApacheCommonsMathGeometryVector3D *) nil_chk(v))->x_, y_ + factor * v->y_, z_ + factor * v->z_) autorelease];
}

- (OrgApacheCommonsMathGeometryVector3D *)subtractWithOrgApacheCommonsMathGeometryVector3D:(OrgApacheCommonsMathGeometryVector3D *)v {
  return [new_OrgApacheCommonsMathGeometryVector3D_initWithDouble_withDouble_withDouble_(x_ - ((OrgApacheCommonsMathGeometryVector3D *) nil_chk(v))->x_, y_ - v->y_, z_ - v->z_) autorelease];
}

- (OrgApacheCommonsMathGeometryVector3D *)subtractWithDouble:(jdouble)factor
                    withOrgApacheCommonsMathGeometryVector3D:(OrgApacheCommonsMathGeometryVector3D *)v {
  return [new_OrgApacheCommonsMathGeometryVector3D_initWithDouble_withDouble_withDouble_(x_ - factor * ((OrgApacheCommonsMathGeometryVector3D *) nil_chk(v))->x_, y_ - factor * v->y_, z_ - factor * v->z_) autorelease];
}

- (OrgApacheCommonsMathGeometryVector3D *)normalize {
  jdouble s = [self getNorm];
  if (s == 0) {
    @throw OrgApacheCommonsMathMathRuntimeException_createArithmeticExceptionWithOrgApacheCommonsMathExceptionUtilLocalizable_withNSObjectArray_(OrgApacheCommonsMathExceptionUtilLocalizedFormatsEnum_get_CANNOT_NORMALIZE_A_ZERO_NORM_VECTOR(), [IOSObjectArray arrayWithLength:0 type:NSObject_class_()]);
  }
  return [self scalarMultiplyWithDouble:1 / s];
}

- (OrgApacheCommonsMathGeometryVector3D *)orthogonal {
  jdouble threshold = 0.6 * [self getNorm];
  if (threshold == 0) {
    @throw OrgApacheCommonsMathMathRuntimeException_createArithmeticExceptionWithOrgApacheCommonsMathExceptionUtilLocalizable_withNSObjectArray_(OrgApacheCommonsMathExceptionUtilLocalizedFormatsEnum_get_ZERO_NORM(), [IOSObjectArray arrayWithLength:0 type:NSObject_class_()]);
  }
  if ((x_ >= -threshold) && (x_ <= threshold)) {
    jdouble inverse = 1 / OrgApacheCommonsMathUtilFastMath_sqrtWithDouble_(y_ * y_ + z_ * z_);
    return [new_OrgApacheCommonsMathGeometryVector3D_initWithDouble_withDouble_withDouble_(0, inverse * z_, -inverse * y_) autorelease];
  }
  else if ((y_ >= -threshold) && (y_ <= threshold)) {
    jdouble inverse = 1 / OrgApacheCommonsMathUtilFastMath_sqrtWithDouble_(x_ * x_ + z_ * z_);
    return [new_OrgApacheCommonsMathGeometryVector3D_initWithDouble_withDouble_withDouble_(-inverse * z_, 0, inverse * x_) autorelease];
  }
  jdouble inverse = 1 / OrgApacheCommonsMathUtilFastMath_sqrtWithDouble_(x_ * x_ + y_ * y_);
  return [new_OrgApacheCommonsMathGeometryVector3D_initWithDouble_withDouble_withDouble_(inverse * y_, -inverse * x_, 0) autorelease];
}

+ (jdouble)angleWithOrgApacheCommonsMathGeometryVector3D:(OrgApacheCommonsMathGeometryVector3D *)v1
                withOrgApacheCommonsMathGeometryVector3D:(OrgApacheCommonsMathGeometryVector3D *)v2 {
  return OrgApacheCommonsMathGeometryVector3D_angleWithOrgApacheCommonsMathGeometryVector3D_withOrgApacheCommonsMathGeometryVector3D_(v1, v2);
}

- (OrgApacheCommonsMathGeometryVector3D *)negate {
  return [new_OrgApacheCommonsMathGeometryVector3D_initWithDouble_withDouble_withDouble_(-x_, -y_, -z_) autorelease];
}

- (OrgApacheCommonsMathGeometryVector3D *)scalarMultiplyWithDouble:(jdouble)a {
  return [new_OrgApacheCommonsMathGeometryVector3D_initWithDouble_withDouble_withDouble_(a * x_, a * y_, a * z_) autorelease];
}

- (jboolean)isNaN {
  return JavaLangDouble_isNaNWithDouble_(x_) || JavaLangDouble_isNaNWithDouble_(y_) || JavaLangDouble_isNaNWithDouble_(z_);
}

- (jboolean)isInfinite {
  return ![self isNaN] && (JavaLangDouble_isInfiniteWithDouble_(x_) || JavaLangDouble_isInfiniteWithDouble_(y_) || JavaLangDouble_isInfiniteWithDouble_(z_));
}

- (jboolean)isEqual:(id)other {
  if (self == other) {
    return YES;
  }
  if ([other isKindOfClass:[OrgApacheCommonsMathGeometryVector3D class]]) {
    OrgApacheCommonsMathGeometryVector3D *rhs = (OrgApacheCommonsMathGeometryVector3D *) check_class_cast(other, [OrgApacheCommonsMathGeometryVector3D class]);
    if ([((OrgApacheCommonsMathGeometryVector3D *) nil_chk(rhs)) isNaN]) {
      return [self isNaN];
    }
    return (x_ == rhs->x_) && (y_ == rhs->y_) && (z_ == rhs->z_);
  }
  return NO;
}

- (NSUInteger)hash {
  if ([self isNaN]) {
    return 8;
  }
  return 31 * (23 * OrgApacheCommonsMathUtilMathUtils_hash__WithDouble_(x_) + 19 * OrgApacheCommonsMathUtilMathUtils_hash__WithDouble_(y_) + OrgApacheCommonsMathUtilMathUtils_hash__WithDouble_(z_));
}

+ (jdouble)dotProductWithOrgApacheCommonsMathGeometryVector3D:(OrgApacheCommonsMathGeometryVector3D *)v1
                     withOrgApacheCommonsMathGeometryVector3D:(OrgApacheCommonsMathGeometryVector3D *)v2 {
  return OrgApacheCommonsMathGeometryVector3D_dotProductWithOrgApacheCommonsMathGeometryVector3D_withOrgApacheCommonsMathGeometryVector3D_(v1, v2);
}

+ (OrgApacheCommonsMathGeometryVector3D *)crossProductWithOrgApacheCommonsMathGeometryVector3D:(OrgApacheCommonsMathGeometryVector3D *)v1
                                                      withOrgApacheCommonsMathGeometryVector3D:(OrgApacheCommonsMathGeometryVector3D *)v2 {
  return OrgApacheCommonsMathGeometryVector3D_crossProductWithOrgApacheCommonsMathGeometryVector3D_withOrgApacheCommonsMathGeometryVector3D_(v1, v2);
}

+ (jdouble)distance1WithOrgApacheCommonsMathGeometryVector3D:(OrgApacheCommonsMathGeometryVector3D *)v1
                    withOrgApacheCommonsMathGeometryVector3D:(OrgApacheCommonsMathGeometryVector3D *)v2 {
  return OrgApacheCommonsMathGeometryVector3D_distance1WithOrgApacheCommonsMathGeometryVector3D_withOrgApacheCommonsMathGeometryVector3D_(v1, v2);
}

+ (jdouble)distanceWithOrgApacheCommonsMathGeometryVector3D:(OrgApacheCommonsMathGeometryVector3D *)v1
                   withOrgApacheCommonsMathGeometryVector3D:(OrgApacheCommonsMathGeometryVector3D *)v2 {
  return OrgApacheCommonsMathGeometryVector3D_distanceWithOrgApacheCommonsMathGeometryVector3D_withOrgApacheCommonsMathGeometryVector3D_(v1, v2);
}

+ (jdouble)distanceInfWithOrgApacheCommonsMathGeometryVector3D:(OrgApacheCommonsMathGeometryVector3D *)v1
                      withOrgApacheCommonsMathGeometryVector3D:(OrgApacheCommonsMathGeometryVector3D *)v2 {
  return OrgApacheCommonsMathGeometryVector3D_distanceInfWithOrgApacheCommonsMathGeometryVector3D_withOrgApacheCommonsMathGeometryVector3D_(v1, v2);
}

+ (jdouble)distanceSqWithOrgApacheCommonsMathGeometryVector3D:(OrgApacheCommonsMathGeometryVector3D *)v1
                     withOrgApacheCommonsMathGeometryVector3D:(OrgApacheCommonsMathGeometryVector3D *)v2 {
  return OrgApacheCommonsMathGeometryVector3D_distanceSqWithOrgApacheCommonsMathGeometryVector3D_withOrgApacheCommonsMathGeometryVector3D_(v1, v2);
}

- (NSString *)description {
  return [((OrgApacheCommonsMathGeometryVector3DFormat *) nil_chk(OrgApacheCommonsMathGeometryVector3D_DEFAULT_FORMAT_)) formatWithId:self];
}

+ (void)initialize {
  if (self == [OrgApacheCommonsMathGeometryVector3D class]) {
    JreStrongAssignAndConsume(&OrgApacheCommonsMathGeometryVector3D_ZERO_, nil, new_OrgApacheCommonsMathGeometryVector3D_initWithDouble_withDouble_withDouble_(0, 0, 0));
    JreStrongAssignAndConsume(&OrgApacheCommonsMathGeometryVector3D_PLUS_I_, nil, new_OrgApacheCommonsMathGeometryVector3D_initWithDouble_withDouble_withDouble_(1, 0, 0));
    JreStrongAssignAndConsume(&OrgApacheCommonsMathGeometryVector3D_MINUS_I_, nil, new_OrgApacheCommonsMathGeometryVector3D_initWithDouble_withDouble_withDouble_(-1, 0, 0));
    JreStrongAssignAndConsume(&OrgApacheCommonsMathGeometryVector3D_PLUS_J_, nil, new_OrgApacheCommonsMathGeometryVector3D_initWithDouble_withDouble_withDouble_(0, 1, 0));
    JreStrongAssignAndConsume(&OrgApacheCommonsMathGeometryVector3D_MINUS_J_, nil, new_OrgApacheCommonsMathGeometryVector3D_initWithDouble_withDouble_withDouble_(0, -1, 0));
    JreStrongAssignAndConsume(&OrgApacheCommonsMathGeometryVector3D_PLUS_K_, nil, new_OrgApacheCommonsMathGeometryVector3D_initWithDouble_withDouble_withDouble_(0, 0, 1));
    JreStrongAssignAndConsume(&OrgApacheCommonsMathGeometryVector3D_MINUS_K_, nil, new_OrgApacheCommonsMathGeometryVector3D_initWithDouble_withDouble_withDouble_(0, 0, -1));
    JreStrongAssignAndConsume(&OrgApacheCommonsMathGeometryVector3D_NaN_, nil, new_OrgApacheCommonsMathGeometryVector3D_initWithDouble_withDouble_withDouble_(JavaLangDouble_NaN, JavaLangDouble_NaN, JavaLangDouble_NaN));
    JreStrongAssignAndConsume(&OrgApacheCommonsMathGeometryVector3D_POSITIVE_INFINITY_, nil, new_OrgApacheCommonsMathGeometryVector3D_initWithDouble_withDouble_withDouble_(JavaLangDouble_POSITIVE_INFINITY, JavaLangDouble_POSITIVE_INFINITY, JavaLangDouble_POSITIVE_INFINITY));
    JreStrongAssignAndConsume(&OrgApacheCommonsMathGeometryVector3D_NEGATIVE_INFINITY_, nil, new_OrgApacheCommonsMathGeometryVector3D_initWithDouble_withDouble_withDouble_(JavaLangDouble_NEGATIVE_INFINITY, JavaLangDouble_NEGATIVE_INFINITY, JavaLangDouble_NEGATIVE_INFINITY));
    JreStrongAssign(&OrgApacheCommonsMathGeometryVector3D_DEFAULT_FORMAT_, nil, OrgApacheCommonsMathGeometryVector3DFormat_getInstance());
    J2OBJC_SET_INITIALIZED(OrgApacheCommonsMathGeometryVector3D)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithDouble:withDouble:withDouble:", "Vector3D", NULL, 0x1, NULL, NULL },
    { "initWithDouble:withDouble:", "Vector3D", NULL, 0x1, NULL, NULL },
    { "initWithDouble:withOrgApacheCommonsMathGeometryVector3D:", "Vector3D", NULL, 0x1, NULL, NULL },
    { "initWithDouble:withOrgApacheCommonsMathGeometryVector3D:withDouble:withOrgApacheCommonsMathGeometryVector3D:", "Vector3D", NULL, 0x1, NULL, NULL },
    { "initWithDouble:withOrgApacheCommonsMathGeometryVector3D:withDouble:withOrgApacheCommonsMathGeometryVector3D:withDouble:withOrgApacheCommonsMathGeometryVector3D:", "Vector3D", NULL, 0x1, NULL, NULL },
    { "initWithDouble:withOrgApacheCommonsMathGeometryVector3D:withDouble:withOrgApacheCommonsMathGeometryVector3D:withDouble:withOrgApacheCommonsMathGeometryVector3D:withDouble:withOrgApacheCommonsMathGeometryVector3D:", "Vector3D", NULL, 0x1, NULL, NULL },
    { "getX", NULL, "D", 0x1, NULL, NULL },
    { "getY", NULL, "D", 0x1, NULL, NULL },
    { "getZ", NULL, "D", 0x1, NULL, NULL },
    { "getNorm1", NULL, "D", 0x1, NULL, NULL },
    { "getNorm", NULL, "D", 0x1, NULL, NULL },
    { "getNormSq", NULL, "D", 0x1, NULL, NULL },
    { "getNormInf", NULL, "D", 0x1, NULL, NULL },
    { "getAlpha", NULL, "D", 0x1, NULL, NULL },
    { "getDelta", NULL, "D", 0x1, NULL, NULL },
    { "addWithOrgApacheCommonsMathGeometryVector3D:", "add", "Lorg.apache.commons.math.geometry.Vector3D;", 0x1, NULL, NULL },
    { "addWithDouble:withOrgApacheCommonsMathGeometryVector3D:", "add", "Lorg.apache.commons.math.geometry.Vector3D;", 0x1, NULL, NULL },
    { "subtractWithOrgApacheCommonsMathGeometryVector3D:", "subtract", "Lorg.apache.commons.math.geometry.Vector3D;", 0x1, NULL, NULL },
    { "subtractWithDouble:withOrgApacheCommonsMathGeometryVector3D:", "subtract", "Lorg.apache.commons.math.geometry.Vector3D;", 0x1, NULL, NULL },
    { "normalize", NULL, "Lorg.apache.commons.math.geometry.Vector3D;", 0x1, NULL, NULL },
    { "orthogonal", NULL, "Lorg.apache.commons.math.geometry.Vector3D;", 0x1, NULL, NULL },
    { "angleWithOrgApacheCommonsMathGeometryVector3D:withOrgApacheCommonsMathGeometryVector3D:", "angle", "D", 0x9, NULL, NULL },
    { "negate", NULL, "Lorg.apache.commons.math.geometry.Vector3D;", 0x1, NULL, NULL },
    { "scalarMultiplyWithDouble:", "scalarMultiply", "Lorg.apache.commons.math.geometry.Vector3D;", 0x1, NULL, NULL },
    { "isNaN", NULL, "Z", 0x1, NULL, NULL },
    { "isInfinite", NULL, "Z", 0x1, NULL, NULL },
    { "isEqual:", "equals", "Z", 0x1, NULL, NULL },
    { "hash", "hashCode", "I", 0x1, NULL, NULL },
    { "dotProductWithOrgApacheCommonsMathGeometryVector3D:withOrgApacheCommonsMathGeometryVector3D:", "dotProduct", "D", 0x9, NULL, NULL },
    { "crossProductWithOrgApacheCommonsMathGeometryVector3D:withOrgApacheCommonsMathGeometryVector3D:", "crossProduct", "Lorg.apache.commons.math.geometry.Vector3D;", 0x9, NULL, NULL },
    { "distance1WithOrgApacheCommonsMathGeometryVector3D:withOrgApacheCommonsMathGeometryVector3D:", "distance1", "D", 0x9, NULL, NULL },
    { "distanceWithOrgApacheCommonsMathGeometryVector3D:withOrgApacheCommonsMathGeometryVector3D:", "distance", "D", 0x9, NULL, NULL },
    { "distanceInfWithOrgApacheCommonsMathGeometryVector3D:withOrgApacheCommonsMathGeometryVector3D:", "distanceInf", "D", 0x9, NULL, NULL },
    { "distanceSqWithOrgApacheCommonsMathGeometryVector3D:withOrgApacheCommonsMathGeometryVector3D:", "distanceSq", "D", 0x9, NULL, NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "ZERO_", NULL, 0x19, "Lorg.apache.commons.math.geometry.Vector3D;", &OrgApacheCommonsMathGeometryVector3D_ZERO_, NULL,  },
    { "PLUS_I_", NULL, 0x19, "Lorg.apache.commons.math.geometry.Vector3D;", &OrgApacheCommonsMathGeometryVector3D_PLUS_I_, NULL,  },
    { "MINUS_I_", NULL, 0x19, "Lorg.apache.commons.math.geometry.Vector3D;", &OrgApacheCommonsMathGeometryVector3D_MINUS_I_, NULL,  },
    { "PLUS_J_", NULL, 0x19, "Lorg.apache.commons.math.geometry.Vector3D;", &OrgApacheCommonsMathGeometryVector3D_PLUS_J_, NULL,  },
    { "MINUS_J_", NULL, 0x19, "Lorg.apache.commons.math.geometry.Vector3D;", &OrgApacheCommonsMathGeometryVector3D_MINUS_J_, NULL,  },
    { "PLUS_K_", NULL, 0x19, "Lorg.apache.commons.math.geometry.Vector3D;", &OrgApacheCommonsMathGeometryVector3D_PLUS_K_, NULL,  },
    { "MINUS_K_", NULL, 0x19, "Lorg.apache.commons.math.geometry.Vector3D;", &OrgApacheCommonsMathGeometryVector3D_MINUS_K_, NULL,  },
    { "NaN_", NULL, 0x19, "Lorg.apache.commons.math.geometry.Vector3D;", &OrgApacheCommonsMathGeometryVector3D_NaN_, NULL,  },
    { "POSITIVE_INFINITY_", NULL, 0x19, "Lorg.apache.commons.math.geometry.Vector3D;", &OrgApacheCommonsMathGeometryVector3D_POSITIVE_INFINITY_, NULL,  },
    { "NEGATIVE_INFINITY_", NULL, 0x19, "Lorg.apache.commons.math.geometry.Vector3D;", &OrgApacheCommonsMathGeometryVector3D_NEGATIVE_INFINITY_, NULL,  },
    { "DEFAULT_FORMAT_", NULL, 0x1a, "Lorg.apache.commons.math.geometry.Vector3DFormat;", &OrgApacheCommonsMathGeometryVector3D_DEFAULT_FORMAT_, NULL,  },
    { "serialVersionUID_", NULL, 0x1a, "J", NULL, NULL, .constantValue.asLong = OrgApacheCommonsMathGeometryVector3D_serialVersionUID },
    { "x_", NULL, 0x12, "D", NULL, NULL,  },
    { "y_", NULL, 0x12, "D", NULL, NULL,  },
    { "z_", NULL, 0x12, "D", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgApacheCommonsMathGeometryVector3D = { 2, "Vector3D", "org.apache.commons.math.geometry", NULL, 0x1, 35, methods, 15, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheCommonsMathGeometryVector3D;
}

@end

void OrgApacheCommonsMathGeometryVector3D_initWithDouble_withDouble_withDouble_(OrgApacheCommonsMathGeometryVector3D *self, jdouble x, jdouble y, jdouble z) {
  NSObject_init(self);
  self->x_ = x;
  self->y_ = y;
  self->z_ = z;
}

OrgApacheCommonsMathGeometryVector3D *new_OrgApacheCommonsMathGeometryVector3D_initWithDouble_withDouble_withDouble_(jdouble x, jdouble y, jdouble z) {
  OrgApacheCommonsMathGeometryVector3D *self = [OrgApacheCommonsMathGeometryVector3D alloc];
  OrgApacheCommonsMathGeometryVector3D_initWithDouble_withDouble_withDouble_(self, x, y, z);
  return self;
}

void OrgApacheCommonsMathGeometryVector3D_initWithDouble_withDouble_(OrgApacheCommonsMathGeometryVector3D *self, jdouble alpha, jdouble delta) {
  NSObject_init(self);
  jdouble cosDelta = OrgApacheCommonsMathUtilFastMath_cosWithDouble_(delta);
  self->x_ = OrgApacheCommonsMathUtilFastMath_cosWithDouble_(alpha) * cosDelta;
  self->y_ = OrgApacheCommonsMathUtilFastMath_sinWithDouble_(alpha) * cosDelta;
  self->z_ = OrgApacheCommonsMathUtilFastMath_sinWithDouble_(delta);
}

OrgApacheCommonsMathGeometryVector3D *new_OrgApacheCommonsMathGeometryVector3D_initWithDouble_withDouble_(jdouble alpha, jdouble delta) {
  OrgApacheCommonsMathGeometryVector3D *self = [OrgApacheCommonsMathGeometryVector3D alloc];
  OrgApacheCommonsMathGeometryVector3D_initWithDouble_withDouble_(self, alpha, delta);
  return self;
}

void OrgApacheCommonsMathGeometryVector3D_initWithDouble_withOrgApacheCommonsMathGeometryVector3D_(OrgApacheCommonsMathGeometryVector3D *self, jdouble a, OrgApacheCommonsMathGeometryVector3D *u) {
  NSObject_init(self);
  self->x_ = a * ((OrgApacheCommonsMathGeometryVector3D *) nil_chk(u))->x_;
  self->y_ = a * u->y_;
  self->z_ = a * u->z_;
}

OrgApacheCommonsMathGeometryVector3D *new_OrgApacheCommonsMathGeometryVector3D_initWithDouble_withOrgApacheCommonsMathGeometryVector3D_(jdouble a, OrgApacheCommonsMathGeometryVector3D *u) {
  OrgApacheCommonsMathGeometryVector3D *self = [OrgApacheCommonsMathGeometryVector3D alloc];
  OrgApacheCommonsMathGeometryVector3D_initWithDouble_withOrgApacheCommonsMathGeometryVector3D_(self, a, u);
  return self;
}

void OrgApacheCommonsMathGeometryVector3D_initWithDouble_withOrgApacheCommonsMathGeometryVector3D_withDouble_withOrgApacheCommonsMathGeometryVector3D_(OrgApacheCommonsMathGeometryVector3D *self, jdouble a1, OrgApacheCommonsMathGeometryVector3D *u1, jdouble a2, OrgApacheCommonsMathGeometryVector3D *u2) {
  NSObject_init(self);
  self->x_ = a1 * ((OrgApacheCommonsMathGeometryVector3D *) nil_chk(u1))->x_ + a2 * ((OrgApacheCommonsMathGeometryVector3D *) nil_chk(u2))->x_;
  self->y_ = a1 * u1->y_ + a2 * u2->y_;
  self->z_ = a1 * u1->z_ + a2 * u2->z_;
}

OrgApacheCommonsMathGeometryVector3D *new_OrgApacheCommonsMathGeometryVector3D_initWithDouble_withOrgApacheCommonsMathGeometryVector3D_withDouble_withOrgApacheCommonsMathGeometryVector3D_(jdouble a1, OrgApacheCommonsMathGeometryVector3D *u1, jdouble a2, OrgApacheCommonsMathGeometryVector3D *u2) {
  OrgApacheCommonsMathGeometryVector3D *self = [OrgApacheCommonsMathGeometryVector3D alloc];
  OrgApacheCommonsMathGeometryVector3D_initWithDouble_withOrgApacheCommonsMathGeometryVector3D_withDouble_withOrgApacheCommonsMathGeometryVector3D_(self, a1, u1, a2, u2);
  return self;
}

void OrgApacheCommonsMathGeometryVector3D_initWithDouble_withOrgApacheCommonsMathGeometryVector3D_withDouble_withOrgApacheCommonsMathGeometryVector3D_withDouble_withOrgApacheCommonsMathGeometryVector3D_(OrgApacheCommonsMathGeometryVector3D *self, jdouble a1, OrgApacheCommonsMathGeometryVector3D *u1, jdouble a2, OrgApacheCommonsMathGeometryVector3D *u2, jdouble a3, OrgApacheCommonsMathGeometryVector3D *u3) {
  NSObject_init(self);
  self->x_ = a1 * ((OrgApacheCommonsMathGeometryVector3D *) nil_chk(u1))->x_ + a2 * ((OrgApacheCommonsMathGeometryVector3D *) nil_chk(u2))->x_ + a3 * ((OrgApacheCommonsMathGeometryVector3D *) nil_chk(u3))->x_;
  self->y_ = a1 * u1->y_ + a2 * u2->y_ + a3 * u3->y_;
  self->z_ = a1 * u1->z_ + a2 * u2->z_ + a3 * u3->z_;
}

OrgApacheCommonsMathGeometryVector3D *new_OrgApacheCommonsMathGeometryVector3D_initWithDouble_withOrgApacheCommonsMathGeometryVector3D_withDouble_withOrgApacheCommonsMathGeometryVector3D_withDouble_withOrgApacheCommonsMathGeometryVector3D_(jdouble a1, OrgApacheCommonsMathGeometryVector3D *u1, jdouble a2, OrgApacheCommonsMathGeometryVector3D *u2, jdouble a3, OrgApacheCommonsMathGeometryVector3D *u3) {
  OrgApacheCommonsMathGeometryVector3D *self = [OrgApacheCommonsMathGeometryVector3D alloc];
  OrgApacheCommonsMathGeometryVector3D_initWithDouble_withOrgApacheCommonsMathGeometryVector3D_withDouble_withOrgApacheCommonsMathGeometryVector3D_withDouble_withOrgApacheCommonsMathGeometryVector3D_(self, a1, u1, a2, u2, a3, u3);
  return self;
}

void OrgApacheCommonsMathGeometryVector3D_initWithDouble_withOrgApacheCommonsMathGeometryVector3D_withDouble_withOrgApacheCommonsMathGeometryVector3D_withDouble_withOrgApacheCommonsMathGeometryVector3D_withDouble_withOrgApacheCommonsMathGeometryVector3D_(OrgApacheCommonsMathGeometryVector3D *self, jdouble a1, OrgApacheCommonsMathGeometryVector3D *u1, jdouble a2, OrgApacheCommonsMathGeometryVector3D *u2, jdouble a3, OrgApacheCommonsMathGeometryVector3D *u3, jdouble a4, OrgApacheCommonsMathGeometryVector3D *u4) {
  NSObject_init(self);
  self->x_ = a1 * ((OrgApacheCommonsMathGeometryVector3D *) nil_chk(u1))->x_ + a2 * ((OrgApacheCommonsMathGeometryVector3D *) nil_chk(u2))->x_ + a3 * ((OrgApacheCommonsMathGeometryVector3D *) nil_chk(u3))->x_ + a4 * ((OrgApacheCommonsMathGeometryVector3D *) nil_chk(u4))->x_;
  self->y_ = a1 * u1->y_ + a2 * u2->y_ + a3 * u3->y_ + a4 * u4->y_;
  self->z_ = a1 * u1->z_ + a2 * u2->z_ + a3 * u3->z_ + a4 * u4->z_;
}

OrgApacheCommonsMathGeometryVector3D *new_OrgApacheCommonsMathGeometryVector3D_initWithDouble_withOrgApacheCommonsMathGeometryVector3D_withDouble_withOrgApacheCommonsMathGeometryVector3D_withDouble_withOrgApacheCommonsMathGeometryVector3D_withDouble_withOrgApacheCommonsMathGeometryVector3D_(jdouble a1, OrgApacheCommonsMathGeometryVector3D *u1, jdouble a2, OrgApacheCommonsMathGeometryVector3D *u2, jdouble a3, OrgApacheCommonsMathGeometryVector3D *u3, jdouble a4, OrgApacheCommonsMathGeometryVector3D *u4) {
  OrgApacheCommonsMathGeometryVector3D *self = [OrgApacheCommonsMathGeometryVector3D alloc];
  OrgApacheCommonsMathGeometryVector3D_initWithDouble_withOrgApacheCommonsMathGeometryVector3D_withDouble_withOrgApacheCommonsMathGeometryVector3D_withDouble_withOrgApacheCommonsMathGeometryVector3D_withDouble_withOrgApacheCommonsMathGeometryVector3D_(self, a1, u1, a2, u2, a3, u3, a4, u4);
  return self;
}

jdouble OrgApacheCommonsMathGeometryVector3D_angleWithOrgApacheCommonsMathGeometryVector3D_withOrgApacheCommonsMathGeometryVector3D_(OrgApacheCommonsMathGeometryVector3D *v1, OrgApacheCommonsMathGeometryVector3D *v2) {
  OrgApacheCommonsMathGeometryVector3D_initialize();
  jdouble normProduct = [((OrgApacheCommonsMathGeometryVector3D *) nil_chk(v1)) getNorm] * [((OrgApacheCommonsMathGeometryVector3D *) nil_chk(v2)) getNorm];
  if (normProduct == 0) {
    @throw OrgApacheCommonsMathMathRuntimeException_createArithmeticExceptionWithOrgApacheCommonsMathExceptionUtilLocalizable_withNSObjectArray_(OrgApacheCommonsMathExceptionUtilLocalizedFormatsEnum_get_ZERO_NORM(), [IOSObjectArray arrayWithLength:0 type:NSObject_class_()]);
  }
  jdouble dot = OrgApacheCommonsMathGeometryVector3D_dotProductWithOrgApacheCommonsMathGeometryVector3D_withOrgApacheCommonsMathGeometryVector3D_(v1, v2);
  jdouble threshold = normProduct * 0.9999;
  if ((dot < -threshold) || (dot > threshold)) {
    OrgApacheCommonsMathGeometryVector3D *v3 = OrgApacheCommonsMathGeometryVector3D_crossProductWithOrgApacheCommonsMathGeometryVector3D_withOrgApacheCommonsMathGeometryVector3D_(v1, v2);
    if (dot >= 0) {
      return OrgApacheCommonsMathUtilFastMath_asinWithDouble_([((OrgApacheCommonsMathGeometryVector3D *) nil_chk(v3)) getNorm] / normProduct);
    }
    return OrgApacheCommonsMathUtilFastMath_PI - OrgApacheCommonsMathUtilFastMath_asinWithDouble_([((OrgApacheCommonsMathGeometryVector3D *) nil_chk(v3)) getNorm] / normProduct);
  }
  return OrgApacheCommonsMathUtilFastMath_acosWithDouble_(dot / normProduct);
}

jdouble OrgApacheCommonsMathGeometryVector3D_dotProductWithOrgApacheCommonsMathGeometryVector3D_withOrgApacheCommonsMathGeometryVector3D_(OrgApacheCommonsMathGeometryVector3D *v1, OrgApacheCommonsMathGeometryVector3D *v2) {
  OrgApacheCommonsMathGeometryVector3D_initialize();
  return ((OrgApacheCommonsMathGeometryVector3D *) nil_chk(v1))->x_ * ((OrgApacheCommonsMathGeometryVector3D *) nil_chk(v2))->x_ + v1->y_ * v2->y_ + v1->z_ * v2->z_;
}

OrgApacheCommonsMathGeometryVector3D *OrgApacheCommonsMathGeometryVector3D_crossProductWithOrgApacheCommonsMathGeometryVector3D_withOrgApacheCommonsMathGeometryVector3D_(OrgApacheCommonsMathGeometryVector3D *v1, OrgApacheCommonsMathGeometryVector3D *v2) {
  OrgApacheCommonsMathGeometryVector3D_initialize();
  return [new_OrgApacheCommonsMathGeometryVector3D_initWithDouble_withDouble_withDouble_(((OrgApacheCommonsMathGeometryVector3D *) nil_chk(v1))->y_ * ((OrgApacheCommonsMathGeometryVector3D *) nil_chk(v2))->z_ - v1->z_ * v2->y_, v1->z_ * v2->x_ - v1->x_ * v2->z_, v1->x_ * v2->y_ - v1->y_ * v2->x_) autorelease];
}

jdouble OrgApacheCommonsMathGeometryVector3D_distance1WithOrgApacheCommonsMathGeometryVector3D_withOrgApacheCommonsMathGeometryVector3D_(OrgApacheCommonsMathGeometryVector3D *v1, OrgApacheCommonsMathGeometryVector3D *v2) {
  OrgApacheCommonsMathGeometryVector3D_initialize();
  jdouble dx = OrgApacheCommonsMathUtilFastMath_absWithDouble_(((OrgApacheCommonsMathGeometryVector3D *) nil_chk(v2))->x_ - ((OrgApacheCommonsMathGeometryVector3D *) nil_chk(v1))->x_);
  jdouble dy = OrgApacheCommonsMathUtilFastMath_absWithDouble_(v2->y_ - v1->y_);
  jdouble dz = OrgApacheCommonsMathUtilFastMath_absWithDouble_(v2->z_ - v1->z_);
  return dx + dy + dz;
}

jdouble OrgApacheCommonsMathGeometryVector3D_distanceWithOrgApacheCommonsMathGeometryVector3D_withOrgApacheCommonsMathGeometryVector3D_(OrgApacheCommonsMathGeometryVector3D *v1, OrgApacheCommonsMathGeometryVector3D *v2) {
  OrgApacheCommonsMathGeometryVector3D_initialize();
  jdouble dx = ((OrgApacheCommonsMathGeometryVector3D *) nil_chk(v2))->x_ - ((OrgApacheCommonsMathGeometryVector3D *) nil_chk(v1))->x_;
  jdouble dy = v2->y_ - v1->y_;
  jdouble dz = v2->z_ - v1->z_;
  return OrgApacheCommonsMathUtilFastMath_sqrtWithDouble_(dx * dx + dy * dy + dz * dz);
}

jdouble OrgApacheCommonsMathGeometryVector3D_distanceInfWithOrgApacheCommonsMathGeometryVector3D_withOrgApacheCommonsMathGeometryVector3D_(OrgApacheCommonsMathGeometryVector3D *v1, OrgApacheCommonsMathGeometryVector3D *v2) {
  OrgApacheCommonsMathGeometryVector3D_initialize();
  jdouble dx = OrgApacheCommonsMathUtilFastMath_absWithDouble_(((OrgApacheCommonsMathGeometryVector3D *) nil_chk(v2))->x_ - ((OrgApacheCommonsMathGeometryVector3D *) nil_chk(v1))->x_);
  jdouble dy = OrgApacheCommonsMathUtilFastMath_absWithDouble_(v2->y_ - v1->y_);
  jdouble dz = OrgApacheCommonsMathUtilFastMath_absWithDouble_(v2->z_ - v1->z_);
  return OrgApacheCommonsMathUtilFastMath_maxWithDouble_withDouble_(OrgApacheCommonsMathUtilFastMath_maxWithDouble_withDouble_(dx, dy), dz);
}

jdouble OrgApacheCommonsMathGeometryVector3D_distanceSqWithOrgApacheCommonsMathGeometryVector3D_withOrgApacheCommonsMathGeometryVector3D_(OrgApacheCommonsMathGeometryVector3D *v1, OrgApacheCommonsMathGeometryVector3D *v2) {
  OrgApacheCommonsMathGeometryVector3D_initialize();
  jdouble dx = ((OrgApacheCommonsMathGeometryVector3D *) nil_chk(v2))->x_ - ((OrgApacheCommonsMathGeometryVector3D *) nil_chk(v1))->x_;
  jdouble dy = v2->y_ - v1->y_;
  jdouble dz = v2->z_ - v1->z_;
  return dx * dx + dy * dy + dz * dz;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheCommonsMathGeometryVector3D)
