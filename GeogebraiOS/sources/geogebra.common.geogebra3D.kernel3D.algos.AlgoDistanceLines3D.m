//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/geogebra3D/kernel3D/algos/AlgoDistanceLines3D.java
//


#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "geogebra/common/geogebra3D/kernel3D/algos/AlgoDistanceLines3D.h"
#include "geogebra/common/geogebra3D/kernel3D/algos/AlgoElement3D.h"
#include "geogebra/common/kernel/Construction.h"
#include "geogebra/common/kernel/algos/AlgoElement.h"
#include "geogebra/common/kernel/commands/Commands.h"
#include "geogebra/common/kernel/geos/GeoElement.h"
#include "geogebra/common/kernel/geos/GeoNumeric.h"
#include "geogebra/common/kernel/kernelND/GeoLineND.h"

@interface GeogebraCommonGeogebra3DKernel3DAlgosAlgoDistanceLines3D () {
 @public
  id<GeogebraCommonKernelKernelNDGeoLineND> g3D_, h3D_;
  GeogebraCommonKernelGeosGeoNumeric *dist_;
}

@end

J2OBJC_FIELD_SETTER(GeogebraCommonGeogebra3DKernel3DAlgosAlgoDistanceLines3D, g3D_, id<GeogebraCommonKernelKernelNDGeoLineND>)
J2OBJC_FIELD_SETTER(GeogebraCommonGeogebra3DKernel3DAlgosAlgoDistanceLines3D, h3D_, id<GeogebraCommonKernelKernelNDGeoLineND>)
J2OBJC_FIELD_SETTER(GeogebraCommonGeogebra3DKernel3DAlgosAlgoDistanceLines3D, dist_, GeogebraCommonKernelGeosGeoNumeric *)

@implementation GeogebraCommonGeogebra3DKernel3DAlgosAlgoDistanceLines3D

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)c
                                            withNSString:(NSString *)label
               withGeogebraCommonKernelKernelNDGeoLineND:(id<GeogebraCommonKernelKernelNDGeoLineND>)g3D
               withGeogebraCommonKernelKernelNDGeoLineND:(id<GeogebraCommonKernelKernelNDGeoLineND>)h3D {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoDistanceLines3D_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelKernelNDGeoLineND_withGeogebraCommonKernelKernelNDGeoLineND_(self, c, label, g3D, h3D);
  return self;
}

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)c
               withGeogebraCommonKernelKernelNDGeoLineND:(id<GeogebraCommonKernelKernelNDGeoLineND>)g3D
               withGeogebraCommonKernelKernelNDGeoLineND:(id<GeogebraCommonKernelKernelNDGeoLineND>)h3D {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoDistanceLines3D_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelKernelNDGeoLineND_withGeogebraCommonKernelKernelNDGeoLineND_(self, c, g3D, h3D);
  return self;
}

- (GeogebraCommonKernelCommandsCommandsEnum *)getClassName {
  return GeogebraCommonKernelCommandsCommandsEnum_get_Distance();
}

- (void)setInputOutput {
  GeogebraCommonKernelAlgosAlgoElement_setAndConsume_input_(self, [IOSObjectArray newArrayWithLength:2 type:GeogebraCommonKernelGeosGeoElement_class_()]);
  IOSObjectArray_Set(input_, 0, (GeogebraCommonKernelGeosGeoElement *) check_class_cast(g3D_, [GeogebraCommonKernelGeosGeoElement class]));
  IOSObjectArray_Set(input_, 1, (GeogebraCommonKernelGeosGeoElement *) check_class_cast(h3D_, [GeogebraCommonKernelGeosGeoElement class]));
  [super setOutputLengthWithInt:1];
  [super setOutputWithInt:0 withGeogebraCommonKernelGeosGeoElement:dist_];
  [self setDependencies];
}

- (id<GeogebraCommonKernelKernelNDGeoLineND>)getg {
  return g3D_;
}

- (id<GeogebraCommonKernelKernelNDGeoLineND>)geth {
  return h3D_;
}

- (GeogebraCommonKernelGeosGeoNumeric *)getDistance {
  return dist_;
}

- (void)compute {
  if (![((id<GeogebraCommonKernelKernelNDGeoLineND>) nil_chk(g3D_)) isDefined] || ![((id<GeogebraCommonKernelKernelNDGeoLineND>) nil_chk(h3D_)) isDefined]) {
    [((GeogebraCommonKernelGeosGeoNumeric *) nil_chk(dist_)) setUndefined];
    return;
  }
  [((GeogebraCommonKernelGeosGeoNumeric *) nil_chk(dist_)) setValueWithDouble:[g3D_ distanceWithGeogebraCommonKernelKernelNDGeoLineND:h3D_]];
}

- (void)dealloc {
  RELEASE_(g3D_);
  RELEASE_(h3D_);
  RELEASE_(dist_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonKernelConstruction:withNSString:withGeogebraCommonKernelKernelNDGeoLineND:withGeogebraCommonKernelKernelNDGeoLineND:", "AlgoDistanceLines3D", NULL, 0x1, NULL, NULL },
    { "initWithGeogebraCommonKernelConstruction:withGeogebraCommonKernelKernelNDGeoLineND:withGeogebraCommonKernelKernelNDGeoLineND:", "AlgoDistanceLines3D", NULL, 0x1, NULL, NULL },
    { "getClassName", NULL, "Lgeogebra.common.kernel.commands.Commands;", 0x1, NULL, NULL },
    { "setInputOutput", NULL, "V", 0x4, NULL, NULL },
    { "getg", NULL, "Lgeogebra.common.kernel.kernelND.GeoLineND;", 0x0, NULL, NULL },
    { "geth", NULL, "Lgeogebra.common.kernel.kernelND.GeoLineND;", 0x0, NULL, NULL },
    { "getDistance", NULL, "Lgeogebra.common.kernel.geos.GeoNumeric;", 0x1, NULL, NULL },
    { "compute", NULL, "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "g3D_", NULL, 0x2, "Lgeogebra.common.kernel.kernelND.GeoLineND;", NULL, NULL,  },
    { "h3D_", NULL, 0x2, "Lgeogebra.common.kernel.kernelND.GeoLineND;", NULL, NULL,  },
    { "dist_", NULL, 0x2, "Lgeogebra.common.kernel.geos.GeoNumeric;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _GeogebraCommonGeogebra3DKernel3DAlgosAlgoDistanceLines3D = { 2, "AlgoDistanceLines3D", "geogebra.common.geogebra3D.kernel3D.algos", NULL, 0x1, 8, methods, 3, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonGeogebra3DKernel3DAlgosAlgoDistanceLines3D;
}

@end

void GeogebraCommonGeogebra3DKernel3DAlgosAlgoDistanceLines3D_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelKernelNDGeoLineND_withGeogebraCommonKernelKernelNDGeoLineND_(GeogebraCommonGeogebra3DKernel3DAlgosAlgoDistanceLines3D *self, GeogebraCommonKernelConstruction *c, NSString *label, id<GeogebraCommonKernelKernelNDGeoLineND> g3D, id<GeogebraCommonKernelKernelNDGeoLineND> h3D) {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoDistanceLines3D_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelKernelNDGeoLineND_withGeogebraCommonKernelKernelNDGeoLineND_(self, c, g3D, h3D);
  [((GeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->dist_)) setLabelWithNSString:label];
}

GeogebraCommonGeogebra3DKernel3DAlgosAlgoDistanceLines3D *new_GeogebraCommonGeogebra3DKernel3DAlgosAlgoDistanceLines3D_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelKernelNDGeoLineND_withGeogebraCommonKernelKernelNDGeoLineND_(GeogebraCommonKernelConstruction *c, NSString *label, id<GeogebraCommonKernelKernelNDGeoLineND> g3D, id<GeogebraCommonKernelKernelNDGeoLineND> h3D) {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoDistanceLines3D *self = [GeogebraCommonGeogebra3DKernel3DAlgosAlgoDistanceLines3D alloc];
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoDistanceLines3D_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelKernelNDGeoLineND_withGeogebraCommonKernelKernelNDGeoLineND_(self, c, label, g3D, h3D);
  return self;
}

void GeogebraCommonGeogebra3DKernel3DAlgosAlgoDistanceLines3D_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelKernelNDGeoLineND_withGeogebraCommonKernelKernelNDGeoLineND_(GeogebraCommonGeogebra3DKernel3DAlgosAlgoDistanceLines3D *self, GeogebraCommonKernelConstruction *c, id<GeogebraCommonKernelKernelNDGeoLineND> g3D, id<GeogebraCommonKernelKernelNDGeoLineND> h3D) {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoElement3D_initWithGeogebraCommonKernelConstruction_(self, c);
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoDistanceLines3D_set_g3D_(self, g3D);
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoDistanceLines3D_set_h3D_(self, h3D);
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoDistanceLines3D_setAndConsume_dist_(self, new_GeogebraCommonKernelGeosGeoNumeric_initWithGeogebraCommonKernelConstruction_(self->cons_));
  [self setInputOutput];
  [self compute];
}

GeogebraCommonGeogebra3DKernel3DAlgosAlgoDistanceLines3D *new_GeogebraCommonGeogebra3DKernel3DAlgosAlgoDistanceLines3D_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelKernelNDGeoLineND_withGeogebraCommonKernelKernelNDGeoLineND_(GeogebraCommonKernelConstruction *c, id<GeogebraCommonKernelKernelNDGeoLineND> g3D, id<GeogebraCommonKernelKernelNDGeoLineND> h3D) {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoDistanceLines3D *self = [GeogebraCommonGeogebra3DKernel3DAlgosAlgoDistanceLines3D alloc];
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoDistanceLines3D_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelKernelNDGeoLineND_withGeogebraCommonKernelKernelNDGeoLineND_(self, c, g3D, h3D);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonGeogebra3DKernel3DAlgosAlgoDistanceLines3D)
