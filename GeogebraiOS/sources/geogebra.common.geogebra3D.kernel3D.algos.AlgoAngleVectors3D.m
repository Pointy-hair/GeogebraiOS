//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/geogebra3D/kernel3D/algos/AlgoAngleVectors3D.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "geogebra/common/geogebra3D/kernel3D/algos/AlgoAnglePoints3D.h"
#include "geogebra/common/geogebra3D/kernel3D/algos/AlgoAngleVectors3D.h"
#include "geogebra/common/geogebra3D/kernel3D/geos/GeoAngle3D.h"
#include "geogebra/common/kernel/Construction.h"
#include "geogebra/common/kernel/Matrix/Coords.h"
#include "geogebra/common/kernel/algos/AlgoAngle.h"
#include "geogebra/common/kernel/algos/AlgoAngleVectorsND.h"
#include "geogebra/common/kernel/geos/GeoAngle.h"
#include "geogebra/common/kernel/kernelND/GeoDirectionND.h"
#include "geogebra/common/kernel/kernelND/GeoPointND.h"
#include "geogebra/common/kernel/kernelND/GeoVectorND.h"

@interface GeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleVectors3D () {
 @public
  GeogebraCommonKernelMatrixCoords *o_;
  GeogebraCommonKernelMatrixCoords *v1_;
  GeogebraCommonKernelMatrixCoords *v2_;
}

@end

J2OBJC_FIELD_SETTER(GeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleVectors3D, o_, GeogebraCommonKernelMatrixCoords *)
J2OBJC_FIELD_SETTER(GeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleVectors3D, v1_, GeogebraCommonKernelMatrixCoords *)
J2OBJC_FIELD_SETTER(GeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleVectors3D, v2_, GeogebraCommonKernelMatrixCoords *)

@implementation GeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleVectors3D

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                                            withNSString:(NSString *)label
             withGeogebraCommonKernelKernelNDGeoVectorND:(id<GeogebraCommonKernelKernelNDGeoVectorND>)v
             withGeogebraCommonKernelKernelNDGeoVectorND:(id<GeogebraCommonKernelKernelNDGeoVectorND>)w {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleVectors3D_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelKernelNDGeoVectorND_withGeogebraCommonKernelKernelNDGeoVectorND_(self, cons, label, v, w);
  return self;
}

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                                            withNSString:(NSString *)label
             withGeogebraCommonKernelKernelNDGeoVectorND:(id<GeogebraCommonKernelKernelNDGeoVectorND>)v
             withGeogebraCommonKernelKernelNDGeoVectorND:(id<GeogebraCommonKernelKernelNDGeoVectorND>)w
          withGeogebraCommonKernelKernelNDGeoDirectionND:(id<GeogebraCommonKernelKernelNDGeoDirectionND>)orientation {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleVectors3D_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelKernelNDGeoVectorND_withGeogebraCommonKernelKernelNDGeoVectorND_withGeogebraCommonKernelKernelNDGeoDirectionND_(self, cons, label, v, w, orientation);
  return self;
}

- (GeogebraCommonKernelGeosGeoAngle *)newGeoAngleWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons {
  GeogebraCommonKernelGeosGeoAngle *ret = [new_GeogebraCommonGeogebra3DKernel3DGeosGeoAngle3D_initWithGeogebraCommonKernelConstruction_(cons) autorelease];
  [ret setDrawableWithBoolean:YES];
  return ret;
}

- (void)compute {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleVectors3D_set_v1_(self, [((id<GeogebraCommonKernelKernelNDGeoVectorND>) nil_chk([self getv])) getCoordsInD3]);
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleVectors3D_set_v2_(self, [((id<GeogebraCommonKernelKernelNDGeoVectorND>) nil_chk([self getw])) getCoordsInD3]);
  [((GeogebraCommonKernelMatrixCoords *) nil_chk(v1_)) calcNorm];
  jdouble l1 = [v1_ getNorm];
  [((GeogebraCommonKernelMatrixCoords *) nil_chk(v2_)) calcNorm];
  jdouble l2 = [v2_ getNorm];
  jdouble c = [v1_ dotproductWithGeogebraCommonKernelMatrixCoords:v2_] / (l1 * l2);
  [((GeogebraCommonKernelGeosGeoAngle *) nil_chk([self getAngle])) setValueWithDouble:GeogebraCommonGeogebra3DKernel3DAlgosAlgoAnglePoints3D_acosWithDouble_(c)];
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleVectors3D_set_vn_(self, GeogebraCommonGeogebra3DKernel3DAlgosAlgoAnglePoints3D_forceNormalVectorWithGeogebraCommonKernelMatrixCoords_withGeogebraCommonKernelMatrixCoords_(v1_, v2_));
  id<GeogebraCommonKernelKernelNDGeoPointND> start = [((id<GeogebraCommonKernelKernelNDGeoVectorND>) nil_chk([self getv])) getStartPoint];
  if (GeogebraCommonKernelAlgosAlgoAngle_centerIsNotDrawableWithGeogebraCommonKernelKernelNDGeoPointND_(start)) {
    GeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleVectors3D_set_o_(self, GeogebraCommonKernelMatrixCoords_get_UNDEFINED_());
  }
  else {
    GeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleVectors3D_set_o_(self, [((id<GeogebraCommonKernelKernelNDGeoPointND>) nil_chk(start)) getInhomCoordsInD3]);
  }
}

- (GeogebraCommonKernelMatrixCoords *)getVn {
  return vn_;
}

- (jboolean)getCoordsInD3WithGeogebraCommonKernelMatrixCoordsArray:(IOSObjectArray *)drawCoords {
  if (![((GeogebraCommonKernelMatrixCoords *) nil_chk(o_)) isDefined]) {
    return NO;
  }
  IOSObjectArray_Set(nil_chk(drawCoords), 0, o_);
  IOSObjectArray_Set(drawCoords, 1, v1_);
  IOSObjectArray_Set(drawCoords, 2, v2_);
  return YES;
}

- (void)dealloc {
  RELEASE_(vn_);
  RELEASE_(o_);
  RELEASE_(v1_);
  RELEASE_(v2_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonKernelConstruction:withNSString:withGeogebraCommonKernelKernelNDGeoVectorND:withGeogebraCommonKernelKernelNDGeoVectorND:", "AlgoAngleVectors3D", NULL, 0x0, NULL, NULL },
    { "initWithGeogebraCommonKernelConstruction:withNSString:withGeogebraCommonKernelKernelNDGeoVectorND:withGeogebraCommonKernelKernelNDGeoVectorND:withGeogebraCommonKernelKernelNDGeoDirectionND:", "AlgoAngleVectors3D", NULL, 0x0, NULL, NULL },
    { "newGeoAngleWithGeogebraCommonKernelConstruction:", "newGeoAngle", "Lgeogebra.common.kernel.geos.GeoAngle;", 0x4, NULL, NULL },
    { "compute", NULL, "V", 0x1, NULL, NULL },
    { "getVn", NULL, "Lgeogebra.common.kernel.Matrix.Coords;", 0x1, NULL, NULL },
    { "getCoordsInD3WithGeogebraCommonKernelMatrixCoordsArray:", "getCoordsInD3", "Z", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "vn_", NULL, 0x4, "Lgeogebra.common.kernel.Matrix.Coords;", NULL, NULL,  },
    { "o_", NULL, 0x2, "Lgeogebra.common.kernel.Matrix.Coords;", NULL, NULL,  },
    { "v1_", NULL, 0x2, "Lgeogebra.common.kernel.Matrix.Coords;", NULL, NULL,  },
    { "v2_", NULL, 0x2, "Lgeogebra.common.kernel.Matrix.Coords;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _GeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleVectors3D = { 2, "AlgoAngleVectors3D", "geogebra.common.geogebra3D.kernel3D.algos", NULL, 0x1, 6, methods, 4, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleVectors3D;
}

@end

void GeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleVectors3D_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelKernelNDGeoVectorND_withGeogebraCommonKernelKernelNDGeoVectorND_(GeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleVectors3D *self, GeogebraCommonKernelConstruction *cons, NSString *label, id<GeogebraCommonKernelKernelNDGeoVectorND> v, id<GeogebraCommonKernelKernelNDGeoVectorND> w) {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleVectors3D_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelKernelNDGeoVectorND_withGeogebraCommonKernelKernelNDGeoVectorND_withGeogebraCommonKernelKernelNDGeoDirectionND_(self, cons, label, v, w, nil);
}

GeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleVectors3D *new_GeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleVectors3D_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelKernelNDGeoVectorND_withGeogebraCommonKernelKernelNDGeoVectorND_(GeogebraCommonKernelConstruction *cons, NSString *label, id<GeogebraCommonKernelKernelNDGeoVectorND> v, id<GeogebraCommonKernelKernelNDGeoVectorND> w) {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleVectors3D *self = [GeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleVectors3D alloc];
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleVectors3D_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelKernelNDGeoVectorND_withGeogebraCommonKernelKernelNDGeoVectorND_(self, cons, label, v, w);
  return self;
}

void GeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleVectors3D_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelKernelNDGeoVectorND_withGeogebraCommonKernelKernelNDGeoVectorND_withGeogebraCommonKernelKernelNDGeoDirectionND_(GeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleVectors3D *self, GeogebraCommonKernelConstruction *cons, NSString *label, id<GeogebraCommonKernelKernelNDGeoVectorND> v, id<GeogebraCommonKernelKernelNDGeoVectorND> w, id<GeogebraCommonKernelKernelNDGeoDirectionND> orientation) {
  GeogebraCommonKernelAlgosAlgoAngleVectorsND_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelKernelNDGeoVectorND_withGeogebraCommonKernelKernelNDGeoVectorND_withGeogebraCommonKernelKernelNDGeoDirectionND_(self, cons, label, v, w, orientation);
}

GeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleVectors3D *new_GeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleVectors3D_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelKernelNDGeoVectorND_withGeogebraCommonKernelKernelNDGeoVectorND_withGeogebraCommonKernelKernelNDGeoDirectionND_(GeogebraCommonKernelConstruction *cons, NSString *label, id<GeogebraCommonKernelKernelNDGeoVectorND> v, id<GeogebraCommonKernelKernelNDGeoVectorND> w, id<GeogebraCommonKernelKernelNDGeoDirectionND> orientation) {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleVectors3D *self = [GeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleVectors3D alloc];
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleVectors3D_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelKernelNDGeoVectorND_withGeogebraCommonKernelKernelNDGeoVectorND_withGeogebraCommonKernelKernelNDGeoDirectionND_(self, cons, label, v, w, orientation);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleVectors3D)
