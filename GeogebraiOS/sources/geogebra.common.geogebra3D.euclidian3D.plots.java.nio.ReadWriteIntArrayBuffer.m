//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/geogebra3D/euclidian3D/plots/java/nio/ReadWriteIntArrayBuffer.java
//


#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "geogebra/common/geogebra3D/euclidian3D/plots/java/nio/Buffer.h"
#include "geogebra/common/geogebra3D/euclidian3D/plots/java/nio/BufferOverflowException.h"
#include "geogebra/common/geogebra3D/euclidian3D/plots/java/nio/IntArrayBuffer.h"
#include "geogebra/common/geogebra3D/euclidian3D/plots/java/nio/IntBuffer.h"
#include "geogebra/common/geogebra3D/euclidian3D/plots/java/nio/ReadOnlyIntArrayBuffer.h"
#include "geogebra/common/geogebra3D/euclidian3D/plots/java/nio/ReadWriteIntArrayBuffer.h"
#include "java/lang/IndexOutOfBoundsException.h"
#include "java/lang/System.h"

@implementation GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioReadWriteIntArrayBuffer

+ (GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioReadWriteIntArrayBuffer *)copy__WithGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioIntArrayBuffer:(GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioIntArrayBuffer *)other
                                                                                                                                            withInt:(jint)markOfOther {
  return GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioReadWriteIntArrayBuffer_copy__WithGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioIntArrayBuffer_withInt_(other, markOfOther);
}

- (instancetype)initWithIntArray:(IOSIntArray *)array {
  GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioReadWriteIntArrayBuffer_initWithIntArray_(self, array);
  return self;
}

- (instancetype)initWithInt:(jint)capacity {
  GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioReadWriteIntArrayBuffer_initWithInt_(self, capacity);
  return self;
}

- (instancetype)initWithInt:(jint)capacity
               withIntArray:(IOSIntArray *)backingArray
                    withInt:(jint)arrayOffset {
  GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioReadWriteIntArrayBuffer_initWithInt_withIntArray_withInt_(self, capacity, backingArray, arrayOffset);
  return self;
}

- (GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioIntBuffer *)asReadOnlyBuffer {
  return GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioReadOnlyIntArrayBuffer_copy__WithGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioIntArrayBuffer_withInt_(self, mark__);
}

- (GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioIntBuffer *)compact {
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(backingArray_, position__ + offset_, backingArray_, offset_, [self remaining]);
  position__ = limit__ - position__;
  limit__ = capacity__;
  mark__ = GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioBuffer_UNSET_MARK;
  return self;
}

- (GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioIntBuffer *)duplicate {
  return GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioReadWriteIntArrayBuffer_copy__WithGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioIntArrayBuffer_withInt_(self, mark__);
}

- (jboolean)isReadOnly {
  return NO;
}

- (IOSIntArray *)protectedArray {
  return backingArray_;
}

- (jint)protectedArrayOffset {
  return offset_;
}

- (jboolean)protectedHasArray {
  return YES;
}

- (GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioIntBuffer *)putWithInt:(jint)c {
  if (position__ == limit__) {
    @throw [new_GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioBufferOverflowException_init() autorelease];
  }
  *IOSIntArray_GetRef(nil_chk(backingArray_), offset_ + position__++) = c;
  return self;
}

- (GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioIntBuffer *)putWithInt:(jint)index
                                                                 withInt:(jint)c {
  if (index < 0 || index >= limit__) {
    @throw [new_JavaLangIndexOutOfBoundsException_init() autorelease];
  }
  *IOSIntArray_GetRef(nil_chk(backingArray_), offset_ + index) = c;
  return self;
}

- (GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioIntBuffer *)putWithIntArray:(IOSIntArray *)src
                                                                      withInt:(jint)off
                                                                      withInt:(jint)len {
  jint length = ((IOSIntArray *) nil_chk(src))->size_;
  if (off < 0 || len < 0 || (jlong) off + (jlong) len > length) {
    @throw [new_JavaLangIndexOutOfBoundsException_init() autorelease];
  }
  if (len > [self remaining]) {
    @throw [new_GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioBufferOverflowException_init() autorelease];
  }
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(src, off, backingArray_, offset_ + position__, len);
  position__ += len;
  return self;
}

- (GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioIntBuffer *)slice {
  return [new_GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioReadWriteIntArrayBuffer_initWithInt_withIntArray_withInt_([self remaining], backingArray_, offset_ + position__) autorelease];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "copy__WithGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioIntArrayBuffer:withInt:", "copy", "Lgeogebra.common.geogebra3D.euclidian3D.plots.java.nio.ReadWriteIntArrayBuffer;", 0x8, NULL, NULL },
    { "initWithIntArray:", "ReadWriteIntArrayBuffer", NULL, 0x0, NULL, NULL },
    { "initWithInt:", "ReadWriteIntArrayBuffer", NULL, 0x0, NULL, NULL },
    { "initWithInt:withIntArray:withInt:", "ReadWriteIntArrayBuffer", NULL, 0x0, NULL, NULL },
    { "asReadOnlyBuffer", NULL, "Lgeogebra.common.geogebra3D.euclidian3D.plots.java.nio.IntBuffer;", 0x1, NULL, NULL },
    { "compact", NULL, "Lgeogebra.common.geogebra3D.euclidian3D.plots.java.nio.IntBuffer;", 0x1, NULL, NULL },
    { "duplicate", NULL, "Lgeogebra.common.geogebra3D.euclidian3D.plots.java.nio.IntBuffer;", 0x1, NULL, NULL },
    { "isReadOnly", NULL, "Z", 0x1, NULL, NULL },
    { "protectedArray", NULL, "[I", 0x4, NULL, NULL },
    { "protectedArrayOffset", NULL, "I", 0x4, NULL, NULL },
    { "protectedHasArray", NULL, "Z", 0x4, NULL, NULL },
    { "putWithInt:", "put", "Lgeogebra.common.geogebra3D.euclidian3D.plots.java.nio.IntBuffer;", 0x1, NULL, NULL },
    { "putWithInt:withInt:", "put", "Lgeogebra.common.geogebra3D.euclidian3D.plots.java.nio.IntBuffer;", 0x1, NULL, NULL },
    { "putWithIntArray:withInt:withInt:", "put", "Lgeogebra.common.geogebra3D.euclidian3D.plots.java.nio.IntBuffer;", 0x1, NULL, NULL },
    { "slice", NULL, "Lgeogebra.common.geogebra3D.euclidian3D.plots.java.nio.IntBuffer;", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioReadWriteIntArrayBuffer = { 2, "ReadWriteIntArrayBuffer", "geogebra.common.geogebra3D.euclidian3D.plots.java.nio", NULL, 0x10, 15, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioReadWriteIntArrayBuffer;
}

@end

GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioReadWriteIntArrayBuffer *GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioReadWriteIntArrayBuffer_copy__WithGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioIntArrayBuffer_withInt_(GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioIntArrayBuffer *other, jint markOfOther) {
  GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioReadWriteIntArrayBuffer_initialize();
  GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioReadWriteIntArrayBuffer *buf = [new_GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioReadWriteIntArrayBuffer_initWithInt_withIntArray_withInt_([((GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioIntArrayBuffer *) nil_chk(other)) capacity], other->backingArray_, other->offset_) autorelease];
  buf->limit__ = [other limit];
  buf->position__ = [other position];
  buf->mark__ = markOfOther;
  return buf;
}

void GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioReadWriteIntArrayBuffer_initWithIntArray_(GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioReadWriteIntArrayBuffer *self, IOSIntArray *array) {
  GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioIntArrayBuffer_initWithIntArray_(self, array);
}

GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioReadWriteIntArrayBuffer *new_GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioReadWriteIntArrayBuffer_initWithIntArray_(IOSIntArray *array) {
  GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioReadWriteIntArrayBuffer *self = [GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioReadWriteIntArrayBuffer alloc];
  GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioReadWriteIntArrayBuffer_initWithIntArray_(self, array);
  return self;
}

void GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioReadWriteIntArrayBuffer_initWithInt_(GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioReadWriteIntArrayBuffer *self, jint capacity) {
  GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioIntArrayBuffer_initWithInt_(self, capacity);
}

GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioReadWriteIntArrayBuffer *new_GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioReadWriteIntArrayBuffer_initWithInt_(jint capacity) {
  GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioReadWriteIntArrayBuffer *self = [GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioReadWriteIntArrayBuffer alloc];
  GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioReadWriteIntArrayBuffer_initWithInt_(self, capacity);
  return self;
}

void GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioReadWriteIntArrayBuffer_initWithInt_withIntArray_withInt_(GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioReadWriteIntArrayBuffer *self, jint capacity, IOSIntArray *backingArray, jint arrayOffset) {
  GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioIntArrayBuffer_initWithInt_withIntArray_withInt_(self, capacity, backingArray, arrayOffset);
}

GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioReadWriteIntArrayBuffer *new_GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioReadWriteIntArrayBuffer_initWithInt_withIntArray_withInt_(jint capacity, IOSIntArray *backingArray, jint arrayOffset) {
  GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioReadWriteIntArrayBuffer *self = [GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioReadWriteIntArrayBuffer alloc];
  GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioReadWriteIntArrayBuffer_initWithInt_withIntArray_withInt_(self, capacity, backingArray, arrayOffset);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioReadWriteIntArrayBuffer)
