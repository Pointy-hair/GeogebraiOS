//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/algos/AlgoPointInRegion.java
//


#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "geogebra/common/euclidian/EuclidianConstants.h"
#include "geogebra/common/kernel/Construction.h"
#include "geogebra/common/kernel/Region.h"
#include "geogebra/common/kernel/StringTemplate.h"
#include "geogebra/common/kernel/algos/AlgoElement.h"
#include "geogebra/common/kernel/algos/AlgoPointInRegion.h"
#include "geogebra/common/kernel/algos/ConstructionElement.h"
#include "geogebra/common/kernel/commands/Commands.h"
#include "geogebra/common/kernel/geos/GeoElement.h"
#include "geogebra/common/kernel/geos/GeoPoint.h"
#include "geogebra/common/main/Localization.h"

@implementation GeogebraCommonKernelAlgosAlgoPointInRegion

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                          withGeogebraCommonKernelRegion:(id<GeogebraCommonKernelRegion>)region {
  GeogebraCommonKernelAlgosAlgoPointInRegion_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelRegion_(self, cons, region);
  return self;
}

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                                            withNSString:(NSString *)label
                          withGeogebraCommonKernelRegion:(id<GeogebraCommonKernelRegion>)region
                                              withDouble:(jdouble)x
                                              withDouble:(jdouble)y {
  GeogebraCommonKernelAlgosAlgoPointInRegion_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelRegion_withDouble_withDouble_(self, cons, label, region, x, y);
  return self;
}

- (GeogebraCommonKernelCommandsCommandsEnum *)getClassName {
  return GeogebraCommonKernelCommandsCommandsEnum_get_PointIn();
}

- (jint)getRelatedModeID {
  return GeogebraCommonEuclidianEuclidianConstants_MODE_POINT_ON_OBJECT;
}

- (void)setInputOutput {
  GeogebraCommonKernelAlgosAlgoElement_setAndConsume_input_(self, [IOSObjectArray newArrayWithLength:1 type:GeogebraCommonKernelGeosGeoElement_class_()]);
  IOSObjectArray_Set(input_, 0, [((id<GeogebraCommonKernelRegion>) nil_chk(region_)) toGeoElement]);
  [self setOutputLengthWithInt:1];
  [self setOutputWithInt:0 withGeogebraCommonKernelGeosGeoElement:P_];
  [self setDependencies];
}

- (GeogebraCommonKernelGeosGeoPoint *)getP {
  return P_;
}

- (id<GeogebraCommonKernelRegion>)getRegion {
  return region_;
}

- (void)compute {
  if ([((id<GeogebraCommonKernelRegion>) nil_chk(region_)) isDefined]) {
    [region_ regionChangedWithGeogebraCommonKernelKernelNDGeoPointND:P_];
    [((GeogebraCommonKernelGeosGeoPoint *) nil_chk(P_)) updateCoords];
  }
  else {
    [((GeogebraCommonKernelGeosGeoPoint *) nil_chk(P_)) setUndefined];
  }
}

- (NSString *)toStringWithGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl {
  return [((GeogebraCommonMainLocalization *) nil_chk([self getLoc])) getPlainWithNSString:@"PointInA" withNSString:[((GeogebraCommonKernelGeosGeoElement *) nil_chk(IOSObjectArray_Get(nil_chk(input_), 0))) getLabelWithGeogebraCommonKernelStringTemplate:tpl]];
}

- (void)dealloc {
  RELEASE_(region_);
  RELEASE_(P_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonKernelConstruction:withGeogebraCommonKernelRegion:", "AlgoPointInRegion", NULL, 0x1, NULL, NULL },
    { "initWithGeogebraCommonKernelConstruction:withNSString:withGeogebraCommonKernelRegion:withDouble:withDouble:", "AlgoPointInRegion", NULL, 0x1, NULL, NULL },
    { "getClassName", NULL, "Lgeogebra.common.kernel.commands.Commands;", 0x1, NULL, NULL },
    { "getRelatedModeID", NULL, "I", 0x1, NULL, NULL },
    { "setInputOutput", NULL, "V", 0x4, NULL, NULL },
    { "getP", NULL, "Lgeogebra.common.kernel.geos.GeoPoint;", 0x1, NULL, NULL },
    { "getRegion", NULL, "Lgeogebra.common.kernel.Region;", 0x0, NULL, NULL },
    { "compute", NULL, "V", 0x1, NULL, NULL },
    { "toStringWithGeogebraCommonKernelStringTemplate:", "toString", "Ljava.lang.String;", 0x11, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "region_", NULL, 0x4, "Lgeogebra.common.kernel.Region;", NULL, NULL,  },
    { "P_", NULL, 0x4, "Lgeogebra.common.kernel.geos.GeoPoint;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelAlgosAlgoPointInRegion = { 2, "AlgoPointInRegion", "geogebra.common.kernel.algos", NULL, 0x1, 9, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelAlgosAlgoPointInRegion;
}

@end

void GeogebraCommonKernelAlgosAlgoPointInRegion_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelRegion_(GeogebraCommonKernelAlgosAlgoPointInRegion *self, GeogebraCommonKernelConstruction *cons, id<GeogebraCommonKernelRegion> region) {
  GeogebraCommonKernelAlgosAlgoElement_initWithGeogebraCommonKernelConstruction_(self, cons);
  GeogebraCommonKernelAlgosAlgoPointInRegion_set_region_(self, region);
}

GeogebraCommonKernelAlgosAlgoPointInRegion *new_GeogebraCommonKernelAlgosAlgoPointInRegion_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelRegion_(GeogebraCommonKernelConstruction *cons, id<GeogebraCommonKernelRegion> region) {
  GeogebraCommonKernelAlgosAlgoPointInRegion *self = [GeogebraCommonKernelAlgosAlgoPointInRegion alloc];
  GeogebraCommonKernelAlgosAlgoPointInRegion_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelRegion_(self, cons, region);
  return self;
}

void GeogebraCommonKernelAlgosAlgoPointInRegion_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelRegion_withDouble_withDouble_(GeogebraCommonKernelAlgosAlgoPointInRegion *self, GeogebraCommonKernelConstruction *cons, NSString *label, id<GeogebraCommonKernelRegion> region, jdouble x, jdouble y) {
  GeogebraCommonKernelAlgosAlgoPointInRegion_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelRegion_(self, cons, region);
  GeogebraCommonKernelAlgosAlgoPointInRegion_setAndConsume_P_(self, new_GeogebraCommonKernelGeosGeoPoint_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelRegion_(cons, region));
  [self->P_ setCoordsWithDouble:x withDouble:y withDouble:1.0];
  [self setInputOutput];
  [self compute];
  [self->P_ setLabelWithNSString:label];
}

GeogebraCommonKernelAlgosAlgoPointInRegion *new_GeogebraCommonKernelAlgosAlgoPointInRegion_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelRegion_withDouble_withDouble_(GeogebraCommonKernelConstruction *cons, NSString *label, id<GeogebraCommonKernelRegion> region, jdouble x, jdouble y) {
  GeogebraCommonKernelAlgosAlgoPointInRegion *self = [GeogebraCommonKernelAlgosAlgoPointInRegion alloc];
  GeogebraCommonKernelAlgosAlgoPointInRegion_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelRegion_withDouble_withDouble_(self, cons, label, region, x, y);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelAlgosAlgoPointInRegion)
