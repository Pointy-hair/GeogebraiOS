//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/algos/AlgoAttachCopyToView.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "geogebra/common/euclidian/EuclidianView.h"
#include "geogebra/common/kernel/Construction.h"
#include "geogebra/common/kernel/Kernel.h"
#include "geogebra/common/kernel/MatrixTransformable.h"
#include "geogebra/common/kernel/algos/AlgoAttachCopyToView.h"
#include "geogebra/common/kernel/algos/AlgoElement.h"
#include "geogebra/common/kernel/algos/AlgoTransformation.h"
#include "geogebra/common/kernel/arithmetic/ExpressionNode.h"
#include "geogebra/common/kernel/arithmetic/ExpressionValue.h"
#include "geogebra/common/kernel/arithmetic/Function.h"
#include "geogebra/common/kernel/arithmetic/FunctionVariable.h"
#include "geogebra/common/kernel/arithmetic/NumberValue.h"
#include "geogebra/common/kernel/commands/Commands.h"
#include "geogebra/common/kernel/geos/GeoConicPart.h"
#include "geogebra/common/kernel/geos/GeoCurveCartesian.h"
#include "geogebra/common/kernel/geos/GeoElement.h"
#include "geogebra/common/kernel/geos/GeoFunction.h"
#include "geogebra/common/kernel/geos/GeoList.h"
#include "geogebra/common/kernel/geos/GeoNumeric.h"
#include "geogebra/common/kernel/geos/GeoPoint.h"
#include "geogebra/common/kernel/geos/GeoPoly.h"
#include "geogebra/common/kernel/kernelND/GeoPointND.h"
#include "geogebra/common/main/App.h"
#include "geogebra/common/util/MyMath.h"

@interface GeogebraCommonKernelAlgosAlgoAttachCopyToView () {
 @public
  id<GeogebraCommonKernelMatrixTransformable> out_;
  GeogebraCommonKernelGeosGeoElement *inGeo_, *outGeo_;
  id<GeogebraCommonKernelArithmeticNumberValue> viewID_;
  id<GeogebraCommonKernelKernelNDGeoPointND> corner1_, corner3_, screenCorner1_, screenCorner3_;
}

- (void)transformFunctionWithDouble:(jdouble)d
                         withDouble:(jdouble)e
                         withDouble:(jdouble)f
                         withDouble:(jdouble)g;

@end

J2OBJC_FIELD_SETTER(GeogebraCommonKernelAlgosAlgoAttachCopyToView, out_, id<GeogebraCommonKernelMatrixTransformable>)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelAlgosAlgoAttachCopyToView, inGeo_, GeogebraCommonKernelGeosGeoElement *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelAlgosAlgoAttachCopyToView, outGeo_, GeogebraCommonKernelGeosGeoElement *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelAlgosAlgoAttachCopyToView, viewID_, id<GeogebraCommonKernelArithmeticNumberValue>)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelAlgosAlgoAttachCopyToView, corner1_, id<GeogebraCommonKernelKernelNDGeoPointND>)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelAlgosAlgoAttachCopyToView, corner3_, id<GeogebraCommonKernelKernelNDGeoPointND>)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelAlgosAlgoAttachCopyToView, screenCorner1_, id<GeogebraCommonKernelKernelNDGeoPointND>)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelAlgosAlgoAttachCopyToView, screenCorner3_, id<GeogebraCommonKernelKernelNDGeoPointND>)

__attribute__((unused)) static void GeogebraCommonKernelAlgosAlgoAttachCopyToView_compute(GeogebraCommonKernelAlgosAlgoAttachCopyToView *self);

__attribute__((unused)) static void GeogebraCommonKernelAlgosAlgoAttachCopyToView_transformFunctionWithDouble_withDouble_withDouble_withDouble_(GeogebraCommonKernelAlgosAlgoAttachCopyToView *self, jdouble d, jdouble e, jdouble f, jdouble g);

@implementation GeogebraCommonKernelAlgosAlgoAttachCopyToView

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                                            withNSString:(NSString *)label
                  withGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)inArg
           withGeogebraCommonKernelArithmeticNumberValue:(id<GeogebraCommonKernelArithmeticNumberValue>)viewID
              withGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)corner1
              withGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)corner3
              withGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)screenCorner1
              withGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)screenCorner3 {
  GeogebraCommonKernelAlgosAlgoAttachCopyToView_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoElement_withGeogebraCommonKernelArithmeticNumberValue_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoPointND_(self, cons, label, inArg, viewID, corner1, corner3, screenCorner1, screenCorner3);
  return self;
}

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                  withGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)inArg
           withGeogebraCommonKernelArithmeticNumberValue:(id<GeogebraCommonKernelArithmeticNumberValue>)viewID
              withGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)corner1
              withGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)corner3
              withGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)screenCorner1
              withGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)screenCorner3 {
  GeogebraCommonKernelAlgosAlgoAttachCopyToView_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoElement_withGeogebraCommonKernelArithmeticNumberValue_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoPointND_(self, cons, inArg, viewID, corner1, corner3, screenCorner1, screenCorner3);
  return self;
}

- (GeogebraCommonKernelCommandsCommandsEnum *)getClassName {
  return GeogebraCommonKernelCommandsCommandsEnum_get_AttachCopyToView();
}

- (void)setInputOutput {
  GeogebraCommonKernelAlgosAlgoElement_setAndConsume_input_(self, [IOSObjectArray newArrayWithLength:6 type:GeogebraCommonKernelGeosGeoElement_class_()]);
  IOSObjectArray_Set(input_, 0, inGeo_);
  IOSObjectArray_Set(input_, 1, [((id<GeogebraCommonKernelArithmeticNumberValue>) nil_chk(viewID_)) toGeoElement]);
  IOSObjectArray_Set(input_, 2, [((id<GeogebraCommonKernelKernelNDGeoPointND>) nil_chk(corner1_)) toGeoElement]);
  IOSObjectArray_Set(input_, 3, [((id<GeogebraCommonKernelKernelNDGeoPointND>) nil_chk(corner3_)) toGeoElement]);
  IOSObjectArray_Set(input_, 4, [((id<GeogebraCommonKernelKernelNDGeoPointND>) nil_chk(screenCorner1_)) toGeoElement]);
  IOSObjectArray_Set(input_, 5, [((id<GeogebraCommonKernelKernelNDGeoPointND>) nil_chk(screenCorner3_)) toGeoElement]);
  [self setOutputLengthWithInt:1];
  [self setOutputWithInt:0 withGeogebraCommonKernelGeosGeoElement:outGeo_];
  [self setDependencies];
}

- (GeogebraCommonKernelGeosGeoElement *)getResult {
  return outGeo_;
}

- (void)compute {
  GeogebraCommonKernelAlgosAlgoAttachCopyToView_compute(self);
}

- (void)transformFunctionWithDouble:(jdouble)d
                         withDouble:(jdouble)e
                         withDouble:(jdouble)f
                         withDouble:(jdouble)g {
  GeogebraCommonKernelAlgosAlgoAttachCopyToView_transformFunctionWithDouble_withDouble_withDouble_withDouble_(self, d, e, f, g);
}

- (void)setTransformedObjectWithGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)g
                            withGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)g2 {
  GeogebraCommonKernelAlgosAlgoAttachCopyToView_set_inGeo_(self, g);
  GeogebraCommonKernelAlgosAlgoAttachCopyToView_set_outGeo_(self, g2);
  if (!([out_ isKindOfClass:[GeogebraCommonKernelGeosGeoList class]]) && ([GeogebraCommonKernelMatrixTransformable_class_() isInstance:outGeo_])) {
    GeogebraCommonKernelAlgosAlgoAttachCopyToView_set_out_(self, (id<GeogebraCommonKernelMatrixTransformable>) check_protocol_cast(outGeo_, @protocol(GeogebraCommonKernelMatrixTransformable)));
  }
}

- (GeogebraCommonKernelGeosGeoElement *)getResultTemplateWithGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)geo {
  if ([geo isKindOfClass:[GeogebraCommonKernelGeosGeoFunction class]]) {
    return [new_GeogebraCommonKernelGeosGeoCurveCartesian_initWithGeogebraCommonKernelConstruction_(cons_) autorelease];
  }
  return [super getResultTemplateWithGeogebraCommonKernelGeosGeoElement:geo];
}

- (void)transformLimitedPathWithGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)a
                            withGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)b {
  if (!([a isKindOfClass:[GeogebraCommonKernelGeosGeoConicPart class]])) {
    [super transformLimitedPathWithGeogebraCommonKernelGeosGeoElement:a withGeogebraCommonKernelGeosGeoElement:b];
  }
  else {
    [super transformLimitedConicWithGeogebraCommonKernelGeosGeoElement:a withGeogebraCommonKernelGeosGeoElement:b];
  }
}

- (void)setEVWithInt:(jint)viewID2 {
  [((GeogebraCommonKernelGeosGeoElement *) nil_chk(IOSObjectArray_Get(nil_chk(input_), 1))) removeAlgorithmWithGeogebraCommonKernelAlgosAlgoElement:self];
  GeogebraCommonKernelAlgosAlgoAttachCopyToView_setAndConsume_viewID_(self, new_GeogebraCommonKernelGeosGeoNumeric_initWithGeogebraCommonKernelConstruction_withDouble_(cons_, viewID2));
  IOSObjectArray_Set(input_, 1, [viewID_ toGeoElement]);
}

- (jdouble)getAreaScaleFactor {
  return 1;
}

- (void)dealloc {
  RELEASE_(out_);
  RELEASE_(inGeo_);
  RELEASE_(outGeo_);
  RELEASE_(viewID_);
  RELEASE_(corner1_);
  RELEASE_(corner3_);
  RELEASE_(screenCorner1_);
  RELEASE_(screenCorner3_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonKernelConstruction:withNSString:withGeogebraCommonKernelGeosGeoElement:withGeogebraCommonKernelArithmeticNumberValue:withGeogebraCommonKernelKernelNDGeoPointND:withGeogebraCommonKernelKernelNDGeoPointND:withGeogebraCommonKernelKernelNDGeoPointND:withGeogebraCommonKernelKernelNDGeoPointND:", "AlgoAttachCopyToView", NULL, 0x1, NULL, NULL },
    { "initWithGeogebraCommonKernelConstruction:withGeogebraCommonKernelGeosGeoElement:withGeogebraCommonKernelArithmeticNumberValue:withGeogebraCommonKernelKernelNDGeoPointND:withGeogebraCommonKernelKernelNDGeoPointND:withGeogebraCommonKernelKernelNDGeoPointND:withGeogebraCommonKernelKernelNDGeoPointND:", "AlgoAttachCopyToView", NULL, 0x1, NULL, NULL },
    { "getClassName", NULL, "Lgeogebra.common.kernel.commands.Commands;", 0x1, NULL, NULL },
    { "setInputOutput", NULL, "V", 0x4, NULL, NULL },
    { "getResult", NULL, "Lgeogebra.common.kernel.geos.GeoElement;", 0x1, NULL, NULL },
    { "compute", NULL, "V", 0x11, NULL, NULL },
    { "transformFunctionWithDouble:withDouble:withDouble:withDouble:", "transformFunction", "V", 0x2, NULL, NULL },
    { "setTransformedObjectWithGeogebraCommonKernelGeosGeoElement:withGeogebraCommonKernelGeosGeoElement:", "setTransformedObject", "V", 0x4, NULL, NULL },
    { "getResultTemplateWithGeogebraCommonKernelGeosGeoElement:", "getResultTemplate", "Lgeogebra.common.kernel.geos.GeoElement;", 0x4, NULL, NULL },
    { "transformLimitedPathWithGeogebraCommonKernelGeosGeoElement:withGeogebraCommonKernelGeosGeoElement:", "transformLimitedPath", "V", 0x4, NULL, NULL },
    { "setEVWithInt:", "setEV", "V", 0x1, NULL, NULL },
    { "getAreaScaleFactor", NULL, "D", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "out_", NULL, 0x2, "Lgeogebra.common.kernel.MatrixTransformable;", NULL, NULL,  },
    { "inGeo_", NULL, 0x2, "Lgeogebra.common.kernel.geos.GeoElement;", NULL, NULL,  },
    { "outGeo_", NULL, 0x2, "Lgeogebra.common.kernel.geos.GeoElement;", NULL, NULL,  },
    { "viewID_", NULL, 0x2, "Lgeogebra.common.kernel.arithmetic.NumberValue;", NULL, NULL,  },
    { "corner1_", NULL, 0x2, "Lgeogebra.common.kernel.kernelND.GeoPointND;", NULL, NULL,  },
    { "corner3_", NULL, 0x2, "Lgeogebra.common.kernel.kernelND.GeoPointND;", NULL, NULL,  },
    { "screenCorner1_", NULL, 0x2, "Lgeogebra.common.kernel.kernelND.GeoPointND;", NULL, NULL,  },
    { "screenCorner3_", NULL, 0x2, "Lgeogebra.common.kernel.kernelND.GeoPointND;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelAlgosAlgoAttachCopyToView = { 2, "AlgoAttachCopyToView", "geogebra.common.kernel.algos", NULL, 0x1, 12, methods, 8, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelAlgosAlgoAttachCopyToView;
}

@end

void GeogebraCommonKernelAlgosAlgoAttachCopyToView_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoElement_withGeogebraCommonKernelArithmeticNumberValue_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoPointND_(GeogebraCommonKernelAlgosAlgoAttachCopyToView *self, GeogebraCommonKernelConstruction *cons, NSString *label, GeogebraCommonKernelGeosGeoElement *inArg, id<GeogebraCommonKernelArithmeticNumberValue> viewID, id<GeogebraCommonKernelKernelNDGeoPointND> corner1, id<GeogebraCommonKernelKernelNDGeoPointND> corner3, id<GeogebraCommonKernelKernelNDGeoPointND> screenCorner1, id<GeogebraCommonKernelKernelNDGeoPointND> screenCorner3) {
  GeogebraCommonKernelAlgosAlgoAttachCopyToView_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoElement_withGeogebraCommonKernelArithmeticNumberValue_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoPointND_(self, cons, inArg, viewID, corner1, corner3, screenCorner1, screenCorner3);
  [((GeogebraCommonKernelGeosGeoElement *) nil_chk(self->outGeo_)) setLabelWithNSString:label];
}

GeogebraCommonKernelAlgosAlgoAttachCopyToView *new_GeogebraCommonKernelAlgosAlgoAttachCopyToView_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoElement_withGeogebraCommonKernelArithmeticNumberValue_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoPointND_(GeogebraCommonKernelConstruction *cons, NSString *label, GeogebraCommonKernelGeosGeoElement *inArg, id<GeogebraCommonKernelArithmeticNumberValue> viewID, id<GeogebraCommonKernelKernelNDGeoPointND> corner1, id<GeogebraCommonKernelKernelNDGeoPointND> corner3, id<GeogebraCommonKernelKernelNDGeoPointND> screenCorner1, id<GeogebraCommonKernelKernelNDGeoPointND> screenCorner3) {
  GeogebraCommonKernelAlgosAlgoAttachCopyToView *self = [GeogebraCommonKernelAlgosAlgoAttachCopyToView alloc];
  GeogebraCommonKernelAlgosAlgoAttachCopyToView_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoElement_withGeogebraCommonKernelArithmeticNumberValue_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoPointND_(self, cons, label, inArg, viewID, corner1, corner3, screenCorner1, screenCorner3);
  return self;
}

void GeogebraCommonKernelAlgosAlgoAttachCopyToView_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoElement_withGeogebraCommonKernelArithmeticNumberValue_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoPointND_(GeogebraCommonKernelAlgosAlgoAttachCopyToView *self, GeogebraCommonKernelConstruction *cons, GeogebraCommonKernelGeosGeoElement *inArg, id<GeogebraCommonKernelArithmeticNumberValue> viewID, id<GeogebraCommonKernelKernelNDGeoPointND> corner1, id<GeogebraCommonKernelKernelNDGeoPointND> corner3, id<GeogebraCommonKernelKernelNDGeoPointND> screenCorner1, id<GeogebraCommonKernelKernelNDGeoPointND> screenCorner3) {
  GeogebraCommonKernelAlgosAlgoTransformation_initWithGeogebraCommonKernelConstruction_(self, cons);
  GeogebraCommonKernelAlgosAlgoAttachCopyToView_set_viewID_(self, viewID);
  GeogebraCommonKernelAlgosAlgoAttachCopyToView_set_corner1_(self, corner1);
  GeogebraCommonKernelAlgosAlgoAttachCopyToView_set_corner3_(self, corner3);
  GeogebraCommonKernelAlgosAlgoAttachCopyToView_set_screenCorner1_(self, screenCorner1);
  GeogebraCommonKernelAlgosAlgoAttachCopyToView_set_screenCorner3_(self, screenCorner3);
  GeogebraCommonKernelAlgosAlgoAttachCopyToView_set_inGeo_(self, [((GeogebraCommonKernelGeosGeoElement *) nil_chk(inArg)) toGeoElement]);
  if (([GeogebraCommonKernelGeosGeoPoly_class_() isInstance:self->inGeo_]) || [((GeogebraCommonKernelGeosGeoElement *) nil_chk(self->inGeo_)) isLimitedPath]) {
    GeogebraCommonKernelAlgosAlgoAttachCopyToView_set_outGeo_(self, [inArg copyInternalWithGeogebraCommonKernelConstruction:cons]);
    GeogebraCommonKernelAlgosAlgoAttachCopyToView_set_out_(self, (id<GeogebraCommonKernelMatrixTransformable>) check_protocol_cast(self->outGeo_, @protocol(GeogebraCommonKernelMatrixTransformable)));
  }
  else if ([self->inGeo_ isGeoList]) {
    GeogebraCommonKernelAlgosAlgoAttachCopyToView_setAndConsume_outGeo_(self, new_GeogebraCommonKernelGeosGeoList_initWithGeogebraCommonKernelConstruction_(cons));
  }
  else if ([self->inGeo_ isKindOfClass:[GeogebraCommonKernelGeosGeoFunction class]]) {
    GeogebraCommonKernelAlgosAlgoAttachCopyToView_set_outGeo_(self, [self->inGeo_ copy__]);
  }
  else {
    GeogebraCommonKernelAlgosAlgoAttachCopyToView_set_out_(self, (id<GeogebraCommonKernelMatrixTransformable>) check_protocol_cast([self->inGeo_ copy__], @protocol(GeogebraCommonKernelMatrixTransformable)));
    GeogebraCommonKernelAlgosAlgoAttachCopyToView_set_outGeo_(self, [((id<GeogebraCommonKernelMatrixTransformable>) nil_chk(self->out_)) toGeoElement]);
  }
  [self setInputOutput];
  GeogebraCommonKernelAlgosAlgoAttachCopyToView_compute(self);
  [((GeogebraCommonKernelConstruction *) nil_chk(cons)) registerEuclidianViewCEWithGeogebraCommonKernelEuclidianViewCE:self];
}

GeogebraCommonKernelAlgosAlgoAttachCopyToView *new_GeogebraCommonKernelAlgosAlgoAttachCopyToView_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoElement_withGeogebraCommonKernelArithmeticNumberValue_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoPointND_(GeogebraCommonKernelConstruction *cons, GeogebraCommonKernelGeosGeoElement *inArg, id<GeogebraCommonKernelArithmeticNumberValue> viewID, id<GeogebraCommonKernelKernelNDGeoPointND> corner1, id<GeogebraCommonKernelKernelNDGeoPointND> corner3, id<GeogebraCommonKernelKernelNDGeoPointND> screenCorner1, id<GeogebraCommonKernelKernelNDGeoPointND> screenCorner3) {
  GeogebraCommonKernelAlgosAlgoAttachCopyToView *self = [GeogebraCommonKernelAlgosAlgoAttachCopyToView alloc];
  GeogebraCommonKernelAlgosAlgoAttachCopyToView_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoElement_withGeogebraCommonKernelArithmeticNumberValue_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoPointND_(self, cons, inArg, viewID, corner1, corner3, screenCorner1, screenCorner3);
  return self;
}

void GeogebraCommonKernelAlgosAlgoAttachCopyToView_compute(GeogebraCommonKernelAlgosAlgoAttachCopyToView *self) {
  jint view = J2ObjCFpToInt([((id<GeogebraCommonKernelArithmeticNumberValue>) nil_chk(self->viewID_)) getDouble]);
  GeogebraCommonEuclidianEuclidianView *ev = nil;
  if (view == 2) ev = [((GeogebraCommonMainApp *) nil_chk([((GeogebraCommonKernelKernel *) nil_chk(self->kernel_)) getApplication])) getEuclidianView2WithInt:1];
  else if (view == 1) ev = [((GeogebraCommonMainApp *) nil_chk([((GeogebraCommonKernelKernel *) nil_chk(self->kernel_)) getApplication])) getEuclidianView1];
  if (ev == nil && view != 0) {
    [((GeogebraCommonKernelGeosGeoElement *) nil_chk(self->outGeo_)) setUndefined];
    return;
  }
  if ([((GeogebraCommonKernelGeosGeoElement *) nil_chk(self->inGeo_)) isGeoList]) {
    [self transformListWithGeogebraCommonKernelGeosGeoList:(GeogebraCommonKernelGeosGeoList *) check_class_cast(self->inGeo_, [GeogebraCommonKernelGeosGeoList class]) withGeogebraCommonKernelGeosGeoList:(GeogebraCommonKernelGeosGeoList *) check_class_cast(self->outGeo_, [GeogebraCommonKernelGeosGeoList class])];
    return;
  }
  if ([self->inGeo_ isGeoFunction]) {
  }
  else {
    [((GeogebraCommonKernelGeosGeoElement *) nil_chk(self->outGeo_)) setWithGeogebraCommonKernelGeosGeoElement:self->inGeo_];
  }
  if (![((GeogebraCommonKernelGeosGeoElement *) nil_chk(self->outGeo_)) isDefined]) {
    return;
  }
  if (view == 0) return;
  GeogebraCommonKernelGeosGeoPoint *c1 = (GeogebraCommonKernelGeosGeoPoint *) check_class_cast(self->corner1_, [GeogebraCommonKernelGeosGeoPoint class]);
  GeogebraCommonKernelGeosGeoPoint *c3 = (GeogebraCommonKernelGeosGeoPoint *) check_class_cast(self->corner3_, [GeogebraCommonKernelGeosGeoPoint class]);
  GeogebraCommonKernelGeosGeoPoint *c5 = (GeogebraCommonKernelGeosGeoPoint *) check_class_cast(self->screenCorner1_, [GeogebraCommonKernelGeosGeoPoint class]);
  GeogebraCommonKernelGeosGeoPoint *c7 = (GeogebraCommonKernelGeosGeoPoint *) check_class_cast(self->screenCorner3_, [GeogebraCommonKernelGeosGeoPoint class]);
  jdouble c1x = [((GeogebraCommonEuclidianEuclidianView *) nil_chk(ev)) toRealWorldCoordXWithDouble:[((GeogebraCommonKernelGeosGeoPoint *) nil_chk(c5)) getX] / [c5 getZ]];
  jdouble c1y = [ev toRealWorldCoordYWithDouble:[c5 getY] / [c5 getZ]];
  jdouble c3x = [ev toRealWorldCoordXWithDouble:[((GeogebraCommonKernelGeosGeoPoint *) nil_chk(c7)) getX] / [c7 getZ]];
  jdouble c3y = [ev toRealWorldCoordYWithDouble:[c7 getY] / [c7 getZ]];
  IOSObjectArray *m1 = GeogebraCommonUtilMyMath_adjointWithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_([((GeogebraCommonKernelGeosGeoPoint *) nil_chk(c1)) getX] / [c1 getZ], [c1 getY] / [c1 getZ], 1, [((GeogebraCommonKernelGeosGeoPoint *) nil_chk(c3)) getX] / [c3 getZ], [c3 getY] / [c3 getZ], 1, [c1 getX] / [c1 getZ], [c3 getY] / [c3 getZ], 1);
  IOSObjectArray *m2 = [IOSObjectArray arrayWithObjects:(id[]){ [IOSDoubleArray arrayWithDoubles:(jdouble[]){ c1x, c3x, c1x } count:3], [IOSDoubleArray arrayWithDoubles:(jdouble[]){ c1y, c3y, c3y } count:3], [IOSDoubleArray arrayWithDoubles:(jdouble[]){ 1, 1, 1 } count:3] } count:3 type:IOSClass_doubleArray(1)];
  IOSObjectArray *m = GeogebraCommonUtilMyMath_multiplyWithDoubleArray2_withDoubleArray2_(m2, m1);
  if (!([self->inGeo_ isKindOfClass:[GeogebraCommonKernelGeosGeoFunction class]])) {
    [((id<GeogebraCommonKernelMatrixTransformable>) nil_chk(self->out_)) matrixTransformWithDouble:IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(m), 0)), 0) withDouble:IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(m, 0)), 1) withDouble:IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(m, 0)), 2) withDouble:IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(m, 1)), 0) withDouble:IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(m, 1)), 1) withDouble:IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(m, 1)), 2) withDouble:IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(m, 2)), 0) withDouble:IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(m, 2)), 1) withDouble:IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(m, 2)), 2)];
    [self->outGeo_ updateCascade];
  }
  else {
    GeogebraCommonKernelAlgosAlgoAttachCopyToView_transformFunctionWithDouble_withDouble_withDouble_withDouble_(self, IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(m), 0)), 0) / IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(m, 2)), 2), IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(m, 0)), 2) / IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(m, 2)), 2), IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(m, 1)), 1) / IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(m, 2)), 2), IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(m, 1)), 2) / IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(m, 2)), 2));
  }
}

void GeogebraCommonKernelAlgosAlgoAttachCopyToView_transformFunctionWithDouble_withDouble_withDouble_withDouble_(GeogebraCommonKernelAlgosAlgoAttachCopyToView *self, jdouble d, jdouble e, jdouble f, jdouble g) {
  GeogebraCommonKernelArithmeticFunction *fun = [((GeogebraCommonKernelGeosGeoFunction *) nil_chk(((GeogebraCommonKernelGeosGeoFunction *) check_class_cast(self->inGeo_, [GeogebraCommonKernelGeosGeoFunction class])))) getFunction];
  GeogebraCommonKernelArithmeticExpressionNode *expr = [((GeogebraCommonKernelArithmeticExpressionNode *) nil_chk([((GeogebraCommonKernelArithmeticFunction *) nil_chk(fun)) getExpression])) getCopyWithGeogebraCommonKernelKernel:self->kernel_];
  expr = [((id<GeogebraCommonKernelArithmeticExpressionValue>) nil_chk([((GeogebraCommonKernelArithmeticExpressionNode *) nil_chk(expr)) replaceWithGeogebraCommonKernelArithmeticExpressionValue:[fun getFunctionVariable] withGeogebraCommonKernelArithmeticExpressionValue:[((GeogebraCommonKernelArithmeticExpressionNode *) nil_chk([((GeogebraCommonKernelArithmeticExpressionNode *) [new_GeogebraCommonKernelArithmeticExpressionNode_initWithGeogebraCommonKernelKernel_withGeogebraCommonKernelArithmeticExpressionValue_(self->kernel_, [fun getFunctionVariable]) autorelease]) multiplyWithDouble:1 / d])) plusWithDouble:-e / d]])) wrap];
  GeogebraCommonKernelArithmeticFunction *fun2 = [new_GeogebraCommonKernelArithmeticFunction_initWithGeogebraCommonKernelArithmeticExpressionNode_withGeogebraCommonKernelArithmeticFunctionVariable_([((GeogebraCommonKernelArithmeticExpressionNode *) nil_chk([((GeogebraCommonKernelArithmeticExpressionNode *) nil_chk(expr)) multiplyWithDouble:f])) plusWithDouble:g], [fun getFunctionVariable]) autorelease];
  [((GeogebraCommonKernelGeosGeoFunction *) nil_chk(((GeogebraCommonKernelGeosGeoFunction *) check_class_cast(self->outGeo_, [GeogebraCommonKernelGeosGeoFunction class])))) setFunctionWithGeogebraCommonKernelArithmeticFunction:fun2];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelAlgosAlgoAttachCopyToView)
