//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/algos/AlgoAnglePolygon.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "geogebra/common/kernel/Construction.h"
#include "geogebra/common/kernel/algos/AlgoAnglePoints.h"
#include "geogebra/common/kernel/algos/AlgoAnglePointsND.h"
#include "geogebra/common/kernel/algos/AlgoAnglePolygon.h"
#include "geogebra/common/kernel/algos/AlgoAnglePolygonND.h"
#include "geogebra/common/kernel/algos/AlgoElement.h"
#include "geogebra/common/kernel/geos/GeoElement.h"
#include "geogebra/common/kernel/geos/GeoPolygon.h"
#include "geogebra/common/kernel/kernelND/GeoDirectionND.h"

@implementation GeogebraCommonKernelAlgosAlgoAnglePolygon

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                                       withNSStringArray:(IOSObjectArray *)labels
                  withGeogebraCommonKernelGeosGeoPolygon:(GeogebraCommonKernelGeosGeoPolygon *)poly {
  GeogebraCommonKernelAlgosAlgoAnglePolygon_initWithGeogebraCommonKernelConstruction_withNSStringArray_withGeogebraCommonKernelGeosGeoPolygon_(self, cons, labels, poly);
  return self;
}

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                                       withNSStringArray:(IOSObjectArray *)labels
                  withGeogebraCommonKernelGeosGeoPolygon:(GeogebraCommonKernelGeosGeoPolygon *)poly
          withGeogebraCommonKernelKernelNDGeoDirectionND:(id<GeogebraCommonKernelKernelNDGeoDirectionND>)orientation {
  GeogebraCommonKernelAlgosAlgoAnglePolygon_initWithGeogebraCommonKernelConstruction_withNSStringArray_withGeogebraCommonKernelGeosGeoPolygon_withGeogebraCommonKernelKernelNDGeoDirectionND_(self, cons, labels, poly, orientation);
  return self;
}

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                  withGeogebraCommonKernelGeosGeoPolygon:(GeogebraCommonKernelGeosGeoPolygon *)p
          withGeogebraCommonKernelKernelNDGeoDirectionND:(id<GeogebraCommonKernelKernelNDGeoDirectionND>)orientation {
  GeogebraCommonKernelAlgosAlgoAnglePolygon_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoPolygon_withGeogebraCommonKernelKernelNDGeoDirectionND_(self, cons, p, orientation);
  return self;
}

- (GeogebraCommonKernelAlgosAlgoAnglePointsND *)newAlgoAnglePointsWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons {
  return [new_GeogebraCommonKernelAlgosAlgoAnglePoints_initWithGeogebraCommonKernelConstruction_(cons) autorelease];
}

- (jint)getInputLengthForXML {
  return [self getInputLengthForXMLMayNeedXOYPlane];
}

- (jint)getInputLengthForCommandDescription {
  return [self getInputLengthForCommandDescriptionMayNeedXOYPlane];
}

- (GeogebraCommonKernelGeosGeoElement *)getInputWithInt:(jint)i {
  return [self getInputMaybeXOYPlaneWithInt:i];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonKernelConstruction:withNSStringArray:withGeogebraCommonKernelGeosGeoPolygon:", "AlgoAnglePolygon", NULL, 0x1, NULL, NULL },
    { "initWithGeogebraCommonKernelConstruction:withNSStringArray:withGeogebraCommonKernelGeosGeoPolygon:withGeogebraCommonKernelKernelNDGeoDirectionND:", "AlgoAnglePolygon", NULL, 0x1, NULL, NULL },
    { "initWithGeogebraCommonKernelConstruction:withGeogebraCommonKernelGeosGeoPolygon:withGeogebraCommonKernelKernelNDGeoDirectionND:", "AlgoAnglePolygon", NULL, 0x0, NULL, NULL },
    { "newAlgoAnglePointsWithGeogebraCommonKernelConstruction:", "newAlgoAnglePoints", "Lgeogebra.common.kernel.algos.AlgoAnglePointsND;", 0x4, NULL, NULL },
    { "getInputLengthForXML", NULL, "I", 0x4, NULL, NULL },
    { "getInputLengthForCommandDescription", NULL, "I", 0x4, NULL, NULL },
    { "getInputWithInt:", "getInput", "Lgeogebra.common.kernel.geos.GeoElement;", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelAlgosAlgoAnglePolygon = { 2, "AlgoAnglePolygon", "geogebra.common.kernel.algos", NULL, 0x1, 7, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelAlgosAlgoAnglePolygon;
}

@end

void GeogebraCommonKernelAlgosAlgoAnglePolygon_initWithGeogebraCommonKernelConstruction_withNSStringArray_withGeogebraCommonKernelGeosGeoPolygon_(GeogebraCommonKernelAlgosAlgoAnglePolygon *self, GeogebraCommonKernelConstruction *cons, IOSObjectArray *labels, GeogebraCommonKernelGeosGeoPolygon *poly) {
  GeogebraCommonKernelAlgosAlgoAnglePolygon_initWithGeogebraCommonKernelConstruction_withNSStringArray_withGeogebraCommonKernelGeosGeoPolygon_withGeogebraCommonKernelKernelNDGeoDirectionND_(self, cons, labels, poly, nil);
}

GeogebraCommonKernelAlgosAlgoAnglePolygon *new_GeogebraCommonKernelAlgosAlgoAnglePolygon_initWithGeogebraCommonKernelConstruction_withNSStringArray_withGeogebraCommonKernelGeosGeoPolygon_(GeogebraCommonKernelConstruction *cons, IOSObjectArray *labels, GeogebraCommonKernelGeosGeoPolygon *poly) {
  GeogebraCommonKernelAlgosAlgoAnglePolygon *self = [GeogebraCommonKernelAlgosAlgoAnglePolygon alloc];
  GeogebraCommonKernelAlgosAlgoAnglePolygon_initWithGeogebraCommonKernelConstruction_withNSStringArray_withGeogebraCommonKernelGeosGeoPolygon_(self, cons, labels, poly);
  return self;
}

void GeogebraCommonKernelAlgosAlgoAnglePolygon_initWithGeogebraCommonKernelConstruction_withNSStringArray_withGeogebraCommonKernelGeosGeoPolygon_withGeogebraCommonKernelKernelNDGeoDirectionND_(GeogebraCommonKernelAlgosAlgoAnglePolygon *self, GeogebraCommonKernelConstruction *cons, IOSObjectArray *labels, GeogebraCommonKernelGeosGeoPolygon *poly, id<GeogebraCommonKernelKernelNDGeoDirectionND> orientation) {
  GeogebraCommonKernelAlgosAlgoAnglePolygon_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoPolygon_withGeogebraCommonKernelKernelNDGeoDirectionND_(self, cons, poly, orientation);
  [self setLabelsWithNSStringArray:labels];
  [self update];
}

GeogebraCommonKernelAlgosAlgoAnglePolygon *new_GeogebraCommonKernelAlgosAlgoAnglePolygon_initWithGeogebraCommonKernelConstruction_withNSStringArray_withGeogebraCommonKernelGeosGeoPolygon_withGeogebraCommonKernelKernelNDGeoDirectionND_(GeogebraCommonKernelConstruction *cons, IOSObjectArray *labels, GeogebraCommonKernelGeosGeoPolygon *poly, id<GeogebraCommonKernelKernelNDGeoDirectionND> orientation) {
  GeogebraCommonKernelAlgosAlgoAnglePolygon *self = [GeogebraCommonKernelAlgosAlgoAnglePolygon alloc];
  GeogebraCommonKernelAlgosAlgoAnglePolygon_initWithGeogebraCommonKernelConstruction_withNSStringArray_withGeogebraCommonKernelGeosGeoPolygon_withGeogebraCommonKernelKernelNDGeoDirectionND_(self, cons, labels, poly, orientation);
  return self;
}

void GeogebraCommonKernelAlgosAlgoAnglePolygon_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoPolygon_withGeogebraCommonKernelKernelNDGeoDirectionND_(GeogebraCommonKernelAlgosAlgoAnglePolygon *self, GeogebraCommonKernelConstruction *cons, GeogebraCommonKernelGeosGeoPolygon *p, id<GeogebraCommonKernelKernelNDGeoDirectionND> orientation) {
  GeogebraCommonKernelAlgosAlgoAnglePolygonND_initWithGeogebraCommonKernelConstruction_(self, cons);
  [self setPolyAndOrientationWithGeogebraCommonKernelGeosGeoPolygon:p withGeogebraCommonKernelKernelNDGeoDirectionND:orientation];
  GeogebraCommonKernelAlgosAlgoAnglePolygonND_set_algoAngle_(self, [self newAlgoAnglePointsWithGeogebraCommonKernelConstruction:cons]);
  GeogebraCommonKernelAlgosAlgoAnglePolygonND_set_outputAngles_(self, [self createOutputPoints]);
  [self setInputOutput];
  [self compute];
}

GeogebraCommonKernelAlgosAlgoAnglePolygon *new_GeogebraCommonKernelAlgosAlgoAnglePolygon_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoPolygon_withGeogebraCommonKernelKernelNDGeoDirectionND_(GeogebraCommonKernelConstruction *cons, GeogebraCommonKernelGeosGeoPolygon *p, id<GeogebraCommonKernelKernelNDGeoDirectionND> orientation) {
  GeogebraCommonKernelAlgosAlgoAnglePolygon *self = [GeogebraCommonKernelAlgosAlgoAnglePolygon alloc];
  GeogebraCommonKernelAlgosAlgoAnglePolygon_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoPolygon_withGeogebraCommonKernelKernelNDGeoDirectionND_(self, cons, p, orientation);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelAlgosAlgoAnglePolygon)
