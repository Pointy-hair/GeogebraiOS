//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/cas/AlgoSurdTextPoint.java
//


#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "geogebra/common/kernel/CircularDefinitionException.h"
#include "geogebra/common/kernel/Construction.h"
#include "geogebra/common/kernel/StringTemplate.h"
#include "geogebra/common/kernel/algos/AlgoElement.h"
#include "geogebra/common/kernel/arithmetic/ExpressionNodeConstants.h"
#include "geogebra/common/kernel/cas/AlgoSurdText.h"
#include "geogebra/common/kernel/cas/AlgoSurdTextPoint.h"
#include "geogebra/common/kernel/commands/Commands.h"
#include "geogebra/common/kernel/geos/GeoElement.h"
#include "geogebra/common/kernel/geos/GeoPoint.h"
#include "geogebra/common/kernel/geos/GeoText.h"
#include "java/lang/StringBuilder.h"

@interface GeogebraCommonKernelCasAlgoSurdTextPoint () {
 @public
  GeogebraCommonKernelGeosGeoPoint *p_;
  GeogebraCommonKernelGeosGeoText *text_AlgoSurdTextPoint_;
  JavaLangStringBuilder *sbp_;
}

@end

J2OBJC_FIELD_SETTER(GeogebraCommonKernelCasAlgoSurdTextPoint, p_, GeogebraCommonKernelGeosGeoPoint *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelCasAlgoSurdTextPoint, text_AlgoSurdTextPoint_, GeogebraCommonKernelGeosGeoText *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelCasAlgoSurdTextPoint, sbp_, JavaLangStringBuilder *)

__attribute__((unused)) static void GeogebraCommonKernelCasAlgoSurdTextPoint_compute(GeogebraCommonKernelCasAlgoSurdTextPoint *self);

@implementation GeogebraCommonKernelCasAlgoSurdTextPoint

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                                            withNSString:(NSString *)label
                    withGeogebraCommonKernelGeosGeoPoint:(GeogebraCommonKernelGeosGeoPoint *)p {
  GeogebraCommonKernelCasAlgoSurdTextPoint_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoPoint_(self, cons, label, p);
  return self;
}

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                    withGeogebraCommonKernelGeosGeoPoint:(GeogebraCommonKernelGeosGeoPoint *)p {
  GeogebraCommonKernelCasAlgoSurdTextPoint_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoPoint_(self, cons, p);
  return self;
}

- (GeogebraCommonKernelCommandsCommandsEnum *)getClassName {
  return GeogebraCommonKernelCommandsCommandsEnum_get_SurdText();
}

- (void)setInputOutput {
  GeogebraCommonKernelAlgosAlgoElement_setAndConsume_input_(self, [IOSObjectArray newArrayWithLength:1 type:GeogebraCommonKernelGeosGeoElement_class_()]);
  IOSObjectArray_Set(input_, 0, p_);
  [self setOutputLengthWithInt:1];
  [self setOutputWithInt:0 withGeogebraCommonKernelGeosGeoElement:text_AlgoSurdTextPoint_];
  [self setDependencies];
}

- (GeogebraCommonKernelGeosGeoText *)getResult {
  return text_AlgoSurdTextPoint_;
}

- (void)compute {
  GeogebraCommonKernelCasAlgoSurdTextPoint_compute(self);
}

- (jboolean)isLaTeXTextCommand {
  return YES;
}

- (void)dealloc {
  RELEASE_(p_);
  RELEASE_(text_AlgoSurdTextPoint_);
  RELEASE_(sbp_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonKernelConstruction:withNSString:withGeogebraCommonKernelGeosGeoPoint:", "AlgoSurdTextPoint", NULL, 0x1, NULL, NULL },
    { "initWithGeogebraCommonKernelConstruction:withGeogebraCommonKernelGeosGeoPoint:", "AlgoSurdTextPoint", NULL, 0x0, NULL, NULL },
    { "getClassName", NULL, "Lgeogebra.common.kernel.commands.Commands;", 0x1, NULL, NULL },
    { "setInputOutput", NULL, "V", 0x4, NULL, NULL },
    { "getResult", NULL, "Lgeogebra.common.kernel.geos.GeoText;", 0x1, NULL, NULL },
    { "compute", NULL, "V", 0x11, NULL, NULL },
    { "isLaTeXTextCommand", NULL, "Z", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "p_", NULL, 0x2, "Lgeogebra.common.kernel.geos.GeoPoint;", NULL, NULL,  },
    { "text_AlgoSurdTextPoint_", "text", 0x2, "Lgeogebra.common.kernel.geos.GeoText;", NULL, NULL,  },
    { "sbp_", NULL, 0x2, "Ljava.lang.StringBuilder;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelCasAlgoSurdTextPoint = { 2, "AlgoSurdTextPoint", "geogebra.common.kernel.cas", NULL, 0x1, 7, methods, 3, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelCasAlgoSurdTextPoint;
}

@end

void GeogebraCommonKernelCasAlgoSurdTextPoint_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoPoint_(GeogebraCommonKernelCasAlgoSurdTextPoint *self, GeogebraCommonKernelConstruction *cons, NSString *label, GeogebraCommonKernelGeosGeoPoint *p) {
  GeogebraCommonKernelCasAlgoSurdTextPoint_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoPoint_(self, cons, p);
  [((GeogebraCommonKernelGeosGeoText *) nil_chk(self->text_AlgoSurdTextPoint_)) setLabelWithNSString:label];
}

GeogebraCommonKernelCasAlgoSurdTextPoint *new_GeogebraCommonKernelCasAlgoSurdTextPoint_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoPoint_(GeogebraCommonKernelConstruction *cons, NSString *label, GeogebraCommonKernelGeosGeoPoint *p) {
  GeogebraCommonKernelCasAlgoSurdTextPoint *self = [GeogebraCommonKernelCasAlgoSurdTextPoint alloc];
  GeogebraCommonKernelCasAlgoSurdTextPoint_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoPoint_(self, cons, label, p);
  return self;
}

void GeogebraCommonKernelCasAlgoSurdTextPoint_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoPoint_(GeogebraCommonKernelCasAlgoSurdTextPoint *self, GeogebraCommonKernelConstruction *cons, GeogebraCommonKernelGeosGeoPoint *p) {
  GeogebraCommonKernelCasAlgoSurdText_initWithGeogebraCommonKernelConstruction_(self, cons);
  GeogebraCommonKernelCasAlgoSurdTextPoint_set_p_(self, p);
  GeogebraCommonKernelCasAlgoSurdTextPoint_setAndConsume_sbp_(self, new_JavaLangStringBuilder_initWithInt_(50));
  GeogebraCommonKernelCasAlgoSurdTextPoint_setAndConsume_text_AlgoSurdTextPoint_(self, new_GeogebraCommonKernelGeosGeoText_initWithGeogebraCommonKernelConstruction_(cons));
  [self->text_AlgoSurdTextPoint_ setFormulaTypeWithGeogebraCommonKernelArithmeticExpressionNodeConstants_StringTypeEnum:GeogebraCommonKernelArithmeticExpressionNodeConstants_StringTypeEnum_get_LATEX()];
  [self->text_AlgoSurdTextPoint_ setLaTeXWithBoolean:YES withBoolean:NO];
  [self->text_AlgoSurdTextPoint_ setIsTextCommandWithBoolean:YES];
  @try {
    [self->text_AlgoSurdTextPoint_ setStartPointWithGeogebraCommonKernelKernelNDGeoPointND:p withInt:0];
  }
  @catch (GeogebraCommonKernelCircularDefinitionException *e) {
  }
  [self setInputOutput];
  GeogebraCommonKernelCasAlgoSurdTextPoint_compute(self);
}

GeogebraCommonKernelCasAlgoSurdTextPoint *new_GeogebraCommonKernelCasAlgoSurdTextPoint_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoPoint_(GeogebraCommonKernelConstruction *cons, GeogebraCommonKernelGeosGeoPoint *p) {
  GeogebraCommonKernelCasAlgoSurdTextPoint *self = [GeogebraCommonKernelCasAlgoSurdTextPoint alloc];
  GeogebraCommonKernelCasAlgoSurdTextPoint_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoPoint_(self, cons, p);
  return self;
}

void GeogebraCommonKernelCasAlgoSurdTextPoint_compute(GeogebraCommonKernelCasAlgoSurdTextPoint *self) {
  if ([((GeogebraCommonKernelGeosGeoElement *) nil_chk(IOSObjectArray_Get(nil_chk(self->input_), 0))) isDefined]) {
    [((JavaLangStringBuilder *) nil_chk(self->sbp_)) setLengthWithInt:0];
    [self->sbp_ appendWithNSString:@" \\left( "];
    [self PSLQappendQuadraticWithJavaLangStringBuilder:self->sbp_ withDouble:((GeogebraCommonKernelGeosGeoPoint *) nil_chk(self->p_))->inhomX_ withGeogebraCommonKernelStringTemplate:[((GeogebraCommonKernelGeosGeoText *) nil_chk(self->text_AlgoSurdTextPoint_)) getStringTemplate]];
    [self->sbp_ appendWithNSString:@" , "];
    [self PSLQappendQuadraticWithJavaLangStringBuilder:self->sbp_ withDouble:self->p_->inhomY_ withGeogebraCommonKernelStringTemplate:[self->text_AlgoSurdTextPoint_ getStringTemplate]];
    [self->sbp_ appendWithNSString:@" \\right) "];
    [self->text_AlgoSurdTextPoint_ setTextStringWithNSString:[self->sbp_ description]];
    [self->text_AlgoSurdTextPoint_ setLaTeXWithBoolean:YES withBoolean:NO];
  }
  else {
    [((GeogebraCommonKernelGeosGeoText *) nil_chk(self->text_AlgoSurdTextPoint_)) setUndefined];
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelCasAlgoSurdTextPoint)
