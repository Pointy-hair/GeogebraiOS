//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/geogebra3D/archimedean/com/quantimegroup/solutions/archimedean/geom/Line.java
//


#include "J2ObjC_source.h"
#include "geogebra/common/geogebra3D/archimedean/com/quantimegroup/solutions/archimedean/geom/Line.h"
#include "geogebra/common/geogebra3D/archimedean/com/quantimegroup/solutions/archimedean/utils/OrderedTriple.h"

@interface GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanGeomLine () {
 @public
  GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsOrderedTriple *point_;
  GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsOrderedTriple *vector_;
}

@end

J2OBJC_FIELD_SETTER(GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanGeomLine, point_, GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsOrderedTriple *)
J2OBJC_FIELD_SETTER(GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanGeomLine, vector_, GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsOrderedTriple *)

@implementation GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanGeomLine

- (instancetype)initWithGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsOrderedTriple:(GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsOrderedTriple *)p
                    withGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsOrderedTriple:(GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsOrderedTriple *)v {
  GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanGeomLine_initWithGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsOrderedTriple_withGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsOrderedTriple_(self, p, v);
  return self;
}

+ (GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanGeomLine *)fromTwoPointsWithGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsOrderedTriple:(GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsOrderedTriple *)p1
                                                                                                  withGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsOrderedTriple:(GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsOrderedTriple *)p2 {
  return GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanGeomLine_fromTwoPointsWithGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsOrderedTriple_withGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsOrderedTriple_(p1, p2);
}

- (jboolean)sameWithGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanGeomLine:(GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanGeomLine *)l {
  GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsOrderedTriple *unit = [((GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsOrderedTriple *) nil_chk(vector_)) unit];
  GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsOrderedTriple *lunit = [((GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanGeomLine *) nil_chk(l))->vector_ unit];
  if (![((GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsOrderedTriple *) nil_chk(unit)) equalsWithGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsOrderedTriple:lunit] && ![unit equalsWithGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsOrderedTriple:[((GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsOrderedTriple *) nil_chk(lunit)) negative]]) {
    return NO;
  }
  if ([((GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsOrderedTriple *) nil_chk(point_)) equalsWithGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsOrderedTriple:l->point_]) {
    return YES;
  }
  GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsOrderedTriple *pDiff = [((GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsOrderedTriple *) nil_chk([point_ minusWithGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsOrderedTriple:l->point_])) unit];
  return [((GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsOrderedTriple *) nil_chk(pDiff)) equalsWithGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsOrderedTriple:unit] || [pDiff equalsWithGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsOrderedTriple:[unit negative]];
}

- (GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsOrderedTriple *)getPoint {
  return point_;
}

- (GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsOrderedTriple *)getVector {
  return vector_;
}

- (void)dealloc {
  RELEASE_(point_);
  RELEASE_(vector_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsOrderedTriple:withGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsOrderedTriple:", "Line", NULL, 0x4, NULL, NULL },
    { "fromTwoPointsWithGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsOrderedTriple:withGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsOrderedTriple:", "fromTwoPoints", "Lgeogebra.common.geogebra3D.archimedean.com.quantimegroup.solutions.archimedean.geom.Line;", 0x9, NULL, NULL },
    { "sameWithGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanGeomLine:", "same", "Z", 0x1, NULL, NULL },
    { "getPoint", NULL, "Lgeogebra.common.geogebra3D.archimedean.com.quantimegroup.solutions.archimedean.utils.OrderedTriple;", 0x1, NULL, NULL },
    { "getVector", NULL, "Lgeogebra.common.geogebra3D.archimedean.com.quantimegroup.solutions.archimedean.utils.OrderedTriple;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "point_", NULL, 0x2, "Lgeogebra.common.geogebra3D.archimedean.com.quantimegroup.solutions.archimedean.utils.OrderedTriple;", NULL, NULL,  },
    { "vector_", NULL, 0x2, "Lgeogebra.common.geogebra3D.archimedean.com.quantimegroup.solutions.archimedean.utils.OrderedTriple;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanGeomLine = { 2, "Line", "geogebra.common.geogebra3D.archimedean.com.quantimegroup.solutions.archimedean.geom", NULL, 0x1, 5, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanGeomLine;
}

@end

void GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanGeomLine_initWithGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsOrderedTriple_withGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsOrderedTriple_(GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanGeomLine *self, GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsOrderedTriple *p, GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsOrderedTriple *v) {
  NSObject_init(self);
  GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanGeomLine_set_point_(self, p);
  GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanGeomLine_set_vector_(self, v);
}

GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanGeomLine *new_GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanGeomLine_initWithGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsOrderedTriple_withGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsOrderedTriple_(GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsOrderedTriple *p, GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsOrderedTriple *v) {
  GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanGeomLine *self = [GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanGeomLine alloc];
  GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanGeomLine_initWithGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsOrderedTriple_withGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsOrderedTriple_(self, p, v);
  return self;
}

GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanGeomLine *GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanGeomLine_fromTwoPointsWithGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsOrderedTriple_withGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsOrderedTriple_(GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsOrderedTriple *p1, GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsOrderedTriple *p2) {
  GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanGeomLine_initialize();
  return [new_GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanGeomLine_initWithGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsOrderedTriple_withGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsOrderedTriple_(p1, [((GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsOrderedTriple *) nil_chk([((GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsOrderedTriple *) nil_chk(p1)) minusWithGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsOrderedTriple:p2])) unit]) autorelease];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanGeomLine)
