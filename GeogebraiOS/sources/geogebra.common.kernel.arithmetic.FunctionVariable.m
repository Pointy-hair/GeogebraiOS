//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/arithmetic/FunctionVariable.java
//


#include "J2ObjC_source.h"
#include "geogebra/common/kernel/Kernel.h"
#include "geogebra/common/kernel/StringTemplate.h"
#include "geogebra/common/kernel/arithmetic/ExpressionNode.h"
#include "geogebra/common/kernel/arithmetic/ExpressionValue.h"
#include "geogebra/common/kernel/arithmetic/FunctionVariable.h"
#include "geogebra/common/kernel/arithmetic/MyDouble.h"
#include "geogebra/common/plugin/Operation.h"

@interface GeogebraCommonKernelArithmeticFunctionVariable () {
 @public
  NSString *varStr_;
}

@end

J2OBJC_FIELD_SETTER(GeogebraCommonKernelArithmeticFunctionVariable, varStr_, NSString *)

@implementation GeogebraCommonKernelArithmeticFunctionVariable

- (instancetype)initWithGeogebraCommonKernelKernel:(GeogebraCommonKernelKernel *)kernel {
  GeogebraCommonKernelArithmeticFunctionVariable_initWithGeogebraCommonKernelKernel_(self, kernel);
  return self;
}

- (instancetype)initWithGeogebraCommonKernelKernel:(GeogebraCommonKernelKernel *)kernel
                                      withNSString:(NSString *)varStr {
  GeogebraCommonKernelArithmeticFunctionVariable_initWithGeogebraCommonKernelKernel_withNSString_(self, kernel, varStr);
  return self;
}

- (jboolean)isConstant {
  return NO;
}

- (id<GeogebraCommonKernelArithmeticExpressionValue>)deepCopyWithGeogebraCommonKernelKernel:(GeogebraCommonKernelKernel *)k {
  return [new_GeogebraCommonKernelArithmeticFunctionVariable_initWithGeogebraCommonKernelKernel_withNSString_(k, varStr_) autorelease];
}

- (void)setVarStringWithNSString:(NSString *)varStr {
  GeogebraCommonKernelArithmeticFunctionVariable_set_varStr_(self, varStr);
}

- (NSString *)getSetVarString {
  return varStr_;
}

- (NSString *)toStringWithGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl {
  return [((GeogebraCommonKernelStringTemplate *) nil_chk(tpl)) printVariableNameWithNSString:varStr_];
}

- (id<GeogebraCommonKernelArithmeticExpressionValue>)derivativeWithGeogebraCommonKernelArithmeticFunctionVariable:(GeogebraCommonKernelArithmeticFunctionVariable *)fv {
  if (fv == self) {
    return [new_GeogebraCommonKernelArithmeticMyDouble_initWithGeogebraCommonKernelKernel_withDouble_(kernel_, 1) autorelease];
  }
  return [new_GeogebraCommonKernelArithmeticMyDouble_initWithGeogebraCommonKernelKernel_withDouble_(kernel_, 0) autorelease];
}

- (id<GeogebraCommonKernelArithmeticExpressionValue>)integralWithGeogebraCommonKernelArithmeticFunctionVariable:(GeogebraCommonKernelArithmeticFunctionVariable *)fv {
  if (fv == self) {
    return [((GeogebraCommonKernelArithmeticExpressionNode *) [new_GeogebraCommonKernelArithmeticExpressionNode_initWithGeogebraCommonKernelKernel_withGeogebraCommonKernelArithmeticExpressionValue_withGeogebraCommonPluginOperationEnum_withGeogebraCommonKernelArithmeticExpressionValue_(kernel_, self, GeogebraCommonPluginOperationEnum_get_POWER(), [new_GeogebraCommonKernelArithmeticMyDouble_initWithGeogebraCommonKernelKernel_withDouble_(kernel_, 2) autorelease]) autorelease]) divideWithDouble:2];
  }
  return [new_GeogebraCommonKernelArithmeticExpressionNode_initWithGeogebraCommonKernelKernel_withGeogebraCommonKernelArithmeticExpressionValue_withGeogebraCommonPluginOperationEnum_withGeogebraCommonKernelArithmeticExpressionValue_(kernel_, self, GeogebraCommonPluginOperationEnum_get_MULTIPLY(), fv) autorelease];
}

- (void)dealloc {
  RELEASE_(varStr_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonKernelKernel:", "FunctionVariable", NULL, 0x1, NULL, NULL },
    { "initWithGeogebraCommonKernelKernel:withNSString:", "FunctionVariable", NULL, 0x1, NULL, NULL },
    { "isConstant", NULL, "Z", 0x11, NULL, NULL },
    { "deepCopyWithGeogebraCommonKernelKernel:", "deepCopy", "Lgeogebra.common.kernel.arithmetic.ExpressionValue;", 0x11, NULL, NULL },
    { "setVarStringWithNSString:", "setVarString", "V", 0x1, NULL, NULL },
    { "getSetVarString", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "toStringWithGeogebraCommonKernelStringTemplate:", "toString", "Ljava.lang.String;", 0x11, NULL, NULL },
    { "derivativeWithGeogebraCommonKernelArithmeticFunctionVariable:", "derivative", "Lgeogebra.common.kernel.arithmetic.ExpressionValue;", 0x1, NULL, NULL },
    { "integralWithGeogebraCommonKernelArithmeticFunctionVariable:", "integral", "Lgeogebra.common.kernel.arithmetic.ExpressionValue;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "varStr_", NULL, 0x2, "Ljava.lang.String;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelArithmeticFunctionVariable = { 2, "FunctionVariable", "geogebra.common.kernel.arithmetic", NULL, 0x1, 9, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelArithmeticFunctionVariable;
}

@end

void GeogebraCommonKernelArithmeticFunctionVariable_initWithGeogebraCommonKernelKernel_(GeogebraCommonKernelArithmeticFunctionVariable *self, GeogebraCommonKernelKernel *kernel) {
  GeogebraCommonKernelArithmeticMyDouble_initWithGeogebraCommonKernelKernel_(self, kernel);
  GeogebraCommonKernelArithmeticFunctionVariable_set_varStr_(self, @"x");
}

GeogebraCommonKernelArithmeticFunctionVariable *new_GeogebraCommonKernelArithmeticFunctionVariable_initWithGeogebraCommonKernelKernel_(GeogebraCommonKernelKernel *kernel) {
  GeogebraCommonKernelArithmeticFunctionVariable *self = [GeogebraCommonKernelArithmeticFunctionVariable alloc];
  GeogebraCommonKernelArithmeticFunctionVariable_initWithGeogebraCommonKernelKernel_(self, kernel);
  return self;
}

void GeogebraCommonKernelArithmeticFunctionVariable_initWithGeogebraCommonKernelKernel_withNSString_(GeogebraCommonKernelArithmeticFunctionVariable *self, GeogebraCommonKernelKernel *kernel, NSString *varStr) {
  GeogebraCommonKernelArithmeticMyDouble_initWithGeogebraCommonKernelKernel_(self, kernel);
  GeogebraCommonKernelArithmeticFunctionVariable_set_varStr_(self, @"x");
  [self setVarStringWithNSString:varStr];
}

GeogebraCommonKernelArithmeticFunctionVariable *new_GeogebraCommonKernelArithmeticFunctionVariable_initWithGeogebraCommonKernelKernel_withNSString_(GeogebraCommonKernelKernel *kernel, NSString *varStr) {
  GeogebraCommonKernelArithmeticFunctionVariable *self = [GeogebraCommonKernelArithmeticFunctionVariable alloc];
  GeogebraCommonKernelArithmeticFunctionVariable_initWithGeogebraCommonKernelKernel_withNSString_(self, kernel, varStr);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelArithmeticFunctionVariable)
