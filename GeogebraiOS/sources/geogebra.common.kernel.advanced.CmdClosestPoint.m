//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/advanced/CmdClosestPoint.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "geogebra/common/kernel/Construction.h"
#include "geogebra/common/kernel/Kernel.h"
#include "geogebra/common/kernel/Path.h"
#include "geogebra/common/kernel/advanced/AlgoClosestPointLines.h"
#include "geogebra/common/kernel/advanced/CmdClosestPoint.h"
#include "geogebra/common/kernel/algos/AlgoClosestPoint.h"
#include "geogebra/common/kernel/arithmetic/Command.h"
#include "geogebra/common/kernel/commands/CommandProcessor.h"
#include "geogebra/common/kernel/geos/GeoElement.h"
#include "geogebra/common/kernel/geos/GeoLine.h"
#include "geogebra/common/kernel/geos/GeoPoint.h"
#include "geogebra/common/kernel/kernelND/GeoPointND.h"
#include "geogebra/common/main/MyError.h"

@interface GeogebraCommonKernelAdvancedCmdClosestPoint ()

- (GeogebraCommonKernelGeosGeoPoint *)ClosestPointWithNSString:(NSString *)label
                                  withGeogebraCommonKernelPath:(id<GeogebraCommonKernelPath>)path
                    withGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)p;

@end

__attribute__((unused)) static GeogebraCommonKernelGeosGeoPoint *GeogebraCommonKernelAdvancedCmdClosestPoint_ClosestPointWithNSString_withGeogebraCommonKernelPath_withGeogebraCommonKernelKernelNDGeoPointND_(GeogebraCommonKernelAdvancedCmdClosestPoint *self, NSString *label, id<GeogebraCommonKernelPath> path, id<GeogebraCommonKernelKernelNDGeoPointND> p);

@implementation GeogebraCommonKernelAdvancedCmdClosestPoint

- (instancetype)initWithGeogebraCommonKernelKernel:(GeogebraCommonKernelKernel *)kernel {
  GeogebraCommonKernelAdvancedCmdClosestPoint_initWithGeogebraCommonKernelKernel_(self, kernel);
  return self;
}

- (IOSObjectArray *)processWithGeogebraCommonKernelArithmeticCommand:(GeogebraCommonKernelArithmeticCommand *)c {
  jint n = [((GeogebraCommonKernelArithmeticCommand *) nil_chk(c)) getArgumentNumber];
  IOSBooleanArray *ok = [IOSBooleanArray arrayWithLength:n];
  IOSObjectArray *arg;
  switch (n) {
    case 2:
    arg = [self resArgsWithGeogebraCommonKernelArithmeticCommand:c];
    if ((*IOSBooleanArray_GetRef(ok, 0) = ([GeogebraCommonKernelPath_class_() isInstance:IOSObjectArray_Get(nil_chk(arg), 0)])) && (*IOSBooleanArray_GetRef(ok, 1) = ([((GeogebraCommonKernelGeosGeoElement *) nil_chk(IOSObjectArray_Get(arg, 1))) isGeoPoint]))) {
      IOSObjectArray *ret = [IOSObjectArray arrayWithObjects:(id[]){ GeogebraCommonKernelAdvancedCmdClosestPoint_ClosestPointWithNSString_withGeogebraCommonKernelPath_withGeogebraCommonKernelKernelNDGeoPointND_(self, [c getLabel], (id<GeogebraCommonKernelPath>) check_protocol_cast(IOSObjectArray_Get(arg, 0), @protocol(GeogebraCommonKernelPath)), (id<GeogebraCommonKernelKernelNDGeoPointND>) check_protocol_cast(IOSObjectArray_Get(arg, 1), @protocol(GeogebraCommonKernelKernelNDGeoPointND))) } count:1 type:GeogebraCommonKernelGeosGeoElement_class_()];
      return ret;
    }
    else if ((*IOSBooleanArray_GetRef(ok, 1) = ([GeogebraCommonKernelPath_class_() isInstance:IOSObjectArray_Get(arg, 1)])) && (*IOSBooleanArray_GetRef(ok, 0) = ([((GeogebraCommonKernelGeosGeoElement *) nil_chk(IOSObjectArray_Get(arg, 0))) isGeoPoint]))) {
      IOSObjectArray *ret = [IOSObjectArray arrayWithObjects:(id[]){ GeogebraCommonKernelAdvancedCmdClosestPoint_ClosestPointWithNSString_withGeogebraCommonKernelPath_withGeogebraCommonKernelKernelNDGeoPointND_(self, [c getLabel], (id<GeogebraCommonKernelPath>) check_protocol_cast(IOSObjectArray_Get(arg, 1), @protocol(GeogebraCommonKernelPath)), (id<GeogebraCommonKernelKernelNDGeoPointND>) check_protocol_cast(IOSObjectArray_Get(arg, 0), @protocol(GeogebraCommonKernelKernelNDGeoPointND))) } count:1 type:GeogebraCommonKernelGeosGeoElement_class_()];
      return ret;
    }
    else if ((*IOSBooleanArray_GetRef(ok, 1) = ([IOSObjectArray_Get(arg, 1) isKindOfClass:[GeogebraCommonKernelGeosGeoLine class]])) && (*IOSBooleanArray_GetRef(ok, 0) = ([IOSObjectArray_Get(arg, 0) isKindOfClass:[GeogebraCommonKernelGeosGeoLine class]]))) {
      IOSObjectArray *ret = [IOSObjectArray arrayWithObjects:(id[]){ [((GeogebraCommonKernelAdvancedAlgoClosestPointLines *) [new_GeogebraCommonKernelAdvancedAlgoClosestPointLines_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoLine_withGeogebraCommonKernelGeosGeoLine_([((GeogebraCommonKernelKernel *) nil_chk(kernelA_)) getConstruction], [c getLabel], (GeogebraCommonKernelGeosGeoLine *) check_class_cast(IOSObjectArray_Get(arg, 1), [GeogebraCommonKernelGeosGeoLine class]), (GeogebraCommonKernelGeosGeoLine *) check_class_cast(IOSObjectArray_Get(arg, 0), [GeogebraCommonKernelGeosGeoLine class])) autorelease]) getOutputWithInt:0] } count:1 type:GeogebraCommonKernelGeosGeoElement_class_()];
      return ret;
    }
    else {
      if (IOSBooleanArray_Get(ok, 0) && !IOSBooleanArray_Get(ok, 1)) @throw [self argErrWithGeogebraCommonMainApp:app_ withNSString:[c getName] withGeogebraCommonKernelArithmeticExpressionValue:IOSObjectArray_Get(arg, 1)];
      @throw [self argErrWithGeogebraCommonMainApp:app_ withNSString:[c getName] withGeogebraCommonKernelArithmeticExpressionValue:IOSObjectArray_Get(arg, 0)];
    }
    default:
    @throw [self argNumErrWithGeogebraCommonMainApp:app_ withNSString:[c getName] withInt:n];
  }
}

- (GeogebraCommonKernelGeosGeoPoint *)ClosestPointWithNSString:(NSString *)label
                                  withGeogebraCommonKernelPath:(id<GeogebraCommonKernelPath>)path
                    withGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)p {
  return GeogebraCommonKernelAdvancedCmdClosestPoint_ClosestPointWithNSString_withGeogebraCommonKernelPath_withGeogebraCommonKernelKernelNDGeoPointND_(self, label, path, p);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonKernelKernel:", "CmdClosestPoint", NULL, 0x1, NULL, NULL },
    { "processWithGeogebraCommonKernelArithmeticCommand:", "process", "[Lgeogebra.common.kernel.geos.GeoElement;", 0x1, "Lgeogebra.common.main.MyError;", NULL },
    { "ClosestPointWithNSString:withGeogebraCommonKernelPath:withGeogebraCommonKernelKernelNDGeoPointND:", "ClosestPoint", "Lgeogebra.common.kernel.geos.GeoPoint;", 0x12, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelAdvancedCmdClosestPoint = { 2, "CmdClosestPoint", "geogebra.common.kernel.advanced", NULL, 0x1, 3, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelAdvancedCmdClosestPoint;
}

@end

void GeogebraCommonKernelAdvancedCmdClosestPoint_initWithGeogebraCommonKernelKernel_(GeogebraCommonKernelAdvancedCmdClosestPoint *self, GeogebraCommonKernelKernel *kernel) {
  GeogebraCommonKernelCommandsCommandProcessor_initWithGeogebraCommonKernelKernel_(self, kernel);
}

GeogebraCommonKernelAdvancedCmdClosestPoint *new_GeogebraCommonKernelAdvancedCmdClosestPoint_initWithGeogebraCommonKernelKernel_(GeogebraCommonKernelKernel *kernel) {
  GeogebraCommonKernelAdvancedCmdClosestPoint *self = [GeogebraCommonKernelAdvancedCmdClosestPoint alloc];
  GeogebraCommonKernelAdvancedCmdClosestPoint_initWithGeogebraCommonKernelKernel_(self, kernel);
  return self;
}

GeogebraCommonKernelGeosGeoPoint *GeogebraCommonKernelAdvancedCmdClosestPoint_ClosestPointWithNSString_withGeogebraCommonKernelPath_withGeogebraCommonKernelKernelNDGeoPointND_(GeogebraCommonKernelAdvancedCmdClosestPoint *self, NSString *label, id<GeogebraCommonKernelPath> path, id<GeogebraCommonKernelKernelNDGeoPointND> p) {
  GeogebraCommonKernelAlgosAlgoClosestPoint *algo = [new_GeogebraCommonKernelAlgosAlgoClosestPoint_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelPath_withGeogebraCommonKernelKernelNDGeoPointND_(self->cons_, label, path, p) autorelease];
  return (GeogebraCommonKernelGeosGeoPoint *) check_class_cast([algo getP], [GeogebraCommonKernelGeosGeoPoint class]);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelAdvancedCmdClosestPoint)
