//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/advanced/AlgoAxisStepY.java
//


#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "geogebra/common/euclidian/EuclidianView.h"
#include "geogebra/common/kernel/Construction.h"
#include "geogebra/common/kernel/Kernel.h"
#include "geogebra/common/kernel/advanced/AlgoAxisStepY.h"
#include "geogebra/common/kernel/algos/AlgoElement.h"
#include "geogebra/common/kernel/commands/Commands.h"
#include "geogebra/common/kernel/geos/GeoElement.h"
#include "geogebra/common/kernel/geos/GeoNumeric.h"
#include "geogebra/common/main/App.h"

__attribute__((unused)) static void GeogebraCommonKernelAdvancedAlgoAxisStepY_compute(GeogebraCommonKernelAdvancedAlgoAxisStepY *self);

@implementation GeogebraCommonKernelAdvancedAlgoAxisStepY

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                                            withNSString:(NSString *)label {
  GeogebraCommonKernelAdvancedAlgoAxisStepY_initWithGeogebraCommonKernelConstruction_withNSString_(self, cons, label);
  return self;
}

- (GeogebraCommonKernelCommandsCommandsEnum *)getClassName {
  return GeogebraCommonKernelCommandsCommandsEnum_get_AxisStepY();
}

- (void)setInputOutput {
  GeogebraCommonKernelAlgosAlgoElement_setAndConsume_input_(self, [IOSObjectArray newArrayWithLength:0 type:GeogebraCommonKernelGeosGeoElement_class_()]);
  [self setOutputLengthWithInt:1];
  [self setOutputWithInt:0 withGeogebraCommonKernelGeosGeoElement:num_];
  [self setDependencies];
}

- (GeogebraCommonKernelGeosGeoNumeric *)getResult {
  return num_;
}

- (jboolean)euclidianViewUpdate {
  GeogebraCommonKernelAdvancedAlgoAxisStepY_compute(self);
  [((GeogebraCommonKernelGeosGeoNumeric *) nil_chk(num_)) updateCascade];
  return NO;
}

- (void)compute {
  GeogebraCommonKernelAdvancedAlgoAxisStepY_compute(self);
}

- (void)dealloc {
  RELEASE_(num_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonKernelConstruction:withNSString:", "AlgoAxisStepY", NULL, 0x1, NULL, NULL },
    { "getClassName", NULL, "Lgeogebra.common.kernel.commands.Commands;", 0x1, NULL, NULL },
    { "setInputOutput", NULL, "V", 0x4, NULL, NULL },
    { "getResult", NULL, "Lgeogebra.common.kernel.geos.GeoNumeric;", 0x1, NULL, NULL },
    { "euclidianViewUpdate", NULL, "Z", 0x1, NULL, NULL },
    { "compute", NULL, "V", 0x11, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "num_", NULL, 0x4, "Lgeogebra.common.kernel.geos.GeoNumeric;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelAdvancedAlgoAxisStepY = { 2, "AlgoAxisStepY", "geogebra.common.kernel.advanced", NULL, 0x1, 6, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelAdvancedAlgoAxisStepY;
}

@end

void GeogebraCommonKernelAdvancedAlgoAxisStepY_initWithGeogebraCommonKernelConstruction_withNSString_(GeogebraCommonKernelAdvancedAlgoAxisStepY *self, GeogebraCommonKernelConstruction *cons, NSString *label) {
  GeogebraCommonKernelAlgosAlgoElement_initWithGeogebraCommonKernelConstruction_(self, cons);
  GeogebraCommonKernelAdvancedAlgoAxisStepY_setAndConsume_num_(self, new_GeogebraCommonKernelGeosGeoNumeric_initWithGeogebraCommonKernelConstruction_(cons));
  [self setInputOutput];
  GeogebraCommonKernelAdvancedAlgoAxisStepY_compute(self);
  [self->num_ setLabelWithNSString:label];
  [((GeogebraCommonKernelConstruction *) nil_chk(cons)) registerEuclidianViewCEWithGeogebraCommonKernelEuclidianViewCE:self];
}

GeogebraCommonKernelAdvancedAlgoAxisStepY *new_GeogebraCommonKernelAdvancedAlgoAxisStepY_initWithGeogebraCommonKernelConstruction_withNSString_(GeogebraCommonKernelConstruction *cons, NSString *label) {
  GeogebraCommonKernelAdvancedAlgoAxisStepY *self = [GeogebraCommonKernelAdvancedAlgoAxisStepY alloc];
  GeogebraCommonKernelAdvancedAlgoAxisStepY_initWithGeogebraCommonKernelConstruction_withNSString_(self, cons, label);
  return self;
}

void GeogebraCommonKernelAdvancedAlgoAxisStepY_compute(GeogebraCommonKernelAdvancedAlgoAxisStepY *self) {
  IOSDoubleArray *axisSteps = [((GeogebraCommonEuclidianEuclidianView *) nil_chk([((GeogebraCommonMainApp *) nil_chk(([((GeogebraCommonKernelKernel *) nil_chk(self->kernel_)) getApplication]))) getEuclidianView1])) getGridDistances];
  [((GeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->num_)) setValueWithDouble:IOSDoubleArray_Get(nil_chk(axisSteps), 1)];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelAdvancedAlgoAxisStepY)
