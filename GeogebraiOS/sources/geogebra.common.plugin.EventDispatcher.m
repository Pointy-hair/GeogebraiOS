//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/plugin/EventDispatcher.java
//


#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "geogebra/common/kernel/Kernel.h"
#include "geogebra/common/kernel/ModeSetter.h"
#include "geogebra/common/kernel/geos/GeoElement.h"
#include "geogebra/common/main/App.h"
#include "geogebra/common/plugin/Event.h"
#include "geogebra/common/plugin/EventDispatcher.h"
#include "geogebra/common/plugin/EventListener.h"
#include "geogebra/common/plugin/EventType.h"
#include "geogebra/common/util/debug/GeoGebraProfiler.h"
#include "java/lang/System.h"
#include "java/util/ArrayList.h"

@interface GeogebraCommonPluginEventDispatcher () {
 @public
  GeogebraCommonMainApp *app_;
  JavaUtilArrayList *listeners_;
}

@end

J2OBJC_FIELD_SETTER(GeogebraCommonPluginEventDispatcher, app_, GeogebraCommonMainApp *)
J2OBJC_FIELD_SETTER(GeogebraCommonPluginEventDispatcher, listeners_, JavaUtilArrayList *)

@implementation GeogebraCommonPluginEventDispatcher

- (instancetype)initWithGeogebraCommonMainApp:(GeogebraCommonMainApp *)app {
  GeogebraCommonPluginEventDispatcher_initWithGeogebraCommonMainApp_(self, app);
  return self;
}

- (void)addEventListenerWithGeogebraCommonPluginEventListener:(id<GeogebraCommonPluginEventListener>)listener {
  [((JavaUtilArrayList *) nil_chk(listeners_)) addWithId:listener];
}

- (void)dispatchEventWithGeogebraCommonPluginEvent:(GeogebraCommonPluginEvent *)evt {
  for (id<GeogebraCommonPluginEventListener> __strong listener in nil_chk(listeners_)) {
    [((id<GeogebraCommonPluginEventListener>) nil_chk(listener)) sendEventWithGeogebraCommonPluginEvent:evt];
  }
}

- (void)dispatchEventWithGeogebraCommonPluginEventTypeEnum:(GeogebraCommonPluginEventTypeEnum *)evtType
                    withGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)geo
                                              withNSString:(NSString *)arg {
  if (![((GeogebraCommonKernelGeosGeoElement *) nil_chk(geo)) isLabelSet]) {
    return;
  }
  [self dispatchEventWithGeogebraCommonPluginEvent:[new_GeogebraCommonPluginEvent_initWithGeogebraCommonPluginEventTypeEnum_withGeogebraCommonKernelGeosGeoElement_withNSString_(evtType, geo, arg) autorelease]];
}

- (void)dispatchEventWithGeogebraCommonPluginEventTypeEnum:(GeogebraCommonPluginEventTypeEnum *)evtType
                    withGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)geo {
  if ((nil != geo) && (![geo isLabelSet])) {
    return;
  }
  [self dispatchEventWithGeogebraCommonPluginEvent:[new_GeogebraCommonPluginEvent_initWithGeogebraCommonPluginEventTypeEnum_withGeogebraCommonKernelGeosGeoElement_(evtType, geo) autorelease]];
}

- (void)dispatchBulkEventWithGeogebraCommonPluginEventTypeEnum:(GeogebraCommonPluginEventTypeEnum *)evtType
                                         withJavaUtilArrayList:(JavaUtilArrayList *)geos {
  [self dispatchEventWithGeogebraCommonPluginEvent:[new_GeogebraCommonPluginEvent_initWithGeogebraCommonPluginEventTypeEnum_withGeogebraCommonKernelGeosGeoElement_withNSString_withJavaUtilArrayList_(evtType, nil, nil, geos) autorelease]];
}

- (void)addWithGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)geo {
  [self dispatchEventWithGeogebraCommonPluginEventTypeEnum:GeogebraCommonPluginEventTypeEnum_get_ADD() withGeogebraCommonKernelGeosGeoElement:geo];
}

- (void)removeWithGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)geo {
  [self dispatchEventWithGeogebraCommonPluginEventTypeEnum:GeogebraCommonPluginEventTypeEnum_get_REMOVE() withGeogebraCommonKernelGeosGeoElement:geo];
}

- (void)renameWithGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)geo {
  [self dispatchEventWithGeogebraCommonPluginEventTypeEnum:GeogebraCommonPluginEventTypeEnum_get_RENAME() withGeogebraCommonKernelGeosGeoElement:geo];
}

- (void)updateWithGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)geo {
  jlong start = JavaLangSystem_currentTimeMillis();
  [self dispatchEventWithGeogebraCommonPluginEventTypeEnum:GeogebraCommonPluginEventTypeEnum_get_UPDATE() withGeogebraCommonKernelGeosGeoElement:geo];
  GeogebraCommonUtilDebugGeoGebraProfiler_addEventWithLong_(JavaLangSystem_currentTimeMillis() - start);
}

- (void)updateVisualStyleWithGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)geo {
}

- (void)updateAuxiliaryObjectWithGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)geo {
}

- (void)repaintView {
}

- (void)reset {
}

- (void)clearView {
  for (id<GeogebraCommonPluginEventListener> __strong listener in nil_chk(listeners_)) {
    [((id<GeogebraCommonPluginEventListener>) nil_chk(listener)) reset];
  }
}

- (void)setModeWithInt:(jint)mode
withGeogebraCommonKernelModeSetterEnum:(GeogebraCommonKernelModeSetterEnum *)m {
}

- (jint)getViewID {
  return GeogebraCommonMainApp_VIEW_EVENT_DISPATCHER;
}

- (jboolean)hasFocus {
  return NO;
}

- (void)repaint {
}

- (jboolean)isShowing {
  return NO;
}

- (void)startBatchUpdate {
}

- (void)endBatchUpdate {
}

- (void)renameUpdatesComplete {
  [self dispatchEventWithGeogebraCommonPluginEventTypeEnum:GeogebraCommonPluginEventTypeEnum_get_RENAME_COMPLETE() withGeogebraCommonKernelGeosGeoElement:nil];
}

- (void)addingPolygon {
  [self dispatchEventWithGeogebraCommonPluginEventTypeEnum:GeogebraCommonPluginEventTypeEnum_get_ADD_POLYGON() withGeogebraCommonKernelGeosGeoElement:nil];
}

- (void)addPolygonCompleteWithGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)polygon {
  [self dispatchEventWithGeogebraCommonPluginEventTypeEnum:GeogebraCommonPluginEventTypeEnum_get_ADD_POLYGON_COMPLETE() withGeogebraCommonKernelGeosGeoElement:polygon];
}

- (void)movingGeos {
  [self dispatchEventWithGeogebraCommonPluginEventTypeEnum:GeogebraCommonPluginEventTypeEnum_get_MOVING_GEOS() withGeogebraCommonKernelGeosGeoElement:nil];
}

- (void)movedGeosWithJavaUtilArrayList:(JavaUtilArrayList *)elms {
  [self dispatchBulkEventWithGeogebraCommonPluginEventTypeEnum:GeogebraCommonPluginEventTypeEnum_get_MOVED_GEOS() withJavaUtilArrayList:elms];
}

- (void)deleteGeosWithJavaUtilArrayList:(JavaUtilArrayList *)elms {
  [self dispatchBulkEventWithGeogebraCommonPluginEventTypeEnum:GeogebraCommonPluginEventTypeEnum_get_DELETE_GEOS() withJavaUtilArrayList:elms];
}

- (void)pasteElms {
  [self dispatchEventWithGeogebraCommonPluginEventTypeEnum:GeogebraCommonPluginEventTypeEnum_get_PASTE_ELMS() withGeogebraCommonKernelGeosGeoElement:nil];
}

- (void)pasteElmsCompleteWithJavaUtilArrayList:(JavaUtilArrayList *)pastedElms {
  [self dispatchEventWithGeogebraCommonPluginEventTypeEnum:GeogebraCommonPluginEventTypeEnum_get_PASTE_ELMS_COMPLETE() withGeogebraCommonKernelGeosGeoElement:nil];
}

- (jboolean)suggestRepaint {
  return NO;
}

- (void)dealloc {
  RELEASE_(app_);
  RELEASE_(listeners_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonMainApp:", "EventDispatcher", NULL, 0x1, NULL, NULL },
    { "addEventListenerWithGeogebraCommonPluginEventListener:", "addEventListener", "V", 0x1, NULL, NULL },
    { "dispatchEventWithGeogebraCommonPluginEvent:", "dispatchEvent", "V", 0x1, NULL, NULL },
    { "dispatchEventWithGeogebraCommonPluginEventTypeEnum:withGeogebraCommonKernelGeosGeoElement:withNSString:", "dispatchEvent", "V", 0x1, NULL, NULL },
    { "dispatchEventWithGeogebraCommonPluginEventTypeEnum:withGeogebraCommonKernelGeosGeoElement:", "dispatchEvent", "V", 0x1, NULL, NULL },
    { "dispatchBulkEventWithGeogebraCommonPluginEventTypeEnum:withJavaUtilArrayList:", "dispatchBulkEvent", "V", 0x1, NULL, NULL },
    { "addWithGeogebraCommonKernelGeosGeoElement:", "add", "V", 0x1, NULL, NULL },
    { "removeWithGeogebraCommonKernelGeosGeoElement:", "remove", "V", 0x1, NULL, NULL },
    { "renameWithGeogebraCommonKernelGeosGeoElement:", "rename", "V", 0x1, NULL, NULL },
    { "updateWithGeogebraCommonKernelGeosGeoElement:", "update", "V", 0x1, NULL, NULL },
    { "updateVisualStyleWithGeogebraCommonKernelGeosGeoElement:", "updateVisualStyle", "V", 0x1, NULL, NULL },
    { "updateAuxiliaryObjectWithGeogebraCommonKernelGeosGeoElement:", "updateAuxiliaryObject", "V", 0x1, NULL, NULL },
    { "repaintView", NULL, "V", 0x1, NULL, NULL },
    { "reset", NULL, "V", 0x1, NULL, NULL },
    { "clearView", NULL, "V", 0x1, NULL, NULL },
    { "setModeWithInt:withGeogebraCommonKernelModeSetterEnum:", "setMode", "V", 0x1, NULL, NULL },
    { "getViewID", NULL, "I", 0x1, NULL, NULL },
    { "hasFocus", NULL, "Z", 0x1, NULL, NULL },
    { "repaint", NULL, "V", 0x1, NULL, NULL },
    { "isShowing", NULL, "Z", 0x1, NULL, NULL },
    { "startBatchUpdate", NULL, "V", 0x1, NULL, NULL },
    { "endBatchUpdate", NULL, "V", 0x1, NULL, NULL },
    { "renameUpdatesComplete", NULL, "V", 0x1, NULL, NULL },
    { "addingPolygon", NULL, "V", 0x1, NULL, NULL },
    { "addPolygonCompleteWithGeogebraCommonKernelGeosGeoElement:", "addPolygonComplete", "V", 0x1, NULL, NULL },
    { "movingGeos", NULL, "V", 0x1, NULL, NULL },
    { "movedGeosWithJavaUtilArrayList:", "movedGeos", "V", 0x1, NULL, NULL },
    { "deleteGeosWithJavaUtilArrayList:", "deleteGeos", "V", 0x1, NULL, NULL },
    { "pasteElms", NULL, "V", 0x1, NULL, NULL },
    { "pasteElmsCompleteWithJavaUtilArrayList:", "pasteElmsComplete", "V", 0x1, NULL, NULL },
    { "suggestRepaint", NULL, "Z", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "app_", NULL, 0x2, "Lgeogebra.common.main.App;", NULL, NULL,  },
    { "listeners_", NULL, 0x2, "Ljava.util.ArrayList;", NULL, "Ljava/util/ArrayList<Lgeogebra/common/plugin/EventListener;>;",  },
  };
  static const J2ObjcClassInfo _GeogebraCommonPluginEventDispatcher = { 2, "EventDispatcher", "geogebra.common.plugin", NULL, 0x1, 31, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonPluginEventDispatcher;
}

@end

void GeogebraCommonPluginEventDispatcher_initWithGeogebraCommonMainApp_(GeogebraCommonPluginEventDispatcher *self, GeogebraCommonMainApp *app) {
  NSObject_init(self);
  GeogebraCommonPluginEventDispatcher_setAndConsume_listeners_(self, new_JavaUtilArrayList_init());
  GeogebraCommonPluginEventDispatcher_set_app_(self, app);
  [((GeogebraCommonKernelKernel *) nil_chk([((GeogebraCommonMainApp *) nil_chk(app)) getKernel])) attachWithGeogebraCommonKernelView:self];
}

GeogebraCommonPluginEventDispatcher *new_GeogebraCommonPluginEventDispatcher_initWithGeogebraCommonMainApp_(GeogebraCommonMainApp *app) {
  GeogebraCommonPluginEventDispatcher *self = [GeogebraCommonPluginEventDispatcher alloc];
  GeogebraCommonPluginEventDispatcher_initWithGeogebraCommonMainApp_(self, app);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonPluginEventDispatcher)
