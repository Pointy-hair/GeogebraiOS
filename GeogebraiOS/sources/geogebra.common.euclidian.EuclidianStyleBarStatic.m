//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/euclidian/EuclidianStyleBarStatic.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "geogebra/common/awt/GColor.h"
#include "geogebra/common/euclidian/EuclidianConstants.h"
#include "geogebra/common/euclidian/EuclidianStyleBar.h"
#include "geogebra/common/euclidian/EuclidianStyleBarStatic.h"
#include "geogebra/common/euclidian/EuclidianView.h"
#include "geogebra/common/euclidian/EuclidianViewInterfaceCommon.h"
#include "geogebra/common/euclidian3D/EuclidianView3DInterface.h"
#include "geogebra/common/kernel/Construction.h"
#include "geogebra/common/kernel/ConstructionDefaults.h"
#include "geogebra/common/kernel/Kernel.h"
#include "geogebra/common/kernel/StringTemplate.h"
#include "geogebra/common/kernel/algos/AlgoAttachCopyToView.h"
#include "geogebra/common/kernel/algos/AlgoElement.h"
#include "geogebra/common/kernel/algos/AlgoTableText.h"
#include "geogebra/common/kernel/commands/AlgebraProcessor.h"
#include "geogebra/common/kernel/geos/AbsoluteScreenLocateable.h"
#include "geogebra/common/kernel/geos/GeoElement.h"
#include "geogebra/common/kernel/geos/GeoImage.h"
#include "geogebra/common/kernel/geos/GeoList.h"
#include "geogebra/common/kernel/geos/GeoNumeric.h"
#include "geogebra/common/kernel/geos/GeoPoint.h"
#include "geogebra/common/kernel/geos/GeoText.h"
#include "geogebra/common/kernel/geos/PointProperties.h"
#include "geogebra/common/kernel/geos/TextProperties.h"
#include "geogebra/common/main/App.h"
#include "geogebra/common/main/MyError.h"
#include "geogebra/common/main/SelectionManager.h"
#include "geogebra/common/main/settings/EuclidianSettings.h"
#include "geogebra/common/main/settings/Settings.h"
#include "geogebra/common/util/debug/Log.h"
#include "java/lang/Exception.h"
#include "java/lang/Integer.h"
#include "java/lang/StringBuilder.h"
#include "java/util/ArrayList.h"
#include "java/util/HashMap.h"

@interface GeogebraCommonEuclidianEuclidianStyleBarStatic ()

+ (NSString *)getDefinitonStringWithGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)geo;

@end

__attribute__((unused)) static NSString *GeogebraCommonEuclidianEuclidianStyleBarStatic_getDefinitonStringWithGeogebraCommonKernelGeosGeoElement_(GeogebraCommonKernelGeosGeoElement *geo);

J2OBJC_INITIALIZED_DEFN(GeogebraCommonEuclidianEuclidianStyleBarStatic)

IOSObjectArray *GeogebraCommonEuclidianEuclidianStyleBarStatic_bracketArray_;
IOSObjectArray *GeogebraCommonEuclidianEuclidianStyleBarStatic_bracketArray2_;
IOSObjectArray *GeogebraCommonEuclidianEuclidianStyleBarStatic_lineStyleArray_;
IOSObjectArray *GeogebraCommonEuclidianEuclidianStyleBarStatic_pointStyleArray_;

@implementation GeogebraCommonEuclidianEuclidianStyleBarStatic

+ (GeogebraCommonKernelGeosGeoElement *)applyFixPositionWithJavaUtilArrayList:(JavaUtilArrayList *)geos
                                                                  withBoolean:(jboolean)flag
                      withGeogebraCommonEuclidianEuclidianViewInterfaceCommon:(id<GeogebraCommonEuclidianEuclidianViewInterfaceCommon>)ev {
  return GeogebraCommonEuclidianEuclidianStyleBarStatic_applyFixPositionWithJavaUtilArrayList_withBoolean_withGeogebraCommonEuclidianEuclidianViewInterfaceCommon_(geos, flag, ev);
}

+ (NSString *)getDefinitonStringWithGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)geo {
  return GeogebraCommonEuclidianEuclidianStyleBarStatic_getDefinitonStringWithGeogebraCommonKernelGeosGeoElement_(geo);
}

+ (GeogebraCommonKernelGeosGeoElement *)redefineGeoWithGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)geo
                                                                             withNSString:(NSString *)cmdtext {
  return GeogebraCommonEuclidianEuclidianStyleBarStatic_redefineGeoWithGeogebraCommonKernelGeosGeoElement_withNSString_(geo, cmdtext);
}

+ (void)applyTableTextFormatWithJavaUtilArrayList:(JavaUtilArrayList *)geos
                                          withInt:(jint)justifyIndex
                                      withBoolean:(jboolean)HisSelected
                                      withBoolean:(jboolean)VisSelected
                                          withInt:(jint)index
                        withGeogebraCommonMainApp:(GeogebraCommonMainApp *)app {
  GeogebraCommonEuclidianEuclidianStyleBarStatic_applyTableTextFormatWithJavaUtilArrayList_withInt_withBoolean_withBoolean_withInt_withGeogebraCommonMainApp_(geos, justifyIndex, HisSelected, VisSelected, index, app);
}

+ (jboolean)applyCaptionStyleWithJavaUtilArrayList:(JavaUtilArrayList *)geos
                                           withInt:(jint)mode
                                           withInt:(jint)index {
  return GeogebraCommonEuclidianEuclidianStyleBarStatic_applyCaptionStyleWithJavaUtilArrayList_withInt_withInt_(geos, mode, index);
}

+ (jboolean)applyLineStyleWithJavaUtilArrayList:(JavaUtilArrayList *)geos
                                        withInt:(jint)lineStyleIndex
                                        withInt:(jint)lineSize {
  return GeogebraCommonEuclidianEuclidianStyleBarStatic_applyLineStyleWithJavaUtilArrayList_withInt_withInt_(geos, lineStyleIndex, lineSize);
}

+ (jboolean)applyPointStyleWithJavaUtilArrayList:(JavaUtilArrayList *)geos
                                         withInt:(jint)pointStyleSelIndex
                                         withInt:(jint)pointSize {
  return GeogebraCommonEuclidianEuclidianStyleBarStatic_applyPointStyleWithJavaUtilArrayList_withInt_withInt_(geos, pointStyleSelIndex, pointSize);
}

+ (jboolean)applyColorWithJavaUtilArrayList:(JavaUtilArrayList *)geos
                withGeogebraCommonAwtGColor:(GeogebraCommonAwtGColor *)color
                                  withFloat:(jfloat)alpha
                  withGeogebraCommonMainApp:(GeogebraCommonMainApp *)app {
  return GeogebraCommonEuclidianEuclidianStyleBarStatic_applyColorWithJavaUtilArrayList_withGeogebraCommonAwtGColor_withFloat_withGeogebraCommonMainApp_(geos, color, alpha, app);
}

+ (jboolean)applyBgColorWithJavaUtilArrayList:(JavaUtilArrayList *)geos
                  withGeogebraCommonAwtGColor:(GeogebraCommonAwtGColor *)color
                                    withFloat:(jfloat)alpha {
  return GeogebraCommonEuclidianEuclidianStyleBarStatic_applyBgColorWithJavaUtilArrayList_withGeogebraCommonAwtGColor_withFloat_(geos, color, alpha);
}

+ (jboolean)applyTextColorWithJavaUtilArrayList:(JavaUtilArrayList *)geos
                    withGeogebraCommonAwtGColor:(GeogebraCommonAwtGColor *)color {
  return GeogebraCommonEuclidianEuclidianStyleBarStatic_applyTextColorWithJavaUtilArrayList_withGeogebraCommonAwtGColor_(geos, color);
}

+ (jboolean)applyFontStyleWithJavaUtilArrayList:(JavaUtilArrayList *)geos
                                        withInt:(jint)mask
                                        withInt:(jint)add {
  return GeogebraCommonEuclidianEuclidianStyleBarStatic_applyFontStyleWithJavaUtilArrayList_withInt_withInt_(geos, mask, add);
}

+ (jboolean)applyTextSizeWithJavaUtilArrayList:(JavaUtilArrayList *)geos
                                       withInt:(jint)textSizeIndex {
  return GeogebraCommonEuclidianEuclidianStyleBarStatic_applyTextSizeWithJavaUtilArrayList_withInt_(geos, textSizeIndex);
}

+ (jboolean)processSourceCommonWithNSString:(NSString *)actionCommand
                      withJavaUtilArrayList:(JavaUtilArrayList *)targetGeos
withGeogebraCommonEuclidianEuclidianViewInterfaceCommon:(id<GeogebraCommonEuclidianEuclidianViewInterfaceCommon>)ev {
  return GeogebraCommonEuclidianEuclidianStyleBarStatic_processSourceCommonWithNSString_withJavaUtilArrayList_withGeogebraCommonEuclidianEuclidianViewInterfaceCommon_(actionCommand, targetGeos, ev);
}

+ (GeogebraCommonKernelAlgosAlgoTableText *)updateTableTextWithNSObjectArray:(IOSObjectArray *)geos
                                                                     withInt:(jint)mode {
  return GeogebraCommonEuclidianEuclidianStyleBarStatic_updateTableTextWithNSObjectArray_withInt_(geos, mode);
}

+ (JavaUtilHashMap *)createDefaultMap {
  return GeogebraCommonEuclidianEuclidianStyleBarStatic_createDefaultMap();
}

- (instancetype)init {
  GeogebraCommonEuclidianEuclidianStyleBarStatic_init(self);
  return self;
}

+ (void)initialize {
  if (self == [GeogebraCommonEuclidianEuclidianStyleBarStatic class]) {
    JreStrongAssignAndConsume(&GeogebraCommonEuclidianEuclidianStyleBarStatic_bracketArray_, nil, [IOSObjectArray newArrayWithObjects:(id[]){ @"\u00d8", @"{ }", @"( )", @"[ ]", @"| |", @"|| ||" } count:6 type:NSString_class_()]);
    JreStrongAssignAndConsume(&GeogebraCommonEuclidianEuclidianStyleBarStatic_bracketArray2_, nil, [IOSObjectArray newArrayWithObjects:(id[]){ @"\u00d8", @"{ }", @"( )", @"[ ]", @"||", @"||||" } count:6 type:NSString_class_()]);
    J2OBJC_SET_INITIALIZED(GeogebraCommonEuclidianEuclidianStyleBarStatic)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "applyFixPositionWithJavaUtilArrayList:withBoolean:withGeogebraCommonEuclidianEuclidianViewInterfaceCommon:", "applyFixPosition", "Lgeogebra.common.kernel.geos.GeoElement;", 0x9, NULL, NULL },
    { "getDefinitonStringWithGeogebraCommonKernelGeosGeoElement:", "getDefinitonString", "Ljava.lang.String;", 0xa, NULL, NULL },
    { "redefineGeoWithGeogebraCommonKernelGeosGeoElement:withNSString:", "redefineGeo", "Lgeogebra.common.kernel.geos.GeoElement;", 0x9, NULL, NULL },
    { "applyTableTextFormatWithJavaUtilArrayList:withInt:withBoolean:withBoolean:withInt:withGeogebraCommonMainApp:", "applyTableTextFormat", "V", 0x9, NULL, NULL },
    { "applyCaptionStyleWithJavaUtilArrayList:withInt:withInt:", "applyCaptionStyle", "Z", 0x9, NULL, NULL },
    { "applyLineStyleWithJavaUtilArrayList:withInt:withInt:", "applyLineStyle", "Z", 0x9, NULL, NULL },
    { "applyPointStyleWithJavaUtilArrayList:withInt:withInt:", "applyPointStyle", "Z", 0x9, NULL, NULL },
    { "applyColorWithJavaUtilArrayList:withGeogebraCommonAwtGColor:withFloat:withGeogebraCommonMainApp:", "applyColor", "Z", 0x9, NULL, NULL },
    { "applyBgColorWithJavaUtilArrayList:withGeogebraCommonAwtGColor:withFloat:", "applyBgColor", "Z", 0x9, NULL, NULL },
    { "applyTextColorWithJavaUtilArrayList:withGeogebraCommonAwtGColor:", "applyTextColor", "Z", 0x9, NULL, NULL },
    { "applyFontStyleWithJavaUtilArrayList:withInt:withInt:", "applyFontStyle", "Z", 0x9, NULL, NULL },
    { "applyTextSizeWithJavaUtilArrayList:withInt:", "applyTextSize", "Z", 0x9, NULL, NULL },
    { "processSourceCommonWithNSString:withJavaUtilArrayList:withGeogebraCommonEuclidianEuclidianViewInterfaceCommon:", "processSourceCommon", "Z", 0x9, NULL, NULL },
    { "updateTableTextWithNSObjectArray:withInt:", "updateTableText", "Lgeogebra.common.kernel.algos.AlgoTableText;", 0x9, NULL, NULL },
    { "createDefaultMap", NULL, "Ljava.util.HashMap;", 0x9, NULL, NULL },
    { "init", NULL, NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "bracketArray_", NULL, 0x19, "[Ljava.lang.String;", &GeogebraCommonEuclidianEuclidianStyleBarStatic_bracketArray_, NULL,  },
    { "bracketArray2_", NULL, 0x19, "[Ljava.lang.String;", &GeogebraCommonEuclidianEuclidianStyleBarStatic_bracketArray2_, NULL,  },
    { "lineStyleArray_", NULL, 0x9, "[Ljava.lang.Integer;", &GeogebraCommonEuclidianEuclidianStyleBarStatic_lineStyleArray_, NULL,  },
    { "pointStyleArray_", NULL, 0x9, "[Ljava.lang.Integer;", &GeogebraCommonEuclidianEuclidianStyleBarStatic_pointStyleArray_, NULL,  },
  };
  static const J2ObjcClassInfo _GeogebraCommonEuclidianEuclidianStyleBarStatic = { 2, "EuclidianStyleBarStatic", "geogebra.common.euclidian", NULL, 0x1, 16, methods, 4, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonEuclidianEuclidianStyleBarStatic;
}

@end

GeogebraCommonKernelGeosGeoElement *GeogebraCommonEuclidianEuclidianStyleBarStatic_applyFixPositionWithJavaUtilArrayList_withBoolean_withGeogebraCommonEuclidianEuclidianViewInterfaceCommon_(JavaUtilArrayList *geos, jboolean flag, id<GeogebraCommonEuclidianEuclidianViewInterfaceCommon> ev) {
  GeogebraCommonEuclidianEuclidianStyleBarStatic_initialize();
  GeogebraCommonKernelGeosGeoElement *ret = [((JavaUtilArrayList *) nil_chk(geos)) getWithInt:0];
  id<GeogebraCommonKernelGeosAbsoluteScreenLocateable> geoASL;
  GeogebraCommonMainApp *app = [((GeogebraCommonKernelKernel *) nil_chk([((GeogebraCommonKernelGeosGeoElement *) nil_chk([geos getWithInt:0])) getKernel])) getApplication];
  [((GeogebraCommonMainSelectionManager *) nil_chk([((GeogebraCommonMainApp *) nil_chk(app)) getSelectionManager])) clearSelectedGeosWithBoolean:NO];
  for (jint i = 0; i < [geos size]; i++) {
    GeogebraCommonKernelGeosGeoElement *geo = [geos getWithInt:i];
    if (![((GeogebraCommonKernelGeosGeoElement *) nil_chk(geo)) isLabelSet]) {
      GeogebraCommonUtilDebugLog_warnWithNSString_(JreStrcat("$$", @"applyFixPosition() called with a geo with label not set: ", [geo getLabelSimple]));
      continue;
    }
    if ([geo isGeoSegment]) {
      if ([geo getParentAlgorithm] != nil && ((IOSObjectArray *) nil_chk([((GeogebraCommonKernelAlgosAlgoElement *) nil_chk([geo getParentAlgorithm])) getInput]))->size_ == 3) {
        continue;
      }
    }
    if ([[geo getParentAlgorithm] isKindOfClass:[GeogebraCommonKernelAlgosAlgoAttachCopyToView class]]) {
      GeogebraCommonKernelAlgosAlgoAttachCopyToView *algo = (GeogebraCommonKernelAlgosAlgoAttachCopyToView *) check_class_cast([geo getParentAlgorithm], [GeogebraCommonKernelAlgosAlgoAttachCopyToView class]);
      if (!flag) {
        GeogebraCommonKernelGeosGeoElement *geo0 = GeogebraCommonEuclidianEuclidianStyleBarStatic_redefineGeoWithGeogebraCommonKernelGeosGeoElement_withNSString_(geo, GeogebraCommonEuclidianEuclidianStyleBarStatic_getDefinitonStringWithGeogebraCommonKernelGeosGeoElement_(IOSObjectArray_Get(nil_chk([((GeogebraCommonKernelAlgosAlgoAttachCopyToView *) nil_chk(algo)) getInput]), 0)));
        if (i == 0) {
          ret = geo0;
        }
      }
      else {
        [((GeogebraCommonKernelAlgosAlgoAttachCopyToView *) nil_chk(algo)) setEVWithInt:[((id<GeogebraCommonEuclidianEuclidianViewInterfaceCommon>) nil_chk(ev)) getEuclidianViewNo]];
      }
      [geo setEuclidianVisibleWithBoolean:YES];
      [geo updateRepaint];
    }
    else if ([GeogebraCommonKernelGeosAbsoluteScreenLocateable_class_() isInstance:geo] && ![geo isGeoList]) {
      geoASL = (id<GeogebraCommonKernelGeosAbsoluteScreenLocateable>) check_protocol_cast(geo, @protocol(GeogebraCommonKernelGeosAbsoluteScreenLocateable));
      if (flag) {
        jint x = [((id<GeogebraCommonEuclidianEuclidianViewInterfaceCommon>) nil_chk(ev)) toScreenCoordXWithDouble:[geoASL getRealWorldLocX]];
        jint y = [ev toScreenCoordYWithDouble:[geoASL getRealWorldLocY]];
        if (![geoASL isAbsoluteScreenLocActive]) [geoASL setAbsoluteScreenLocWithInt:x withInt:y];
      }
      else {
        jdouble x = [((id<GeogebraCommonEuclidianEuclidianViewInterfaceCommon>) nil_chk(ev)) toRealWorldCoordXWithDouble:[geoASL getAbsoluteScreenLocX]];
        jdouble y = [ev toRealWorldCoordYWithDouble:[geoASL getAbsoluteScreenLocY]];
        if ([geoASL isAbsoluteScreenLocActive]) [geoASL setRealWorldLocWithDouble:x withDouble:y];
      }
      [geoASL setAbsoluteScreenLocActiveWithBoolean:flag];
      [geo updateRepaint];
    }
    else if ([geo isPinnable]) {
      GeogebraCommonKernelKernel *kernelA = [app getKernel];
      GeogebraCommonKernelGeosGeoPoint *corner1 = [new_GeogebraCommonKernelGeosGeoPoint_initWithGeogebraCommonKernelConstruction_([((GeogebraCommonKernelKernel *) nil_chk(kernelA)) getConstruction]) autorelease];
      GeogebraCommonKernelGeosGeoPoint *corner3 = [new_GeogebraCommonKernelGeosGeoPoint_initWithGeogebraCommonKernelConstruction_([kernelA getConstruction]) autorelease];
      GeogebraCommonKernelGeosGeoPoint *screenCorner1 = [new_GeogebraCommonKernelGeosGeoPoint_initWithGeogebraCommonKernelConstruction_([kernelA getConstruction]) autorelease];
      GeogebraCommonKernelGeosGeoPoint *screenCorner3 = [new_GeogebraCommonKernelGeosGeoPoint_initWithGeogebraCommonKernelConstruction_([kernelA getConstruction]) autorelease];
      if (ev != nil) {
        [corner1 setCoordsWithDouble:[ev getXmin] withDouble:[ev getYmin] withDouble:1];
        [corner3 setCoordsWithDouble:[ev getXmax] withDouble:[ev getYmax] withDouble:1];
        [screenCorner1 setCoordsWithDouble:0 withDouble:[ev getHeight] withDouble:1];
        [screenCorner3 setCoordsWithDouble:[ev getWidth] withDouble:0 withDouble:1];
      }
      GeogebraCommonKernelGeosGeoElement *geo0 = GeogebraCommonEuclidianEuclidianStyleBarStatic_redefineGeoWithGeogebraCommonKernelGeosGeoElement_withNSString_(geo, JreStrcat("$$CIC", @"AttachCopyToView[", GeogebraCommonEuclidianEuclidianStyleBarStatic_getDefinitonStringWithGeogebraCommonKernelGeosGeoElement_(geo), ',', [((id<GeogebraCommonEuclidianEuclidianViewInterfaceCommon>) nil_chk(ev)) getEuclidianViewNo], ']'));
      if (i == 0) {
        ret = geo0;
      }
      [geo setEuclidianVisibleWithBoolean:YES];
      [geo updateRepaint];
    }
    else {
      GeogebraCommonMainApp_debugWithNSString_(@"not pinnable");
      return nil;
    }
  }
  return ret;
}

NSString *GeogebraCommonEuclidianEuclidianStyleBarStatic_getDefinitonStringWithGeogebraCommonKernelGeosGeoElement_(GeogebraCommonKernelGeosGeoElement *geo) {
  GeogebraCommonEuclidianEuclidianStyleBarStatic_initialize();
  NSString *definitonStr = [((GeogebraCommonKernelGeosGeoElement *) nil_chk(geo)) getCommandDescriptionWithGeogebraCommonKernelStringTemplate:GeogebraCommonKernelStringTemplate_get_maxPrecision_()];
  if ([((NSString *) nil_chk(definitonStr)) isEqual:@""]) {
    definitonStr = [geo getFormulaStringWithGeogebraCommonKernelStringTemplate:GeogebraCommonKernelStringTemplate_get_maxPrecision_() withBoolean:NO];
  }
  return definitonStr;
}

GeogebraCommonKernelGeosGeoElement *GeogebraCommonEuclidianEuclidianStyleBarStatic_redefineGeoWithGeogebraCommonKernelGeosGeoElement_withNSString_(GeogebraCommonKernelGeosGeoElement *geo, NSString *cmdtext) {
  GeogebraCommonEuclidianEuclidianStyleBarStatic_initialize();
  GeogebraCommonKernelGeosGeoElement *newGeo = nil;
  GeogebraCommonMainApp *app = [((GeogebraCommonKernelKernel *) nil_chk([((GeogebraCommonKernelGeosGeoElement *) nil_chk(geo)) getKernel])) getApplication];
  if (cmdtext == nil) return newGeo;
  GeogebraCommonMainApp_debugWithNSString_(JreStrcat("$@$$", @"redefining ", geo, @" as ", cmdtext));
  @try {
    newGeo = [((GeogebraCommonKernelCommandsAlgebraProcessor *) nil_chk([((GeogebraCommonKernelKernel *) nil_chk([((GeogebraCommonMainApp *) nil_chk(app)) getKernel])) getAlgebraProcessor])) changeGeoElementWithGeogebraCommonKernelGeosGeoElement:geo withNSString:cmdtext withBoolean:YES withBoolean:YES];
    [app doAfterRedefineWithGeogebraCommonKernelGeosGeoElement:newGeo];
    [((GeogebraCommonKernelGeosGeoElement *) nil_chk(newGeo)) updateRepaint];
    return newGeo;
  }
  @catch (JavaLangException *e) {
    [((GeogebraCommonMainApp *) nil_chk(app)) showErrorWithNSString:@"ReplaceFailed"];
  }
  @catch (GeogebraCommonMainMyError *err) {
    [((GeogebraCommonMainApp *) nil_chk(app)) showErrorWithGeogebraCommonMainMyError:err];
  }
  return newGeo;
}

void GeogebraCommonEuclidianEuclidianStyleBarStatic_applyTableTextFormatWithJavaUtilArrayList_withInt_withBoolean_withBoolean_withInt_withGeogebraCommonMainApp_(JavaUtilArrayList *geos, jint justifyIndex, jboolean HisSelected, jboolean VisSelected, jint index, GeogebraCommonMainApp *app) {
  GeogebraCommonEuclidianEuclidianStyleBarStatic_initialize();
  GeogebraCommonKernelAlgosAlgoElement *algo = nil;
  IOSObjectArray *input;
  GeogebraCommonKernelGeosGeoElement *geo;
  NSString *arg = nil;
  IOSObjectArray *justifyArray = [IOSObjectArray arrayWithObjects:(id[]){ @"l", @"c", @"r" } count:3 type:NSString_class_()];
  arg = IOSObjectArray_Get(justifyArray, justifyIndex);
  if (HisSelected) arg = JreStrcat("$C", arg, '_');
  if (VisSelected) arg = JreStrcat("$C", arg, '|');
  if (index > 0) arg = JreStrcat("$$", arg, IOSObjectArray_Get(nil_chk(GeogebraCommonEuclidianEuclidianStyleBarStatic_bracketArray2_), index));
  JavaUtilArrayList *newGeos = [new_JavaUtilArrayList_init() autorelease];
  JavaLangStringBuilder *cmdText = [new_JavaLangStringBuilder_init() autorelease];
  for (jint i = 0; i < [((JavaUtilArrayList *) nil_chk(geos)) size]; i++) {
    geo = [geos getWithInt:i];
    algo = [((GeogebraCommonKernelGeosGeoElement *) nil_chk(geo)) getParentAlgorithm];
    input = [((GeogebraCommonKernelAlgosAlgoElement *) nil_chk(algo)) getInput];
    [cmdText setLengthWithInt:0];
    [cmdText appendWithNSString:@"TableText["];
    [cmdText appendWithNSString:[((GeogebraCommonKernelGeosGeoList *) nil_chk(((GeogebraCommonKernelGeosGeoList *) check_class_cast(IOSObjectArray_Get(nil_chk(input), 0), [GeogebraCommonKernelGeosGeoList class])))) getFormulaStringWithGeogebraCommonKernelStringTemplate:GeogebraCommonKernelStringTemplate_get_defaultTemplate_() withBoolean:NO]];
    [cmdText appendWithNSString:@",\""];
    [cmdText appendWithNSString:arg];
    [cmdText appendWithNSString:@"\"]"];
    [newGeos addWithId:GeogebraCommonEuclidianEuclidianStyleBarStatic_redefineGeoWithGeogebraCommonKernelGeosGeoElement_withNSString_(geo, [cmdText description])];
  }
  [((GeogebraCommonMainSelectionManager *) nil_chk([((GeogebraCommonMainApp *) nil_chk(app)) getSelectionManager])) setSelectedGeosWithJavaUtilArrayList:newGeos];
}

jboolean GeogebraCommonEuclidianEuclidianStyleBarStatic_applyCaptionStyleWithJavaUtilArrayList_withInt_withInt_(JavaUtilArrayList *geos, jint mode, jint index) {
  GeogebraCommonEuclidianEuclidianStyleBarStatic_initialize();
  jboolean needUndo = NO;
  GeogebraCommonMainApp *app = [((GeogebraCommonKernelKernel *) nil_chk([((GeogebraCommonKernelGeosGeoElement *) nil_chk([((JavaUtilArrayList *) nil_chk(geos)) getWithInt:0])) getKernel])) getApplication];
  for (jint i = 0; i < [geos size]; i++) {
    GeogebraCommonKernelGeosGeoElement *geo = [geos getWithInt:i];
    if ((mode == GeogebraCommonEuclidianEuclidianConstants_MODE_MOVE && ([((GeogebraCommonKernelGeosGeoElement *) nil_chk(geo)) isLabelShowable] || [geo isGeoAngle] || ([geo isGeoNumeric] ? [((GeogebraCommonKernelGeosGeoNumeric *) check_class_cast(geo, [GeogebraCommonKernelGeosGeoNumeric class])) isSliderFixed] : NO))) || ([((GeogebraCommonMainApp *) nil_chk(app)) getLabelingStyle] == GeogebraCommonKernelConstructionDefaults_LABEL_VISIBLE_POINTS_ONLY && [((GeogebraCommonKernelGeosGeoElement *) nil_chk(geo)) isLabelShowable] && [geo isGeoPoint]) || (([app getLabelingStyle] == GeogebraCommonKernelConstructionDefaults_LABEL_VISIBLE_ALWAYS_ON && [((GeogebraCommonKernelGeosGeoElement *) nil_chk(geo)) isLabelShowable]) || [((GeogebraCommonKernelGeosGeoElement *) nil_chk(geo)) isGeoAngle] || ([geo isGeoNumeric] ? [((GeogebraCommonKernelGeosGeoNumeric *) check_class_cast(geo, [GeogebraCommonKernelGeosGeoNumeric class])) isSliderFixed] : NO)) || (([app getLabelingStyle] == GeogebraCommonKernelConstructionDefaults_LABEL_VISIBLE_AUTOMATIC && [geo isLabelShowable]) || [geo isGeoAngle] || ([geo isGeoNumeric] ? [((GeogebraCommonKernelGeosGeoNumeric *) check_class_cast(geo, [GeogebraCommonKernelGeosGeoNumeric class])) isSliderFixed] : NO))) {
      if (index == 0) {
        if (mode == GeogebraCommonEuclidianEuclidianConstants_MODE_MOVE || [((GeogebraCommonMainApp *) nil_chk(app)) getLabelingStyle] != GeogebraCommonKernelConstructionDefaults_LABEL_VISIBLE_ALWAYS_ON) {
          [((GeogebraCommonKernelGeosGeoElement *) nil_chk(geo)) setLabelVisibleWithBoolean:NO];
        }
      }
      else {
        [((GeogebraCommonKernelGeosGeoElement *) nil_chk(geo)) setLabelVisibleWithBoolean:YES];
        [geo setLabelModeWithInt:index - 1];
      }
    }
    [((GeogebraCommonKernelGeosGeoElement *) nil_chk(geo)) updateVisualStyle];
    needUndo = YES;
  }
  [((GeogebraCommonKernelKernel *) nil_chk([((GeogebraCommonMainApp *) nil_chk(app)) getKernel])) notifyRepaint];
  return needUndo;
}

jboolean GeogebraCommonEuclidianEuclidianStyleBarStatic_applyLineStyleWithJavaUtilArrayList_withInt_withInt_(JavaUtilArrayList *geos, jint lineStyleIndex, jint lineSize) {
  GeogebraCommonEuclidianEuclidianStyleBarStatic_initialize();
  jint lineStyle = [((JavaLangInteger *) nil_chk(IOSObjectArray_Get(nil_chk(GeogebraCommonEuclidianEuclidianStyleBarStatic_lineStyleArray_), lineStyleIndex))) intValue];
  jboolean needUndo = NO;
  for (jint i = 0; i < [((JavaUtilArrayList *) nil_chk(geos)) size]; i++) {
    GeogebraCommonKernelGeosGeoElement *geo = [geos getWithInt:i];
    if ([((GeogebraCommonKernelGeosGeoElement *) nil_chk(geo)) getLineType] != lineStyle || [geo getLineThickness] != lineSize) {
      [geo setLineTypeWithInt:lineStyle];
      [geo setLineThicknessWithInt:lineSize];
      [geo updateVisualStyleRepaint];
      needUndo = YES;
    }
  }
  return needUndo;
}

jboolean GeogebraCommonEuclidianEuclidianStyleBarStatic_applyPointStyleWithJavaUtilArrayList_withInt_withInt_(JavaUtilArrayList *geos, jint pointStyleSelIndex, jint pointSize) {
  GeogebraCommonEuclidianEuclidianStyleBarStatic_initialize();
  jint pointStyle = [((JavaLangInteger *) nil_chk(IOSObjectArray_Get(nil_chk(GeogebraCommonEuclidianEuclidianStyleBarStatic_pointStyleArray_), pointStyleSelIndex))) intValue];
  jboolean needUndo = NO;
  for (jint i = 0; i < [((JavaUtilArrayList *) nil_chk(geos)) size]; i++) {
    GeogebraCommonKernelGeosGeoElement *geo = [geos getWithInt:i];
    if ([GeogebraCommonKernelGeosPointProperties_class_() isInstance:geo]) {
      if ([((id<GeogebraCommonKernelGeosPointProperties>) nil_chk(((id<GeogebraCommonKernelGeosPointProperties>) check_protocol_cast(geo, @protocol(GeogebraCommonKernelGeosPointProperties))))) getPointSize] != pointSize || ([((id<GeogebraCommonKernelGeosPointProperties>) nil_chk(((id<GeogebraCommonKernelGeosPointProperties>) check_protocol_cast(geo, @protocol(GeogebraCommonKernelGeosPointProperties))))) getPointStyle] != pointStyle)) {
        [((id<GeogebraCommonKernelGeosPointProperties>) nil_chk(((id<GeogebraCommonKernelGeosPointProperties>) check_protocol_cast(geo, @protocol(GeogebraCommonKernelGeosPointProperties))))) setPointSizeWithInt:pointSize];
        [((id<GeogebraCommonKernelGeosPointProperties>) nil_chk(((id<GeogebraCommonKernelGeosPointProperties>) check_protocol_cast(geo, @protocol(GeogebraCommonKernelGeosPointProperties))))) setPointStyleWithInt:pointStyle];
        [((GeogebraCommonKernelGeosGeoElement *) nil_chk(geo)) updateVisualStyleRepaint];
        needUndo = YES;
      }
    }
  }
  return needUndo;
}

jboolean GeogebraCommonEuclidianEuclidianStyleBarStatic_applyColorWithJavaUtilArrayList_withGeogebraCommonAwtGColor_withFloat_withGeogebraCommonMainApp_(JavaUtilArrayList *geos, GeogebraCommonAwtGColor *color, jfloat alpha, GeogebraCommonMainApp *app) {
  GeogebraCommonEuclidianEuclidianStyleBarStatic_initialize();
  jboolean needUndo = NO;
  for (jint i = 0; i < [((JavaUtilArrayList *) nil_chk(geos)) size]; i++) {
    GeogebraCommonKernelGeosGeoElement *geo = [geos getWithInt:i];
    if (!([[((GeogebraCommonKernelGeosGeoElement *) nil_chk(geo)) getGeoElementForPropertiesDialog] isKindOfClass:[GeogebraCommonKernelGeosGeoImage class]] || [[geo getGeoElementForPropertiesDialog] isKindOfClass:[GeogebraCommonKernelGeosGeoText class]])) if (([geo getObjectColor] != color || [geo getAlphaValue] != alpha)) {
      [geo setObjColorWithGeogebraCommonAwtGColor:color];
      if ([geo isFillable]) [geo setAlphaValueWithFloat:alpha];
      [geo updateVisualStyle];
      needUndo = YES;
    }
  }
  [((GeogebraCommonKernelKernel *) nil_chk([((GeogebraCommonMainApp *) nil_chk(app)) getKernel])) notifyRepaint];
  return needUndo;
}

jboolean GeogebraCommonEuclidianEuclidianStyleBarStatic_applyBgColorWithJavaUtilArrayList_withGeogebraCommonAwtGColor_withFloat_(JavaUtilArrayList *geos, GeogebraCommonAwtGColor *color, jfloat alpha) {
  GeogebraCommonEuclidianEuclidianStyleBarStatic_initialize();
  jboolean needUndo = NO;
  for (jint i = 0; i < [((JavaUtilArrayList *) nil_chk(geos)) size]; i++) {
    GeogebraCommonKernelGeosGeoElement *geo = [geos getWithInt:i];
    if ([GeogebraCommonKernelGeosTextProperties_class_() isInstance:geo]) if ([((GeogebraCommonKernelGeosGeoElement *) nil_chk(geo)) getBackgroundColor] != color || [geo getAlphaValue] != alpha) {
      [geo setBackgroundColorWithGeogebraCommonAwtGColor:color == nil ? nil : color];
      [geo updateVisualStyleRepaint];
      needUndo = YES;
    }
  }
  return needUndo;
}

jboolean GeogebraCommonEuclidianEuclidianStyleBarStatic_applyTextColorWithJavaUtilArrayList_withGeogebraCommonAwtGColor_(JavaUtilArrayList *geos, GeogebraCommonAwtGColor *color) {
  GeogebraCommonEuclidianEuclidianStyleBarStatic_initialize();
  jboolean needUndo = NO;
  for (jint i = 0; i < [((JavaUtilArrayList *) nil_chk(geos)) size]; i++) {
    GeogebraCommonKernelGeosGeoElement *geo = [geos getWithInt:i];
    if ([GeogebraCommonKernelGeosTextProperties_class_() isInstance:[((GeogebraCommonKernelGeosGeoElement *) nil_chk(geo)) getGeoElementForPropertiesDialog]] && [geo getObjectColor] != color) {
      [geo setObjColorWithGeogebraCommonAwtGColor:color];
      [geo updateVisualStyleRepaint];
      needUndo = YES;
    }
  }
  return needUndo;
}

jboolean GeogebraCommonEuclidianEuclidianStyleBarStatic_applyFontStyleWithJavaUtilArrayList_withInt_withInt_(JavaUtilArrayList *geos, jint mask, jint add) {
  GeogebraCommonEuclidianEuclidianStyleBarStatic_initialize();
  jboolean needUndo = NO;
  for (jint i = 0; i < [((JavaUtilArrayList *) nil_chk(geos)) size]; i++) {
    GeogebraCommonKernelGeosGeoElement *geo = [geos getWithInt:i];
    if ([GeogebraCommonKernelGeosTextProperties_class_() isInstance:geo]) {
      jint newStyle = ([((id<GeogebraCommonKernelGeosTextProperties>) nil_chk(((id<GeogebraCommonKernelGeosTextProperties>) check_protocol_cast(geo, @protocol(GeogebraCommonKernelGeosTextProperties))))) getFontStyle] & mask) | add;
      if ([((id<GeogebraCommonKernelGeosTextProperties>) nil_chk(((id<GeogebraCommonKernelGeosTextProperties>) check_protocol_cast(geo, @protocol(GeogebraCommonKernelGeosTextProperties))))) getFontStyle] != newStyle) {
        [((id<GeogebraCommonKernelGeosTextProperties>) nil_chk(((id<GeogebraCommonKernelGeosTextProperties>) check_protocol_cast(geo, @protocol(GeogebraCommonKernelGeosTextProperties))))) setFontStyleWithInt:newStyle];
        [((GeogebraCommonKernelGeosGeoElement *) nil_chk(geo)) updateVisualStyleRepaint];
        needUndo = YES;
      }
    }
  }
  return needUndo;
}

jboolean GeogebraCommonEuclidianEuclidianStyleBarStatic_applyTextSizeWithJavaUtilArrayList_withInt_(JavaUtilArrayList *geos, jint textSizeIndex) {
  GeogebraCommonEuclidianEuclidianStyleBarStatic_initialize();
  jboolean needUndo = NO;
  jdouble fontSize = GeogebraCommonKernelGeosGeoText_getRelativeFontSizeWithInt_(textSizeIndex);
  for (jint i = 0; i < [((JavaUtilArrayList *) nil_chk(geos)) size]; i++) {
    GeogebraCommonKernelGeosGeoElement *geo = [geos getWithInt:i];
    if ([GeogebraCommonKernelGeosTextProperties_class_() isInstance:geo] && [((id<GeogebraCommonKernelGeosTextProperties>) nil_chk(((id<GeogebraCommonKernelGeosTextProperties>) check_protocol_cast(geo, @protocol(GeogebraCommonKernelGeosTextProperties))))) getFontSizeMultiplier] != fontSize) {
      [((id<GeogebraCommonKernelGeosTextProperties>) nil_chk(((id<GeogebraCommonKernelGeosTextProperties>) check_protocol_cast(geo, @protocol(GeogebraCommonKernelGeosTextProperties))))) setFontSizeMultiplierWithDouble:fontSize];
      [((GeogebraCommonKernelGeosGeoElement *) nil_chk(geo)) updateVisualStyleRepaint];
      needUndo = YES;
    }
  }
  return needUndo;
}

jboolean GeogebraCommonEuclidianEuclidianStyleBarStatic_processSourceCommonWithNSString_withJavaUtilArrayList_withGeogebraCommonEuclidianEuclidianViewInterfaceCommon_(NSString *actionCommand, JavaUtilArrayList *targetGeos, id<GeogebraCommonEuclidianEuclidianViewInterfaceCommon> ev) {
  GeogebraCommonEuclidianEuclidianStyleBarStatic_initialize();
  GeogebraCommonMainApp *app = [((id<GeogebraCommonEuclidianEuclidianViewInterfaceCommon>) nil_chk(ev)) getApplication];
  jboolean changed = NO;
  if ([((NSString *) nil_chk(actionCommand)) isEqual:@"showAxes"]) {
    if ([((GeogebraCommonMainApp *) nil_chk(app)) getEuclidianView1] == ev) {
      changed = [((GeogebraCommonMainSettingsEuclidianSettings *) nil_chk([((GeogebraCommonMainSettingsSettings *) nil_chk([app getSettings])) getEuclidianWithInt:1])) setShowAxesWithBoolean:![ev getShowXaxis] withBoolean:![ev getShowXaxis]];
    }
    else if ([app hasEuclidianView2EitherShowingOrNotWithInt:1] && [app getEuclidianView2WithInt:1] == ev) {
      changed = [((GeogebraCommonMainSettingsEuclidianSettings *) nil_chk([((GeogebraCommonMainSettingsSettings *) nil_chk([app getSettings])) getEuclidianWithInt:2])) setShowAxesWithBoolean:![ev getShowXaxis] withBoolean:![ev getShowXaxis]];
    }
    else if ([app hasEuclidianView3D] && [app getEuclidianView3D] == ev) {
      changed = [((GeogebraCommonMainSettingsEuclidianSettings *) nil_chk([((GeogebraCommonMainSettingsSettings *) nil_chk([app getSettings])) getEuclidianWithInt:3])) setShowAxesWithBoolean:![ev getShowXaxis]];
    }
    else {
      changed = [ev setShowAxesWithBoolean:![ev getShowXaxis] withBoolean:YES];
    }
    [ev repaint];
  }
  else if ([actionCommand isEqual:@"showGrid"]) {
    if ([((GeogebraCommonMainApp *) nil_chk(app)) getEuclidianView1] == ev) {
      changed = [((GeogebraCommonMainSettingsEuclidianSettings *) nil_chk([((GeogebraCommonMainSettingsSettings *) nil_chk([app getSettings])) getEuclidianWithInt:1])) showGridWithBoolean:![ev getShowGrid]];
    }
    else if ([app hasEuclidianView2EitherShowingOrNotWithInt:1] && [app getEuclidianView2WithInt:1] == ev) {
      changed = [((GeogebraCommonMainSettingsEuclidianSettings *) nil_chk([((GeogebraCommonMainSettingsSettings *) nil_chk([app getSettings])) getEuclidianWithInt:2])) showGridWithBoolean:![ev getShowGrid]];
    }
    else if ([app hasEuclidianView3D] && [app getEuclidianView3D] == ev) {
      changed = [((GeogebraCommonMainSettingsEuclidianSettings *) nil_chk([((GeogebraCommonMainSettingsSettings *) nil_chk([app getSettings])) getEuclidianWithInt:3])) showGridWithBoolean:![ev getShowGrid]];
    }
    else {
      changed = [ev showGridWithBoolean:![ev getShowGrid]];
    }
    [ev repaint];
  }
  else if ([actionCommand isEqual:@"standardView"]) {
    [ev setStandardViewWithBoolean:YES];
  }
  else if ([actionCommand isEqual:@"pointCapture"]) {
    jint mode = [((id<GeogebraCommonEuclidianEuclidianStyleBar>) nil_chk([ev getStyleBar])) getPointCaptureSelectedIndex];
    if (mode == 3 || mode == 0) mode = 3 - mode;
    [ev setPointCapturingWithInt:mode];
    [((GeogebraCommonMainApp *) nil_chk(app)) updateStyleBars];
  }
  if (changed) {
    [((GeogebraCommonMainApp *) nil_chk(app)) storeUndoInfo];
  }
  else {
    return NO;
  }
  return YES;
}

GeogebraCommonKernelAlgosAlgoTableText *GeogebraCommonEuclidianEuclidianStyleBarStatic_updateTableTextWithNSObjectArray_withInt_(IOSObjectArray *geos, jint mode) {
  GeogebraCommonEuclidianEuclidianStyleBarStatic_initialize();
  GeogebraCommonKernelAlgosAlgoTableText *tableText = nil;
  if (geos == nil || geos->size_ == 0 || GeogebraCommonEuclidianEuclidianView_isPenModeWithInt_(mode)) return tableText;
  jboolean geosOK = YES;
  GeogebraCommonKernelAlgosAlgoElement *algo;
  for (jint i = 0; i < ((IOSObjectArray *) nil_chk(geos))->size_; i++) {
    algo = [((GeogebraCommonKernelGeosGeoElement *) nil_chk(((GeogebraCommonKernelGeosGeoElement *) check_class_cast(IOSObjectArray_Get(geos, i), [GeogebraCommonKernelGeosGeoElement class])))) getParentAlgorithm];
    if (algo == nil || !([algo isKindOfClass:[GeogebraCommonKernelAlgosAlgoTableText class]])) {
      geosOK = NO;
    }
  }
  if (geosOK && IOSObjectArray_Get(geos, 0) != nil) {
    algo = [((GeogebraCommonKernelGeosGeoElement *) nil_chk(((GeogebraCommonKernelGeosGeoElement *) check_class_cast(IOSObjectArray_Get(geos, 0), [GeogebraCommonKernelGeosGeoElement class])))) getParentAlgorithm];
    tableText = (GeogebraCommonKernelAlgosAlgoTableText *) check_class_cast(algo, [GeogebraCommonKernelAlgosAlgoTableText class]);
  }
  return tableText;
}

JavaUtilHashMap *GeogebraCommonEuclidianEuclidianStyleBarStatic_createDefaultMap() {
  GeogebraCommonEuclidianEuclidianStyleBarStatic_initialize();
  JavaUtilHashMap *defaultGeoMap = [new_JavaUtilHashMap_init() autorelease];
  [defaultGeoMap putWithId:JavaLangInteger_valueOfWithInt_(GeogebraCommonEuclidianEuclidianConstants_MODE_POINT) withId:JavaLangInteger_valueOfWithInt_(GeogebraCommonKernelConstructionDefaults_DEFAULT_POINT_FREE)];
  [defaultGeoMap putWithId:JavaLangInteger_valueOfWithInt_(GeogebraCommonEuclidianEuclidianConstants_MODE_COMPLEX_NUMBER) withId:JavaLangInteger_valueOfWithInt_(GeogebraCommonKernelConstructionDefaults_DEFAULT_POINT_FREE)];
  [defaultGeoMap putWithId:JavaLangInteger_valueOfWithInt_(GeogebraCommonEuclidianEuclidianConstants_MODE_POINT_ON_OBJECT) withId:JavaLangInteger_valueOfWithInt_(GeogebraCommonKernelConstructionDefaults_DEFAULT_POINT_IN_REGION)];
  [defaultGeoMap putWithId:JavaLangInteger_valueOfWithInt_(GeogebraCommonEuclidianEuclidianConstants_MODE_INTERSECT) withId:JavaLangInteger_valueOfWithInt_(GeogebraCommonKernelConstructionDefaults_DEFAULT_POINT_DEPENDENT)];
  [defaultGeoMap putWithId:JavaLangInteger_valueOfWithInt_(GeogebraCommonEuclidianEuclidianConstants_MODE_MIDPOINT) withId:JavaLangInteger_valueOfWithInt_(GeogebraCommonKernelConstructionDefaults_DEFAULT_POINT_DEPENDENT)];
  [defaultGeoMap putWithId:JavaLangInteger_valueOfWithInt_(GeogebraCommonEuclidianEuclidianConstants_MODE_JOIN) withId:JavaLangInteger_valueOfWithInt_(GeogebraCommonKernelConstructionDefaults_DEFAULT_LINE)];
  [defaultGeoMap putWithId:JavaLangInteger_valueOfWithInt_(GeogebraCommonEuclidianEuclidianConstants_MODE_SEGMENT) withId:JavaLangInteger_valueOfWithInt_(GeogebraCommonKernelConstructionDefaults_DEFAULT_SEGMENT)];
  [defaultGeoMap putWithId:JavaLangInteger_valueOfWithInt_(GeogebraCommonEuclidianEuclidianConstants_MODE_SEGMENT_FIXED) withId:JavaLangInteger_valueOfWithInt_(GeogebraCommonKernelConstructionDefaults_DEFAULT_SEGMENT)];
  [defaultGeoMap putWithId:JavaLangInteger_valueOfWithInt_(GeogebraCommonEuclidianEuclidianConstants_MODE_RAY) withId:JavaLangInteger_valueOfWithInt_(GeogebraCommonKernelConstructionDefaults_DEFAULT_RAY)];
  [defaultGeoMap putWithId:JavaLangInteger_valueOfWithInt_(GeogebraCommonEuclidianEuclidianConstants_MODE_VECTOR) withId:JavaLangInteger_valueOfWithInt_(GeogebraCommonKernelConstructionDefaults_DEFAULT_VECTOR)];
  [defaultGeoMap putWithId:JavaLangInteger_valueOfWithInt_(GeogebraCommonEuclidianEuclidianConstants_MODE_VECTOR_FROM_POINT) withId:JavaLangInteger_valueOfWithInt_(GeogebraCommonKernelConstructionDefaults_DEFAULT_VECTOR)];
  [defaultGeoMap putWithId:JavaLangInteger_valueOfWithInt_(GeogebraCommonEuclidianEuclidianConstants_MODE_ORTHOGONAL) withId:JavaLangInteger_valueOfWithInt_(GeogebraCommonKernelConstructionDefaults_DEFAULT_LINE)];
  [defaultGeoMap putWithId:JavaLangInteger_valueOfWithInt_(GeogebraCommonEuclidianEuclidianConstants_MODE_PARALLEL) withId:JavaLangInteger_valueOfWithInt_(GeogebraCommonKernelConstructionDefaults_DEFAULT_LINE)];
  [defaultGeoMap putWithId:JavaLangInteger_valueOfWithInt_(GeogebraCommonEuclidianEuclidianConstants_MODE_LINE_BISECTOR) withId:JavaLangInteger_valueOfWithInt_(GeogebraCommonKernelConstructionDefaults_DEFAULT_LINE)];
  [defaultGeoMap putWithId:JavaLangInteger_valueOfWithInt_(GeogebraCommonEuclidianEuclidianConstants_MODE_ANGULAR_BISECTOR) withId:JavaLangInteger_valueOfWithInt_(GeogebraCommonKernelConstructionDefaults_DEFAULT_LINE)];
  [defaultGeoMap putWithId:JavaLangInteger_valueOfWithInt_(GeogebraCommonEuclidianEuclidianConstants_MODE_TANGENTS) withId:JavaLangInteger_valueOfWithInt_(GeogebraCommonKernelConstructionDefaults_DEFAULT_LINE)];
  [defaultGeoMap putWithId:JavaLangInteger_valueOfWithInt_(GeogebraCommonEuclidianEuclidianConstants_MODE_POLAR_DIAMETER) withId:JavaLangInteger_valueOfWithInt_(GeogebraCommonKernelConstructionDefaults_DEFAULT_LINE)];
  [defaultGeoMap putWithId:JavaLangInteger_valueOfWithInt_(GeogebraCommonEuclidianEuclidianConstants_MODE_FITLINE) withId:JavaLangInteger_valueOfWithInt_(GeogebraCommonKernelConstructionDefaults_DEFAULT_LINE)];
  [defaultGeoMap putWithId:JavaLangInteger_valueOfWithInt_(GeogebraCommonEuclidianEuclidianConstants_MODE_CREATE_LIST) withId:JavaLangInteger_valueOfWithInt_(GeogebraCommonKernelConstructionDefaults_DEFAULT_LIST)];
  [defaultGeoMap putWithId:JavaLangInteger_valueOfWithInt_(GeogebraCommonEuclidianEuclidianConstants_MODE_LOCUS) withId:JavaLangInteger_valueOfWithInt_(GeogebraCommonKernelConstructionDefaults_DEFAULT_LOCUS)];
  [defaultGeoMap putWithId:JavaLangInteger_valueOfWithInt_(GeogebraCommonEuclidianEuclidianConstants_MODE_POLYGON) withId:JavaLangInteger_valueOfWithInt_(GeogebraCommonKernelConstructionDefaults_DEFAULT_POLYGON)];
  [defaultGeoMap putWithId:JavaLangInteger_valueOfWithInt_(GeogebraCommonEuclidianEuclidianConstants_MODE_REGULAR_POLYGON) withId:JavaLangInteger_valueOfWithInt_(GeogebraCommonKernelConstructionDefaults_DEFAULT_POLYGON)];
  [defaultGeoMap putWithId:JavaLangInteger_valueOfWithInt_(GeogebraCommonEuclidianEuclidianConstants_MODE_RIGID_POLYGON) withId:JavaLangInteger_valueOfWithInt_(GeogebraCommonKernelConstructionDefaults_DEFAULT_POLYGON)];
  [defaultGeoMap putWithId:JavaLangInteger_valueOfWithInt_(GeogebraCommonEuclidianEuclidianConstants_MODE_VECTOR_POLYGON) withId:JavaLangInteger_valueOfWithInt_(GeogebraCommonKernelConstructionDefaults_DEFAULT_POLYGON)];
  [defaultGeoMap putWithId:JavaLangInteger_valueOfWithInt_(GeogebraCommonEuclidianEuclidianConstants_MODE_POLYLINE) withId:JavaLangInteger_valueOfWithInt_(GeogebraCommonKernelConstructionDefaults_DEFAULT_POLYLINE)];
  [defaultGeoMap putWithId:JavaLangInteger_valueOfWithInt_(GeogebraCommonEuclidianEuclidianConstants_MODE_CIRCLE_TWO_POINTS) withId:JavaLangInteger_valueOfWithInt_(GeogebraCommonKernelConstructionDefaults_DEFAULT_CONIC)];
  [defaultGeoMap putWithId:JavaLangInteger_valueOfWithInt_(GeogebraCommonEuclidianEuclidianConstants_MODE_CIRCLE_POINT_RADIUS) withId:JavaLangInteger_valueOfWithInt_(GeogebraCommonKernelConstructionDefaults_DEFAULT_CONIC)];
  [defaultGeoMap putWithId:JavaLangInteger_valueOfWithInt_(GeogebraCommonEuclidianEuclidianConstants_MODE_COMPASSES) withId:JavaLangInteger_valueOfWithInt_(GeogebraCommonKernelConstructionDefaults_DEFAULT_CONIC)];
  [defaultGeoMap putWithId:JavaLangInteger_valueOfWithInt_(GeogebraCommonEuclidianEuclidianConstants_MODE_CIRCLE_THREE_POINTS) withId:JavaLangInteger_valueOfWithInt_(GeogebraCommonKernelConstructionDefaults_DEFAULT_CONIC)];
  [defaultGeoMap putWithId:JavaLangInteger_valueOfWithInt_(GeogebraCommonEuclidianEuclidianConstants_MODE_SEMICIRCLE) withId:JavaLangInteger_valueOfWithInt_(GeogebraCommonKernelConstructionDefaults_DEFAULT_CONIC)];
  [defaultGeoMap putWithId:JavaLangInteger_valueOfWithInt_(GeogebraCommonEuclidianEuclidianConstants_MODE_CIRCLE_ARC_THREE_POINTS) withId:JavaLangInteger_valueOfWithInt_(GeogebraCommonKernelConstructionDefaults_DEFAULT_CONIC)];
  [defaultGeoMap putWithId:JavaLangInteger_valueOfWithInt_(GeogebraCommonEuclidianEuclidianConstants_MODE_CIRCUMCIRCLE_ARC_THREE_POINTS) withId:JavaLangInteger_valueOfWithInt_(GeogebraCommonKernelConstructionDefaults_DEFAULT_CONIC)];
  [defaultGeoMap putWithId:JavaLangInteger_valueOfWithInt_(GeogebraCommonEuclidianEuclidianConstants_MODE_CIRCLE_SECTOR_THREE_POINTS) withId:JavaLangInteger_valueOfWithInt_(GeogebraCommonKernelConstructionDefaults_DEFAULT_CONIC_SECTOR)];
  [defaultGeoMap putWithId:JavaLangInteger_valueOfWithInt_(GeogebraCommonEuclidianEuclidianConstants_MODE_CIRCUMCIRCLE_SECTOR_THREE_POINTS) withId:JavaLangInteger_valueOfWithInt_(GeogebraCommonKernelConstructionDefaults_DEFAULT_CONIC_SECTOR)];
  [defaultGeoMap putWithId:JavaLangInteger_valueOfWithInt_(GeogebraCommonEuclidianEuclidianConstants_MODE_ELLIPSE_THREE_POINTS) withId:JavaLangInteger_valueOfWithInt_(GeogebraCommonKernelConstructionDefaults_DEFAULT_CONIC)];
  [defaultGeoMap putWithId:JavaLangInteger_valueOfWithInt_(GeogebraCommonEuclidianEuclidianConstants_MODE_HYPERBOLA_THREE_POINTS) withId:JavaLangInteger_valueOfWithInt_(GeogebraCommonKernelConstructionDefaults_DEFAULT_CONIC)];
  [defaultGeoMap putWithId:JavaLangInteger_valueOfWithInt_(GeogebraCommonEuclidianEuclidianConstants_MODE_PARABOLA) withId:JavaLangInteger_valueOfWithInt_(GeogebraCommonKernelConstructionDefaults_DEFAULT_CONIC)];
  [defaultGeoMap putWithId:JavaLangInteger_valueOfWithInt_(GeogebraCommonEuclidianEuclidianConstants_MODE_CONIC_FIVE_POINTS) withId:JavaLangInteger_valueOfWithInt_(GeogebraCommonKernelConstructionDefaults_DEFAULT_CONIC)];
  [defaultGeoMap putWithId:JavaLangInteger_valueOfWithInt_(GeogebraCommonEuclidianEuclidianConstants_MODE_ANGLE) withId:JavaLangInteger_valueOfWithInt_(GeogebraCommonKernelConstructionDefaults_DEFAULT_ANGLE)];
  [defaultGeoMap putWithId:JavaLangInteger_valueOfWithInt_(GeogebraCommonEuclidianEuclidianConstants_MODE_ANGLE_FIXED) withId:JavaLangInteger_valueOfWithInt_(GeogebraCommonKernelConstructionDefaults_DEFAULT_ANGLE)];
  [defaultGeoMap putWithId:JavaLangInteger_valueOfWithInt_(GeogebraCommonEuclidianEuclidianConstants_MODE_DISTANCE) withId:JavaLangInteger_valueOfWithInt_(GeogebraCommonKernelConstructionDefaults_DEFAULT_TEXT)];
  [defaultGeoMap putWithId:JavaLangInteger_valueOfWithInt_(GeogebraCommonEuclidianEuclidianConstants_MODE_AREA) withId:JavaLangInteger_valueOfWithInt_(GeogebraCommonKernelConstructionDefaults_DEFAULT_TEXT)];
  [defaultGeoMap putWithId:JavaLangInteger_valueOfWithInt_(GeogebraCommonEuclidianEuclidianConstants_MODE_SLOPE) withId:JavaLangInteger_valueOfWithInt_(GeogebraCommonKernelConstructionDefaults_DEFAULT_POLYGON)];
  [defaultGeoMap putWithId:JavaLangInteger_valueOfWithInt_(GeogebraCommonEuclidianEuclidianConstants_MODE_MIRROR_AT_LINE) withId:JavaLangInteger_valueOfWithInt_(GeogebraCommonKernelConstructionDefaults_DEFAULT_NONE)];
  [defaultGeoMap putWithId:JavaLangInteger_valueOfWithInt_(GeogebraCommonEuclidianEuclidianConstants_MODE_MIRROR_AT_POINT) withId:JavaLangInteger_valueOfWithInt_(GeogebraCommonKernelConstructionDefaults_DEFAULT_NONE)];
  [defaultGeoMap putWithId:JavaLangInteger_valueOfWithInt_(GeogebraCommonEuclidianEuclidianConstants_MODE_MIRROR_AT_CIRCLE) withId:JavaLangInteger_valueOfWithInt_(GeogebraCommonKernelConstructionDefaults_DEFAULT_NONE)];
  [defaultGeoMap putWithId:JavaLangInteger_valueOfWithInt_(GeogebraCommonEuclidianEuclidianConstants_MODE_ROTATE_BY_ANGLE) withId:JavaLangInteger_valueOfWithInt_(GeogebraCommonKernelConstructionDefaults_DEFAULT_NONE)];
  [defaultGeoMap putWithId:JavaLangInteger_valueOfWithInt_(GeogebraCommonEuclidianEuclidianConstants_MODE_TRANSLATE_BY_VECTOR) withId:JavaLangInteger_valueOfWithInt_(GeogebraCommonKernelConstructionDefaults_DEFAULT_NONE)];
  [defaultGeoMap putWithId:JavaLangInteger_valueOfWithInt_(GeogebraCommonEuclidianEuclidianConstants_MODE_DILATE_FROM_POINT) withId:JavaLangInteger_valueOfWithInt_(GeogebraCommonKernelConstructionDefaults_DEFAULT_NONE)];
  [defaultGeoMap putWithId:JavaLangInteger_valueOfWithInt_(GeogebraCommonEuclidianEuclidianConstants_MODE_TEXT) withId:JavaLangInteger_valueOfWithInt_(GeogebraCommonKernelConstructionDefaults_DEFAULT_TEXT)];
  [defaultGeoMap putWithId:JavaLangInteger_valueOfWithInt_(GeogebraCommonEuclidianEuclidianConstants_MODE_SLIDER) withId:JavaLangInteger_valueOfWithInt_(GeogebraCommonKernelConstructionDefaults_DEFAULT_NUMBER)];
  [defaultGeoMap putWithId:JavaLangInteger_valueOfWithInt_(GeogebraCommonEuclidianEuclidianConstants_MODE_IMAGE) withId:JavaLangInteger_valueOfWithInt_(GeogebraCommonKernelConstructionDefaults_DEFAULT_IMAGE)];
  [defaultGeoMap putWithId:JavaLangInteger_valueOfWithInt_(GeogebraCommonEuclidianEuclidianConstants_MODE_SHOW_HIDE_CHECKBOX) withId:JavaLangInteger_valueOfWithInt_(GeogebraCommonKernelConstructionDefaults_DEFAULT_BOOLEAN)];
  [defaultGeoMap putWithId:JavaLangInteger_valueOfWithInt_(GeogebraCommonEuclidianEuclidianConstants_MODE_BUTTON_ACTION) withId:JavaLangInteger_valueOfWithInt_(GeogebraCommonKernelConstructionDefaults_DEFAULT_NONE)];
  [defaultGeoMap putWithId:JavaLangInteger_valueOfWithInt_(GeogebraCommonEuclidianEuclidianConstants_MODE_TEXTFIELD_ACTION) withId:JavaLangInteger_valueOfWithInt_(GeogebraCommonKernelConstructionDefaults_DEFAULT_NONE)];
  return defaultGeoMap;
}

void GeogebraCommonEuclidianEuclidianStyleBarStatic_init(GeogebraCommonEuclidianEuclidianStyleBarStatic *self) {
  NSObject_init(self);
}

GeogebraCommonEuclidianEuclidianStyleBarStatic *new_GeogebraCommonEuclidianEuclidianStyleBarStatic_init() {
  GeogebraCommonEuclidianEuclidianStyleBarStatic *self = [GeogebraCommonEuclidianEuclidianStyleBarStatic alloc];
  GeogebraCommonEuclidianEuclidianStyleBarStatic_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonEuclidianEuclidianStyleBarStatic)
