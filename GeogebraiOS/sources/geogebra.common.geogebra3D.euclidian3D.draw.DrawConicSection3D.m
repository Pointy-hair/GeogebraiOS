//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/geogebra3D/euclidian3D/draw/DrawConicSection3D.java
//


#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "geogebra/common/euclidian/draw/DrawConicSection.h"
#include "geogebra/common/geogebra3D/euclidian3D/EuclidianView3D.h"
#include "geogebra/common/geogebra3D/euclidian3D/draw/DrawConic3D.h"
#include "geogebra/common/geogebra3D/euclidian3D/draw/DrawConicSection3D.h"
#include "geogebra/common/geogebra3D/euclidian3D/draw/Drawable3D.h"
#include "geogebra/common/geogebra3D/euclidian3D/openGL/PlotterBrush.h"
#include "geogebra/common/geogebra3D/euclidian3D/openGL/PlotterSurface.h"
#include "geogebra/common/geogebra3D/kernel3D/geos/GeoConicSection.h"
#include "geogebra/common/kernel/Matrix/Coords.h"
#include "geogebra/common/kernel/geos/GeoElement.h"
#include "java/lang/Double.h"
#include "java/lang/Math.h"

@implementation GeogebraCommonGeogebra3DEuclidian3DDrawDrawConicSection3D

- (instancetype)initWithGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D:(GeogebraCommonGeogebra3DEuclidian3DEuclidianView3D *)view3d
                   withGeogebraCommonGeogebra3DKernel3DGeosGeoConicSection:(GeogebraCommonGeogebra3DKernel3DGeosGeoConicSection *)conic {
  GeogebraCommonGeogebra3DEuclidian3DDrawDrawConicSection3D_initWithGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D_withGeogebraCommonGeogebra3DKernel3DGeosGeoConicSection_(self, view3d, conic);
  return self;
}

- (jdouble)getStartWithInt:(jint)i {
  return [((GeogebraCommonGeogebra3DKernel3DGeosGeoConicSection *) nil_chk(((GeogebraCommonGeogebra3DKernel3DGeosGeoConicSection *) check_class_cast([self getGeoElement], [GeogebraCommonGeogebra3DKernel3DGeosGeoConicSection class])))) getParameterStartWithInt:i];
}

- (jdouble)getExtentWithInt:(jint)i {
  return [((GeogebraCommonGeogebra3DKernel3DGeosGeoConicSection *) nil_chk(((GeogebraCommonGeogebra3DKernel3DGeosGeoConicSection *) check_class_cast([self getGeoElement], [GeogebraCommonGeogebra3DKernel3DGeosGeoConicSection class])))) getParameterExtentWithInt:i];
}

- (jdouble)getEndWithInt:(jint)i {
  return [((GeogebraCommonGeogebra3DKernel3DGeosGeoConicSection *) nil_chk(((GeogebraCommonGeogebra3DKernel3DGeosGeoConicSection *) check_class_cast([self getGeoElement], [GeogebraCommonGeogebra3DKernel3DGeosGeoConicSection class])))) getParameterEndWithInt:i];
}

- (void)updateCircleWithGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush:(GeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush *)brush {
  [self updateEllipseWithGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush:brush];
}

- (jboolean)updateForItSelf {
  if (IOSObjectArray_Get(nil_chk(points_), 0) == nil) {
    for (jint i = 0; i < 4; i++) {
      IOSObjectArray_SetAndConsume(points_, i, new_GeogebraCommonKernelMatrixCoords_initWithInt_(4));
    }
  }
  return [super updateForItSelf];
}

- (void)updateEllipseWithGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush:(GeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush *)brush {
  jdouble start0 = [self getStartWithInt:0];
  jdouble extent0 = [self getExtentWithInt:0];
  jdouble start1 = [self getStartWithInt:1];
  jdouble extent1 = [self getExtentWithInt:1];
  if (!JavaLangDouble_isNaNWithDouble_(start0)) {
    [((GeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush *) nil_chk(brush)) arcEllipseWithGeogebraCommonKernelMatrixCoords:m_ withGeogebraCommonKernelMatrixCoords:ev1_ withGeogebraCommonKernelMatrixCoords:ev2_ withDouble:e1_ withDouble:e2_ withDouble:start0 withDouble:extent0];
    if (!JavaLangDouble_isNaNWithDouble_(start1)) {
      [brush setAffineTextureWithFloat:0.5f withFloat:0.25f];
      [brush segmentWithGeogebraCommonKernelMatrixCoords:GeogebraCommonEuclidianDrawDrawConicSection_ellipsePointWithGeogebraCommonKernelMatrixCoords_withGeogebraCommonKernelMatrixCoords_withGeogebraCommonKernelMatrixCoords_withDouble_withDouble_withDouble_(m_, ev1_, ev2_, e1_, e2_, start0 + extent0) withGeogebraCommonKernelMatrixCoords:GeogebraCommonEuclidianDrawDrawConicSection_ellipsePointWithGeogebraCommonKernelMatrixCoords_withGeogebraCommonKernelMatrixCoords_withGeogebraCommonKernelMatrixCoords_withDouble_withDouble_withDouble_(m_, ev1_, ev2_, e1_, e2_, start1)];
      [brush arcEllipseWithGeogebraCommonKernelMatrixCoords:m_ withGeogebraCommonKernelMatrixCoords:ev1_ withGeogebraCommonKernelMatrixCoords:ev2_ withDouble:e1_ withDouble:e2_ withDouble:start1 withDouble:extent1];
      [brush setAffineTextureWithFloat:0.5f withFloat:0.25f];
      [brush segmentWithGeogebraCommonKernelMatrixCoords:GeogebraCommonEuclidianDrawDrawConicSection_ellipsePointWithGeogebraCommonKernelMatrixCoords_withGeogebraCommonKernelMatrixCoords_withGeogebraCommonKernelMatrixCoords_withDouble_withDouble_withDouble_(m_, ev1_, ev2_, e1_, e2_, start1 + extent1) withGeogebraCommonKernelMatrixCoords:GeogebraCommonEuclidianDrawDrawConicSection_ellipsePointWithGeogebraCommonKernelMatrixCoords_withGeogebraCommonKernelMatrixCoords_withGeogebraCommonKernelMatrixCoords_withDouble_withDouble_withDouble_(m_, ev1_, ev2_, e1_, e2_, start0)];
    }
    else {
      [brush setAffineTextureWithFloat:0.5f withFloat:0.25f];
      [brush segmentWithGeogebraCommonKernelMatrixCoords:GeogebraCommonEuclidianDrawDrawConicSection_ellipsePointWithGeogebraCommonKernelMatrixCoords_withGeogebraCommonKernelMatrixCoords_withGeogebraCommonKernelMatrixCoords_withDouble_withDouble_withDouble_(m_, ev1_, ev2_, e1_, e2_, start0 + extent0) withGeogebraCommonKernelMatrixCoords:GeogebraCommonEuclidianDrawDrawConicSection_ellipsePointWithGeogebraCommonKernelMatrixCoords_withGeogebraCommonKernelMatrixCoords_withGeogebraCommonKernelMatrixCoords_withDouble_withDouble_withDouble_(m_, ev1_, ev2_, e1_, e2_, start0)];
    }
  }
  else {
    [super updateEllipseWithGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush:brush];
  }
}

- (void)updateEllipseWithGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface:(GeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface *)surface {
  jdouble start0 = [self getStartWithInt:0];
  jdouble extent0 = [self getExtentWithInt:0];
  jdouble start1 = [self getStartWithInt:1];
  jdouble extent1 = [self getExtentWithInt:1];
  if (!JavaLangDouble_isNaNWithDouble_(start0)) {
    [((GeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface *) nil_chk(surface)) ellipsePartWithGeogebraCommonKernelMatrixCoords:m_ withGeogebraCommonKernelMatrixCoords:ev1_ withGeogebraCommonKernelMatrixCoords:ev2_ withDouble:e1_ withDouble:e2_ withDouble:start0 withDouble:extent0 withBoolean:NO];
    if (!JavaLangDouble_isNaNWithDouble_(start1)) {
      [surface ellipsePartWithGeogebraCommonKernelMatrixCoords:m_ withGeogebraCommonKernelMatrixCoords:ev1_ withGeogebraCommonKernelMatrixCoords:ev2_ withDouble:e1_ withDouble:e2_ withDouble:start1 withDouble:extent1 withBoolean:NO];
      [surface drawQuadWithGeogebraCommonKernelMatrixCoords:GeogebraCommonEuclidianDrawDrawConicSection_ellipsePointWithGeogebraCommonKernelMatrixCoords_withGeogebraCommonKernelMatrixCoords_withGeogebraCommonKernelMatrixCoords_withDouble_withDouble_withDouble_(m_, ev1_, ev2_, e1_, e2_, start0) withGeogebraCommonKernelMatrixCoords:GeogebraCommonEuclidianDrawDrawConicSection_ellipsePointWithGeogebraCommonKernelMatrixCoords_withGeogebraCommonKernelMatrixCoords_withGeogebraCommonKernelMatrixCoords_withDouble_withDouble_withDouble_(m_, ev1_, ev2_, e1_, e2_, start0 + extent0) withGeogebraCommonKernelMatrixCoords:GeogebraCommonEuclidianDrawDrawConicSection_ellipsePointWithGeogebraCommonKernelMatrixCoords_withGeogebraCommonKernelMatrixCoords_withGeogebraCommonKernelMatrixCoords_withDouble_withDouble_withDouble_(m_, ev1_, ev2_, e1_, e2_, start1) withGeogebraCommonKernelMatrixCoords:GeogebraCommonEuclidianDrawDrawConicSection_ellipsePointWithGeogebraCommonKernelMatrixCoords_withGeogebraCommonKernelMatrixCoords_withGeogebraCommonKernelMatrixCoords_withDouble_withDouble_withDouble_(m_, ev1_, ev2_, e1_, e2_, start1 + extent1)];
    }
  }
  else {
    [super updateEllipseWithGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface:surface];
  }
}

- (IOSDoubleArray *)getLineMinMaxWithInt:(jint)i {
  return [IOSDoubleArray arrayWithDoubles:(jdouble[]){ [self getStartWithInt:i], [self getEndWithInt:i] } count:2];
}

- (void)updateLinesWithGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush:(GeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush *)brush {
  [super updateLinesWithGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush:brush];
  [((GeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush *) nil_chk(brush)) segmentWithGeogebraCommonKernelMatrixCoords:IOSObjectArray_Get(nil_chk(points_), 1) withGeogebraCommonKernelMatrixCoords:IOSObjectArray_Get(points_, 2)];
  [brush segmentWithGeogebraCommonKernelMatrixCoords:IOSObjectArray_Get(points_, 3) withGeogebraCommonKernelMatrixCoords:IOSObjectArray_Get(points_, 0)];
}

- (void)updateHyperbolaWithGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush:(GeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush *)brush {
  jdouble start = [self getStartWithInt:0];
  if (!JavaLangDouble_isNaNWithDouble_(start)) {
    jdouble end = [self getEndWithInt:0];
    [((GeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush *) nil_chk(brush)) hyperbolaBranchWithGeogebraCommonKernelMatrixCoords:m_ withGeogebraCommonKernelMatrixCoords:ev1_ withGeogebraCommonKernelMatrixCoords:ev2_ withDouble:e1_ withDouble:e2_ withDouble:start withDouble:end];
    [brush setAffineTextureWithFloat:0.5f withFloat:0.25f];
    [brush segmentWithGeogebraCommonKernelMatrixCoords:[((GeogebraCommonKernelMatrixCoords *) nil_chk([((GeogebraCommonKernelMatrixCoords *) nil_chk(m_)) addWithGeogebraCommonKernelMatrixCoords:[((GeogebraCommonKernelMatrixCoords *) nil_chk(ev1_)) mulWithDouble:e1_ * JavaLangMath_coshWithDouble_(start)]])) addWithGeogebraCommonKernelMatrixCoords:[((GeogebraCommonKernelMatrixCoords *) nil_chk(ev2_)) mulWithDouble:e2_ * JavaLangMath_sinhWithDouble_(start)]] withGeogebraCommonKernelMatrixCoords:[((GeogebraCommonKernelMatrixCoords *) nil_chk([m_ addWithGeogebraCommonKernelMatrixCoords:[ev1_ mulWithDouble:e1_ * JavaLangMath_coshWithDouble_(end)]])) addWithGeogebraCommonKernelMatrixCoords:[ev2_ mulWithDouble:e2_ * JavaLangMath_sinhWithDouble_(end)]]];
  }
  start = [self getStartWithInt:1];
  if (!JavaLangDouble_isNaNWithDouble_(start)) {
    jdouble end = [self getEndWithInt:1];
    [((GeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush *) nil_chk(brush)) hyperbolaBranchWithGeogebraCommonKernelMatrixCoords:m_ withGeogebraCommonKernelMatrixCoords:[((GeogebraCommonKernelMatrixCoords *) nil_chk(ev1_)) mulWithDouble:-1] withGeogebraCommonKernelMatrixCoords:ev2_ withDouble:e1_ withDouble:e2_ withDouble:start withDouble:end];
    [brush setAffineTextureWithFloat:0.5f withFloat:0.25f];
    [brush segmentWithGeogebraCommonKernelMatrixCoords:[((GeogebraCommonKernelMatrixCoords *) nil_chk([((GeogebraCommonKernelMatrixCoords *) nil_chk(m_)) addWithGeogebraCommonKernelMatrixCoords:[ev1_ mulWithDouble:-e1_ * JavaLangMath_coshWithDouble_(start)]])) addWithGeogebraCommonKernelMatrixCoords:[((GeogebraCommonKernelMatrixCoords *) nil_chk(ev2_)) mulWithDouble:e2_ * JavaLangMath_sinhWithDouble_(start)]] withGeogebraCommonKernelMatrixCoords:[((GeogebraCommonKernelMatrixCoords *) nil_chk([m_ addWithGeogebraCommonKernelMatrixCoords:[ev1_ mulWithDouble:-e1_ * JavaLangMath_coshWithDouble_(end)]])) addWithGeogebraCommonKernelMatrixCoords:[ev2_ mulWithDouble:e2_ * JavaLangMath_sinhWithDouble_(end)]]];
  }
}

- (void)updateHyperbolaWithGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface:(GeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface *)surface {
  jdouble start = [self getStartWithInt:0];
  if (!JavaLangDouble_isNaNWithDouble_(start)) {
    [((GeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface *) nil_chk(surface)) hyperbolaPartWithGeogebraCommonKernelMatrixCoords:m_ withGeogebraCommonKernelMatrixCoords:ev1_ withGeogebraCommonKernelMatrixCoords:ev2_ withDouble:e1_ withDouble:e2_ withDouble:start withDouble:[self getEndWithInt:0]];
  }
  start = [self getStartWithInt:1];
  if (!JavaLangDouble_isNaNWithDouble_(start)) {
    [((GeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface *) nil_chk(surface)) hyperbolaPartWithGeogebraCommonKernelMatrixCoords:m_ withGeogebraCommonKernelMatrixCoords:[((GeogebraCommonKernelMatrixCoords *) nil_chk(ev1_)) mulWithDouble:-1] withGeogebraCommonKernelMatrixCoords:ev2_ withDouble:e1_ withDouble:e2_ withDouble:start withDouble:[self getEndWithInt:1]];
  }
}

- (void)updateIntersectingLinesWithGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface:(GeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface *)surface {
  [((GeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface *) nil_chk(surface)) drawTriangleWithGeogebraCommonKernelMatrixCoords:IOSObjectArray_Get(nil_chk(points_), 0) withGeogebraCommonKernelMatrixCoords:IOSObjectArray_Get(points_, 1) withGeogebraCommonKernelMatrixCoords:IOSObjectArray_Get(points_, 3)];
}

- (IOSDoubleArray *)getParabolaMinMax {
  return [IOSDoubleArray arrayWithDoubles:(jdouble[]){ [self getStartWithInt:0], [self getEndWithInt:0] } count:2];
}

- (void)updateParabolaWithGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush:(GeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush *)brush {
  [super updateParabolaWithGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush:brush];
  [((GeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush *) nil_chk(brush)) setAffineTextureWithFloat:0.5f withFloat:0.25f];
  [brush segmentWithGeogebraCommonKernelMatrixCoords:IOSObjectArray_Get(nil_chk(points_), 0) withGeogebraCommonKernelMatrixCoords:IOSObjectArray_Get(points_, 1)];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D:withGeogebraCommonGeogebra3DKernel3DGeosGeoConicSection:", "DrawConicSection3D", NULL, 0x1, NULL, NULL },
    { "getStartWithInt:", "getStart", "D", 0x4, NULL, NULL },
    { "getExtentWithInt:", "getExtent", "D", 0x4, NULL, NULL },
    { "getEndWithInt:", "getEnd", "D", 0x4, NULL, NULL },
    { "updateCircleWithGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush:", "updateCircle", "V", 0x4, NULL, NULL },
    { "updateForItSelf", NULL, "Z", 0x4, NULL, NULL },
    { "updateEllipseWithGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush:", "updateEllipse", "V", 0x4, NULL, NULL },
    { "updateEllipseWithGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface:", "updateEllipse", "V", 0x4, NULL, NULL },
    { "getLineMinMaxWithInt:", "getLineMinMax", "[D", 0x4, NULL, NULL },
    { "updateLinesWithGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush:", "updateLines", "V", 0x4, NULL, NULL },
    { "updateHyperbolaWithGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush:", "updateHyperbola", "V", 0x4, NULL, NULL },
    { "updateHyperbolaWithGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface:", "updateHyperbola", "V", 0x4, NULL, NULL },
    { "updateIntersectingLinesWithGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface:", "updateIntersectingLines", "V", 0x4, NULL, NULL },
    { "getParabolaMinMax", NULL, "[D", 0x4, NULL, NULL },
    { "updateParabolaWithGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush:", "updateParabola", "V", 0x4, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonGeogebra3DEuclidian3DDrawDrawConicSection3D = { 2, "DrawConicSection3D", "geogebra.common.geogebra3D.euclidian3D.draw", NULL, 0x1, 15, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonGeogebra3DEuclidian3DDrawDrawConicSection3D;
}

@end

void GeogebraCommonGeogebra3DEuclidian3DDrawDrawConicSection3D_initWithGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D_withGeogebraCommonGeogebra3DKernel3DGeosGeoConicSection_(GeogebraCommonGeogebra3DEuclidian3DDrawDrawConicSection3D *self, GeogebraCommonGeogebra3DEuclidian3DEuclidianView3D *view3d, GeogebraCommonGeogebra3DKernel3DGeosGeoConicSection *conic) {
  GeogebraCommonGeogebra3DEuclidian3DDrawDrawConic3D_initWithGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D_withGeogebraCommonKernelKernelNDGeoConicND_(self, view3d, conic);
}

GeogebraCommonGeogebra3DEuclidian3DDrawDrawConicSection3D *new_GeogebraCommonGeogebra3DEuclidian3DDrawDrawConicSection3D_initWithGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D_withGeogebraCommonGeogebra3DKernel3DGeosGeoConicSection_(GeogebraCommonGeogebra3DEuclidian3DEuclidianView3D *view3d, GeogebraCommonGeogebra3DKernel3DGeosGeoConicSection *conic) {
  GeogebraCommonGeogebra3DEuclidian3DDrawDrawConicSection3D *self = [GeogebraCommonGeogebra3DEuclidian3DDrawDrawConicSection3D alloc];
  GeogebraCommonGeogebra3DEuclidian3DDrawDrawConicSection3D_initWithGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D_withGeogebraCommonGeogebra3DKernel3DGeosGeoConicSection_(self, view3d, conic);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonGeogebra3DEuclidian3DDrawDrawConicSection3D)
