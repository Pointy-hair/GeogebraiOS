//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/arithmetic/IneqTree.java
//


#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "geogebra/common/kernel/arithmetic/IneqTree.h"
#include "geogebra/common/kernel/arithmetic/Inequality.h"
#include "geogebra/common/kernel/geos/GeoPoint.h"
#include "geogebra/common/plugin/Operation.h"
#include "java/lang/Double.h"
#include "java/util/Set.h"

@interface GeogebraCommonKernelArithmeticIneqTree () {
 @public
  GeogebraCommonKernelArithmeticIneqTree *left_;
  GeogebraCommonKernelArithmeticIneqTree *right_;
  GeogebraCommonKernelArithmeticInequality *ineq_;
  GeogebraCommonPluginOperationEnum *operation_;
  jint size_;
}

@end

J2OBJC_FIELD_SETTER(GeogebraCommonKernelArithmeticIneqTree, left_, GeogebraCommonKernelArithmeticIneqTree *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelArithmeticIneqTree, right_, GeogebraCommonKernelArithmeticIneqTree *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelArithmeticIneqTree, ineq_, GeogebraCommonKernelArithmeticInequality *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelArithmeticIneqTree, operation_, GeogebraCommonPluginOperationEnum *)

@implementation GeogebraCommonKernelArithmeticIneqTree

- (void)setRightWithGeogebraCommonKernelArithmeticIneqTree:(GeogebraCommonKernelArithmeticIneqTree *)right {
  GeogebraCommonKernelArithmeticIneqTree_set_right_(self, right);
}

- (GeogebraCommonKernelArithmeticIneqTree *)getRight {
  return right_;
}

- (void)setLeftWithGeogebraCommonKernelArithmeticIneqTree:(GeogebraCommonKernelArithmeticIneqTree *)left {
  GeogebraCommonKernelArithmeticIneqTree_set_left_(self, left);
}

- (GeogebraCommonKernelArithmeticIneqTree *)getLeft {
  return left_;
}

- (void)setOperationWithGeogebraCommonPluginOperationEnum:(GeogebraCommonPluginOperationEnum *)operation {
  GeogebraCommonKernelArithmeticIneqTree_set_operation_(self, operation);
}

- (GeogebraCommonPluginOperationEnum *)getOperation {
  return operation_;
}

- (void)setIneqWithGeogebraCommonKernelArithmeticInequality:(GeogebraCommonKernelArithmeticInequality *)ineq {
  GeogebraCommonKernelArithmeticIneqTree_set_ineq_(self, ineq);
}

- (GeogebraCommonKernelArithmeticInequality *)getIneq {
  return ineq_;
}

- (jboolean)updateCoef {
  if (ineq_ != nil) {
    [ineq_ updateCoef];
    return [ineq_ getType] != GeogebraCommonKernelArithmeticInequality_IneqTypeEnum_get_INEQUALITY_INVALID();
  }
  if (left_ == nil && right_ == nil) return NO;
  jboolean b = YES;
  if (left_ != nil) b &= [left_ updateCoef];
  if (right_ != nil) b &= [right_ updateCoef];
  return b;
}

- (jint)getSize {
  return size_;
}

- (GeogebraCommonKernelArithmeticInequality *)getWithInt:(jint)i {
  if (ineq_ != nil) return ineq_;
  if (i < [((GeogebraCommonKernelArithmeticIneqTree *) nil_chk(left_)) getSize]) return [left_ getWithInt:i];
  return [((GeogebraCommonKernelArithmeticIneqTree *) nil_chk(right_)) getWithInt:i - [left_ getSize]];
}

- (void)recomputeSize {
  if (ineq_ != nil) {
    size_ = 1;
  }
  else size_ = 0;
  if (left_ != nil) {
    [left_ recomputeSize];
    size_ += left_->size_;
  }
  if (right_ != nil) {
    [right_ recomputeSize];
    size_ += right_->size_;
  }
}

- (void)getZerosWithJavaUtilSet:(id<JavaUtilSet>)zeros {
  if (ineq_ != nil) {
    IOSObjectArray *zeroPoints = [ineq_ getZeros];
    for (jint i = 0; i < ((IOSObjectArray *) nil_chk(zeroPoints))->size_; i++) {
      [((id<JavaUtilSet>) nil_chk(zeros)) addWithId:JavaLangDouble_valueOfWithDouble_([((GeogebraCommonKernelGeosGeoPoint *) nil_chk(IOSObjectArray_Get(zeroPoints, i))) getX])];
    }
  }
  if (left_ != nil) {
    [left_ getZerosWithJavaUtilSet:zeros];
  }
  if (right_ != nil) {
    [right_ getZerosWithJavaUtilSet:zeros];
  }
}

- (instancetype)init {
  GeogebraCommonKernelArithmeticIneqTree_init(self);
  return self;
}

- (void)dealloc {
  RELEASE_(left_);
  RELEASE_(right_);
  RELEASE_(ineq_);
  RELEASE_(operation_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "setRightWithGeogebraCommonKernelArithmeticIneqTree:", "setRight", "V", 0x1, NULL, NULL },
    { "getRight", NULL, "Lgeogebra.common.kernel.arithmetic.IneqTree;", 0x1, NULL, NULL },
    { "setLeftWithGeogebraCommonKernelArithmeticIneqTree:", "setLeft", "V", 0x1, NULL, NULL },
    { "getLeft", NULL, "Lgeogebra.common.kernel.arithmetic.IneqTree;", 0x1, NULL, NULL },
    { "setOperationWithGeogebraCommonPluginOperationEnum:", "setOperation", "V", 0x1, NULL, NULL },
    { "getOperation", NULL, "Lgeogebra.common.plugin.Operation;", 0x1, NULL, NULL },
    { "setIneqWithGeogebraCommonKernelArithmeticInequality:", "setIneq", "V", 0x1, NULL, NULL },
    { "getIneq", NULL, "Lgeogebra.common.kernel.arithmetic.Inequality;", 0x1, NULL, NULL },
    { "updateCoef", NULL, "Z", 0x1, NULL, NULL },
    { "getSize", NULL, "I", 0x1, NULL, NULL },
    { "getWithInt:", "get", "Lgeogebra.common.kernel.arithmetic.Inequality;", 0x1, NULL, NULL },
    { "recomputeSize", NULL, "V", 0x1, NULL, NULL },
    { "getZerosWithJavaUtilSet:", "getZeros", "V", 0x1, NULL, NULL },
    { "init", NULL, NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "left_", NULL, 0x2, "Lgeogebra.common.kernel.arithmetic.IneqTree;", NULL, NULL,  },
    { "right_", NULL, 0x2, "Lgeogebra.common.kernel.arithmetic.IneqTree;", NULL, NULL,  },
    { "ineq_", NULL, 0x2, "Lgeogebra.common.kernel.arithmetic.Inequality;", NULL, NULL,  },
    { "operation_", NULL, 0x2, "Lgeogebra.common.plugin.Operation;", NULL, NULL,  },
    { "size_", NULL, 0x2, "I", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelArithmeticIneqTree = { 2, "IneqTree", "geogebra.common.kernel.arithmetic", NULL, 0x1, 14, methods, 5, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelArithmeticIneqTree;
}

@end

void GeogebraCommonKernelArithmeticIneqTree_init(GeogebraCommonKernelArithmeticIneqTree *self) {
  NSObject_init(self);
  GeogebraCommonKernelArithmeticIneqTree_set_operation_(self, GeogebraCommonPluginOperationEnum_get_NO_OPERATION());
}

GeogebraCommonKernelArithmeticIneqTree *new_GeogebraCommonKernelArithmeticIneqTree_init() {
  GeogebraCommonKernelArithmeticIneqTree *self = [GeogebraCommonKernelArithmeticIneqTree alloc];
  GeogebraCommonKernelArithmeticIneqTree_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelArithmeticIneqTree)
