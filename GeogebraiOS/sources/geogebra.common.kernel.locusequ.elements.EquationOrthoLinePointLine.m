//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/locusequ/elements/EquationOrthoLinePointLine.java
//


#include "J2ObjC_source.h"
#include "geogebra/common/kernel/algos/AlgoElement.h"
#include "geogebra/common/kernel/algos/AlgoOrthoLinePointLine.h"
#include "geogebra/common/kernel/geos/GeoElement.h"
#include "geogebra/common/kernel/geos/GeoLine.h"
#include "geogebra/common/kernel/geos/GeoPoint.h"
#include "geogebra/common/kernel/locusequ/EquationElement.h"
#include "geogebra/common/kernel/locusequ/EquationScope.h"
#include "geogebra/common/kernel/locusequ/SymbolicVector.h"
#include "geogebra/common/kernel/locusequ/elements/EquationGenericLine.h"
#include "geogebra/common/kernel/locusequ/elements/EquationOrthoLinePointLine.h"

@interface GeogebraCommonKernelLocusequElementsEquationOrthoLinePointLine () {
 @public
  GeogebraCommonKernelGeosGeoLine *lParam_;
  GeogebraCommonKernelLocusequElementsEquationGenericLine *lParamEqu_;
}

@end

J2OBJC_FIELD_SETTER(GeogebraCommonKernelLocusequElementsEquationOrthoLinePointLine, lParam_, GeogebraCommonKernelGeosGeoLine *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelLocusequElementsEquationOrthoLinePointLine, lParamEqu_, GeogebraCommonKernelLocusequElementsEquationGenericLine *)

@implementation GeogebraCommonKernelLocusequElementsEquationOrthoLinePointLine

- (instancetype)initWithGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)l
             withGeogebraCommonKernelLocusequEquationScope:(GeogebraCommonKernelLocusequEquationScope *)scope {
  GeogebraCommonKernelLocusequElementsEquationOrthoLinePointLine_initWithGeogebraCommonKernelGeosGeoElement_withGeogebraCommonKernelLocusequEquationScope_(self, l, scope);
  return self;
}

- (void)dealloc {
  RELEASE_(lParam_);
  RELEASE_(lParamEqu_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonKernelGeosGeoElement:withGeogebraCommonKernelLocusequEquationScope:", "EquationOrthoLinePointLine", NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "lParam_", NULL, 0x2, "Lgeogebra.common.kernel.geos.GeoLine;", NULL, NULL,  },
    { "lParamEqu_", NULL, 0x2, "Lgeogebra.common.kernel.locusequ.elements.EquationGenericLine;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelLocusequElementsEquationOrthoLinePointLine = { 2, "EquationOrthoLinePointLine", "geogebra.common.kernel.locusequ.elements", NULL, 0x1, 1, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelLocusequElementsEquationOrthoLinePointLine;
}

@end

void GeogebraCommonKernelLocusequElementsEquationOrthoLinePointLine_initWithGeogebraCommonKernelGeosGeoElement_withGeogebraCommonKernelLocusequEquationScope_(GeogebraCommonKernelLocusequElementsEquationOrthoLinePointLine *self, GeogebraCommonKernelGeosGeoElement *l, GeogebraCommonKernelLocusequEquationScope *scope) {
  GeogebraCommonKernelLocusequElementsEquationGenericLine_initWithGeogebraCommonKernelGeosGeoElement_withGeogebraCommonKernelLocusequEquationScope_(self, l, scope);
  GeogebraCommonKernelAlgosAlgoOrthoLinePointLine *algo = (GeogebraCommonKernelAlgosAlgoOrthoLinePointLine *) check_class_cast([((GeogebraCommonKernelGeosGeoElement *) nil_chk(l)) getParentAlgorithm], [GeogebraCommonKernelAlgosAlgoOrthoLinePointLine class]);
  GeogebraCommonKernelLocusequElementsEquationOrthoLinePointLine_set_lParam_(self, [((GeogebraCommonKernelAlgosAlgoOrthoLinePointLine *) nil_chk(algo)) getl]);
  GeogebraCommonKernelLocusequElementsEquationOrthoLinePointLine_set_lParamEqu_(self, (GeogebraCommonKernelLocusequElementsEquationGenericLine *) check_class_cast([((GeogebraCommonKernelLocusequEquationScope *) nil_chk([self getScope])) getElementWithGeogebraCommonKernelGeosGeoElement:self->lParam_], [GeogebraCommonKernelLocusequElementsEquationGenericLine class]));
  [self setVectorWithGeogebraCommonKernelLocusequSymbolicVector:[((GeogebraCommonKernelLocusequSymbolicVector *) nil_chk([((GeogebraCommonKernelLocusequElementsEquationGenericLine *) nil_chk(self->lParamEqu_)) getVector])) normal]];
  [self setPointWithGeogebraCommonKernelGeosGeoPoint:[algo getP]];
}

GeogebraCommonKernelLocusequElementsEquationOrthoLinePointLine *new_GeogebraCommonKernelLocusequElementsEquationOrthoLinePointLine_initWithGeogebraCommonKernelGeosGeoElement_withGeogebraCommonKernelLocusequEquationScope_(GeogebraCommonKernelGeosGeoElement *l, GeogebraCommonKernelLocusequEquationScope *scope) {
  GeogebraCommonKernelLocusequElementsEquationOrthoLinePointLine *self = [GeogebraCommonKernelLocusequElementsEquationOrthoLinePointLine alloc];
  GeogebraCommonKernelLocusequElementsEquationOrthoLinePointLine_initWithGeogebraCommonKernelGeosGeoElement_withGeogebraCommonKernelLocusequEquationScope_(self, l, scope);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelLocusequElementsEquationOrthoLinePointLine)
