//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/geogebra3D/euclidian3D/draw/DrawCoordSys1D.java
//


#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "geogebra/common/geogebra3D/euclidian3D/EuclidianView3D.h"
#include "geogebra/common/geogebra3D/euclidian3D/draw/DrawCoordSys1D.h"
#include "geogebra/common/geogebra3D/euclidian3D/draw/DrawJoinPoints.h"
#include "geogebra/common/geogebra3D/euclidian3D/draw/Drawable3D.h"
#include "geogebra/common/geogebra3D/kernel3D/geos/GeoCoordSys1D.h"
#include "geogebra/common/kernel/Matrix/Coords.h"
#include "geogebra/common/kernel/geos/GeoElement.h"
#include "geogebra/common/kernel/kernelND/GeoLineND.h"
#include "geogebra/common/kernel/kernelND/GeoPointND.h"
#include "java/util/ArrayList.h"

@implementation GeogebraCommonGeogebra3DEuclidian3DDrawDrawCoordSys1D

- (instancetype)initWithGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D:(GeogebraCommonGeogebra3DEuclidian3DEuclidianView3D *)a_view3D
                                    withGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)cs1D {
  GeogebraCommonGeogebra3DEuclidian3DDrawDrawCoordSys1D_initWithGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D_withGeogebraCommonKernelGeosGeoElement_(self, a_view3D, cs1D);
  return self;
}

- (instancetype)initWithGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D:(GeogebraCommonGeogebra3DEuclidian3DEuclidianView3D *)a_view3d {
  GeogebraCommonGeogebra3DEuclidian3DDrawDrawCoordSys1D_initWithGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D_(self, a_view3d);
  return self;
}

- (instancetype)initWithGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D:(GeogebraCommonGeogebra3DEuclidian3DEuclidianView3D *)a_view3D
                                                     withJavaUtilArrayList:(JavaUtilArrayList *)selectedPoints
                                    withGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)geo {
  GeogebraCommonGeogebra3DEuclidian3DDrawDrawCoordSys1D_initWithGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D_withJavaUtilArrayList_withGeogebraCommonKernelGeosGeoElement_(self, a_view3D, selectedPoints, geo);
  return self;
}

- (void)setPreviewableCoordsWithGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)firstPoint
                            withGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)secondPoint {
  [((GeogebraCommonGeogebra3DKernel3DGeosGeoCoordSys1D *) nil_chk(((GeogebraCommonGeogebra3DKernel3DGeosGeoCoordSys1D *) check_class_cast([self getGeoElement], [GeogebraCommonGeogebra3DKernel3DGeosGeoCoordSys1D class])))) setCoordFromPointsWithGeogebraCommonKernelMatrixCoords:[((id<GeogebraCommonKernelKernelNDGeoPointND>) nil_chk(firstPoint)) getInhomCoordsInD3] withGeogebraCommonKernelMatrixCoords:[((id<GeogebraCommonKernelKernelNDGeoPointND>) nil_chk(secondPoint)) getInhomCoordsInD3]];
}

- (IOSObjectArray *)calcPoints {
  id<GeogebraCommonKernelKernelNDGeoLineND> cs = (id<GeogebraCommonKernelKernelNDGeoLineND>) check_protocol_cast([self getGeoElement], @protocol(GeogebraCommonKernelKernelNDGeoLineND));
  IOSDoubleArray *minmax = [self getDrawMinMax];
  return [IOSObjectArray arrayWithObjects:(id[]){ [((GeogebraCommonKernelMatrixCoords *) nil_chk([((id<GeogebraCommonKernelKernelNDGeoLineND>) nil_chk(cs)) getPointInDWithInt:3 withDouble:IOSDoubleArray_Get(nil_chk(minmax), 0)])) getInhomCoordsInSameDimension], [((GeogebraCommonKernelMatrixCoords *) nil_chk([cs getPointInDWithInt:3 withDouble:IOSDoubleArray_Get(minmax, 1)])) getInhomCoordsInSameDimension] } count:2 type:GeogebraCommonKernelMatrixCoords_class_()];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D:withGeogebraCommonKernelGeosGeoElement:", "DrawCoordSys1D", NULL, 0x1, NULL, NULL },
    { "initWithGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D:", "DrawCoordSys1D", NULL, 0x1, NULL, NULL },
    { "initWithGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D:withJavaUtilArrayList:withGeogebraCommonKernelGeosGeoElement:", "DrawCoordSys1D", NULL, 0x1, NULL, NULL },
    { "setPreviewableCoordsWithGeogebraCommonKernelKernelNDGeoPointND:withGeogebraCommonKernelKernelNDGeoPointND:", "setPreviewableCoords", "V", 0x4, NULL, NULL },
    { "calcPoints", NULL, "[Lgeogebra.common.kernel.Matrix.Coords;", 0x4, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonGeogebra3DEuclidian3DDrawDrawCoordSys1D = { 2, "DrawCoordSys1D", "geogebra.common.geogebra3D.euclidian3D.draw", NULL, 0x401, 5, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonGeogebra3DEuclidian3DDrawDrawCoordSys1D;
}

@end

void GeogebraCommonGeogebra3DEuclidian3DDrawDrawCoordSys1D_initWithGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D_withGeogebraCommonKernelGeosGeoElement_(GeogebraCommonGeogebra3DEuclidian3DDrawDrawCoordSys1D *self, GeogebraCommonGeogebra3DEuclidian3DEuclidianView3D *a_view3D, GeogebraCommonKernelGeosGeoElement *cs1D) {
  GeogebraCommonGeogebra3DEuclidian3DDrawDrawJoinPoints_initWithGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D_withGeogebraCommonKernelGeosGeoElement_(self, a_view3D, cs1D);
}

void GeogebraCommonGeogebra3DEuclidian3DDrawDrawCoordSys1D_initWithGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D_(GeogebraCommonGeogebra3DEuclidian3DDrawDrawCoordSys1D *self, GeogebraCommonGeogebra3DEuclidian3DEuclidianView3D *a_view3d) {
  GeogebraCommonGeogebra3DEuclidian3DDrawDrawJoinPoints_initWithGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D_(self, a_view3d);
}

void GeogebraCommonGeogebra3DEuclidian3DDrawDrawCoordSys1D_initWithGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D_withJavaUtilArrayList_withGeogebraCommonKernelGeosGeoElement_(GeogebraCommonGeogebra3DEuclidian3DDrawDrawCoordSys1D *self, GeogebraCommonGeogebra3DEuclidian3DEuclidianView3D *a_view3D, JavaUtilArrayList *selectedPoints, GeogebraCommonKernelGeosGeoElement *geo) {
  GeogebraCommonGeogebra3DEuclidian3DDrawDrawJoinPoints_initWithGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D_withJavaUtilArrayList_withGeogebraCommonKernelGeosGeoElement_(self, a_view3D, selectedPoints, geo);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonGeogebra3DEuclidian3DDrawDrawCoordSys1D)
