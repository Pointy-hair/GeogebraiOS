//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/barycentric/CmdTriangleCurve.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "geogebra/common/kernel/Construction.h"
#include "geogebra/common/kernel/Kernel.h"
#include "geogebra/common/kernel/arithmetic/Command.h"
#include "geogebra/common/kernel/arithmetic/Equation.h"
#include "geogebra/common/kernel/arithmetic/ExpressionNode.h"
#include "geogebra/common/kernel/arithmetic/ExpressionValue.h"
#include "geogebra/common/kernel/barycentric/AlgoTriangleCurve.h"
#include "geogebra/common/kernel/barycentric/CmdTriangleCurve.h"
#include "geogebra/common/kernel/commands/AlgebraProcessor.h"
#include "geogebra/common/kernel/commands/CommandProcessor.h"
#include "geogebra/common/kernel/geos/GeoElement.h"
#include "geogebra/common/kernel/geos/GeoNumeric.h"
#include "geogebra/common/kernel/geos/GeoPoint.h"
#include "geogebra/common/kernel/implicit/GeoImplicitPoly.h"
#include "geogebra/common/main/MyError.h"

@interface GeogebraCommonKernelBarycentricCmdTriangleCurve ()

- (void)clearLocal;

- (GeogebraCommonKernelGeosGeoElement *)resArgWithGeogebraCommonKernelArithmeticCommand:(GeogebraCommonKernelArithmeticCommand *)c
                                                                                withInt:(jint)pos;

@end

__attribute__((unused)) static void GeogebraCommonKernelBarycentricCmdTriangleCurve_clearLocal(GeogebraCommonKernelBarycentricCmdTriangleCurve *self);

__attribute__((unused)) static GeogebraCommonKernelGeosGeoElement *GeogebraCommonKernelBarycentricCmdTriangleCurve_resArgWithGeogebraCommonKernelArithmeticCommand_withInt_(GeogebraCommonKernelBarycentricCmdTriangleCurve *self, GeogebraCommonKernelArithmeticCommand *c, jint pos);

@implementation GeogebraCommonKernelBarycentricCmdTriangleCurve

- (instancetype)initWithGeogebraCommonKernelKernel:(GeogebraCommonKernelKernel *)kernel {
  GeogebraCommonKernelBarycentricCmdTriangleCurve_initWithGeogebraCommonKernelKernel_(self, kernel);
  return self;
}

- (IOSObjectArray *)processWithGeogebraCommonKernelArithmeticCommand:(GeogebraCommonKernelArithmeticCommand *)c {
  jint n = [((GeogebraCommonKernelArithmeticCommand *) nil_chk(c)) getArgumentNumber];
  IOSBooleanArray *ok = [IOSBooleanArray arrayWithLength:n];
  IOSObjectArray *arg;
  {
    GeogebraCommonKernelGeosGeoNumeric *ta, *tb, *tc;
    jboolean oldMacroMode;
    switch (n) {
      case 4:
      ta = nil;
      tb = nil;
      tc = nil;
      arg = [IOSObjectArray arrayWithLength:4 type:GeogebraCommonKernelGeosGeoElement_class_()];
      for (jint i = 0; i < 3; i++) IOSObjectArray_Set(arg, i, GeogebraCommonKernelBarycentricCmdTriangleCurve_resArgWithGeogebraCommonKernelArithmeticCommand_withInt_(self, c, i));
      ta = [new_GeogebraCommonKernelGeosGeoNumeric_initWithGeogebraCommonKernelConstruction_(cons_) autorelease];
      tb = [new_GeogebraCommonKernelGeosGeoNumeric_initWithGeogebraCommonKernelConstruction_(cons_) autorelease];
      tc = [new_GeogebraCommonKernelGeosGeoNumeric_initWithGeogebraCommonKernelConstruction_(cons_) autorelease];
      [((GeogebraCommonKernelConstruction *) nil_chk(cons_)) addLocalVariableWithNSString:@"A" withGeogebraCommonKernelGeosGeoElement:ta];
      [cons_ addLocalVariableWithNSString:@"B" withGeogebraCommonKernelGeosGeoElement:tb];
      [cons_ addLocalVariableWithNSString:@"C" withGeogebraCommonKernelGeosGeoElement:tc];
      if (!([[((GeogebraCommonKernelArithmeticExpressionNode *) nil_chk([c getArgumentWithInt:3])) unwrap] isKindOfClass:[GeogebraCommonKernelArithmeticEquation class]])) {
        GeogebraCommonKernelBarycentricCmdTriangleCurve_clearLocal(self);
        @throw [self argErrWithGeogebraCommonMainApp:app_ withNSString:[c getName] withGeogebraCommonKernelArithmeticExpressionValue:[c getArgumentWithInt:3]];
      }
      oldMacroMode = [cons_ isSuppressLabelsActive];
      [cons_ setSuppressLabelCreationWithBoolean:YES];
      IOSObjectArray_Set(arg, 3, IOSObjectArray_Get(nil_chk([((GeogebraCommonKernelCommandsAlgebraProcessor *) nil_chk([((GeogebraCommonKernelKernel *) nil_chk(kernelA_)) getAlgebraProcessor])) processEquationWithGeogebraCommonKernelArithmeticEquation:(GeogebraCommonKernelArithmeticEquation *) check_class_cast([((GeogebraCommonKernelArithmeticExpressionNode *) nil_chk([c getArgumentWithInt:3])) unwrap], [GeogebraCommonKernelArithmeticEquation class]) withBoolean:YES]), 0));
      [cons_ setSuppressLabelCreationWithBoolean:oldMacroMode];
      if ((*IOSBooleanArray_GetRef(ok, 0) = [((GeogebraCommonKernelGeosGeoElement *) nil_chk(IOSObjectArray_Get(arg, 0))) isGeoPoint]) && (*IOSBooleanArray_GetRef(ok, 1) = [((GeogebraCommonKernelGeosGeoElement *) nil_chk(IOSObjectArray_Get(arg, 1))) isGeoPoint]) && (*IOSBooleanArray_GetRef(ok, 2) = [((GeogebraCommonKernelGeosGeoElement *) nil_chk(IOSObjectArray_Get(arg, 2))) isGeoPoint]) && (*IOSBooleanArray_GetRef(ok, 3) = [((GeogebraCommonKernelGeosGeoElement *) nil_chk(IOSObjectArray_Get(arg, 3))) isGeoImplicitPoly])) {
        GeogebraCommonKernelBarycentricAlgoTriangleCurve *algo = [new_GeogebraCommonKernelBarycentricAlgoTriangleCurve_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoPoint_withGeogebraCommonKernelGeosGeoPoint_withGeogebraCommonKernelGeosGeoPoint_withGeogebraCommonKernelImplicitGeoImplicitPoly_withGeogebraCommonKernelGeosGeoNumeric_withGeogebraCommonKernelGeosGeoNumeric_withGeogebraCommonKernelGeosGeoNumeric_(cons_, [c getLabel], (GeogebraCommonKernelGeosGeoPoint *) check_class_cast(IOSObjectArray_Get(arg, 0), [GeogebraCommonKernelGeosGeoPoint class]), (GeogebraCommonKernelGeosGeoPoint *) check_class_cast(IOSObjectArray_Get(arg, 1), [GeogebraCommonKernelGeosGeoPoint class]), (GeogebraCommonKernelGeosGeoPoint *) check_class_cast(IOSObjectArray_Get(arg, 2), [GeogebraCommonKernelGeosGeoPoint class]), (GeogebraCommonKernelImplicitGeoImplicitPoly *) check_class_cast(IOSObjectArray_Get(arg, 3), [GeogebraCommonKernelImplicitGeoImplicitPoly class]), ta, tb, tc) autorelease];
        IOSObjectArray *ret = [IOSObjectArray arrayWithObjects:(id[]){ [algo getResult] } count:1 type:GeogebraCommonKernelGeosGeoElement_class_()];
        GeogebraCommonKernelBarycentricCmdTriangleCurve_clearLocal(self);
        return ret;
      }
      GeogebraCommonKernelBarycentricCmdTriangleCurve_clearLocal(self);
      @throw [self argErrWithGeogebraCommonMainApp:app_ withNSString:[c getName] withGeogebraCommonKernelArithmeticExpressionValue:GeogebraCommonKernelCommandsCommandProcessor_getBadArgWithBooleanArray_withGeogebraCommonKernelGeosGeoElementArray_(ok, arg)];
      default:
      GeogebraCommonKernelBarycentricCmdTriangleCurve_clearLocal(self);
      @throw [self argNumErrWithGeogebraCommonMainApp:app_ withNSString:[c getName] withInt:n];
    }
  }
}

- (void)clearLocal {
  GeogebraCommonKernelBarycentricCmdTriangleCurve_clearLocal(self);
}

- (GeogebraCommonKernelGeosGeoElement *)resArgWithGeogebraCommonKernelArithmeticCommand:(GeogebraCommonKernelArithmeticCommand *)c
                                                                                withInt:(jint)pos {
  return GeogebraCommonKernelBarycentricCmdTriangleCurve_resArgWithGeogebraCommonKernelArithmeticCommand_withInt_(self, c, pos);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonKernelKernel:", "CmdTriangleCurve", NULL, 0x1, NULL, NULL },
    { "processWithGeogebraCommonKernelArithmeticCommand:", "process", "[Lgeogebra.common.kernel.geos.GeoElement;", 0x11, "Lgeogebra.common.main.MyError;", NULL },
    { "clearLocal", NULL, "V", 0x2, NULL, NULL },
    { "resArgWithGeogebraCommonKernelArithmeticCommand:withInt:", "resArg", "Lgeogebra.common.kernel.geos.GeoElement;", 0x12, "Lgeogebra.common.main.MyError;", NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelBarycentricCmdTriangleCurve = { 2, "CmdTriangleCurve", "geogebra.common.kernel.barycentric", NULL, 0x1, 4, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelBarycentricCmdTriangleCurve;
}

@end

void GeogebraCommonKernelBarycentricCmdTriangleCurve_initWithGeogebraCommonKernelKernel_(GeogebraCommonKernelBarycentricCmdTriangleCurve *self, GeogebraCommonKernelKernel *kernel) {
  GeogebraCommonKernelCommandsCommandProcessor_initWithGeogebraCommonKernelKernel_(self, kernel);
}

GeogebraCommonKernelBarycentricCmdTriangleCurve *new_GeogebraCommonKernelBarycentricCmdTriangleCurve_initWithGeogebraCommonKernelKernel_(GeogebraCommonKernelKernel *kernel) {
  GeogebraCommonKernelBarycentricCmdTriangleCurve *self = [GeogebraCommonKernelBarycentricCmdTriangleCurve alloc];
  GeogebraCommonKernelBarycentricCmdTriangleCurve_initWithGeogebraCommonKernelKernel_(self, kernel);
  return self;
}

void GeogebraCommonKernelBarycentricCmdTriangleCurve_clearLocal(GeogebraCommonKernelBarycentricCmdTriangleCurve *self) {
  [((GeogebraCommonKernelConstruction *) nil_chk(self->cons_)) removeLocalVariableWithNSString:@"A"];
  [self->cons_ removeLocalVariableWithNSString:@"B"];
  [self->cons_ removeLocalVariableWithNSString:@"C"];
}

GeogebraCommonKernelGeosGeoElement *GeogebraCommonKernelBarycentricCmdTriangleCurve_resArgWithGeogebraCommonKernelArithmeticCommand_withInt_(GeogebraCommonKernelBarycentricCmdTriangleCurve *self, GeogebraCommonKernelArithmeticCommand *c, jint pos) {
  jboolean oldMacroMode = [((GeogebraCommonKernelConstruction *) nil_chk(self->cons_)) isSuppressLabelsActive];
  [self->cons_ setSuppressLabelCreationWithBoolean:YES];
  [((GeogebraCommonKernelArithmeticExpressionNode *) nil_chk([((GeogebraCommonKernelArithmeticCommand *) nil_chk(c)) getArgumentWithInt:pos])) resolveVariables];
  GeogebraCommonKernelGeosGeoElement *result = IOSObjectArray_Get(nil_chk([self resArgWithGeogebraCommonKernelArithmeticExpressionNode:[c getArgumentWithInt:pos]]), 0);
  [self->cons_ setSuppressLabelCreationWithBoolean:oldMacroMode];
  return result;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelBarycentricCmdTriangleCurve)
