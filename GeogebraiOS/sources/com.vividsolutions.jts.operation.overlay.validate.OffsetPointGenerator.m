//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/com/vividsolutions/jts/operation/overlay/validate/OffsetPointGenerator.java
//


#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "com/vividsolutions/jts/geom/Coordinate.h"
#include "com/vividsolutions/jts/geom/Geometry.h"
#include "com/vividsolutions/jts/geom/LineString.h"
#include "com/vividsolutions/jts/geom/util/LinearComponentExtracter.h"
#include "com/vividsolutions/jts/operation/overlay/validate/OffsetPointGenerator.h"
#include "java/lang/Math.h"
#include "java/util/ArrayList.h"
#include "java/util/Iterator.h"
#include "java/util/List.h"

@interface ComVividsolutionsJtsOperationOverlayValidateOffsetPointGenerator () {
 @public
  jdouble offsetDistance_;
  ComVividsolutionsJtsGeomGeometry *g_;
  id<JavaUtilList> offsetPts_;
}

- (void)extractPointsWithComVividsolutionsJtsGeomLineString:(ComVividsolutionsJtsGeomLineString *)line;

- (void)computeOffsetPointsWithComVividsolutionsJtsGeomCoordinate:(ComVividsolutionsJtsGeomCoordinate *)p0
                           withComVividsolutionsJtsGeomCoordinate:(ComVividsolutionsJtsGeomCoordinate *)p1;

@end

J2OBJC_FIELD_SETTER(ComVividsolutionsJtsOperationOverlayValidateOffsetPointGenerator, g_, ComVividsolutionsJtsGeomGeometry *)
J2OBJC_FIELD_SETTER(ComVividsolutionsJtsOperationOverlayValidateOffsetPointGenerator, offsetPts_, id<JavaUtilList>)

__attribute__((unused)) static void ComVividsolutionsJtsOperationOverlayValidateOffsetPointGenerator_extractPointsWithComVividsolutionsJtsGeomLineString_(ComVividsolutionsJtsOperationOverlayValidateOffsetPointGenerator *self, ComVividsolutionsJtsGeomLineString *line);

__attribute__((unused)) static void ComVividsolutionsJtsOperationOverlayValidateOffsetPointGenerator_computeOffsetPointsWithComVividsolutionsJtsGeomCoordinate_withComVividsolutionsJtsGeomCoordinate_(ComVividsolutionsJtsOperationOverlayValidateOffsetPointGenerator *self, ComVividsolutionsJtsGeomCoordinate *p0, ComVividsolutionsJtsGeomCoordinate *p1);

@implementation ComVividsolutionsJtsOperationOverlayValidateOffsetPointGenerator

- (instancetype)initWithComVividsolutionsJtsGeomGeometry:(ComVividsolutionsJtsGeomGeometry *)g
                                              withDouble:(jdouble)offsetDistance {
  ComVividsolutionsJtsOperationOverlayValidateOffsetPointGenerator_initWithComVividsolutionsJtsGeomGeometry_withDouble_(self, g, offsetDistance);
  return self;
}

- (id<JavaUtilList>)getPoints {
  ComVividsolutionsJtsOperationOverlayValidateOffsetPointGenerator_setAndConsume_offsetPts_(self, new_JavaUtilArrayList_init());
  id<JavaUtilList> lines = ComVividsolutionsJtsGeomUtilLinearComponentExtracter_getLinesWithComVividsolutionsJtsGeomGeometry_(g_);
  for (id<JavaUtilIterator> i = [((id<JavaUtilList>) nil_chk(lines)) iterator]; [((id<JavaUtilIterator>) nil_chk(i)) hasNext]; ) {
    ComVividsolutionsJtsGeomLineString *line = (ComVividsolutionsJtsGeomLineString *) check_class_cast([i next], [ComVividsolutionsJtsGeomLineString class]);
    ComVividsolutionsJtsOperationOverlayValidateOffsetPointGenerator_extractPointsWithComVividsolutionsJtsGeomLineString_(self, line);
  }
  return offsetPts_;
}

- (void)extractPointsWithComVividsolutionsJtsGeomLineString:(ComVividsolutionsJtsGeomLineString *)line {
  ComVividsolutionsJtsOperationOverlayValidateOffsetPointGenerator_extractPointsWithComVividsolutionsJtsGeomLineString_(self, line);
}

- (void)computeOffsetPointsWithComVividsolutionsJtsGeomCoordinate:(ComVividsolutionsJtsGeomCoordinate *)p0
                           withComVividsolutionsJtsGeomCoordinate:(ComVividsolutionsJtsGeomCoordinate *)p1 {
  ComVividsolutionsJtsOperationOverlayValidateOffsetPointGenerator_computeOffsetPointsWithComVividsolutionsJtsGeomCoordinate_withComVividsolutionsJtsGeomCoordinate_(self, p0, p1);
}

- (void)dealloc {
  RELEASE_(g_);
  RELEASE_(offsetPts_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithComVividsolutionsJtsGeomGeometry:withDouble:", "OffsetPointGenerator", NULL, 0x1, NULL, NULL },
    { "getPoints", NULL, "Ljava.util.List;", 0x1, NULL, NULL },
    { "extractPointsWithComVividsolutionsJtsGeomLineString:", "extractPoints", "V", 0x2, NULL, NULL },
    { "computeOffsetPointsWithComVividsolutionsJtsGeomCoordinate:withComVividsolutionsJtsGeomCoordinate:", "computeOffsetPoints", "V", 0x2, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "offsetDistance_", NULL, 0x2, "D", NULL, NULL,  },
    { "g_", NULL, 0x2, "Lcom.vividsolutions.jts.geom.Geometry;", NULL, NULL,  },
    { "offsetPts_", NULL, 0x2, "Ljava.util.List;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _ComVividsolutionsJtsOperationOverlayValidateOffsetPointGenerator = { 2, "OffsetPointGenerator", "com.vividsolutions.jts.operation.overlay.validate", NULL, 0x1, 4, methods, 3, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ComVividsolutionsJtsOperationOverlayValidateOffsetPointGenerator;
}

@end

void ComVividsolutionsJtsOperationOverlayValidateOffsetPointGenerator_initWithComVividsolutionsJtsGeomGeometry_withDouble_(ComVividsolutionsJtsOperationOverlayValidateOffsetPointGenerator *self, ComVividsolutionsJtsGeomGeometry *g, jdouble offsetDistance) {
  NSObject_init(self);
  ComVividsolutionsJtsOperationOverlayValidateOffsetPointGenerator_set_g_(self, g);
  self->offsetDistance_ = offsetDistance;
}

ComVividsolutionsJtsOperationOverlayValidateOffsetPointGenerator *new_ComVividsolutionsJtsOperationOverlayValidateOffsetPointGenerator_initWithComVividsolutionsJtsGeomGeometry_withDouble_(ComVividsolutionsJtsGeomGeometry *g, jdouble offsetDistance) {
  ComVividsolutionsJtsOperationOverlayValidateOffsetPointGenerator *self = [ComVividsolutionsJtsOperationOverlayValidateOffsetPointGenerator alloc];
  ComVividsolutionsJtsOperationOverlayValidateOffsetPointGenerator_initWithComVividsolutionsJtsGeomGeometry_withDouble_(self, g, offsetDistance);
  return self;
}

void ComVividsolutionsJtsOperationOverlayValidateOffsetPointGenerator_extractPointsWithComVividsolutionsJtsGeomLineString_(ComVividsolutionsJtsOperationOverlayValidateOffsetPointGenerator *self, ComVividsolutionsJtsGeomLineString *line) {
  IOSObjectArray *pts = [((ComVividsolutionsJtsGeomLineString *) nil_chk(line)) getCoordinates];
  for (jint i = 0; i < ((IOSObjectArray *) nil_chk(pts))->size_ - 1; i++) {
    ComVividsolutionsJtsOperationOverlayValidateOffsetPointGenerator_computeOffsetPointsWithComVividsolutionsJtsGeomCoordinate_withComVividsolutionsJtsGeomCoordinate_(self, IOSObjectArray_Get(pts, i), IOSObjectArray_Get(pts, i + 1));
  }
}

void ComVividsolutionsJtsOperationOverlayValidateOffsetPointGenerator_computeOffsetPointsWithComVividsolutionsJtsGeomCoordinate_withComVividsolutionsJtsGeomCoordinate_(ComVividsolutionsJtsOperationOverlayValidateOffsetPointGenerator *self, ComVividsolutionsJtsGeomCoordinate *p0, ComVividsolutionsJtsGeomCoordinate *p1) {
  jdouble dx = ((ComVividsolutionsJtsGeomCoordinate *) nil_chk(p1))->x_ - ((ComVividsolutionsJtsGeomCoordinate *) nil_chk(p0))->x_;
  jdouble dy = p1->y_ - p0->y_;
  jdouble len = JavaLangMath_sqrtWithDouble_(dx * dx + dy * dy);
  jdouble ux = self->offsetDistance_ * dx / len;
  jdouble uy = self->offsetDistance_ * dy / len;
  jdouble midX = (p1->x_ + p0->x_) / 2;
  jdouble midY = (p1->y_ + p0->y_) / 2;
  ComVividsolutionsJtsGeomCoordinate *offsetLeft = [new_ComVividsolutionsJtsGeomCoordinate_initWithDouble_withDouble_(midX - uy, midY + ux) autorelease];
  ComVividsolutionsJtsGeomCoordinate *offsetRight = [new_ComVividsolutionsJtsGeomCoordinate_initWithDouble_withDouble_(midX + uy, midY - ux) autorelease];
  [((id<JavaUtilList>) nil_chk(self->offsetPts_)) addWithId:offsetLeft];
  [self->offsetPts_ addWithId:offsetRight];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComVividsolutionsJtsOperationOverlayValidateOffsetPointGenerator)
