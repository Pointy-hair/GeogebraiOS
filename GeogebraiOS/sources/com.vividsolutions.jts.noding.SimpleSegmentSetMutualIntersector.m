//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/com/vividsolutions/jts/noding/SimpleSegmentSetMutualIntersector.java
//


#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "com/vividsolutions/jts/noding/SegmentIntersector.h"
#include "com/vividsolutions/jts/noding/SegmentSetMutualIntersector.h"
#include "com/vividsolutions/jts/noding/SegmentString.h"
#include "com/vividsolutions/jts/noding/SimpleSegmentSetMutualIntersector.h"
#include "java/util/Collection.h"
#include "java/util/Iterator.h"

@interface ComVividsolutionsJtsNodingSimpleSegmentSetMutualIntersector () {
 @public
  id<JavaUtilCollection> baseSegStrings_;
}

- (void)intersectWithComVividsolutionsJtsNodingSegmentString:(id<ComVividsolutionsJtsNodingSegmentString>)ss0
                 withComVividsolutionsJtsNodingSegmentString:(id<ComVividsolutionsJtsNodingSegmentString>)ss1;

@end

J2OBJC_FIELD_SETTER(ComVividsolutionsJtsNodingSimpleSegmentSetMutualIntersector, baseSegStrings_, id<JavaUtilCollection>)

__attribute__((unused)) static void ComVividsolutionsJtsNodingSimpleSegmentSetMutualIntersector_intersectWithComVividsolutionsJtsNodingSegmentString_withComVividsolutionsJtsNodingSegmentString_(ComVividsolutionsJtsNodingSimpleSegmentSetMutualIntersector *self, id<ComVividsolutionsJtsNodingSegmentString> ss0, id<ComVividsolutionsJtsNodingSegmentString> ss1);

@implementation ComVividsolutionsJtsNodingSimpleSegmentSetMutualIntersector

- (instancetype)init {
  ComVividsolutionsJtsNodingSimpleSegmentSetMutualIntersector_init(self);
  return self;
}

- (void)setBaseSegmentsWithJavaUtilCollection:(id<JavaUtilCollection>)segStrings {
  ComVividsolutionsJtsNodingSimpleSegmentSetMutualIntersector_set_baseSegStrings_(self, segStrings);
}

- (void)processWithJavaUtilCollection:(id<JavaUtilCollection>)segStrings {
  for (id<JavaUtilIterator> i = [((id<JavaUtilCollection>) nil_chk(baseSegStrings_)) iterator]; [((id<JavaUtilIterator>) nil_chk(i)) hasNext]; ) {
    id<ComVividsolutionsJtsNodingSegmentString> baseSS = (id<ComVividsolutionsJtsNodingSegmentString>) check_protocol_cast([i next], @protocol(ComVividsolutionsJtsNodingSegmentString));
    for (id<JavaUtilIterator> j = [((id<JavaUtilCollection>) nil_chk(segStrings)) iterator]; [((id<JavaUtilIterator>) nil_chk(j)) hasNext]; ) {
      id<ComVividsolutionsJtsNodingSegmentString> ss = (id<ComVividsolutionsJtsNodingSegmentString>) check_protocol_cast([j next], @protocol(ComVividsolutionsJtsNodingSegmentString));
      ComVividsolutionsJtsNodingSimpleSegmentSetMutualIntersector_intersectWithComVividsolutionsJtsNodingSegmentString_withComVividsolutionsJtsNodingSegmentString_(self, baseSS, ss);
      if ([((id<ComVividsolutionsJtsNodingSegmentIntersector>) nil_chk(segInt_)) isDone]) return;
    }
  }
}

- (void)intersectWithComVividsolutionsJtsNodingSegmentString:(id<ComVividsolutionsJtsNodingSegmentString>)ss0
                 withComVividsolutionsJtsNodingSegmentString:(id<ComVividsolutionsJtsNodingSegmentString>)ss1 {
  ComVividsolutionsJtsNodingSimpleSegmentSetMutualIntersector_intersectWithComVividsolutionsJtsNodingSegmentString_withComVividsolutionsJtsNodingSegmentString_(self, ss0, ss1);
}

- (void)dealloc {
  RELEASE_(baseSegStrings_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "SimpleSegmentSetMutualIntersector", NULL, 0x1, NULL, NULL },
    { "setBaseSegmentsWithJavaUtilCollection:", "setBaseSegments", "V", 0x1, NULL, NULL },
    { "processWithJavaUtilCollection:", "process", "V", 0x1, NULL, NULL },
    { "intersectWithComVividsolutionsJtsNodingSegmentString:withComVividsolutionsJtsNodingSegmentString:", "intersect", "V", 0x2, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "baseSegStrings_", NULL, 0x2, "Ljava.util.Collection;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _ComVividsolutionsJtsNodingSimpleSegmentSetMutualIntersector = { 2, "SimpleSegmentSetMutualIntersector", "com.vividsolutions.jts.noding", NULL, 0x1, 4, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ComVividsolutionsJtsNodingSimpleSegmentSetMutualIntersector;
}

@end

void ComVividsolutionsJtsNodingSimpleSegmentSetMutualIntersector_init(ComVividsolutionsJtsNodingSimpleSegmentSetMutualIntersector *self) {
  ComVividsolutionsJtsNodingSegmentSetMutualIntersector_init(self);
}

ComVividsolutionsJtsNodingSimpleSegmentSetMutualIntersector *new_ComVividsolutionsJtsNodingSimpleSegmentSetMutualIntersector_init() {
  ComVividsolutionsJtsNodingSimpleSegmentSetMutualIntersector *self = [ComVividsolutionsJtsNodingSimpleSegmentSetMutualIntersector alloc];
  ComVividsolutionsJtsNodingSimpleSegmentSetMutualIntersector_init(self);
  return self;
}

void ComVividsolutionsJtsNodingSimpleSegmentSetMutualIntersector_intersectWithComVividsolutionsJtsNodingSegmentString_withComVividsolutionsJtsNodingSegmentString_(ComVividsolutionsJtsNodingSimpleSegmentSetMutualIntersector *self, id<ComVividsolutionsJtsNodingSegmentString> ss0, id<ComVividsolutionsJtsNodingSegmentString> ss1) {
  IOSObjectArray *pts0 = [((id<ComVividsolutionsJtsNodingSegmentString>) nil_chk(ss0)) getCoordinates];
  IOSObjectArray *pts1 = [((id<ComVividsolutionsJtsNodingSegmentString>) nil_chk(ss1)) getCoordinates];
  for (jint i0 = 0; i0 < ((IOSObjectArray *) nil_chk(pts0))->size_ - 1; i0++) {
    for (jint i1 = 0; i1 < ((IOSObjectArray *) nil_chk(pts1))->size_ - 1; i1++) {
      [((id<ComVividsolutionsJtsNodingSegmentIntersector>) nil_chk(self->segInt_)) processIntersectionsWithComVividsolutionsJtsNodingSegmentString:ss0 withInt:i0 withComVividsolutionsJtsNodingSegmentString:ss1 withInt:i1];
      if ([self->segInt_ isDone]) return;
    }
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComVividsolutionsJtsNodingSimpleSegmentSetMutualIntersector)
