//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/prover/AlgoAreConcyclic.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "geogebra/common/kernel/Construction.h"
#include "geogebra/common/kernel/Kernel.h"
#include "geogebra/common/kernel/algos/AlgoElement.h"
#include "geogebra/common/kernel/algos/SymbolicParameters.h"
#include "geogebra/common/kernel/commands/Commands.h"
#include "geogebra/common/kernel/geos/GeoBoolean.h"
#include "geogebra/common/kernel/geos/GeoElement.h"
#include "geogebra/common/kernel/geos/GeoPoint.h"
#include "geogebra/common/kernel/prover/AlgoAreConcyclic.h"
#include "geogebra/common/kernel/prover/NoSymbolicParametersException.h"
#include "geogebra/common/kernel/prover/polynomial/Polynomial.h"
#include "geogebra/common/kernel/prover/polynomial/Variable.h"
#include "java/lang/Math.h"
#include "java/math/BigInteger.h"
#include "java/util/HashMap.h"
#include "java/util/HashSet.h"

@interface GeogebraCommonKernelProverAlgoAreConcyclic () {
 @public
  GeogebraCommonKernelGeosGeoPoint *inputPoint1_;
  GeogebraCommonKernelGeosGeoPoint *inputPoint2_;
  GeogebraCommonKernelGeosGeoPoint *inputPoint3_;
  GeogebraCommonKernelGeosGeoPoint *inputPoint4_;
  GeogebraCommonKernelGeosGeoBoolean *outputBoolean_;
  IOSObjectArray *polynomials_;
  IOSObjectArray *botanaPolynomials_;
}

@end

J2OBJC_FIELD_SETTER(GeogebraCommonKernelProverAlgoAreConcyclic, inputPoint1_, GeogebraCommonKernelGeosGeoPoint *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelProverAlgoAreConcyclic, inputPoint2_, GeogebraCommonKernelGeosGeoPoint *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelProverAlgoAreConcyclic, inputPoint3_, GeogebraCommonKernelGeosGeoPoint *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelProverAlgoAreConcyclic, inputPoint4_, GeogebraCommonKernelGeosGeoPoint *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelProverAlgoAreConcyclic, outputBoolean_, GeogebraCommonKernelGeosGeoBoolean *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelProverAlgoAreConcyclic, polynomials_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelProverAlgoAreConcyclic, botanaPolynomials_, IOSObjectArray *)

__attribute__((unused)) static void GeogebraCommonKernelProverAlgoAreConcyclic_compute(GeogebraCommonKernelProverAlgoAreConcyclic *self);

@implementation GeogebraCommonKernelProverAlgoAreConcyclic

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                                            withNSString:(NSString *)label
                    withGeogebraCommonKernelGeosGeoPoint:(GeogebraCommonKernelGeosGeoPoint *)inputPoint1
                    withGeogebraCommonKernelGeosGeoPoint:(GeogebraCommonKernelGeosGeoPoint *)inputPoint2
                    withGeogebraCommonKernelGeosGeoPoint:(GeogebraCommonKernelGeosGeoPoint *)inputPoint3
                    withGeogebraCommonKernelGeosGeoPoint:(GeogebraCommonKernelGeosGeoPoint *)inputPoint4 {
  GeogebraCommonKernelProverAlgoAreConcyclic_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoPoint_withGeogebraCommonKernelGeosGeoPoint_withGeogebraCommonKernelGeosGeoPoint_withGeogebraCommonKernelGeosGeoPoint_(self, cons, label, inputPoint1, inputPoint2, inputPoint3, inputPoint4);
  return self;
}

- (GeogebraCommonKernelCommandsCommandsEnum *)getClassName {
  return GeogebraCommonKernelCommandsCommandsEnum_get_AreConcyclic();
}

- (void)setInputOutput {
  GeogebraCommonKernelAlgosAlgoElement_setAndConsume_input_(self, [IOSObjectArray newArrayWithLength:4 type:GeogebraCommonKernelGeosGeoElement_class_()]);
  IOSObjectArray_Set(input_, 0, inputPoint1_);
  IOSObjectArray_Set(input_, 1, inputPoint2_);
  IOSObjectArray_Set(input_, 2, inputPoint3_);
  IOSObjectArray_Set(input_, 3, inputPoint4_);
  [super setOutputLengthWithInt:1];
  [super setOutputWithInt:0 withGeogebraCommonKernelGeosGeoElement:outputBoolean_];
  [self setDependencies];
}

- (GeogebraCommonKernelGeosGeoBoolean *)getResult {
  return outputBoolean_;
}

- (void)compute {
  GeogebraCommonKernelProverAlgoAreConcyclic_compute(self);
}

- (GeogebraCommonKernelAlgosSymbolicParameters *)getSymbolicParameters {
  return [new_GeogebraCommonKernelAlgosSymbolicParameters_initWithGeogebraCommonKernelAlgosSymbolicParametersAlgo_(self) autorelease];
}

- (void)getFreeVariablesWithJavaUtilHashSet:(JavaUtilHashSet *)variables {
  if (inputPoint1_ != nil && inputPoint2_ != nil && inputPoint1_ != nil && inputPoint2_ != nil) {
    [inputPoint1_ getFreeVariablesWithJavaUtilHashSet:variables];
    [inputPoint2_ getFreeVariablesWithJavaUtilHashSet:variables];
    [((GeogebraCommonKernelGeosGeoPoint *) nil_chk(inputPoint3_)) getFreeVariablesWithJavaUtilHashSet:variables];
    [((GeogebraCommonKernelGeosGeoPoint *) nil_chk(inputPoint4_)) getFreeVariablesWithJavaUtilHashSet:variables];
    return;
  }
  @throw [new_GeogebraCommonKernelProverNoSymbolicParametersException_init() autorelease];
}

- (IOSIntArray *)getDegrees {
  if (inputPoint1_ != nil && inputPoint2_ != nil && inputPoint1_ != nil && inputPoint2_ != nil) {
    IOSIntArray *degree1 = [inputPoint1_ getDegrees];
    IOSIntArray *degree2 = [inputPoint2_ getDegrees];
    IOSIntArray *degree3 = [((GeogebraCommonKernelGeosGeoPoint *) nil_chk(inputPoint3_)) getDegrees];
    IOSIntArray *degree4 = [((GeogebraCommonKernelGeosGeoPoint *) nil_chk(inputPoint4_)) getDegrees];
    IOSIntArray *degree = [IOSIntArray arrayWithLength:1];
    IOSIntArray *list = [IOSIntArray arrayWithInts:(jint[]){ IOSIntArray_Get(nil_chk(degree1), 1) + IOSIntArray_Get(degree1, 2) + IOSIntArray_Get(nil_chk(degree2), 0) + IOSIntArray_Get(degree2, 2) + 2 * IOSIntArray_Get(nil_chk(degree3), 0), IOSIntArray_Get(degree1, 0) + IOSIntArray_Get(degree1, 2) + IOSIntArray_Get(degree2, 1) + IOSIntArray_Get(degree2, 2) + 2 * IOSIntArray_Get(degree3, 0), IOSIntArray_Get(degree1, 1) + IOSIntArray_Get(degree1, 2) + IOSIntArray_Get(degree2, 0) + IOSIntArray_Get(degree2, 2) + 2 * IOSIntArray_Get(degree3, 1), IOSIntArray_Get(degree1, 0) + IOSIntArray_Get(degree1, 2) + IOSIntArray_Get(degree2, 1) + IOSIntArray_Get(degree2, 2) + 2 * IOSIntArray_Get(degree3, 1), IOSIntArray_Get(degree1, 1) + IOSIntArray_Get(degree1, 2) + 2 * IOSIntArray_Get(degree2, 0) + IOSIntArray_Get(degree3, 0) + IOSIntArray_Get(degree3, 2), IOSIntArray_Get(degree1, 1) + IOSIntArray_Get(degree1, 2) + 2 * IOSIntArray_Get(degree2, 1) + IOSIntArray_Get(degree3, 0) + IOSIntArray_Get(degree3, 2), 2 * IOSIntArray_Get(degree1, 0) + IOSIntArray_Get(degree2, 1) + IOSIntArray_Get(degree2, 2) + IOSIntArray_Get(degree3, 0) + IOSIntArray_Get(degree3, 2), 2 * IOSIntArray_Get(degree1, 1) + IOSIntArray_Get(degree2, 1) + IOSIntArray_Get(degree2, 2) + IOSIntArray_Get(degree3, 0) + IOSIntArray_Get(degree3, 2), 2 * IOSIntArray_Get(degree1, 2) + IOSIntArray_Get(degree2, 1) + IOSIntArray_Get(degree2, 2) + IOSIntArray_Get(degree3, 0) + IOSIntArray_Get(degree3, 2), IOSIntArray_Get(degree1, 1) + IOSIntArray_Get(degree1, 2) + 2 * IOSIntArray_Get(degree2, 2) + IOSIntArray_Get(degree3, 0) + IOSIntArray_Get(degree3, 2), IOSIntArray_Get(degree1, 0) + IOSIntArray_Get(degree1, 2) + 2 * IOSIntArray_Get(degree2, 0) + IOSIntArray_Get(degree3, 1) + IOSIntArray_Get(degree3, 2), IOSIntArray_Get(degree1, 0) + IOSIntArray_Get(degree1, 2) + 2 * IOSIntArray_Get(degree2, 1) + IOSIntArray_Get(degree3, 1) + IOSIntArray_Get(degree3, 2), 2 * IOSIntArray_Get(degree1, 0) + IOSIntArray_Get(degree2, 0) + IOSIntArray_Get(degree2, 2) + IOSIntArray_Get(degree3, 1) + IOSIntArray_Get(degree3, 2), 2 * IOSIntArray_Get(degree1, 1) + IOSIntArray_Get(degree2, 0) + IOSIntArray_Get(degree2, 2) + IOSIntArray_Get(degree3, 1) + IOSIntArray_Get(degree3, 2), 2 * IOSIntArray_Get(degree1, 2) + IOSIntArray_Get(degree2, 0) + IOSIntArray_Get(degree2, 2) + IOSIntArray_Get(degree3, 1) + IOSIntArray_Get(degree3, 2), IOSIntArray_Get(degree1, 0) + IOSIntArray_Get(degree1, 2) + 2 * IOSIntArray_Get(degree2, 2) + IOSIntArray_Get(degree3, 1) + IOSIntArray_Get(degree3, 2), IOSIntArray_Get(degree1, 1) + IOSIntArray_Get(degree1, 2) + IOSIntArray_Get(degree2, 0) + IOSIntArray_Get(degree2, 2) + 2 * IOSIntArray_Get(degree3, 2), IOSIntArray_Get(degree1, 0) + IOSIntArray_Get(degree1, 2) + IOSIntArray_Get(degree2, 1) + IOSIntArray_Get(degree2, 2) + 2 * IOSIntArray_Get(degree3, 2), 2 * IOSIntArray_Get(nil_chk(degree4), 0), 2 * IOSIntArray_Get(degree1, 2) + IOSIntArray_Get(degree2, 1) + IOSIntArray_Get(degree2, 2) + 2 * IOSIntArray_Get(degree3, 0) + IOSIntArray_Get(degree4, 0), IOSIntArray_Get(degree1, 1) + IOSIntArray_Get(degree1, 2) + 2 * IOSIntArray_Get(degree2, 2) + 2 * IOSIntArray_Get(degree3, 0) + IOSIntArray_Get(degree4, 0), 2 * IOSIntArray_Get(degree1, 2) + IOSIntArray_Get(degree2, 1) + IOSIntArray_Get(degree2, 2) + 2 * IOSIntArray_Get(degree3, 1) + IOSIntArray_Get(degree4, 0), IOSIntArray_Get(degree1, 1) + IOSIntArray_Get(degree1, 2) + 2 * IOSIntArray_Get(degree2, 2) + 2 * IOSIntArray_Get(degree3, 1) + IOSIntArray_Get(degree4, 0), 2 * IOSIntArray_Get(degree1, 2) + 2 * IOSIntArray_Get(degree2, 0) + IOSIntArray_Get(degree3, 1) + IOSIntArray_Get(degree3, 2) + IOSIntArray_Get(degree4, 0), 2 * IOSIntArray_Get(degree1, 2) + 2 * IOSIntArray_Get(degree2, 1) + IOSIntArray_Get(degree3, 1) + IOSIntArray_Get(degree3, 2) + IOSIntArray_Get(degree4, 0), 2 * IOSIntArray_Get(degree1, 0) + 2 * IOSIntArray_Get(degree2, 2) + IOSIntArray_Get(degree3, 1) + IOSIntArray_Get(degree3, 2) + IOSIntArray_Get(degree4, 0), 2 * IOSIntArray_Get(degree1, 1) + 2 * IOSIntArray_Get(degree2, 2) + IOSIntArray_Get(degree3, 1) + IOSIntArray_Get(degree3, 2) + IOSIntArray_Get(degree4, 0), IOSIntArray_Get(degree1, 1) + IOSIntArray_Get(degree1, 2) + 2 * IOSIntArray_Get(degree2, 0) + 2 * IOSIntArray_Get(degree3, 2) + IOSIntArray_Get(degree4, 0), IOSIntArray_Get(degree1, 1) + IOSIntArray_Get(degree1, 2) + 2 * IOSIntArray_Get(degree2, 1) + 2 * IOSIntArray_Get(degree3, 2) + IOSIntArray_Get(degree4, 0), 2 * IOSIntArray_Get(degree1, 0) + IOSIntArray_Get(degree2, 1) + IOSIntArray_Get(degree2, 2) + 2 * IOSIntArray_Get(degree3, 2) + IOSIntArray_Get(degree4, 0), 2 * IOSIntArray_Get(degree1, 1) + IOSIntArray_Get(degree2, 1) + IOSIntArray_Get(degree2, 2) + 2 * IOSIntArray_Get(degree3, 2) + IOSIntArray_Get(degree4, 0), 2 * IOSIntArray_Get(degree4, 1), 2 * IOSIntArray_Get(degree1, 2) + IOSIntArray_Get(degree2, 0) + IOSIntArray_Get(degree2, 2) + 2 * IOSIntArray_Get(degree3, 0) + IOSIntArray_Get(degree4, 1), IOSIntArray_Get(degree1, 0) + IOSIntArray_Get(degree1, 2) + 2 * IOSIntArray_Get(degree2, 2) + 2 * IOSIntArray_Get(degree3, 0) + IOSIntArray_Get(degree4, 1), 2 * IOSIntArray_Get(degree1, 2) + IOSIntArray_Get(degree2, 0) + IOSIntArray_Get(degree2, 2) + 2 * IOSIntArray_Get(degree3, 1) + IOSIntArray_Get(degree4, 1), IOSIntArray_Get(degree1, 0) + IOSIntArray_Get(degree1, 2) + 2 * IOSIntArray_Get(degree2, 2) + 2 * IOSIntArray_Get(degree3, 1) + IOSIntArray_Get(degree4, 1), 2 * IOSIntArray_Get(degree1, 2) + 2 * IOSIntArray_Get(degree2, 0) + IOSIntArray_Get(degree3, 0) + IOSIntArray_Get(degree3, 2) + IOSIntArray_Get(degree4, 1), 2 * IOSIntArray_Get(degree1, 2) + 2 * IOSIntArray_Get(degree2, 1) + IOSIntArray_Get(degree3, 0) + IOSIntArray_Get(degree3, 2) + IOSIntArray_Get(degree4, 1), 2 * IOSIntArray_Get(degree1, 0) + 2 * IOSIntArray_Get(degree2, 2) + IOSIntArray_Get(degree3, 0) + IOSIntArray_Get(degree3, 2) + IOSIntArray_Get(degree4, 1), 2 * IOSIntArray_Get(degree1, 1) + 2 * IOSIntArray_Get(degree2, 2) + IOSIntArray_Get(degree3, 0) + IOSIntArray_Get(degree3, 2) + IOSIntArray_Get(degree4, 1), IOSIntArray_Get(degree1, 0) + IOSIntArray_Get(degree1, 2) + 2 * IOSIntArray_Get(degree2, 0) + 2 * IOSIntArray_Get(degree3, 2) + IOSIntArray_Get(degree4, 1), IOSIntArray_Get(degree1, 0) + IOSIntArray_Get(degree1, 2) + 2 * IOSIntArray_Get(degree2, 1) + 2 * IOSIntArray_Get(degree3, 2) + IOSIntArray_Get(degree4, 1), 2 * IOSIntArray_Get(degree1, 0) + IOSIntArray_Get(degree2, 0) + IOSIntArray_Get(degree2, 2) + 2 * IOSIntArray_Get(degree3, 2) + IOSIntArray_Get(degree4, 1), 2 * IOSIntArray_Get(degree1, 1) + IOSIntArray_Get(degree2, 0) + IOSIntArray_Get(degree2, 2) + 2 * IOSIntArray_Get(degree3, 2) + IOSIntArray_Get(degree4, 1), IOSIntArray_Get(degree4, 2), 2 * IOSIntArray_Get(degree4, 2) } count:46];
    jint max = IOSIntArray_Get(list, 0);
    for (jint i = 1; i < list->size_; i++) {
      if (IOSIntArray_Get(list, i) > max) {
        max = IOSIntArray_Get(list, i);
      }
    }
    *IOSIntArray_GetRef(degree, 0) = max;
    return degree;
  }
  @throw [new_GeogebraCommonKernelProverNoSymbolicParametersException_init() autorelease];
}

- (IOSObjectArray *)getExactCoordinatesWithJavaUtilHashMap:(JavaUtilHashMap *)values {
  if (inputPoint1_ != nil && inputPoint2_ != nil && inputPoint3_ != nil && inputPoint4_ != nil) {
    IOSObjectArray *coords1 = [inputPoint1_ getExactCoordinatesWithJavaUtilHashMap:values];
    IOSObjectArray *coords2 = [inputPoint2_ getExactCoordinatesWithJavaUtilHashMap:values];
    IOSObjectArray *coords3 = [inputPoint3_ getExactCoordinatesWithJavaUtilHashMap:values];
    IOSObjectArray *coords4 = [inputPoint4_ getExactCoordinatesWithJavaUtilHashMap:values];
    IOSObjectArray *coords = [IOSObjectArray arrayWithLength:1 type:JavaMathBigInteger_class_()];
    IOSObjectArray *matrix = [IOSObjectArray arrayWithDimensions:2 lengths:(jint[]){ 4, 4 } type:JavaMathBigInteger_class_()];
    IOSObjectArray_Set(nil_chk(IOSObjectArray_Get(matrix, 0)), 0, [((JavaMathBigInteger *) nil_chk(IOSObjectArray_Get(nil_chk(coords1), 0))) multiplyWithJavaMathBigInteger:IOSObjectArray_Get(coords1, 2)]);
    IOSObjectArray_Set(nil_chk(IOSObjectArray_Get(matrix, 0)), 1, [((JavaMathBigInteger *) nil_chk(IOSObjectArray_Get(coords1, 1))) multiplyWithJavaMathBigInteger:IOSObjectArray_Get(coords1, 2)]);
    IOSObjectArray_Set(nil_chk(IOSObjectArray_Get(matrix, 0)), 2, [((JavaMathBigInteger *) nil_chk([((JavaMathBigInteger *) nil_chk(IOSObjectArray_Get(coords1, 0))) multiplyWithJavaMathBigInteger:IOSObjectArray_Get(coords1, 0)])) addWithJavaMathBigInteger:[((JavaMathBigInteger *) nil_chk(IOSObjectArray_Get(coords1, 1))) multiplyWithJavaMathBigInteger:IOSObjectArray_Get(coords1, 1)]]);
    IOSObjectArray_Set(nil_chk(IOSObjectArray_Get(matrix, 0)), 3, [((JavaMathBigInteger *) nil_chk(IOSObjectArray_Get(coords1, 2))) multiplyWithJavaMathBigInteger:IOSObjectArray_Get(coords1, 2)]);
    IOSObjectArray_Set(nil_chk(IOSObjectArray_Get(matrix, 1)), 0, [((JavaMathBigInteger *) nil_chk(IOSObjectArray_Get(nil_chk(coords2), 0))) multiplyWithJavaMathBigInteger:IOSObjectArray_Get(coords2, 2)]);
    IOSObjectArray_Set(nil_chk(IOSObjectArray_Get(matrix, 1)), 1, [((JavaMathBigInteger *) nil_chk(IOSObjectArray_Get(coords2, 1))) multiplyWithJavaMathBigInteger:IOSObjectArray_Get(coords2, 2)]);
    IOSObjectArray_Set(nil_chk(IOSObjectArray_Get(matrix, 1)), 2, [((JavaMathBigInteger *) nil_chk([((JavaMathBigInteger *) nil_chk(IOSObjectArray_Get(coords2, 0))) multiplyWithJavaMathBigInteger:IOSObjectArray_Get(coords2, 0)])) addWithJavaMathBigInteger:[((JavaMathBigInteger *) nil_chk(IOSObjectArray_Get(coords2, 1))) multiplyWithJavaMathBigInteger:IOSObjectArray_Get(coords2, 1)]]);
    IOSObjectArray_Set(nil_chk(IOSObjectArray_Get(matrix, 1)), 3, [((JavaMathBigInteger *) nil_chk(IOSObjectArray_Get(coords2, 2))) multiplyWithJavaMathBigInteger:IOSObjectArray_Get(coords2, 2)]);
    IOSObjectArray_Set(nil_chk(IOSObjectArray_Get(matrix, 2)), 0, [((JavaMathBigInteger *) nil_chk(IOSObjectArray_Get(nil_chk(coords3), 0))) multiplyWithJavaMathBigInteger:IOSObjectArray_Get(coords3, 2)]);
    IOSObjectArray_Set(nil_chk(IOSObjectArray_Get(matrix, 2)), 1, [((JavaMathBigInteger *) nil_chk(IOSObjectArray_Get(coords3, 1))) multiplyWithJavaMathBigInteger:IOSObjectArray_Get(coords3, 2)]);
    IOSObjectArray_Set(nil_chk(IOSObjectArray_Get(matrix, 2)), 2, [((JavaMathBigInteger *) nil_chk([((JavaMathBigInteger *) nil_chk(IOSObjectArray_Get(coords3, 0))) multiplyWithJavaMathBigInteger:IOSObjectArray_Get(coords3, 0)])) addWithJavaMathBigInteger:[((JavaMathBigInteger *) nil_chk(IOSObjectArray_Get(coords3, 1))) multiplyWithJavaMathBigInteger:IOSObjectArray_Get(coords3, 1)]]);
    IOSObjectArray_Set(nil_chk(IOSObjectArray_Get(matrix, 2)), 3, [((JavaMathBigInteger *) nil_chk(IOSObjectArray_Get(coords3, 2))) multiplyWithJavaMathBigInteger:IOSObjectArray_Get(coords3, 2)]);
    IOSObjectArray_Set(nil_chk(IOSObjectArray_Get(matrix, 3)), 0, [((JavaMathBigInteger *) nil_chk(IOSObjectArray_Get(nil_chk(coords4), 0))) multiplyWithJavaMathBigInteger:IOSObjectArray_Get(coords4, 2)]);
    IOSObjectArray_Set(nil_chk(IOSObjectArray_Get(matrix, 3)), 1, [((JavaMathBigInteger *) nil_chk(IOSObjectArray_Get(coords4, 1))) multiplyWithJavaMathBigInteger:IOSObjectArray_Get(coords4, 2)]);
    IOSObjectArray_Set(nil_chk(IOSObjectArray_Get(matrix, 3)), 2, [((JavaMathBigInteger *) nil_chk([((JavaMathBigInteger *) nil_chk(IOSObjectArray_Get(coords4, 0))) multiplyWithJavaMathBigInteger:IOSObjectArray_Get(coords4, 0)])) addWithJavaMathBigInteger:[((JavaMathBigInteger *) nil_chk(IOSObjectArray_Get(coords4, 1))) multiplyWithJavaMathBigInteger:IOSObjectArray_Get(coords4, 1)]]);
    IOSObjectArray_Set(nil_chk(IOSObjectArray_Get(matrix, 3)), 3, [((JavaMathBigInteger *) nil_chk(IOSObjectArray_Get(coords4, 2))) multiplyWithJavaMathBigInteger:IOSObjectArray_Get(coords4, 2)]);
    IOSObjectArray_Set(coords, 0, GeogebraCommonKernelAlgosSymbolicParameters_det4WithJavaMathBigIntegerArray2_(matrix));
    return coords;
  }
  @throw [new_GeogebraCommonKernelProverNoSymbolicParametersException_init() autorelease];
}

- (IOSObjectArray *)getPolynomials {
  if (polynomials_ != nil) {
    return polynomials_;
  }
  if (inputPoint1_ != nil && inputPoint2_ != nil && inputPoint3_ != nil && inputPoint4_ != nil) {
    IOSObjectArray *coords1 = [inputPoint1_ getPolynomials];
    IOSObjectArray *coords2 = [inputPoint2_ getPolynomials];
    IOSObjectArray *coords3 = [inputPoint3_ getPolynomials];
    IOSObjectArray *coords4 = [inputPoint4_ getPolynomials];
    GeogebraCommonKernelProverAlgoAreConcyclic_setAndConsume_polynomials_(self, [IOSObjectArray newArrayWithLength:1 type:GeogebraCommonKernelProverPolynomialPolynomial_class_()]);
    IOSObjectArray *matrix = [IOSObjectArray arrayWithDimensions:2 lengths:(jint[]){ 4, 4 } type:GeogebraCommonKernelProverPolynomialPolynomial_class_()];
    IOSObjectArray_Set(nil_chk(IOSObjectArray_Get(matrix, 0)), 0, [((GeogebraCommonKernelProverPolynomialPolynomial *) nil_chk(IOSObjectArray_Get(nil_chk(coords1), 0))) multiplyWithGeogebraCommonKernelProverPolynomialPolynomial:IOSObjectArray_Get(coords1, 2)]);
    IOSObjectArray_Set(nil_chk(IOSObjectArray_Get(matrix, 0)), 1, [((GeogebraCommonKernelProverPolynomialPolynomial *) nil_chk(IOSObjectArray_Get(coords1, 1))) multiplyWithGeogebraCommonKernelProverPolynomialPolynomial:IOSObjectArray_Get(coords1, 2)]);
    IOSObjectArray_Set(nil_chk(IOSObjectArray_Get(matrix, 0)), 2, [((GeogebraCommonKernelProverPolynomialPolynomial *) nil_chk([((GeogebraCommonKernelProverPolynomialPolynomial *) nil_chk(IOSObjectArray_Get(coords1, 0))) multiplyWithGeogebraCommonKernelProverPolynomialPolynomial:IOSObjectArray_Get(coords1, 0)])) addWithGeogebraCommonKernelProverPolynomialPolynomial:[((GeogebraCommonKernelProverPolynomialPolynomial *) nil_chk(IOSObjectArray_Get(coords1, 1))) multiplyWithGeogebraCommonKernelProverPolynomialPolynomial:IOSObjectArray_Get(coords1, 1)]]);
    IOSObjectArray_Set(nil_chk(IOSObjectArray_Get(matrix, 0)), 3, [((GeogebraCommonKernelProverPolynomialPolynomial *) nil_chk(IOSObjectArray_Get(coords1, 2))) multiplyWithGeogebraCommonKernelProverPolynomialPolynomial:IOSObjectArray_Get(coords1, 2)]);
    IOSObjectArray_Set(nil_chk(IOSObjectArray_Get(matrix, 1)), 0, [((GeogebraCommonKernelProverPolynomialPolynomial *) nil_chk(IOSObjectArray_Get(nil_chk(coords2), 0))) multiplyWithGeogebraCommonKernelProverPolynomialPolynomial:IOSObjectArray_Get(coords2, 2)]);
    IOSObjectArray_Set(nil_chk(IOSObjectArray_Get(matrix, 1)), 1, [((GeogebraCommonKernelProverPolynomialPolynomial *) nil_chk(IOSObjectArray_Get(coords2, 1))) multiplyWithGeogebraCommonKernelProverPolynomialPolynomial:IOSObjectArray_Get(coords2, 2)]);
    IOSObjectArray_Set(nil_chk(IOSObjectArray_Get(matrix, 1)), 2, [((GeogebraCommonKernelProverPolynomialPolynomial *) nil_chk([((GeogebraCommonKernelProverPolynomialPolynomial *) nil_chk(IOSObjectArray_Get(coords2, 0))) multiplyWithGeogebraCommonKernelProverPolynomialPolynomial:IOSObjectArray_Get(coords2, 0)])) addWithGeogebraCommonKernelProverPolynomialPolynomial:[((GeogebraCommonKernelProverPolynomialPolynomial *) nil_chk(IOSObjectArray_Get(coords2, 1))) multiplyWithGeogebraCommonKernelProverPolynomialPolynomial:IOSObjectArray_Get(coords2, 1)]]);
    IOSObjectArray_Set(nil_chk(IOSObjectArray_Get(matrix, 1)), 3, [((GeogebraCommonKernelProverPolynomialPolynomial *) nil_chk(IOSObjectArray_Get(coords2, 2))) multiplyWithGeogebraCommonKernelProverPolynomialPolynomial:IOSObjectArray_Get(coords2, 2)]);
    IOSObjectArray_Set(nil_chk(IOSObjectArray_Get(matrix, 2)), 0, [((GeogebraCommonKernelProverPolynomialPolynomial *) nil_chk(IOSObjectArray_Get(nil_chk(coords3), 0))) multiplyWithGeogebraCommonKernelProverPolynomialPolynomial:IOSObjectArray_Get(coords3, 2)]);
    IOSObjectArray_Set(nil_chk(IOSObjectArray_Get(matrix, 2)), 1, [((GeogebraCommonKernelProverPolynomialPolynomial *) nil_chk(IOSObjectArray_Get(coords3, 1))) multiplyWithGeogebraCommonKernelProverPolynomialPolynomial:IOSObjectArray_Get(coords3, 2)]);
    IOSObjectArray_Set(nil_chk(IOSObjectArray_Get(matrix, 2)), 2, [((GeogebraCommonKernelProverPolynomialPolynomial *) nil_chk([((GeogebraCommonKernelProverPolynomialPolynomial *) nil_chk(IOSObjectArray_Get(coords3, 0))) multiplyWithGeogebraCommonKernelProverPolynomialPolynomial:IOSObjectArray_Get(coords3, 0)])) addWithGeogebraCommonKernelProverPolynomialPolynomial:[((GeogebraCommonKernelProverPolynomialPolynomial *) nil_chk(IOSObjectArray_Get(coords3, 1))) multiplyWithGeogebraCommonKernelProverPolynomialPolynomial:IOSObjectArray_Get(coords3, 1)]]);
    IOSObjectArray_Set(nil_chk(IOSObjectArray_Get(matrix, 2)), 3, [((GeogebraCommonKernelProverPolynomialPolynomial *) nil_chk(IOSObjectArray_Get(coords3, 2))) multiplyWithGeogebraCommonKernelProverPolynomialPolynomial:IOSObjectArray_Get(coords3, 2)]);
    IOSObjectArray_Set(nil_chk(IOSObjectArray_Get(matrix, 3)), 0, [((GeogebraCommonKernelProverPolynomialPolynomial *) nil_chk(IOSObjectArray_Get(nil_chk(coords4), 0))) multiplyWithGeogebraCommonKernelProverPolynomialPolynomial:IOSObjectArray_Get(coords4, 2)]);
    IOSObjectArray_Set(nil_chk(IOSObjectArray_Get(matrix, 3)), 1, [((GeogebraCommonKernelProverPolynomialPolynomial *) nil_chk(IOSObjectArray_Get(coords4, 1))) multiplyWithGeogebraCommonKernelProverPolynomialPolynomial:IOSObjectArray_Get(coords4, 2)]);
    IOSObjectArray_Set(nil_chk(IOSObjectArray_Get(matrix, 3)), 2, [((GeogebraCommonKernelProverPolynomialPolynomial *) nil_chk([((GeogebraCommonKernelProverPolynomialPolynomial *) nil_chk(IOSObjectArray_Get(coords4, 0))) multiplyWithGeogebraCommonKernelProverPolynomialPolynomial:IOSObjectArray_Get(coords4, 0)])) addWithGeogebraCommonKernelProverPolynomialPolynomial:[((GeogebraCommonKernelProverPolynomialPolynomial *) nil_chk(IOSObjectArray_Get(coords4, 1))) multiplyWithGeogebraCommonKernelProverPolynomialPolynomial:IOSObjectArray_Get(coords4, 1)]]);
    IOSObjectArray_Set(nil_chk(IOSObjectArray_Get(matrix, 3)), 3, [((GeogebraCommonKernelProverPolynomialPolynomial *) nil_chk(IOSObjectArray_Get(coords4, 2))) multiplyWithGeogebraCommonKernelProverPolynomialPolynomial:IOSObjectArray_Get(coords4, 2)]);
    IOSObjectArray_Set(polynomials_, 0, GeogebraCommonKernelProverPolynomialPolynomial_det4WithGeogebraCommonKernelProverPolynomialPolynomialArray2_(matrix));
    return polynomials_;
  }
  @throw [new_GeogebraCommonKernelProverNoSymbolicParametersException_init() autorelease];
}

- (IOSObjectArray *)getBotanaPolynomials {
  if (botanaPolynomials_ != nil) {
    return botanaPolynomials_;
  }
  if (inputPoint1_ != nil && inputPoint2_ != nil && inputPoint3_ != nil && inputPoint4_ != nil) {
    IOSObjectArray *coords1 = [inputPoint1_ getBotanaVarsWithGeogebraCommonKernelGeosGeoElement:inputPoint1_];
    IOSObjectArray *coords2 = [inputPoint2_ getBotanaVarsWithGeogebraCommonKernelGeosGeoElement:inputPoint2_];
    IOSObjectArray *coords3 = [inputPoint3_ getBotanaVarsWithGeogebraCommonKernelGeosGeoElement:inputPoint3_];
    IOSObjectArray *coords4 = [inputPoint4_ getBotanaVarsWithGeogebraCommonKernelGeosGeoElement:inputPoint4_];
    GeogebraCommonKernelProverAlgoAreConcyclic_setAndConsume_botanaPolynomials_(self, [IOSObjectArray newArrayWithDimensions:2 lengths:(jint[]){ 1, 1 } type:GeogebraCommonKernelProverPolynomialPolynomial_class_()]);
    IOSObjectArray *matrix = [IOSObjectArray arrayWithDimensions:2 lengths:(jint[]){ 4, 4 } type:GeogebraCommonKernelProverPolynomialPolynomial_class_()];
    IOSObjectArray_SetAndConsume(nil_chk(IOSObjectArray_Get(matrix, 0)), 0, new_GeogebraCommonKernelProverPolynomialPolynomial_initWithGeogebraCommonKernelProverPolynomialVariable_(IOSObjectArray_Get(nil_chk(coords1), 0)));
    IOSObjectArray_SetAndConsume(nil_chk(IOSObjectArray_Get(matrix, 0)), 1, new_GeogebraCommonKernelProverPolynomialPolynomial_initWithGeogebraCommonKernelProverPolynomialVariable_(IOSObjectArray_Get(coords1, 1)));
    IOSObjectArray_Set(nil_chk(IOSObjectArray_Get(matrix, 0)), 2, [((GeogebraCommonKernelProverPolynomialPolynomial *) nil_chk([((GeogebraCommonKernelProverPolynomialPolynomial *) nil_chk(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(matrix, 0)), 0))) multiplyWithGeogebraCommonKernelProverPolynomialPolynomial:IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(matrix, 0)), 0)])) addWithGeogebraCommonKernelProverPolynomialPolynomial:[((GeogebraCommonKernelProverPolynomialPolynomial *) nil_chk(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(matrix, 0)), 1))) multiplyWithGeogebraCommonKernelProverPolynomialPolynomial:IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(matrix, 0)), 1)]]);
    IOSObjectArray_SetAndConsume(nil_chk(IOSObjectArray_Get(matrix, 0)), 3, new_GeogebraCommonKernelProverPolynomialPolynomial_initWithInt_(1));
    IOSObjectArray_SetAndConsume(nil_chk(IOSObjectArray_Get(matrix, 1)), 0, new_GeogebraCommonKernelProverPolynomialPolynomial_initWithGeogebraCommonKernelProverPolynomialVariable_(IOSObjectArray_Get(nil_chk(coords2), 0)));
    IOSObjectArray_SetAndConsume(nil_chk(IOSObjectArray_Get(matrix, 1)), 1, new_GeogebraCommonKernelProverPolynomialPolynomial_initWithGeogebraCommonKernelProverPolynomialVariable_(IOSObjectArray_Get(coords2, 1)));
    IOSObjectArray_Set(nil_chk(IOSObjectArray_Get(matrix, 1)), 2, [((GeogebraCommonKernelProverPolynomialPolynomial *) nil_chk([((GeogebraCommonKernelProverPolynomialPolynomial *) nil_chk(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(matrix, 1)), 0))) multiplyWithGeogebraCommonKernelProverPolynomialPolynomial:IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(matrix, 1)), 0)])) addWithGeogebraCommonKernelProverPolynomialPolynomial:[((GeogebraCommonKernelProverPolynomialPolynomial *) nil_chk(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(matrix, 1)), 1))) multiplyWithGeogebraCommonKernelProverPolynomialPolynomial:IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(matrix, 1)), 1)]]);
    IOSObjectArray_SetAndConsume(nil_chk(IOSObjectArray_Get(matrix, 1)), 3, new_GeogebraCommonKernelProverPolynomialPolynomial_initWithInt_(1));
    IOSObjectArray_SetAndConsume(nil_chk(IOSObjectArray_Get(matrix, 2)), 0, new_GeogebraCommonKernelProverPolynomialPolynomial_initWithGeogebraCommonKernelProverPolynomialVariable_(IOSObjectArray_Get(nil_chk(coords3), 0)));
    IOSObjectArray_SetAndConsume(nil_chk(IOSObjectArray_Get(matrix, 2)), 1, new_GeogebraCommonKernelProverPolynomialPolynomial_initWithGeogebraCommonKernelProverPolynomialVariable_(IOSObjectArray_Get(coords3, 1)));
    IOSObjectArray_Set(nil_chk(IOSObjectArray_Get(matrix, 2)), 2, [((GeogebraCommonKernelProverPolynomialPolynomial *) nil_chk([((GeogebraCommonKernelProverPolynomialPolynomial *) nil_chk(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(matrix, 2)), 0))) multiplyWithGeogebraCommonKernelProverPolynomialPolynomial:IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(matrix, 2)), 0)])) addWithGeogebraCommonKernelProverPolynomialPolynomial:[((GeogebraCommonKernelProverPolynomialPolynomial *) nil_chk(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(matrix, 2)), 1))) multiplyWithGeogebraCommonKernelProverPolynomialPolynomial:IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(matrix, 2)), 1)]]);
    IOSObjectArray_SetAndConsume(nil_chk(IOSObjectArray_Get(matrix, 2)), 3, new_GeogebraCommonKernelProverPolynomialPolynomial_initWithInt_(1));
    IOSObjectArray_SetAndConsume(nil_chk(IOSObjectArray_Get(matrix, 3)), 0, new_GeogebraCommonKernelProverPolynomialPolynomial_initWithGeogebraCommonKernelProverPolynomialVariable_(IOSObjectArray_Get(nil_chk(coords4), 0)));
    IOSObjectArray_SetAndConsume(nil_chk(IOSObjectArray_Get(matrix, 3)), 1, new_GeogebraCommonKernelProverPolynomialPolynomial_initWithGeogebraCommonKernelProverPolynomialVariable_(IOSObjectArray_Get(coords4, 1)));
    IOSObjectArray_Set(nil_chk(IOSObjectArray_Get(matrix, 3)), 2, [((GeogebraCommonKernelProverPolynomialPolynomial *) nil_chk([((GeogebraCommonKernelProverPolynomialPolynomial *) nil_chk(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(matrix, 3)), 0))) multiplyWithGeogebraCommonKernelProverPolynomialPolynomial:IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(matrix, 3)), 0)])) addWithGeogebraCommonKernelProverPolynomialPolynomial:[((GeogebraCommonKernelProverPolynomialPolynomial *) nil_chk(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(matrix, 3)), 1))) multiplyWithGeogebraCommonKernelProverPolynomialPolynomial:IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(matrix, 3)), 1)]]);
    IOSObjectArray_SetAndConsume(nil_chk(IOSObjectArray_Get(matrix, 3)), 3, new_GeogebraCommonKernelProverPolynomialPolynomial_initWithInt_(1));
    IOSObjectArray_Set(nil_chk(IOSObjectArray_Get(botanaPolynomials_, 0)), 0, GeogebraCommonKernelProverPolynomialPolynomial_det4WithGeogebraCommonKernelProverPolynomialPolynomialArray2_(matrix));
    return botanaPolynomials_;
  }
  @throw [new_GeogebraCommonKernelProverNoSymbolicParametersException_init() autorelease];
}

- (void)dealloc {
  RELEASE_(inputPoint1_);
  RELEASE_(inputPoint2_);
  RELEASE_(inputPoint3_);
  RELEASE_(inputPoint4_);
  RELEASE_(outputBoolean_);
  RELEASE_(polynomials_);
  RELEASE_(botanaPolynomials_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonKernelConstruction:withNSString:withGeogebraCommonKernelGeosGeoPoint:withGeogebraCommonKernelGeosGeoPoint:withGeogebraCommonKernelGeosGeoPoint:withGeogebraCommonKernelGeosGeoPoint:", "AlgoAreConcyclic", NULL, 0x1, NULL, NULL },
    { "getClassName", NULL, "Lgeogebra.common.kernel.commands.Commands;", 0x1, NULL, NULL },
    { "setInputOutput", NULL, "V", 0x4, NULL, NULL },
    { "getResult", NULL, "Lgeogebra.common.kernel.geos.GeoBoolean;", 0x1, NULL, NULL },
    { "compute", NULL, "V", 0x11, NULL, NULL },
    { "getSymbolicParameters", NULL, "Lgeogebra.common.kernel.algos.SymbolicParameters;", 0x1, NULL, NULL },
    { "getFreeVariablesWithJavaUtilHashSet:", "getFreeVariables", "V", 0x1, "Lgeogebra.common.kernel.prover.NoSymbolicParametersException;", NULL },
    { "getDegrees", NULL, "[I", 0x1, "Lgeogebra.common.kernel.prover.NoSymbolicParametersException;", NULL },
    { "getExactCoordinatesWithJavaUtilHashMap:", "getExactCoordinates", "[Ljava.math.BigInteger;", 0x1, "Lgeogebra.common.kernel.prover.NoSymbolicParametersException;", NULL },
    { "getPolynomials", NULL, "[Lgeogebra.common.kernel.prover.polynomial.Polynomial;", 0x1, "Lgeogebra.common.kernel.prover.NoSymbolicParametersException;", NULL },
    { "getBotanaPolynomials", NULL, "[[Lgeogebra.common.kernel.prover.polynomial.Polynomial;", 0x1, "Lgeogebra.common.kernel.prover.NoSymbolicParametersException;", NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "inputPoint1_", NULL, 0x2, "Lgeogebra.common.kernel.geos.GeoPoint;", NULL, NULL,  },
    { "inputPoint2_", NULL, 0x2, "Lgeogebra.common.kernel.geos.GeoPoint;", NULL, NULL,  },
    { "inputPoint3_", NULL, 0x2, "Lgeogebra.common.kernel.geos.GeoPoint;", NULL, NULL,  },
    { "inputPoint4_", NULL, 0x2, "Lgeogebra.common.kernel.geos.GeoPoint;", NULL, NULL,  },
    { "outputBoolean_", NULL, 0x2, "Lgeogebra.common.kernel.geos.GeoBoolean;", NULL, NULL,  },
    { "polynomials_", NULL, 0x2, "[Lgeogebra.common.kernel.prover.polynomial.Polynomial;", NULL, NULL,  },
    { "botanaPolynomials_", NULL, 0x2, "[[Lgeogebra.common.kernel.prover.polynomial.Polynomial;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelProverAlgoAreConcyclic = { 2, "AlgoAreConcyclic", "geogebra.common.kernel.prover", NULL, 0x1, 11, methods, 7, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelProverAlgoAreConcyclic;
}

@end

void GeogebraCommonKernelProverAlgoAreConcyclic_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoPoint_withGeogebraCommonKernelGeosGeoPoint_withGeogebraCommonKernelGeosGeoPoint_withGeogebraCommonKernelGeosGeoPoint_(GeogebraCommonKernelProverAlgoAreConcyclic *self, GeogebraCommonKernelConstruction *cons, NSString *label, GeogebraCommonKernelGeosGeoPoint *inputPoint1, GeogebraCommonKernelGeosGeoPoint *inputPoint2, GeogebraCommonKernelGeosGeoPoint *inputPoint3, GeogebraCommonKernelGeosGeoPoint *inputPoint4) {
  GeogebraCommonKernelAlgosAlgoElement_initWithGeogebraCommonKernelConstruction_(self, cons);
  GeogebraCommonKernelProverAlgoAreConcyclic_set_inputPoint1_(self, inputPoint1);
  GeogebraCommonKernelProverAlgoAreConcyclic_set_inputPoint2_(self, inputPoint2);
  GeogebraCommonKernelProverAlgoAreConcyclic_set_inputPoint3_(self, inputPoint3);
  GeogebraCommonKernelProverAlgoAreConcyclic_set_inputPoint4_(self, inputPoint4);
  GeogebraCommonKernelProverAlgoAreConcyclic_setAndConsume_outputBoolean_(self, new_GeogebraCommonKernelGeosGeoBoolean_initWithGeogebraCommonKernelConstruction_(cons));
  [self setInputOutput];
  GeogebraCommonKernelProverAlgoAreConcyclic_compute(self);
}

GeogebraCommonKernelProverAlgoAreConcyclic *new_GeogebraCommonKernelProverAlgoAreConcyclic_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoPoint_withGeogebraCommonKernelGeosGeoPoint_withGeogebraCommonKernelGeosGeoPoint_withGeogebraCommonKernelGeosGeoPoint_(GeogebraCommonKernelConstruction *cons, NSString *label, GeogebraCommonKernelGeosGeoPoint *inputPoint1, GeogebraCommonKernelGeosGeoPoint *inputPoint2, GeogebraCommonKernelGeosGeoPoint *inputPoint3, GeogebraCommonKernelGeosGeoPoint *inputPoint4) {
  GeogebraCommonKernelProverAlgoAreConcyclic *self = [GeogebraCommonKernelProverAlgoAreConcyclic alloc];
  GeogebraCommonKernelProverAlgoAreConcyclic_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoPoint_withGeogebraCommonKernelGeosGeoPoint_withGeogebraCommonKernelGeosGeoPoint_withGeogebraCommonKernelGeosGeoPoint_(self, cons, label, inputPoint1, inputPoint2, inputPoint3, inputPoint4);
  return self;
}

void GeogebraCommonKernelProverAlgoAreConcyclic_compute(GeogebraCommonKernelProverAlgoAreConcyclic *self) {
  jdouble ax = [((GeogebraCommonKernelGeosGeoPoint *) nil_chk(self->inputPoint1_)) getX], ay = [self->inputPoint1_ getY], az = [self->inputPoint1_ getZ], bx = [((GeogebraCommonKernelGeosGeoPoint *) nil_chk(self->inputPoint2_)) getX], by = [self->inputPoint2_ getY], bz = [self->inputPoint2_ getZ], cx = [((GeogebraCommonKernelGeosGeoPoint *) nil_chk(self->inputPoint3_)) getX], cy = [self->inputPoint3_ getY], cz = [self->inputPoint3_ getZ], dx = [((GeogebraCommonKernelGeosGeoPoint *) nil_chk(self->inputPoint4_)) getX], dy = [self->inputPoint4_ getY], dz = [self->inputPoint4_ getZ];
  jdouble ab = cz * dz * JavaLangMath_sqrtWithDouble_((bx * az - ax * bz) * (bx * az - ax * bz) + (by * az - ay * bz) * (by * az - ay * bz));
  jdouble ac = bz * dz * JavaLangMath_sqrtWithDouble_((cx * az - ax * cz) * (cx * az - ax * cz) + (cy * az - ay * cz) * (cy * az - ay * cz));
  jdouble ad = bz * cz * JavaLangMath_sqrtWithDouble_((dx * az - ax * dz) * (dx * az - ax * dz) + (dy * az - ay * dz) * (dy * az - ay * dz));
  jdouble bc = az * dz * JavaLangMath_sqrtWithDouble_((cx * bz - bx * cz) * (cx * bz - bx * cz) + (cy * bz - by * cz) * (cy * bz - by * cz));
  jdouble bd = az * cz * JavaLangMath_sqrtWithDouble_((dx * bz - bx * dz) * (dx * bz - bx * dz) + (dy * bz - by * dz) * (dy * bz - by * dz));
  jdouble cd = az * bz * JavaLangMath_sqrtWithDouble_((dx * cz - cx * dz) * (dx * cz - cx * dz) + (dy * cz - cy * dz) * (dy * cz - cy * dz));
  if (GeogebraCommonKernelKernel_isZeroWithDouble_withDouble_((ab * cd + bc * ad - ac * bd) / (az * bz * cz * dz), GeogebraCommonKernelKernel_MIN_PRECISION) || GeogebraCommonKernelKernel_isZeroWithDouble_withDouble_((ab * cd + ac * bd - bc * ad) / (az * bz * cz * dz), GeogebraCommonKernelKernel_MIN_PRECISION) || GeogebraCommonKernelKernel_isZeroWithDouble_withDouble_((bc * ad + ac * bd - ab * cd) / (az * bz * cz * dz), GeogebraCommonKernelKernel_MIN_PRECISION)) {
    [((GeogebraCommonKernelGeosGeoBoolean *) nil_chk(self->outputBoolean_)) setValueWithBoolean:YES];
  }
  else {
    [((GeogebraCommonKernelGeosGeoBoolean *) nil_chk(self->outputBoolean_)) setValueWithBoolean:NO];
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelProverAlgoAreConcyclic)
