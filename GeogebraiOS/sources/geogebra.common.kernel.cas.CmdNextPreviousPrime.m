//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/cas/CmdNextPreviousPrime.java
//


#include "J2ObjC_source.h"
#include "geogebra/common/kernel/Construction.h"
#include "geogebra/common/kernel/Kernel.h"
#include "geogebra/common/kernel/cas/AlgoNextPreviousPrime.h"
#include "geogebra/common/kernel/cas/CmdNextPreviousPrime.h"
#include "geogebra/common/kernel/commands/CmdOneNumber.h"
#include "geogebra/common/kernel/geos/GeoElement.h"
#include "geogebra/common/kernel/geos/GeoNumberValue.h"
#include "geogebra/common/kernel/geos/GeoNumeric.h"

@interface GeogebraCommonKernelCasCmdNextPreviousPrime () {
 @public
  jboolean next_;
}

@end

@implementation GeogebraCommonKernelCasCmdNextPreviousPrime

- (instancetype)initWithGeogebraCommonKernelKernel:(GeogebraCommonKernelKernel *)kernel
                                       withBoolean:(jboolean)next {
  GeogebraCommonKernelCasCmdNextPreviousPrime_initWithGeogebraCommonKernelKernel_withBoolean_(self, kernel, next);
  return self;
}

- (GeogebraCommonKernelGeosGeoElement *)getResultWithGeogebraCommonKernelGeosGeoNumberValue:(id<GeogebraCommonKernelGeosGeoNumberValue>)num
                                                                               withNSString:(NSString *)label {
  GeogebraCommonKernelCasAlgoNextPreviousPrime *algo = [new_GeogebraCommonKernelCasAlgoNextPreviousPrime_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelArithmeticNumberValue_withBoolean_(cons_, label, num, next_) autorelease];
  return [algo getResult];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonKernelKernel:withBoolean:", "CmdNextPreviousPrime", NULL, 0x1, NULL, NULL },
    { "getResultWithGeogebraCommonKernelGeosGeoNumberValue:withNSString:", "getResult", "Lgeogebra.common.kernel.geos.GeoElement;", 0x4, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "next_", NULL, 0x2, "Z", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelCasCmdNextPreviousPrime = { 2, "CmdNextPreviousPrime", "geogebra.common.kernel.cas", NULL, 0x1, 2, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelCasCmdNextPreviousPrime;
}

@end

void GeogebraCommonKernelCasCmdNextPreviousPrime_initWithGeogebraCommonKernelKernel_withBoolean_(GeogebraCommonKernelCasCmdNextPreviousPrime *self, GeogebraCommonKernelKernel *kernel, jboolean next) {
  GeogebraCommonKernelCommandsCmdOneNumber_initWithGeogebraCommonKernelKernel_(self, kernel);
  self->next_ = next;
}

GeogebraCommonKernelCasCmdNextPreviousPrime *new_GeogebraCommonKernelCasCmdNextPreviousPrime_initWithGeogebraCommonKernelKernel_withBoolean_(GeogebraCommonKernelKernel *kernel, jboolean next) {
  GeogebraCommonKernelCasCmdNextPreviousPrime *self = [GeogebraCommonKernelCasCmdNextPreviousPrime alloc];
  GeogebraCommonKernelCasCmdNextPreviousPrime_initWithGeogebraCommonKernelKernel_withBoolean_(self, kernel, next);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelCasCmdNextPreviousPrime)
