//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/geogebra3D/kernel3D/algos/AlgoIntersectConics3D.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "geogebra/common/euclidian/EuclidianConstants.h"
#include "geogebra/common/geogebra3D/kernel3D/algos/AlgoIntersect3D.h"
#include "geogebra/common/geogebra3D/kernel3D/algos/AlgoIntersectConics3D.h"
#include "geogebra/common/geogebra3D/kernel3D/geos/GeoPoint3D.h"
#include "geogebra/common/kernel/Construction.h"
#include "geogebra/common/kernel/Kernel.h"
#include "geogebra/common/kernel/Matrix/CoordMatrix.h"
#include "geogebra/common/kernel/Matrix/CoordMatrix4x4.h"
#include "geogebra/common/kernel/Matrix/CoordMatrixUtil.h"
#include "geogebra/common/kernel/Matrix/CoordSys.h"
#include "geogebra/common/kernel/Matrix/Coords.h"
#include "geogebra/common/kernel/StringTemplate.h"
#include "geogebra/common/kernel/algos/AlgoElement.h"
#include "geogebra/common/kernel/algos/AlgoIntersectConics.h"
#include "geogebra/common/kernel/algos/AlgoIntersectLineConic.h"
#include "geogebra/common/kernel/algos/ConstructionElement.h"
#include "geogebra/common/kernel/commands/Commands.h"
#include "geogebra/common/kernel/geos/GeoConic.h"
#include "geogebra/common/kernel/geos/GeoElement.h"
#include "geogebra/common/kernel/geos/GeoLine.h"
#include "geogebra/common/kernel/geos/GeoPoint.h"
#include "geogebra/common/kernel/kernelND/AlgoIntersectND.h"
#include "geogebra/common/kernel/kernelND/GeoConicND.h"
#include "geogebra/common/kernel/kernelND/GeoPointND.h"
#include "geogebra/common/main/Localization.h"

#define GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectConics3D_serialVersionUID 1LL

@interface GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectConics3D () {
 @public
  GeogebraCommonKernelKernelNDGeoConicND *A_, *B_;
  IOSObjectArray *P_, *D_;
  GeogebraCommonKernelGeosGeoLine *l2d_;
  GeogebraCommonKernelGeosGeoConic *A2d_, *B2d_;
  IOSObjectArray *points2d_;
  GeogebraCommonKernelAlgosAlgoIntersectConics *algo2d_;
}

+ (void)checkIsOnConicWithGeogebraCommonKernelKernelNDGeoConicND:(GeogebraCommonKernelKernelNDGeoConicND *)B
              withGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D:(GeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *)p;

+ (void)setPointsUndefinedWithGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3DArray:(IOSObjectArray *)P;

@end

J2OBJC_FIELD_SETTER(GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectConics3D, A_, GeogebraCommonKernelKernelNDGeoConicND *)
J2OBJC_FIELD_SETTER(GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectConics3D, B_, GeogebraCommonKernelKernelNDGeoConicND *)
J2OBJC_FIELD_SETTER(GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectConics3D, P_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectConics3D, D_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectConics3D, l2d_, GeogebraCommonKernelGeosGeoLine *)
J2OBJC_FIELD_SETTER(GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectConics3D, A2d_, GeogebraCommonKernelGeosGeoConic *)
J2OBJC_FIELD_SETTER(GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectConics3D, B2d_, GeogebraCommonKernelGeosGeoConic *)
J2OBJC_FIELD_SETTER(GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectConics3D, points2d_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectConics3D, algo2d_, GeogebraCommonKernelAlgosAlgoIntersectConics *)

J2OBJC_STATIC_FIELD_GETTER(GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectConics3D, serialVersionUID, jlong)

static GeogebraCommonKernelMatrixCoordMatrix *GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectConics3D_AUGMENT_DIM_;
J2OBJC_STATIC_FIELD_GETTER(GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectConics3D, AUGMENT_DIM_, GeogebraCommonKernelMatrixCoordMatrix *)

static GeogebraCommonKernelMatrixCoordMatrix *GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectConics3D_REDUCE_DIM_;
J2OBJC_STATIC_FIELD_GETTER(GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectConics3D, REDUCE_DIM_, GeogebraCommonKernelMatrixCoordMatrix *)

__attribute__((unused)) static void GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectConics3D_intersectConics3DWithGeogebraCommonKernelKernelNDGeoConicND_withGeogebraCommonKernelKernelNDGeoConicND_withGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3DArray_(GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectConics3D *self, GeogebraCommonKernelKernelNDGeoConicND *A, GeogebraCommonKernelKernelNDGeoConicND *B, IOSObjectArray *P);

__attribute__((unused)) static void GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectConics3D_checkIsOnConicWithGeogebraCommonKernelKernelNDGeoConicND_withGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D_(GeogebraCommonKernelKernelNDGeoConicND *B, GeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *p);

__attribute__((unused)) static void GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectConics3D_setPointsUndefinedWithGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3DArray_(IOSObjectArray *P);

J2OBJC_INITIALIZED_DEFN(GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectConics3D)

@implementation GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectConics3D

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                                            withNSString:(NSString *)label
              withGeogebraCommonKernelKernelNDGeoConicND:(GeogebraCommonKernelKernelNDGeoConicND *)A
              withGeogebraCommonKernelKernelNDGeoConicND:(GeogebraCommonKernelKernelNDGeoConicND *)B {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectConics3D_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelKernelNDGeoConicND_withGeogebraCommonKernelKernelNDGeoConicND_(self, cons, label, A, B);
  return self;
}

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                                       withNSStringArray:(IOSObjectArray *)labels
              withGeogebraCommonKernelKernelNDGeoConicND:(GeogebraCommonKernelKernelNDGeoConicND *)A
              withGeogebraCommonKernelKernelNDGeoConicND:(GeogebraCommonKernelKernelNDGeoConicND *)B {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectConics3D_initWithGeogebraCommonKernelConstruction_withNSStringArray_withGeogebraCommonKernelKernelNDGeoConicND_withGeogebraCommonKernelKernelNDGeoConicND_(self, cons, labels, A, B);
  return self;
}

- (GeogebraCommonKernelCommandsCommandsEnum *)getClassName {
  return GeogebraCommonKernelCommandsCommandsEnum_get_Intersect();
}

- (jint)getRelatedModeID {
  return GeogebraCommonEuclidianEuclidianConstants_MODE_INTERSECT;
}

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectConics3D_initWithGeogebraCommonKernelConstruction_(self, cons);
  return self;
}

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
              withGeogebraCommonKernelKernelNDGeoConicND:(GeogebraCommonKernelKernelNDGeoConicND *)A
              withGeogebraCommonKernelKernelNDGeoConicND:(GeogebraCommonKernelKernelNDGeoConicND *)B {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectConics3D_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelKernelNDGeoConicND_withGeogebraCommonKernelKernelNDGeoConicND_(self, cons, A, B);
  return self;
}

- (void)setInputOutput {
  GeogebraCommonKernelAlgosAlgoElement_setAndConsume_input_(self, [IOSObjectArray newArrayWithLength:2 type:GeogebraCommonKernelGeosGeoElement_class_()]);
  IOSObjectArray_Set(input_, 0, A_);
  IOSObjectArray_Set(input_, 1, B_);
  [self setOutputWithGeogebraCommonKernelGeosGeoElementArray:P_];
  [self noUndefinedPointsInAlgebraView];
  [self setDependencies];
}

- (IOSObjectArray *)getIntersectionPoints {
  return P_;
}

- (IOSObjectArray *)getLastDefinedIntersectionPoints {
  return D_;
}

- (void)setCoordsWithGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)destination
                 withGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)source {
  [((id<GeogebraCommonKernelKernelNDGeoPointND>) nil_chk(destination)) setCoordsWithGeogebraCommonKernelMatrixCoords:[((id<GeogebraCommonKernelKernelNDGeoPointND>) nil_chk(source)) getCoordsInD3] withBoolean:NO];
}

- (GeogebraCommonKernelKernelNDGeoConicND *)getA {
  return A_;
}

- (GeogebraCommonKernelKernelNDGeoConicND *)getB {
  return B_;
}

- (NSString *)toStringWithGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl {
  return [((GeogebraCommonMainLocalization *) nil_chk([self getLoc])) getPlainWithNSString:@"IntersectionPointOfAB" withNSString:[((GeogebraCommonKernelKernelNDGeoConicND *) nil_chk(A_)) getLabelWithGeogebraCommonKernelStringTemplate:tpl] withNSString:[((GeogebraCommonKernelKernelNDGeoConicND *) nil_chk(B_)) getLabelWithGeogebraCommonKernelStringTemplate:tpl]];
}

- (void)compute {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectConics3D_intersectConics3DWithGeogebraCommonKernelKernelNDGeoConicND_withGeogebraCommonKernelKernelNDGeoConicND_withGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3DArray_(self, A_, B_, P_);
}

- (void)intersectConics3DWithGeogebraCommonKernelKernelNDGeoConicND:(GeogebraCommonKernelKernelNDGeoConicND *)A
                         withGeogebraCommonKernelKernelNDGeoConicND:(GeogebraCommonKernelKernelNDGeoConicND *)B
            withGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3DArray:(IOSObjectArray *)P {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectConics3D_intersectConics3DWithGeogebraCommonKernelKernelNDGeoConicND_withGeogebraCommonKernelKernelNDGeoConicND_withGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3DArray_(self, A, B, P);
}

+ (void)checkIsOnConicWithGeogebraCommonKernelKernelNDGeoConicND:(GeogebraCommonKernelKernelNDGeoConicND *)B
              withGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D:(GeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *)p {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectConics3D_checkIsOnConicWithGeogebraCommonKernelKernelNDGeoConicND_withGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D_(B, p);
}

+ (void)setPointsUndefinedWithGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3DArray:(IOSObjectArray *)P {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectConics3D_setPointsUndefinedWithGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3DArray_(P);
}

- (void)initForNearToRelationship {
}

- (void)dealloc {
  RELEASE_(A_);
  RELEASE_(B_);
  RELEASE_(P_);
  RELEASE_(D_);
  RELEASE_(l2d_);
  RELEASE_(A2d_);
  RELEASE_(B2d_);
  RELEASE_(points2d_);
  RELEASE_(algo2d_);
  [super dealloc];
}

+ (void)initialize {
  if (self == [GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectConics3D class]) {
    JreStrongAssignAndConsume(&GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectConics3D_AUGMENT_DIM_, nil, new_GeogebraCommonKernelMatrixCoordMatrix_initWithInt_withInt_withDoubleArray_(4, 3, [IOSDoubleArray arrayWithDoubles:(jdouble[]){ 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1 } count:12]));
    JreStrongAssign(&GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectConics3D_REDUCE_DIM_, nil, [GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectConics3D_AUGMENT_DIM_ transposeCopy]);
    J2OBJC_SET_INITIALIZED(GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectConics3D)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonKernelConstruction:withNSString:withGeogebraCommonKernelKernelNDGeoConicND:withGeogebraCommonKernelKernelNDGeoConicND:", "AlgoIntersectConics3D", NULL, 0x0, NULL, NULL },
    { "initWithGeogebraCommonKernelConstruction:withNSStringArray:withGeogebraCommonKernelKernelNDGeoConicND:withGeogebraCommonKernelKernelNDGeoConicND:", "AlgoIntersectConics3D", NULL, 0x0, NULL, NULL },
    { "getClassName", NULL, "Lgeogebra.common.kernel.commands.Commands;", 0x1, NULL, NULL },
    { "getRelatedModeID", NULL, "I", 0x1, NULL, NULL },
    { "initWithGeogebraCommonKernelConstruction:", "AlgoIntersectConics3D", NULL, 0x0, NULL, NULL },
    { "initWithGeogebraCommonKernelConstruction:withGeogebraCommonKernelKernelNDGeoConicND:withGeogebraCommonKernelKernelNDGeoConicND:", "AlgoIntersectConics3D", NULL, 0x0, NULL, NULL },
    { "setInputOutput", NULL, "V", 0x1, NULL, NULL },
    { "getIntersectionPoints", NULL, "[Lgeogebra.common.geogebra3D.kernel3D.geos.GeoPoint3D;", 0x11, NULL, NULL },
    { "getLastDefinedIntersectionPoints", NULL, "[Lgeogebra.common.geogebra3D.kernel3D.geos.GeoPoint3D;", 0x4, NULL, NULL },
    { "setCoordsWithGeogebraCommonKernelKernelNDGeoPointND:withGeogebraCommonKernelKernelNDGeoPointND:", "setCoords", "V", 0x4, NULL, NULL },
    { "getA", NULL, "Lgeogebra.common.kernel.kernelND.GeoConicND;", 0x0, NULL, NULL },
    { "getB", NULL, "Lgeogebra.common.kernel.kernelND.GeoConicND;", 0x0, NULL, NULL },
    { "toStringWithGeogebraCommonKernelStringTemplate:", "toString", "Ljava.lang.String;", 0x11, NULL, NULL },
    { "compute", NULL, "V", 0x1, NULL, NULL },
    { "intersectConics3DWithGeogebraCommonKernelKernelNDGeoConicND:withGeogebraCommonKernelKernelNDGeoConicND:withGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3DArray:", "intersectConics3D", "V", 0x11, NULL, NULL },
    { "checkIsOnConicWithGeogebraCommonKernelKernelNDGeoConicND:withGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D:", "checkIsOnConic", "V", 0xa, NULL, NULL },
    { "setPointsUndefinedWithGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3DArray:", "setPointsUndefined", "V", 0xa, NULL, NULL },
    { "initForNearToRelationship", NULL, "V", 0x11, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID_", NULL, 0x1a, "J", NULL, NULL, .constantValue.asLong = GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectConics3D_serialVersionUID },
    { "A_", NULL, 0x2, "Lgeogebra.common.kernel.kernelND.GeoConicND;", NULL, NULL,  },
    { "B_", NULL, 0x2, "Lgeogebra.common.kernel.kernelND.GeoConicND;", NULL, NULL,  },
    { "P_", NULL, 0x2, "[Lgeogebra.common.geogebra3D.kernel3D.geos.GeoPoint3D;", NULL, NULL,  },
    { "D_", NULL, 0x2, "[Lgeogebra.common.geogebra3D.kernel3D.geos.GeoPoint3D;", NULL, NULL,  },
    { "l2d_", NULL, 0x2, "Lgeogebra.common.kernel.geos.GeoLine;", NULL, NULL,  },
    { "A2d_", NULL, 0x2, "Lgeogebra.common.kernel.geos.GeoConic;", NULL, NULL,  },
    { "B2d_", NULL, 0x2, "Lgeogebra.common.kernel.geos.GeoConic;", NULL, NULL,  },
    { "points2d_", NULL, 0x2, "[Lgeogebra.common.kernel.geos.GeoPoint;", NULL, NULL,  },
    { "algo2d_", NULL, 0x2, "Lgeogebra.common.kernel.algos.AlgoIntersectConics;", NULL, NULL,  },
    { "AUGMENT_DIM_", NULL, 0x1a, "Lgeogebra.common.kernel.Matrix.CoordMatrix;", &GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectConics3D_AUGMENT_DIM_, NULL,  },
    { "REDUCE_DIM_", NULL, 0x1a, "Lgeogebra.common.kernel.Matrix.CoordMatrix;", &GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectConics3D_REDUCE_DIM_, NULL,  },
  };
  static const J2ObjcClassInfo _GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectConics3D = { 2, "AlgoIntersectConics3D", "geogebra.common.geogebra3D.kernel3D.algos", NULL, 0x1, 18, methods, 12, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectConics3D;
}

@end

void GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectConics3D_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelKernelNDGeoConicND_withGeogebraCommonKernelKernelNDGeoConicND_(GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectConics3D *self, GeogebraCommonKernelConstruction *cons, NSString *label, GeogebraCommonKernelKernelNDGeoConicND *A, GeogebraCommonKernelKernelNDGeoConicND *B) {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectConics3D_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelKernelNDGeoConicND_withGeogebraCommonKernelKernelNDGeoConicND_(self, cons, A, B);
  GeogebraCommonKernelGeosGeoElement_setLabelsWithNSString_withGeogebraCommonKernelGeosGeoElementArray_(label, self->P_);
}

GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectConics3D *new_GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectConics3D_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelKernelNDGeoConicND_withGeogebraCommonKernelKernelNDGeoConicND_(GeogebraCommonKernelConstruction *cons, NSString *label, GeogebraCommonKernelKernelNDGeoConicND *A, GeogebraCommonKernelKernelNDGeoConicND *B) {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectConics3D *self = [GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectConics3D alloc];
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectConics3D_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelKernelNDGeoConicND_withGeogebraCommonKernelKernelNDGeoConicND_(self, cons, label, A, B);
  return self;
}

void GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectConics3D_initWithGeogebraCommonKernelConstruction_withNSStringArray_withGeogebraCommonKernelKernelNDGeoConicND_withGeogebraCommonKernelKernelNDGeoConicND_(GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectConics3D *self, GeogebraCommonKernelConstruction *cons, IOSObjectArray *labels, GeogebraCommonKernelKernelNDGeoConicND *A, GeogebraCommonKernelKernelNDGeoConicND *B) {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectConics3D_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelKernelNDGeoConicND_withGeogebraCommonKernelKernelNDGeoConicND_(self, cons, A, B);
  GeogebraCommonKernelGeosGeoElement_setLabelsWithNSStringArray_withGeogebraCommonKernelGeosGeoElementArray_(labels, self->P_);
}

GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectConics3D *new_GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectConics3D_initWithGeogebraCommonKernelConstruction_withNSStringArray_withGeogebraCommonKernelKernelNDGeoConicND_withGeogebraCommonKernelKernelNDGeoConicND_(GeogebraCommonKernelConstruction *cons, IOSObjectArray *labels, GeogebraCommonKernelKernelNDGeoConicND *A, GeogebraCommonKernelKernelNDGeoConicND *B) {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectConics3D *self = [GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectConics3D alloc];
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectConics3D_initWithGeogebraCommonKernelConstruction_withNSStringArray_withGeogebraCommonKernelKernelNDGeoConicND_withGeogebraCommonKernelKernelNDGeoConicND_(self, cons, labels, A, B);
  return self;
}

void GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectConics3D_initWithGeogebraCommonKernelConstruction_(GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectConics3D *self, GeogebraCommonKernelConstruction *cons) {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersect3D_initWithGeogebraCommonKernelConstruction_(self, cons);
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectConics3D_setAndConsume_l2d_(self, new_GeogebraCommonKernelGeosGeoLine_initWithGeogebraCommonKernelConstruction_(cons));
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectConics3D_setAndConsume_A2d_(self, new_GeogebraCommonKernelGeosGeoConic_initWithGeogebraCommonKernelConstruction_(cons));
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectConics3D_setAndConsume_B2d_(self, new_GeogebraCommonKernelGeosGeoConic_initWithGeogebraCommonKernelConstruction_(cons));
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectConics3D_setAndConsume_algo2d_(self, new_GeogebraCommonKernelAlgosAlgoIntersectConics_initWithGeogebraCommonKernelConstruction_(cons));
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectConics3D_setAndConsume_points2d_(self, [IOSObjectArray newArrayWithLength:4 type:GeogebraCommonKernelGeosGeoPoint_class_()]);
}

GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectConics3D *new_GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectConics3D_initWithGeogebraCommonKernelConstruction_(GeogebraCommonKernelConstruction *cons) {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectConics3D *self = [GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectConics3D alloc];
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectConics3D_initWithGeogebraCommonKernelConstruction_(self, cons);
  return self;
}

void GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectConics3D_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelKernelNDGeoConicND_withGeogebraCommonKernelKernelNDGeoConicND_(GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectConics3D *self, GeogebraCommonKernelConstruction *cons, GeogebraCommonKernelKernelNDGeoConicND *A, GeogebraCommonKernelKernelNDGeoConicND *B) {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectConics3D_initWithGeogebraCommonKernelConstruction_(self, cons);
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectConics3D_setAndConsume_P_(self, [IOSObjectArray newArrayWithLength:4 type:GeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D_class_()]);
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectConics3D_setAndConsume_D_(self, [IOSObjectArray newArrayWithLength:4 type:GeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D_class_()]);
  for (jint i = 0; i < 4; i++) {
    IOSObjectArray_SetAndConsume(self->P_, i, new_GeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D_initWithGeogebraCommonKernelConstruction_(cons));
    IOSObjectArray_SetAndConsume(self->D_, i, new_GeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D_initWithGeogebraCommonKernelConstruction_(cons));
    IOSObjectArray_SetAndConsume(nil_chk(self->points2d_), i, new_GeogebraCommonKernelGeosGeoPoint_initWithGeogebraCommonKernelConstruction_(cons));
  }
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectConics3D_set_A_(self, A);
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectConics3D_set_B_(self, B);
  [self setInputOutput];
  [self compute];
}

GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectConics3D *new_GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectConics3D_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelKernelNDGeoConicND_withGeogebraCommonKernelKernelNDGeoConicND_(GeogebraCommonKernelConstruction *cons, GeogebraCommonKernelKernelNDGeoConicND *A, GeogebraCommonKernelKernelNDGeoConicND *B) {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectConics3D *self = [GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectConics3D alloc];
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectConics3D_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelKernelNDGeoConicND_withGeogebraCommonKernelKernelNDGeoConicND_(self, cons, A, B);
  return self;
}

void GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectConics3D_intersectConics3DWithGeogebraCommonKernelKernelNDGeoConicND_withGeogebraCommonKernelKernelNDGeoConicND_withGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3DArray_(GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectConics3D *self, GeogebraCommonKernelKernelNDGeoConicND *A, GeogebraCommonKernelKernelNDGeoConicND *B, IOSObjectArray *P) {
  GeogebraCommonKernelMatrixCoordSys *csA = [((GeogebraCommonKernelKernelNDGeoConicND *) nil_chk(A)) getCoordSys];
  GeogebraCommonKernelMatrixCoordSys *csB = [((GeogebraCommonKernelKernelNDGeoConicND *) nil_chk(B)) getCoordSys];
  GeogebraCommonKernelMatrixCoords *cross = [((GeogebraCommonKernelMatrixCoords *) nil_chk([((GeogebraCommonKernelMatrixCoordSys *) nil_chk(csA)) getNormal])) crossProductWithGeogebraCommonKernelMatrixCoords:[((GeogebraCommonKernelMatrixCoordSys *) nil_chk(csB)) getNormal]];
  if (![((GeogebraCommonKernelMatrixCoords *) nil_chk(cross)) equalsForKernelWithDouble:0 withDouble:GeogebraCommonKernelKernel_MIN_PRECISION]) {
    IOSObjectArray *intersection = GeogebraCommonKernelMatrixCoordMatrixUtil_intersectPlanesWithGeogebraCommonKernelMatrixCoordMatrix_withGeogebraCommonKernelMatrixCoordMatrix_([((GeogebraCommonKernelMatrixCoordSys *) nil_chk([A getCoordSys])) getMatrixOrthonormal], [((GeogebraCommonKernelMatrixCoordSys *) nil_chk([B getCoordSys])) getMatrixOrthonormal]);
    GeogebraCommonKernelMatrixCoords *op = IOSObjectArray_Get(nil_chk([csA getNormalProjectionWithGeogebraCommonKernelMatrixCoords:IOSObjectArray_Get(nil_chk(intersection), 0)]), 1);
    GeogebraCommonKernelMatrixCoords *dp = IOSObjectArray_Get(nil_chk([csA getNormalProjectionWithGeogebraCommonKernelMatrixCoords:IOSObjectArray_Get(intersection, 1)]), 1);
    [((GeogebraCommonKernelGeosGeoLine *) nil_chk(self->l2d_)) setCoordsWithDouble:[((GeogebraCommonKernelMatrixCoords *) nil_chk(dp)) getY] withDouble:-[dp getX] withDouble:-[dp getY] * [((GeogebraCommonKernelMatrixCoords *) nil_chk(op)) getX] + [dp getX] * [op getY]];
    GeogebraCommonKernelAlgosAlgoIntersectLineConic_intersectLineConicWithGeogebraCommonKernelGeosGeoLine_withGeogebraCommonKernelKernelNDGeoConicND_withGeogebraCommonKernelGeosGeoPointArray_withDouble_(self->l2d_, A, self->points2d_, GeogebraCommonKernelKernel_STANDARD_PRECISION);
    [((GeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *) nil_chk(IOSObjectArray_Get(nil_chk(P), 0))) setCoordsWithGeogebraCommonKernelMatrixCoords:[csA getPointWithDouble:((GeogebraCommonKernelGeosGeoPoint *) nil_chk(IOSObjectArray_Get(nil_chk(self->points2d_), 0)))->x_ withDouble:((GeogebraCommonKernelGeosGeoPoint *) nil_chk(IOSObjectArray_Get(self->points2d_, 0)))->y_] withBoolean:NO];
    GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectConics3D_checkIsOnConicWithGeogebraCommonKernelKernelNDGeoConicND_withGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D_(B, IOSObjectArray_Get(P, 0));
    [((GeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *) nil_chk(IOSObjectArray_Get(P, 1))) setCoordsWithGeogebraCommonKernelMatrixCoords:[csA getPointWithDouble:((GeogebraCommonKernelGeosGeoPoint *) nil_chk(IOSObjectArray_Get(self->points2d_, 1)))->x_ withDouble:((GeogebraCommonKernelGeosGeoPoint *) nil_chk(IOSObjectArray_Get(self->points2d_, 1)))->y_] withBoolean:NO];
    GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectConics3D_checkIsOnConicWithGeogebraCommonKernelKernelNDGeoConicND_withGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D_(B, IOSObjectArray_Get(P, 1));
    if (![((GeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *) nil_chk(IOSObjectArray_Get(P, 0))) isDefined] && [((GeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *) nil_chk(IOSObjectArray_Get(P, 1))) isDefined]) {
      [((GeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *) nil_chk(IOSObjectArray_Get(P, 0))) setCoordsWithGeogebraCommonKernelMatrixCoords:[((GeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *) nil_chk(IOSObjectArray_Get(P, 1))) getCoords] withBoolean:NO];
      [((GeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *) nil_chk(IOSObjectArray_Get(P, 1))) setUndefined];
    }
    [((GeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *) nil_chk(IOSObjectArray_Get(P, 2))) setUndefined];
    [((GeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *) nil_chk(IOSObjectArray_Get(P, 3))) setUndefined];
  }
  else {
    GeogebraCommonKernelMatrixCoords *op = IOSObjectArray_Get(nil_chk([csA getNormalProjectionWithGeogebraCommonKernelMatrixCoords:[csB getOrigin]]), 1);
    if (!GeogebraCommonKernelKernel_isZeroWithDouble_([((GeogebraCommonKernelMatrixCoords *) nil_chk(op)) getZ])) {
      GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectConics3D_setPointsUndefinedWithGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3DArray_(P);
    }
    else {
      GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectConics3D_setPointsUndefinedWithGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3DArray_(P);
      GeogebraCommonKernelMatrixCoordMatrix *BtoA = [((GeogebraCommonKernelMatrixCoordMatrix *) nil_chk([((GeogebraCommonKernelMatrixCoordMatrix *) nil_chk(GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectConics3D_REDUCE_DIM_)) mulWithGeogebraCommonKernelMatrixCoordMatrix:[((GeogebraCommonKernelMatrixCoordMatrix *) nil_chk([((GeogebraCommonKernelMatrixCoordMatrix4x4 *) nil_chk([csB getMatrixOrthonormal])) inverse])) mulWithGeogebraCommonKernelMatrixCoordMatrix:[csA getMatrixOrthonormal]]])) mulWithGeogebraCommonKernelMatrixCoordMatrix:GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectConics3D_AUGMENT_DIM_];
      GeogebraCommonKernelMatrixCoordMatrix *sB = [B getSymetricMatrix];
      GeogebraCommonKernelMatrixCoordMatrix *sBinA = [((GeogebraCommonKernelMatrixCoordMatrix *) nil_chk([((GeogebraCommonKernelMatrixCoordMatrix *) nil_chk([((GeogebraCommonKernelMatrixCoordMatrix *) nil_chk(BtoA)) transposeCopy])) mulWithGeogebraCommonKernelMatrixCoordMatrix:sB])) mulWithGeogebraCommonKernelMatrixCoordMatrix:BtoA];
      [((GeogebraCommonKernelGeosGeoConic *) nil_chk(self->A2d_)) setMatrixWithDoubleArray:[A getMatrix]];
      [((GeogebraCommonKernelGeosGeoConic *) nil_chk(self->B2d_)) setMatrixWithGeogebraCommonKernelMatrixCoordMatrix:sBinA];
      [((GeogebraCommonKernelAlgosAlgoIntersectConics *) nil_chk(self->algo2d_)) intersectConicsWithGeogebraCommonKernelGeosGeoConic:self->A2d_ withGeogebraCommonKernelGeosGeoConic:self->B2d_ withGeogebraCommonKernelGeosGeoPointArray:self->points2d_];
      for (jint i = 0; i < 4; i++) [((GeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *) nil_chk(IOSObjectArray_Get(nil_chk(P), i))) setCoordsWithGeogebraCommonKernelMatrixCoords:[csA getPointWithDouble:((GeogebraCommonKernelGeosGeoPoint *) nil_chk(IOSObjectArray_Get(nil_chk(self->points2d_), i)))->x_ withDouble:((GeogebraCommonKernelGeosGeoPoint *) nil_chk(IOSObjectArray_Get(self->points2d_, i)))->y_] withBoolean:NO];
    }
  }
}

void GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectConics3D_checkIsOnConicWithGeogebraCommonKernelKernelNDGeoConicND_withGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D_(GeogebraCommonKernelKernelNDGeoConicND *B, GeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *p) {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectConics3D_initialize();
  if (![((GeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *) nil_chk(p)) isDefined]) return;
  GeogebraCommonKernelMatrixCoords *pp = IOSObjectArray_Get(nil_chk([((GeogebraCommonKernelMatrixCoordSys *) nil_chk([((GeogebraCommonKernelKernelNDGeoConicND *) nil_chk(B)) getCoordSys])) getNormalProjectionWithGeogebraCommonKernelMatrixCoords:[p getCoords]]), 1);
  GeogebraCommonKernelMatrixCoords *pp2d = [new_GeogebraCommonKernelMatrixCoords_initWithInt_(3) autorelease];
  [pp2d setXWithDouble:[((GeogebraCommonKernelMatrixCoords *) nil_chk(pp)) getX]];
  [pp2d setYWithDouble:[pp getY]];
  [pp2d setZWithDouble:[pp getW]];
  if (![B isOnFullConicWithGeogebraCommonKernelMatrixCoords:pp2d withDouble:GeogebraCommonKernelKernel_MIN_PRECISION]) [p setUndefined];
}

void GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectConics3D_setPointsUndefinedWithGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3DArray_(IOSObjectArray *P) {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectConics3D_initialize();
  for (jint i = 0; i < 4; i++) [((GeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *) nil_chk(IOSObjectArray_Get(nil_chk(P), i))) setUndefined];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectConics3D)
