//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/discrete/CompareByPseudoAngle.java
//


#include "J2ObjC_source.h"
#include "geogebra/common/awt/GPoint2D.h"
#include "geogebra/common/kernel/discrete/CompareByPseudoAngle.h"
#include "java/lang/Math.h"

@interface GeogebraCommonKernelDiscreteCompareByPseudoAngle () {
 @public
  GeogebraCommonAwtGPoint2D_Double *basePoint_;
}

+ (jdouble)pseudoAngleWithGeogebraCommonAwtGPoint2D_Double:(GeogebraCommonAwtGPoint2D_Double *)p1
                      withGeogebraCommonAwtGPoint2D_Double:(GeogebraCommonAwtGPoint2D_Double *)p2;

@end

J2OBJC_FIELD_SETTER(GeogebraCommonKernelDiscreteCompareByPseudoAngle, basePoint_, GeogebraCommonAwtGPoint2D_Double *)

__attribute__((unused)) static jdouble GeogebraCommonKernelDiscreteCompareByPseudoAngle_pseudoAngleWithGeogebraCommonAwtGPoint2D_Double_withGeogebraCommonAwtGPoint2D_Double_(GeogebraCommonAwtGPoint2D_Double *p1, GeogebraCommonAwtGPoint2D_Double *p2);

@implementation GeogebraCommonKernelDiscreteCompareByPseudoAngle

- (instancetype)initWithGeogebraCommonAwtGPoint2D_Double:(GeogebraCommonAwtGPoint2D_Double *)base {
  GeogebraCommonKernelDiscreteCompareByPseudoAngle_initWithGeogebraCommonAwtGPoint2D_Double_(self, base);
  return self;
}

- (jint)compareWithId:(GeogebraCommonAwtGPoint2D_Double *)point1
               withId:(GeogebraCommonAwtGPoint2D_Double *)point2 {
  jdouble angle1 = GeogebraCommonKernelDiscreteCompareByPseudoAngle_pseudoAngleWithGeogebraCommonAwtGPoint2D_Double_withGeogebraCommonAwtGPoint2D_Double_(basePoint_, point1);
  jdouble angle2 = GeogebraCommonKernelDiscreteCompareByPseudoAngle_pseudoAngleWithGeogebraCommonAwtGPoint2D_Double_withGeogebraCommonAwtGPoint2D_Double_(basePoint_, point2);
  if (angle1 < angle2) return -1;
  if (angle1 > angle2) return +1;
  return 0;
}

+ (jdouble)pseudoAngleWithGeogebraCommonAwtGPoint2D_Double:(GeogebraCommonAwtGPoint2D_Double *)p1
                      withGeogebraCommonAwtGPoint2D_Double:(GeogebraCommonAwtGPoint2D_Double *)p2 {
  return GeogebraCommonKernelDiscreteCompareByPseudoAngle_pseudoAngleWithGeogebraCommonAwtGPoint2D_Double_withGeogebraCommonAwtGPoint2D_Double_(p1, p2);
}

- (void)dealloc {
  RELEASE_(basePoint_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonAwtGPoint2D_Double:", "CompareByPseudoAngle", NULL, 0x1, NULL, NULL },
    { "compareWithId:withId:", "compare", "I", 0x1, NULL, NULL },
    { "pseudoAngleWithGeogebraCommonAwtGPoint2D_Double:withGeogebraCommonAwtGPoint2D_Double:", "pseudoAngle", "D", 0xa, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "basePoint_", NULL, 0x2, "Lgeogebra.common.awt.GPoint2D$Double;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelDiscreteCompareByPseudoAngle = { 2, "CompareByPseudoAngle", "geogebra.common.kernel.discrete", NULL, 0x1, 3, methods, 1, fields, 0, NULL, 0, NULL, NULL, "Ljava/lang/Object;Ljava/util/Comparator<Lgeogebra/common/awt/GPoint2D$Double;>;" };
  return &_GeogebraCommonKernelDiscreteCompareByPseudoAngle;
}

@end

void GeogebraCommonKernelDiscreteCompareByPseudoAngle_initWithGeogebraCommonAwtGPoint2D_Double_(GeogebraCommonKernelDiscreteCompareByPseudoAngle *self, GeogebraCommonAwtGPoint2D_Double *base) {
  NSObject_init(self);
  GeogebraCommonKernelDiscreteCompareByPseudoAngle_set_basePoint_(self, base);
}

GeogebraCommonKernelDiscreteCompareByPseudoAngle *new_GeogebraCommonKernelDiscreteCompareByPseudoAngle_initWithGeogebraCommonAwtGPoint2D_Double_(GeogebraCommonAwtGPoint2D_Double *base) {
  GeogebraCommonKernelDiscreteCompareByPseudoAngle *self = [GeogebraCommonKernelDiscreteCompareByPseudoAngle alloc];
  GeogebraCommonKernelDiscreteCompareByPseudoAngle_initWithGeogebraCommonAwtGPoint2D_Double_(self, base);
  return self;
}

jdouble GeogebraCommonKernelDiscreteCompareByPseudoAngle_pseudoAngleWithGeogebraCommonAwtGPoint2D_Double_withGeogebraCommonAwtGPoint2D_Double_(GeogebraCommonAwtGPoint2D_Double *p1, GeogebraCommonAwtGPoint2D_Double *p2) {
  GeogebraCommonKernelDiscreteCompareByPseudoAngle_initialize();
  jdouble dx = ((GeogebraCommonAwtGPoint2D_Double *) nil_chk(p2))->x_ - ((GeogebraCommonAwtGPoint2D_Double *) nil_chk(p1))->x_;
  jdouble dy = p2->y_ - p1->y_;
  jdouble s = JavaLangMath_absWithDouble_(dx) + JavaLangMath_absWithDouble_(dy);
  jdouble t = (s == 0) ? 0.0 : dy / s;
  if (dx < 0) {
    t = 2 - t;
  }
  else if (dy < 0) {
    t += 4;
  }
  return t * 90;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelDiscreteCompareByPseudoAngle)
