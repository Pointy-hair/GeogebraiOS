//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/gui/dialog/options/model/PointStyleModel.java
//


#include "J2ObjC_source.h"
#include "geogebra/common/gui/dialog/options/model/IComboListener.h"
#include "geogebra/common/gui/dialog/options/model/NumberOptionsModel.h"
#include "geogebra/common/gui/dialog/options/model/OptionsModel.h"
#include "geogebra/common/gui/dialog/options/model/PointStyleModel.h"
#include "geogebra/common/kernel/geos/GeoElement.h"
#include "geogebra/common/kernel/geos/GeoList.h"
#include "geogebra/common/kernel/geos/PointProperties.h"
#include "geogebra/common/plugin/EuclidianStyleConstants.h"

@interface GeogebraCommonGuiDialogOptionsModelPointStyleModel () {
 @public
  id<GeogebraCommonGuiDialogOptionsModelIComboListener> listener_;
}

- (id<GeogebraCommonKernelGeosPointProperties>)getPointPropertiesAtWithInt:(jint)index;

@end

J2OBJC_FIELD_SETTER(GeogebraCommonGuiDialogOptionsModelPointStyleModel, listener_, id<GeogebraCommonGuiDialogOptionsModelIComboListener>)

__attribute__((unused)) static id<GeogebraCommonKernelGeosPointProperties> GeogebraCommonGuiDialogOptionsModelPointStyleModel_getPointPropertiesAtWithInt_(GeogebraCommonGuiDialogOptionsModelPointStyleModel *self, jint index);

@implementation GeogebraCommonGuiDialogOptionsModelPointStyleModel

- (instancetype)initWithGeogebraCommonGuiDialogOptionsModelIComboListener:(id<GeogebraCommonGuiDialogOptionsModelIComboListener>)listener {
  GeogebraCommonGuiDialogOptionsModelPointStyleModel_initWithGeogebraCommonGuiDialogOptionsModelIComboListener_(self, listener);
  return self;
}

- (id<GeogebraCommonKernelGeosPointProperties>)getPointPropertiesAtWithInt:(jint)index {
  return GeogebraCommonGuiDialogOptionsModelPointStyleModel_getPointPropertiesAtWithInt_(self, index);
}

- (void)updateProperties {
  if (![self hasGeos]) {
    return;
  }
  id<GeogebraCommonKernelGeosPointProperties> geo0 = GeogebraCommonGuiDialogOptionsModelPointStyleModel_getPointPropertiesAtWithInt_(self, 0);
  if (listener_ == nil) {
    return;
  }
  if ((geo0 == nil) || ([geo0 getPointStyle] == -1)) {
    [((id<GeogebraCommonGuiDialogOptionsModelIComboListener>) nil_chk(listener_)) setSelectedIndexWithInt:GeogebraCommonPluginEuclidianStyleConstants_POINT_STYLE_DOT];
  }
  else {
    [((id<GeogebraCommonGuiDialogOptionsModelIComboListener>) nil_chk(listener_)) setSelectedIndexWithInt:[geo0 getPointStyle]];
  }
}

- (jboolean)checkGeos {
  if (![self hasGeos]) {
    return NO;
  }
  return [super checkGeos];
}

- (jboolean)isValidAtWithInt:(jint)index {
  jboolean valid = YES;
  GeogebraCommonKernelGeosGeoElement *geo = [self getGeoAtWithInt:index];
  if (([((GeogebraCommonKernelGeosGeoElement *) nil_chk(geo)) isGeoElement3D] && !([geo isGeoPoint])) || (![((GeogebraCommonKernelGeosGeoElement *) nil_chk([geo getGeoElementForPropertiesDialog])) isGeoPoint] && (!([geo isGeoList] && [((GeogebraCommonKernelGeosGeoList *) check_class_cast(geo, [GeogebraCommonKernelGeosGeoList class])) showPointProperties])))) {
    valid = NO;
  }
  return valid;
}

- (jboolean)is3D {
  for (jint i = 0; i < [self getGeosLength]; i++) {
    GeogebraCommonKernelGeosGeoElement *geo = [self getGeoAtWithInt:i];
    if (!([((GeogebraCommonKernelGeosGeoElement *) nil_chk(geo)) isGeoPoint] && [geo isGeoElement3D])) {
      return NO;
    }
  }
  return YES;
}

- (void)applyWithInt:(jint)index
             withInt:(jint)value {
  id<GeogebraCommonKernelGeosPointProperties> point = GeogebraCommonGuiDialogOptionsModelPointStyleModel_getPointPropertiesAtWithInt_(self, index);
  [((id<GeogebraCommonKernelGeosPointProperties>) nil_chk(point)) setPointStyleWithInt:value];
  [point updateRepaint];
}

- (jint)getValueAtWithInt:(jint)index {
  return 0;
}

- (void)dealloc {
  RELEASE_(listener_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonGuiDialogOptionsModelIComboListener:", "PointStyleModel", NULL, 0x1, NULL, NULL },
    { "getPointPropertiesAtWithInt:", "getPointPropertiesAt", "Lgeogebra.common.kernel.geos.PointProperties;", 0x2, NULL, NULL },
    { "updateProperties", NULL, "V", 0x1, NULL, NULL },
    { "checkGeos", NULL, "Z", 0x1, NULL, NULL },
    { "isValidAtWithInt:", "isValidAt", "Z", 0x1, NULL, NULL },
    { "is3D", NULL, "Z", 0x1, NULL, NULL },
    { "applyWithInt:withInt:", "apply", "V", 0x4, NULL, NULL },
    { "getValueAtWithInt:", "getValueAt", "I", 0x4, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "listener_", NULL, 0x2, "Lgeogebra.common.gui.dialog.options.model.IComboListener;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _GeogebraCommonGuiDialogOptionsModelPointStyleModel = { 2, "PointStyleModel", "geogebra.common.gui.dialog.options.model", NULL, 0x1, 8, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonGuiDialogOptionsModelPointStyleModel;
}

@end

void GeogebraCommonGuiDialogOptionsModelPointStyleModel_initWithGeogebraCommonGuiDialogOptionsModelIComboListener_(GeogebraCommonGuiDialogOptionsModelPointStyleModel *self, id<GeogebraCommonGuiDialogOptionsModelIComboListener> listener) {
  GeogebraCommonGuiDialogOptionsModelNumberOptionsModel_init(self);
  GeogebraCommonGuiDialogOptionsModelPointStyleModel_set_listener_(self, listener);
}

GeogebraCommonGuiDialogOptionsModelPointStyleModel *new_GeogebraCommonGuiDialogOptionsModelPointStyleModel_initWithGeogebraCommonGuiDialogOptionsModelIComboListener_(id<GeogebraCommonGuiDialogOptionsModelIComboListener> listener) {
  GeogebraCommonGuiDialogOptionsModelPointStyleModel *self = [GeogebraCommonGuiDialogOptionsModelPointStyleModel alloc];
  GeogebraCommonGuiDialogOptionsModelPointStyleModel_initWithGeogebraCommonGuiDialogOptionsModelIComboListener_(self, listener);
  return self;
}

id<GeogebraCommonKernelGeosPointProperties> GeogebraCommonGuiDialogOptionsModelPointStyleModel_getPointPropertiesAtWithInt_(GeogebraCommonGuiDialogOptionsModelPointStyleModel *self, jint index) {
  return (id<GeogebraCommonKernelGeosPointProperties>) check_protocol_cast([self getObjectAtWithInt:index], @protocol(GeogebraCommonKernelGeosPointProperties));
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonGuiDialogOptionsModelPointStyleModel)
