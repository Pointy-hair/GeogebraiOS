//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/edu/uci/ics/jung/graph/SparseGraph.java
//

#ifndef _EduUciIcsJungGraphSparseGraph_H_
#define _EduUciIcsJungGraphSparseGraph_H_

#include "J2ObjC_header.h"
#include "edu/uci/ics/jung/graph/AbstractGraph.h"
#include "edu/uci/ics/jung/graph/Graph.h"

@class EduUciIcsJungGraphUtilEdgeTypeEnum;
@class EduUciIcsJungGraphUtilPair;
@protocol JavaUtilCollection;
@protocol JavaUtilMap;
@protocol OrgApacheCommonsCollections15Factory;

#define EduUciIcsJungGraphSparseGraph_INCOMING 0
#define EduUciIcsJungGraphSparseGraph_OUTGOING 1
#define EduUciIcsJungGraphSparseGraph_INCIDENT 2

@interface EduUciIcsJungGraphSparseGraph : EduUciIcsJungGraphAbstractGraph < EduUciIcsJungGraphGraph > {
 @public
  id<JavaUtilMap> vertex_maps_;
  id<JavaUtilMap> directed_edges_;
  id<JavaUtilMap> undirected_edges_;
}

#pragma mark Public

- (instancetype)init;

- (jboolean)addEdgeWithId:(id)edge
withEduUciIcsJungGraphUtilPair:(EduUciIcsJungGraphUtilPair *)endpoints
withEduUciIcsJungGraphUtilEdgeTypeEnum:(EduUciIcsJungGraphUtilEdgeTypeEnum *)edgeType;

- (jboolean)addVertexWithId:(id)vertex;

- (jboolean)containsEdgeWithId:(id)edge;

- (jboolean)containsVertexWithId:(id)vertex;

- (id)findEdgeWithId:(id)v1
              withId:(id)v2;

- (id<JavaUtilCollection>)findEdgeSetWithId:(id)v1
                                     withId:(id)v2;

- (EduUciIcsJungGraphUtilEdgeTypeEnum *)getDefaultEdgeType;

- (id)getDestWithId:(id)directed_edge;

- (jint)getEdgeCount;

- (jint)getEdgeCountWithEduUciIcsJungGraphUtilEdgeTypeEnum:(EduUciIcsJungGraphUtilEdgeTypeEnum *)edge_type;

- (id<JavaUtilCollection>)getEdges;

- (id<JavaUtilCollection>)getEdgesWithEduUciIcsJungGraphUtilEdgeTypeEnum:(EduUciIcsJungGraphUtilEdgeTypeEnum *)edgeType;

- (EduUciIcsJungGraphUtilEdgeTypeEnum *)getEdgeTypeWithId:(id)edge;

- (EduUciIcsJungGraphUtilPair *)getEndpointsWithId:(id)edge;

+ (id<OrgApacheCommonsCollections15Factory>)getFactory;

- (id<JavaUtilCollection>)getIncidentEdgesWithId:(id)vertex;

- (id<JavaUtilCollection>)getInEdgesWithId:(id)vertex;

- (id<JavaUtilCollection>)getNeighborsWithId:(id)vertex;

- (id<JavaUtilCollection>)getOutEdgesWithId:(id)vertex;

- (id<JavaUtilCollection>)getPredecessorsWithId:(id)vertex;

- (id)getSourceWithId:(id)directed_edge;

- (id<JavaUtilCollection>)getSuccessorsWithId:(id)vertex;

- (jint)getVertexCount;

- (id<JavaUtilCollection>)getVertices;

- (jboolean)isDestWithId:(id)vertex
                  withId:(id)edge;

- (jboolean)isSourceWithId:(id)vertex
                    withId:(id)edge;

- (EduUciIcsJungGraphSparseGraph *)newInstance OBJC_METHOD_FAMILY_NONE;

- (jboolean)removeEdgeWithId:(id)edge;

- (jboolean)removeVertexWithId:(id)vertex;

@end

J2OBJC_EMPTY_STATIC_INIT(EduUciIcsJungGraphSparseGraph)

J2OBJC_FIELD_SETTER(EduUciIcsJungGraphSparseGraph, vertex_maps_, id<JavaUtilMap>)
J2OBJC_FIELD_SETTER(EduUciIcsJungGraphSparseGraph, directed_edges_, id<JavaUtilMap>)
J2OBJC_FIELD_SETTER(EduUciIcsJungGraphSparseGraph, undirected_edges_, id<JavaUtilMap>)

J2OBJC_STATIC_FIELD_GETTER(EduUciIcsJungGraphSparseGraph, INCOMING, jint)

J2OBJC_STATIC_FIELD_GETTER(EduUciIcsJungGraphSparseGraph, OUTGOING, jint)

J2OBJC_STATIC_FIELD_GETTER(EduUciIcsJungGraphSparseGraph, INCIDENT, jint)

FOUNDATION_EXPORT id<OrgApacheCommonsCollections15Factory> EduUciIcsJungGraphSparseGraph_getFactory();

FOUNDATION_EXPORT void EduUciIcsJungGraphSparseGraph_init(EduUciIcsJungGraphSparseGraph *self);

FOUNDATION_EXPORT EduUciIcsJungGraphSparseGraph *new_EduUciIcsJungGraphSparseGraph_init() NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(EduUciIcsJungGraphSparseGraph)

#endif // _EduUciIcsJungGraphSparseGraph_H_
