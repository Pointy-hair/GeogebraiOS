//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/edu/uci/ics/jung/graph/DelegateTree.java
//

#ifndef _EduUciIcsJungGraphDelegateTree_H_
#define _EduUciIcsJungGraphDelegateTree_H_

#include "J2ObjC_header.h"
#include "edu/uci/ics/jung/graph/GraphDecorator.h"
#include "edu/uci/ics/jung/graph/Tree.h"

@class EduUciIcsJungGraphUtilEdgeTypeEnum;
@protocol EduUciIcsJungGraphDirectedGraph;
@protocol JavaUtilCollection;
@protocol JavaUtilList;
@protocol JavaUtilMap;
@protocol OrgApacheCommonsCollections15Factory;

@interface EduUciIcsJungGraphDelegateTree : EduUciIcsJungGraphGraphDecorator < EduUciIcsJungGraphTree > {
 @public
  id root_;
  id<JavaUtilMap> vertex_depths_;
}

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithEduUciIcsJungGraphDirectedGraph:(id<EduUciIcsJungGraphDirectedGraph>)graph;

- (instancetype)initWithOrgApacheCommonsCollections15Factory:(id<OrgApacheCommonsCollections15Factory>)graphFactory;

- (jboolean)addChildWithId:(id)edge
                    withId:(id)parent
                    withId:(id)child;

- (jboolean)addChildWithId:(id)edge
                    withId:(id)parent
                    withId:(id)child
withEduUciIcsJungGraphUtilEdgeTypeEnum:(EduUciIcsJungGraphUtilEdgeTypeEnum *)edgeType;

- (jboolean)addEdgeWithId:(id)edge
   withJavaUtilCollection:(id<JavaUtilCollection>)vertices;

- (jboolean)addEdgeWithId:(id)e
                   withId:(id)v1
                   withId:(id)v2;

- (jboolean)addEdgeWithId:(id)e
                   withId:(id)v1
                   withId:(id)v2
withEduUciIcsJungGraphUtilEdgeTypeEnum:(EduUciIcsJungGraphUtilEdgeTypeEnum *)edgeType;

- (jboolean)addVertexWithId:(id)vertex;

- (jint)getChildCountWithId:(id)parent;

- (id<JavaUtilCollection>)getChildEdgesWithId:(id)vertex;

- (id<JavaUtilCollection>)getChildrenWithId:(id)parent;

- (jint)getDepthWithId:(id)v;

+ (id<OrgApacheCommonsCollections15Factory>)getFactory;

- (jint)getHeight;

- (jint)getIncidentCountWithId:(id)edge;

- (id)getParentWithId:(id)child;

- (id)getParentEdgeWithId:(id)vertex;

- (id<JavaUtilList>)getPathWithId:(id)vertex;

- (id)getRoot;

- (id<JavaUtilCollection>)getTrees;

- (jboolean)isInternalWithId:(id)v;

- (jboolean)isLeafWithId:(id)v;

- (jboolean)isRootWithId:(id)v;

- (jboolean)removeChildWithId:(id)orphan;

- (jboolean)removeVertexWithId:(id)vertex;

- (void)setRootWithId:(id)root;

- (NSString *)description;

@end

J2OBJC_EMPTY_STATIC_INIT(EduUciIcsJungGraphDelegateTree)

J2OBJC_FIELD_SETTER(EduUciIcsJungGraphDelegateTree, root_, id)
J2OBJC_FIELD_SETTER(EduUciIcsJungGraphDelegateTree, vertex_depths_, id<JavaUtilMap>)

FOUNDATION_EXPORT id<OrgApacheCommonsCollections15Factory> EduUciIcsJungGraphDelegateTree_getFactory();

FOUNDATION_EXPORT void EduUciIcsJungGraphDelegateTree_init(EduUciIcsJungGraphDelegateTree *self);

FOUNDATION_EXPORT EduUciIcsJungGraphDelegateTree *new_EduUciIcsJungGraphDelegateTree_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void EduUciIcsJungGraphDelegateTree_initWithOrgApacheCommonsCollections15Factory_(EduUciIcsJungGraphDelegateTree *self, id<OrgApacheCommonsCollections15Factory> graphFactory);

FOUNDATION_EXPORT EduUciIcsJungGraphDelegateTree *new_EduUciIcsJungGraphDelegateTree_initWithOrgApacheCommonsCollections15Factory_(id<OrgApacheCommonsCollections15Factory> graphFactory) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void EduUciIcsJungGraphDelegateTree_initWithEduUciIcsJungGraphDirectedGraph_(EduUciIcsJungGraphDelegateTree *self, id<EduUciIcsJungGraphDirectedGraph> graph);

FOUNDATION_EXPORT EduUciIcsJungGraphDelegateTree *new_EduUciIcsJungGraphDelegateTree_initWithEduUciIcsJungGraphDirectedGraph_(id<EduUciIcsJungGraphDirectedGraph> graph) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(EduUciIcsJungGraphDelegateTree)

#endif // _EduUciIcsJungGraphDelegateTree_H_
