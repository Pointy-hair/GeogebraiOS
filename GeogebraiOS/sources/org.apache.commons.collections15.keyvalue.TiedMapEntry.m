//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/org/apache/commons/collections15/keyvalue/TiedMapEntry.java
//


#include "J2ObjC_source.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/util/Map.h"
#include "org/apache/commons/collections15/keyvalue/TiedMapEntry.h"

#define OrgApacheCommonsCollections15KeyvalueTiedMapEntry_serialVersionUID -8453869361373831205LL

@interface OrgApacheCommonsCollections15KeyvalueTiedMapEntry () {
 @public
  id<JavaUtilMap> map_;
  id key_;
}

@end

J2OBJC_FIELD_SETTER(OrgApacheCommonsCollections15KeyvalueTiedMapEntry, map_, id<JavaUtilMap>)
J2OBJC_FIELD_SETTER(OrgApacheCommonsCollections15KeyvalueTiedMapEntry, key_, id)

J2OBJC_STATIC_FIELD_GETTER(OrgApacheCommonsCollections15KeyvalueTiedMapEntry, serialVersionUID, jlong)

@implementation OrgApacheCommonsCollections15KeyvalueTiedMapEntry

- (instancetype)initWithJavaUtilMap:(id<JavaUtilMap>)map
                             withId:(id)key {
  OrgApacheCommonsCollections15KeyvalueTiedMapEntry_initWithJavaUtilMap_withId_(self, map, key);
  return self;
}

- (id)getKey {
  return key_;
}

- (id)getValue {
  return [((id<JavaUtilMap>) nil_chk(map_)) getWithId:key_];
}

- (id)setValueWithId:(id)value {
  if (value == self) {
    @throw [new_JavaLangIllegalArgumentException_initWithNSString_(@"Cannot set value to this map entry") autorelease];
  }
  return [((id<JavaUtilMap>) nil_chk(map_)) putWithId:key_ withId:value];
}

- (jboolean)isEqual:(id)obj {
  if (obj == self) {
    return YES;
  }
  if ([JavaUtilMap_Entry_class_() isInstance:obj] == NO) {
    return NO;
  }
  id<JavaUtilMap_Entry> other = (id<JavaUtilMap_Entry>) check_protocol_cast(obj, @protocol(JavaUtilMap_Entry));
  id value = [self getValue];
  return (key_ == nil ? [((id<JavaUtilMap_Entry>) nil_chk(other)) getKey] == nil : [key_ isEqual:[((id<JavaUtilMap_Entry>) nil_chk(other)) getKey]]) && (value == nil ? [other getValue] == nil : [value isEqual:[other getValue]]);
}

- (NSUInteger)hash {
  id value = [self getValue];
  return ([self getKey] == nil ? 0 : ((jint) [nil_chk([self getKey]) hash])) ^ (value == nil ? 0 : ((jint) [value hash]));
}

- (NSString *)description {
  return JreStrcat("@C@", [self getKey], '=', [self getValue]);
}

- (void)dealloc {
  RELEASE_(map_);
  RELEASE_(key_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithJavaUtilMap:withId:", "TiedMapEntry", NULL, 0x1, NULL, "(Ljava/util/Map<TK;TV;>;TK;)V" },
    { "getKey", NULL, "TK;", 0x1, NULL, "()TK;" },
    { "getValue", NULL, "TV;", 0x1, NULL, "()TV;" },
    { "setValueWithId:", "setValue", "TV;", 0x1, NULL, "(TV;)TV;" },
    { "isEqual:", "equals", "Z", 0x1, NULL, NULL },
    { "hash", "hashCode", "I", 0x1, NULL, NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID_", NULL, 0x1a, "J", NULL, NULL, .constantValue.asLong = OrgApacheCommonsCollections15KeyvalueTiedMapEntry_serialVersionUID },
    { "map_", NULL, 0x12, "Ljava.util.Map;", NULL, "Ljava/util/Map<TK;TV;>;",  },
    { "key_", NULL, 0x12, "TK;", NULL, "TK;",  },
  };
  static const J2ObjcClassInfo _OrgApacheCommonsCollections15KeyvalueTiedMapEntry = { 2, "TiedMapEntry", "org.apache.commons.collections15.keyvalue", NULL, 0x1, 7, methods, 3, fields, 0, NULL, 0, NULL, NULL, "<K:Ljava/lang/Object;V:Ljava/lang/Object;>Ljava/lang/Object;Ljava/util/Map$Entry<TK;TV;>;Lorg/apache/commons/collections15/KeyValue<TK;TV;>;Ljava/io/Serializable;" };
  return &_OrgApacheCommonsCollections15KeyvalueTiedMapEntry;
}

@end

void OrgApacheCommonsCollections15KeyvalueTiedMapEntry_initWithJavaUtilMap_withId_(OrgApacheCommonsCollections15KeyvalueTiedMapEntry *self, id<JavaUtilMap> map, id key) {
  NSObject_init(self);
  OrgApacheCommonsCollections15KeyvalueTiedMapEntry_set_map_(self, map);
  OrgApacheCommonsCollections15KeyvalueTiedMapEntry_set_key_(self, key);
}

OrgApacheCommonsCollections15KeyvalueTiedMapEntry *new_OrgApacheCommonsCollections15KeyvalueTiedMapEntry_initWithJavaUtilMap_withId_(id<JavaUtilMap> map, id key) {
  OrgApacheCommonsCollections15KeyvalueTiedMapEntry *self = [OrgApacheCommonsCollections15KeyvalueTiedMapEntry alloc];
  OrgApacheCommonsCollections15KeyvalueTiedMapEntry_initWithJavaUtilMap_withId_(self, map, key);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheCommonsCollections15KeyvalueTiedMapEntry)
