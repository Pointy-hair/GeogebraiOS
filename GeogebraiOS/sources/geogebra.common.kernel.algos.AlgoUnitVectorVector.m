//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/algos/AlgoUnitVectorVector.java
//


#include "J2ObjC_source.h"
#include "geogebra/common/kernel/Construction.h"
#include "geogebra/common/kernel/algos/AlgoUnitVector2D.h"
#include "geogebra/common/kernel/algos/AlgoUnitVectorVector.h"
#include "geogebra/common/kernel/geos/GeoElement.h"
#include "geogebra/common/kernel/geos/GeoVector.h"
#include "geogebra/common/kernel/kernelND/GeoPointND.h"
#include "geogebra/common/kernel/kernelND/GeoVectorND.h"

@implementation GeogebraCommonKernelAlgosAlgoUnitVectorVector

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                                            withNSString:(NSString *)label
             withGeogebraCommonKernelKernelNDGeoVectorND:(id<GeogebraCommonKernelKernelNDGeoVectorND>)v {
  GeogebraCommonKernelAlgosAlgoUnitVectorVector_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelKernelNDGeoVectorND_(self, cons, label, v);
  return self;
}

- (void)setXY {
  x_ = ((GeogebraCommonKernelGeosGeoVector *) nil_chk(((GeogebraCommonKernelGeosGeoVector *) check_class_cast(inputGeo_, [GeogebraCommonKernelGeosGeoVector class]))))->x_;
  y_ = ((GeogebraCommonKernelGeosGeoVector *) nil_chk(((GeogebraCommonKernelGeosGeoVector *) check_class_cast(inputGeo_, [GeogebraCommonKernelGeosGeoVector class]))))->y_;
}

- (id<GeogebraCommonKernelKernelNDGeoPointND>)getInputStartPoint {
  return [((GeogebraCommonKernelGeosGeoVector *) nil_chk(((GeogebraCommonKernelGeosGeoVector *) check_class_cast(inputGeo_, [GeogebraCommonKernelGeosGeoVector class])))) getStartPoint];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonKernelConstruction:withNSString:withGeogebraCommonKernelKernelNDGeoVectorND:", "AlgoUnitVectorVector", NULL, 0x1, NULL, NULL },
    { "setXY", NULL, "V", 0x14, NULL, NULL },
    { "getInputStartPoint", NULL, "Lgeogebra.common.kernel.kernelND.GeoPointND;", 0x14, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelAlgosAlgoUnitVectorVector = { 2, "AlgoUnitVectorVector", "geogebra.common.kernel.algos", NULL, 0x1, 3, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelAlgosAlgoUnitVectorVector;
}

@end

void GeogebraCommonKernelAlgosAlgoUnitVectorVector_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelKernelNDGeoVectorND_(GeogebraCommonKernelAlgosAlgoUnitVectorVector *self, GeogebraCommonKernelConstruction *cons, NSString *label, id<GeogebraCommonKernelKernelNDGeoVectorND> v) {
  GeogebraCommonKernelAlgosAlgoUnitVector2D_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoElement_(self, cons, label, (GeogebraCommonKernelGeosGeoElement *) check_class_cast(v, [GeogebraCommonKernelGeosGeoElement class]));
}

GeogebraCommonKernelAlgosAlgoUnitVectorVector *new_GeogebraCommonKernelAlgosAlgoUnitVectorVector_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelKernelNDGeoVectorND_(GeogebraCommonKernelConstruction *cons, NSString *label, id<GeogebraCommonKernelKernelNDGeoVectorND> v) {
  GeogebraCommonKernelAlgosAlgoUnitVectorVector *self = [GeogebraCommonKernelAlgosAlgoUnitVectorVector alloc];
  GeogebraCommonKernelAlgosAlgoUnitVectorVector_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelKernelNDGeoVectorND_(self, cons, label, v);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelAlgosAlgoUnitVectorVector)
