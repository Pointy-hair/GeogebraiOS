//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/algos/AlgoStats1D.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "geogebra/common/kernel/Construction.h"
#include "geogebra/common/kernel/algos/AlgoElement.h"
#include "geogebra/common/kernel/algos/AlgoStats1D.h"
#include "geogebra/common/kernel/arithmetic/NumberValue.h"
#include "geogebra/common/kernel/geos/GeoAngle.h"
#include "geogebra/common/kernel/geos/GeoElement.h"
#include "geogebra/common/kernel/geos/GeoList.h"
#include "geogebra/common/kernel/geos/GeoNumeric.h"
#include "java/lang/Math.h"
#include "java/util/ArrayList.h"

@interface GeogebraCommonKernelAlgosAlgoStats1D () {
 @public
  GeogebraCommonKernelGeosGeoList *geoList_, *geoList2_;
  GeogebraCommonKernelGeosGeoNumeric *Truncate_;
  GeogebraCommonKernelGeosGeoNumeric *result_;
  jint stat_;
}

@end

J2OBJC_FIELD_SETTER(GeogebraCommonKernelAlgosAlgoStats1D, geoList_, GeogebraCommonKernelGeosGeoList *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelAlgosAlgoStats1D, geoList2_, GeogebraCommonKernelGeosGeoList *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelAlgosAlgoStats1D, Truncate_, GeogebraCommonKernelGeosGeoNumeric *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelAlgosAlgoStats1D, result_, GeogebraCommonKernelGeosGeoNumeric *)

__attribute__((unused)) static void GeogebraCommonKernelAlgosAlgoStats1D_compute(GeogebraCommonKernelAlgosAlgoStats1D *self);

@implementation GeogebraCommonKernelAlgosAlgoStats1D

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                                            withNSString:(NSString *)label
                     withGeogebraCommonKernelGeosGeoList:(GeogebraCommonKernelGeosGeoList *)geoList
                                                 withInt:(jint)stat {
  GeogebraCommonKernelAlgosAlgoStats1D_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoList_withInt_(self, cons, label, geoList, stat);
  return self;
}

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                                            withNSString:(NSString *)label
                     withGeogebraCommonKernelGeosGeoList:(GeogebraCommonKernelGeosGeoList *)geoList
                  withGeogebraCommonKernelGeosGeoNumeric:(GeogebraCommonKernelGeosGeoNumeric *)Truncate
                                                 withInt:(jint)stat {
  GeogebraCommonKernelAlgosAlgoStats1D_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoNumeric_withInt_(self, cons, label, geoList, Truncate, stat);
  return self;
}

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                     withGeogebraCommonKernelGeosGeoList:(GeogebraCommonKernelGeosGeoList *)geoList
                                                 withInt:(jint)stat {
  GeogebraCommonKernelAlgosAlgoStats1D_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoList_withInt_(self, cons, geoList, stat);
  return self;
}

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                                            withNSString:(NSString *)label
                     withGeogebraCommonKernelGeosGeoList:(GeogebraCommonKernelGeosGeoList *)geoList
                     withGeogebraCommonKernelGeosGeoList:(GeogebraCommonKernelGeosGeoList *)geoList2
                                                 withInt:(jint)stat {
  GeogebraCommonKernelAlgosAlgoStats1D_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoList_withInt_(self, cons, label, geoList, geoList2, stat);
  return self;
}

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                                            withNSString:(NSString *)label
                     withGeogebraCommonKernelGeosGeoList:(GeogebraCommonKernelGeosGeoList *)geoList
                     withGeogebraCommonKernelGeosGeoList:(GeogebraCommonKernelGeosGeoList *)geoList2
                  withGeogebraCommonKernelGeosGeoNumeric:(GeogebraCommonKernelGeosGeoNumeric *)Truncate
                                                 withInt:(jint)stat {
  GeogebraCommonKernelAlgosAlgoStats1D_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoNumeric_withInt_(self, cons, label, geoList, geoList2, Truncate, stat);
  return self;
}

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                     withGeogebraCommonKernelGeosGeoList:(GeogebraCommonKernelGeosGeoList *)geoList
                     withGeogebraCommonKernelGeosGeoList:(GeogebraCommonKernelGeosGeoList *)geoList2
                                                 withInt:(jint)stat {
  GeogebraCommonKernelAlgosAlgoStats1D_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoList_withInt_(self, cons, geoList, geoList2, stat);
  return self;
}

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                     withGeogebraCommonKernelGeosGeoList:(GeogebraCommonKernelGeosGeoList *)geoList
                     withGeogebraCommonKernelGeosGeoList:(GeogebraCommonKernelGeosGeoList *)geoList2
                  withGeogebraCommonKernelGeosGeoNumeric:(GeogebraCommonKernelGeosGeoNumeric *)Truncate
                                                 withInt:(jint)stat {
  GeogebraCommonKernelAlgosAlgoStats1D_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoNumeric_withInt_(self, cons, geoList, geoList2, Truncate, stat);
  return self;
}

- (void)setInputOutput {
  JavaUtilArrayList *inputList = [new_JavaUtilArrayList_init() autorelease];
  [inputList addWithId:geoList_];
  if (geoList2_ != nil) {
    [inputList addWithId:geoList2_];
  }
  if (Truncate_ != nil) {
    [inputList addWithId:Truncate_];
  }
  GeogebraCommonKernelAlgosAlgoElement_setAndConsume_input_(self, [IOSObjectArray newArrayWithLength:[inputList size] type:GeogebraCommonKernelGeosGeoElement_class_()]);
  [inputList toArrayWithNSObjectArray:input_];
  [inputList clear];
  [self setOnlyOutputWithGeogebraCommonKernelGeosToGeoElement:result_];
  [self setDependencies];
}

- (GeogebraCommonKernelGeosGeoNumeric *)getResult {
  return result_;
}

- (void)compute {
  GeogebraCommonKernelAlgosAlgoStats1D_compute(self);
}

- (void)dealloc {
  RELEASE_(geoList_);
  RELEASE_(geoList2_);
  RELEASE_(Truncate_);
  RELEASE_(result_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonKernelConstruction:withNSString:withGeogebraCommonKernelGeosGeoList:withInt:", "AlgoStats1D", NULL, 0x1, NULL, NULL },
    { "initWithGeogebraCommonKernelConstruction:withNSString:withGeogebraCommonKernelGeosGeoList:withGeogebraCommonKernelGeosGeoNumeric:withInt:", "AlgoStats1D", NULL, 0x4, NULL, NULL },
    { "initWithGeogebraCommonKernelConstruction:withGeogebraCommonKernelGeosGeoList:withInt:", "AlgoStats1D", NULL, 0x1, NULL, NULL },
    { "initWithGeogebraCommonKernelConstruction:withNSString:withGeogebraCommonKernelGeosGeoList:withGeogebraCommonKernelGeosGeoList:withInt:", "AlgoStats1D", NULL, 0x1, NULL, NULL },
    { "initWithGeogebraCommonKernelConstruction:withNSString:withGeogebraCommonKernelGeosGeoList:withGeogebraCommonKernelGeosGeoList:withGeogebraCommonKernelGeosGeoNumeric:withInt:", "AlgoStats1D", NULL, 0x4, NULL, NULL },
    { "initWithGeogebraCommonKernelConstruction:withGeogebraCommonKernelGeosGeoList:withGeogebraCommonKernelGeosGeoList:withInt:", "AlgoStats1D", NULL, 0x1, NULL, NULL },
    { "initWithGeogebraCommonKernelConstruction:withGeogebraCommonKernelGeosGeoList:withGeogebraCommonKernelGeosGeoList:withGeogebraCommonKernelGeosGeoNumeric:withInt:", "AlgoStats1D", NULL, 0x4, NULL, NULL },
    { "setInputOutput", NULL, "V", 0x4, NULL, NULL },
    { "getResult", NULL, "Lgeogebra.common.kernel.geos.GeoNumeric;", 0x1, NULL, NULL },
    { "compute", NULL, "V", 0x11, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "geoList_", NULL, 0x2, "Lgeogebra.common.kernel.geos.GeoList;", NULL, NULL,  },
    { "geoList2_", NULL, 0x2, "Lgeogebra.common.kernel.geos.GeoList;", NULL, NULL,  },
    { "Truncate_", NULL, 0x2, "Lgeogebra.common.kernel.geos.GeoNumeric;", NULL, NULL,  },
    { "result_", NULL, 0x2, "Lgeogebra.common.kernel.geos.GeoNumeric;", NULL, NULL,  },
    { "stat_", NULL, 0x2, "I", NULL, NULL,  },
    { "STATS_MEAN_", NULL, 0x1c, "I", NULL, NULL, .constantValue.asInt = GeogebraCommonKernelAlgosAlgoStats1D_STATS_MEAN },
    { "STATS_VARIANCE_", NULL, 0x1c, "I", NULL, NULL, .constantValue.asInt = GeogebraCommonKernelAlgosAlgoStats1D_STATS_VARIANCE },
    { "STATS_SIGMAX_", NULL, 0x1c, "I", NULL, NULL, .constantValue.asInt = GeogebraCommonKernelAlgosAlgoStats1D_STATS_SIGMAX },
    { "STATS_SIGMAXX_", NULL, 0x1c, "I", NULL, NULL, .constantValue.asInt = GeogebraCommonKernelAlgosAlgoStats1D_STATS_SIGMAXX },
    { "STATS_SD_", NULL, 0x1c, "I", NULL, NULL, .constantValue.asInt = GeogebraCommonKernelAlgosAlgoStats1D_STATS_SD },
    { "STATS_PRODUCT_", NULL, 0x1c, "I", NULL, NULL, .constantValue.asInt = GeogebraCommonKernelAlgosAlgoStats1D_STATS_PRODUCT },
    { "STATS_SXX_", NULL, 0x1c, "I", NULL, NULL, .constantValue.asInt = GeogebraCommonKernelAlgosAlgoStats1D_STATS_SXX },
    { "STATS_SAMPLE_VARIANCE_", NULL, 0x1c, "I", NULL, NULL, .constantValue.asInt = GeogebraCommonKernelAlgosAlgoStats1D_STATS_SAMPLE_VARIANCE },
    { "STATS_SAMPLE_SD_", NULL, 0x1c, "I", NULL, NULL, .constantValue.asInt = GeogebraCommonKernelAlgosAlgoStats1D_STATS_SAMPLE_SD },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelAlgosAlgoStats1D = { 2, "AlgoStats1D", "geogebra.common.kernel.algos", NULL, 0x401, 10, methods, 14, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelAlgosAlgoStats1D;
}

@end

void GeogebraCommonKernelAlgosAlgoStats1D_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoList_withInt_(GeogebraCommonKernelAlgosAlgoStats1D *self, GeogebraCommonKernelConstruction *cons, NSString *label, GeogebraCommonKernelGeosGeoList *geoList, jint stat) {
  GeogebraCommonKernelAlgosAlgoStats1D_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoNumeric_withInt_(self, cons, label, geoList, nil, nil, stat);
}

void GeogebraCommonKernelAlgosAlgoStats1D_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoNumeric_withInt_(GeogebraCommonKernelAlgosAlgoStats1D *self, GeogebraCommonKernelConstruction *cons, NSString *label, GeogebraCommonKernelGeosGeoList *geoList, GeogebraCommonKernelGeosGeoNumeric *Truncate, jint stat) {
  GeogebraCommonKernelAlgosAlgoStats1D_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoNumeric_withInt_(self, cons, geoList, nil, Truncate, stat);
  [((GeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->result_)) setLabelWithNSString:label];
}

void GeogebraCommonKernelAlgosAlgoStats1D_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoList_withInt_(GeogebraCommonKernelAlgosAlgoStats1D *self, GeogebraCommonKernelConstruction *cons, GeogebraCommonKernelGeosGeoList *geoList, jint stat) {
  GeogebraCommonKernelAlgosAlgoStats1D_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoNumeric_withInt_(self, cons, geoList, nil, nil, stat);
}

void GeogebraCommonKernelAlgosAlgoStats1D_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoList_withInt_(GeogebraCommonKernelAlgosAlgoStats1D *self, GeogebraCommonKernelConstruction *cons, NSString *label, GeogebraCommonKernelGeosGeoList *geoList, GeogebraCommonKernelGeosGeoList *geoList2, jint stat) {
  GeogebraCommonKernelAlgosAlgoStats1D_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoNumeric_withInt_(self, cons, label, geoList, geoList2, nil, stat);
}

void GeogebraCommonKernelAlgosAlgoStats1D_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoNumeric_withInt_(GeogebraCommonKernelAlgosAlgoStats1D *self, GeogebraCommonKernelConstruction *cons, NSString *label, GeogebraCommonKernelGeosGeoList *geoList, GeogebraCommonKernelGeosGeoList *geoList2, GeogebraCommonKernelGeosGeoNumeric *Truncate, jint stat) {
  GeogebraCommonKernelAlgosAlgoStats1D_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoNumeric_withInt_(self, cons, geoList, geoList2, Truncate, stat);
  [((GeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->result_)) setLabelWithNSString:label];
}

void GeogebraCommonKernelAlgosAlgoStats1D_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoList_withInt_(GeogebraCommonKernelAlgosAlgoStats1D *self, GeogebraCommonKernelConstruction *cons, GeogebraCommonKernelGeosGeoList *geoList, GeogebraCommonKernelGeosGeoList *geoList2, jint stat) {
  GeogebraCommonKernelAlgosAlgoStats1D_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoNumeric_withInt_(self, cons, geoList, geoList2, nil, stat);
}

void GeogebraCommonKernelAlgosAlgoStats1D_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoNumeric_withInt_(GeogebraCommonKernelAlgosAlgoStats1D *self, GeogebraCommonKernelConstruction *cons, GeogebraCommonKernelGeosGeoList *geoList, GeogebraCommonKernelGeosGeoList *geoList2, GeogebraCommonKernelGeosGeoNumeric *Truncate, jint stat) {
  GeogebraCommonKernelAlgosAlgoElement_initWithGeogebraCommonKernelConstruction_(self, cons);
  GeogebraCommonKernelAlgosAlgoStats1D_set_geoList_(self, geoList);
  GeogebraCommonKernelAlgosAlgoStats1D_set_geoList2_(self, geoList2);
  self->stat_ = stat;
  GeogebraCommonKernelAlgosAlgoStats1D_set_Truncate_(self, Truncate);
  if ([((GeogebraCommonKernelGeosGeoList *) nil_chk(geoList)) size] > 0 && [((GeogebraCommonKernelGeosGeoElement *) nil_chk([geoList getWithInt:0])) isAngle]) {
    GeogebraCommonKernelAlgosAlgoStats1D_setAndConsume_result_(self, new_GeogebraCommonKernelGeosGeoAngle_initWithGeogebraCommonKernelConstruction_(cons));
    [((GeogebraCommonKernelGeosGeoAngle *) check_class_cast(self->result_, [GeogebraCommonKernelGeosGeoAngle class])) setAngleStyleWithGeogebraCommonKernelGeosGeoAngle_AngleStyleEnum:GeogebraCommonKernelGeosGeoAngle_AngleStyleEnum_get_UNBOUNDED()];
  }
  else {
    GeogebraCommonKernelAlgosAlgoStats1D_setAndConsume_result_(self, new_GeogebraCommonKernelGeosGeoNumeric_initWithGeogebraCommonKernelConstruction_(cons));
  }
  [self setInputOutput];
  GeogebraCommonKernelAlgosAlgoStats1D_compute(self);
}

void GeogebraCommonKernelAlgosAlgoStats1D_compute(GeogebraCommonKernelAlgosAlgoStats1D *self) {
  if (![((GeogebraCommonKernelGeosGeoList *) nil_chk(self->geoList_)) isDefined]) {
    [((GeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->result_)) setUndefined];
    return;
  }
  if (self->geoList2_ != nil) {
    if (![self->geoList2_ isDefined] || !([self->geoList_ size] == [self->geoList2_ size] || [self->geoList_ size] == [self->geoList2_ size] + 1)) {
      [((GeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->result_)) setUndefined];
      return;
    }
  }
  jint truncate;
  jdouble size = [self->geoList_ size];
  if (self->Truncate_ != nil) {
    if (![self->Truncate_ isDefined]) {
      [((GeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->result_)) setUndefined];
      return;
    }
    truncate = J2ObjCFpToInt([self->Truncate_ getDouble]);
    if (truncate == 0) {
      [((GeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->result_)) setValueWithDouble:0];
      return;
    }
    if (truncate < 1 || truncate > size) {
      [((GeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->result_)) setUndefined];
      return;
    }
    size = truncate;
  }
  if (size == 0) {
    switch (self->stat_) {
      case GeogebraCommonKernelAlgosAlgoStats1D_STATS_SIGMAX:
      case GeogebraCommonKernelAlgosAlgoStats1D_STATS_SIGMAXX:
      [((GeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->result_)) setValueWithDouble:0];
      return;
      case GeogebraCommonKernelAlgosAlgoStats1D_STATS_PRODUCT:
      [((GeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->result_)) setValueWithDouble:1];
      return;
      default:
      [((GeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->result_)) setUndefined];
      return;
    }
  }
  jdouble sumVal = 0;
  jdouble sumSquares = 0;
  jdouble product = 1;
  jdouble sumFreq = 0;
  jdouble frequency = 1;
  jdouble var, mu;
  GeogebraCommonKernelGeosGeoElement *geo, *geoFreq, *geo2;
  if (self->geoList2_ == nil) {
    jdouble val;
    for (jint i = 0; i < size; i++) {
      geo = [self->geoList_ getWithInt:i];
      if ([GeogebraCommonKernelArithmeticNumberValue_class_() isInstance:geo]) {
        val = [((id<GeogebraCommonKernelArithmeticNumberValue>) nil_chk(((id<GeogebraCommonKernelArithmeticNumberValue>) check_protocol_cast(geo, @protocol(GeogebraCommonKernelArithmeticNumberValue))))) getDouble];
        sumVal += val;
        sumSquares += val * val;
        product *= val;
      }
      else {
        [((GeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->result_)) setUndefined];
        return;
      }
    }
  }
  else {
    jboolean useMidpoint = [self->geoList_ size] == [self->geoList2_ size] + 1;
    size = useMidpoint ? size - 1 : size;
    jdouble val;
    jdouble val_by_freq;
    for (jint i = 0; i < size; i++) {
      geo = [self->geoList_ getWithInt:i];
      geoFreq = [self->geoList2_ getWithInt:i];
      if (!([GeogebraCommonKernelArithmeticNumberValue_class_() isInstance:geo]) || !([GeogebraCommonKernelArithmeticNumberValue_class_() isInstance:geoFreq])) {
        [((GeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->result_)) setUndefined];
        return;
      }
      val = [((id<GeogebraCommonKernelArithmeticNumberValue>) nil_chk(((id<GeogebraCommonKernelArithmeticNumberValue>) check_protocol_cast(geo, @protocol(GeogebraCommonKernelArithmeticNumberValue))))) getDouble];
      if (useMidpoint) {
        geo2 = [self->geoList_ getWithInt:i + 1];
        if (!([GeogebraCommonKernelArithmeticNumberValue_class_() isInstance:geo2])) {
          [((GeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->result_)) setUndefined];
          return;
        }
        val = (val + ([((id<GeogebraCommonKernelArithmeticNumberValue>) nil_chk(((id<GeogebraCommonKernelArithmeticNumberValue>) check_protocol_cast(geo2, @protocol(GeogebraCommonKernelArithmeticNumberValue))))) getDouble])) / 2;
      }
      frequency = [((id<GeogebraCommonKernelArithmeticNumberValue>) nil_chk(((id<GeogebraCommonKernelArithmeticNumberValue>) check_protocol_cast(geoFreq, @protocol(GeogebraCommonKernelArithmeticNumberValue))))) getDouble];
      if (frequency < 0) {
        [((GeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->result_)) setUndefined];
        return;
      }
      val_by_freq = val * frequency;
      sumVal += val_by_freq;
      sumSquares += val * val_by_freq;
      sumFreq += frequency;
      product *= JavaLangMath_powWithDouble_withDouble_(val, frequency);
    }
    size = sumFreq;
  }
  mu = sumVal / size;
  switch (self->stat_) {
    case GeogebraCommonKernelAlgosAlgoStats1D_STATS_MEAN:
    [((GeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->result_)) setValueWithDouble:mu];
    break;
    case GeogebraCommonKernelAlgosAlgoStats1D_STATS_SD:
    var = sumSquares / size - mu * mu;
    [((GeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->result_)) setValueWithDouble:JavaLangMath_sqrtWithDouble_(var)];
    break;
    case GeogebraCommonKernelAlgosAlgoStats1D_STATS_SAMPLE_SD:
    var = (sumSquares - sumVal * sumVal / size) / (size - 1);
    [((GeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->result_)) setValueWithDouble:JavaLangMath_sqrtWithDouble_(var)];
    break;
    case GeogebraCommonKernelAlgosAlgoStats1D_STATS_VARIANCE:
    var = sumSquares / size - mu * mu;
    [((GeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->result_)) setValueWithDouble:var];
    break;
    case GeogebraCommonKernelAlgosAlgoStats1D_STATS_SAMPLE_VARIANCE:
    var = (sumSquares - sumVal * sumVal / size) / (size - 1);
    [((GeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->result_)) setValueWithDouble:var];
    break;
    case GeogebraCommonKernelAlgosAlgoStats1D_STATS_SXX:
    var = sumSquares - (sumVal * sumVal) / size;
    [((GeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->result_)) setValueWithDouble:var];
    break;
    case GeogebraCommonKernelAlgosAlgoStats1D_STATS_SIGMAX:
    [((GeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->result_)) setValueWithDouble:sumVal];
    break;
    case GeogebraCommonKernelAlgosAlgoStats1D_STATS_SIGMAXX:
    [((GeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->result_)) setValueWithDouble:sumSquares];
    break;
    case GeogebraCommonKernelAlgosAlgoStats1D_STATS_PRODUCT:
    [((GeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->result_)) setValueWithDouble:product];
    break;
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelAlgosAlgoStats1D)
