//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/geogebra3D/kernel3D/algos/AlgoAnglePolygon3DOrientation.java
//


#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "geogebra/common/geogebra3D/kernel3D/algos/AlgoAnglePoints3DOrientation.h"
#include "geogebra/common/geogebra3D/kernel3D/algos/AlgoAnglePolygon3D.h"
#include "geogebra/common/geogebra3D/kernel3D/algos/AlgoAnglePolygon3DOrientation.h"
#include "geogebra/common/kernel/Construction.h"
#include "geogebra/common/kernel/StringTemplate.h"
#include "geogebra/common/kernel/algos/AlgoAnglePointsND.h"
#include "geogebra/common/kernel/algos/AlgoElement.h"
#include "geogebra/common/kernel/algos/ConstructionElement.h"
#include "geogebra/common/kernel/geos/GeoElement.h"
#include "geogebra/common/kernel/geos/GeoPolygon.h"
#include "geogebra/common/kernel/kernelND/GeoDirectionND.h"
#include "geogebra/common/main/Localization.h"

@interface GeogebraCommonGeogebra3DKernel3DAlgosAlgoAnglePolygon3DOrientation () {
 @public
  id<GeogebraCommonKernelKernelNDGeoDirectionND> orientation_;
}

@end

J2OBJC_FIELD_SETTER(GeogebraCommonGeogebra3DKernel3DAlgosAlgoAnglePolygon3DOrientation, orientation_, id<GeogebraCommonKernelKernelNDGeoDirectionND>)

@implementation GeogebraCommonGeogebra3DKernel3DAlgosAlgoAnglePolygon3DOrientation

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                                       withNSStringArray:(IOSObjectArray *)labels
                  withGeogebraCommonKernelGeosGeoPolygon:(GeogebraCommonKernelGeosGeoPolygon *)poly
          withGeogebraCommonKernelKernelNDGeoDirectionND:(id<GeogebraCommonKernelKernelNDGeoDirectionND>)orientation {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoAnglePolygon3DOrientation_initWithGeogebraCommonKernelConstruction_withNSStringArray_withGeogebraCommonKernelGeosGeoPolygon_withGeogebraCommonKernelKernelNDGeoDirectionND_(self, cons, labels, poly, orientation);
  return self;
}

- (GeogebraCommonKernelAlgosAlgoAnglePointsND *)newAlgoAnglePointsWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons1 {
  return [new_GeogebraCommonGeogebra3DKernel3DAlgosAlgoAnglePoints3DOrientation_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelKernelNDGeoDirectionND_(cons1, orientation_) autorelease];
}

- (void)setPolyAndOrientationWithGeogebraCommonKernelGeosGeoPolygon:(GeogebraCommonKernelGeosGeoPolygon *)p
                     withGeogebraCommonKernelKernelNDGeoDirectionND:(id<GeogebraCommonKernelKernelNDGeoDirectionND>)orientation {
  [super setPolyAndOrientationWithGeogebraCommonKernelGeosGeoPolygon:p withGeogebraCommonKernelKernelNDGeoDirectionND:orientation];
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoAnglePolygon3DOrientation_set_orientation_(self, orientation);
}

- (void)setInputOutput {
  GeogebraCommonKernelAlgosAlgoElement_setAndConsume_input_(self, [IOSObjectArray newArrayWithLength:2 type:GeogebraCommonKernelGeosGeoElement_class_()]);
  IOSObjectArray_Set(input_, 0, poly_);
  IOSObjectArray_Set(input_, 1, (GeogebraCommonKernelGeosGeoElement *) check_class_cast(orientation_, [GeogebraCommonKernelGeosGeoElement class]));
  [self setDependencies];
}

- (NSString *)toStringWithGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl {
  return [((GeogebraCommonMainLocalization *) nil_chk([self getLoc])) getPlainWithNSString:@"AngleOfAOrientedByB" withNSString:[((GeogebraCommonKernelGeosGeoPolygon *) nil_chk(poly_)) getLabelWithGeogebraCommonKernelStringTemplate:tpl] withNSString:[((id<GeogebraCommonKernelKernelNDGeoDirectionND>) nil_chk(orientation_)) getLabelWithGeogebraCommonKernelStringTemplate:tpl]];
}

- (void)dealloc {
  RELEASE_(orientation_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonKernelConstruction:withNSStringArray:withGeogebraCommonKernelGeosGeoPolygon:withGeogebraCommonKernelKernelNDGeoDirectionND:", "AlgoAnglePolygon3DOrientation", NULL, 0x1, NULL, NULL },
    { "newAlgoAnglePointsWithGeogebraCommonKernelConstruction:", "newAlgoAnglePoints", "Lgeogebra.common.kernel.algos.AlgoAnglePointsND;", 0x4, NULL, NULL },
    { "setPolyAndOrientationWithGeogebraCommonKernelGeosGeoPolygon:withGeogebraCommonKernelKernelNDGeoDirectionND:", "setPolyAndOrientation", "V", 0x4, NULL, NULL },
    { "setInputOutput", NULL, "V", 0x4, NULL, NULL },
    { "toStringWithGeogebraCommonKernelStringTemplate:", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "orientation_", NULL, 0x2, "Lgeogebra.common.kernel.kernelND.GeoDirectionND;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _GeogebraCommonGeogebra3DKernel3DAlgosAlgoAnglePolygon3DOrientation = { 2, "AlgoAnglePolygon3DOrientation", "geogebra.common.geogebra3D.kernel3D.algos", NULL, 0x1, 5, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonGeogebra3DKernel3DAlgosAlgoAnglePolygon3DOrientation;
}

@end

void GeogebraCommonGeogebra3DKernel3DAlgosAlgoAnglePolygon3DOrientation_initWithGeogebraCommonKernelConstruction_withNSStringArray_withGeogebraCommonKernelGeosGeoPolygon_withGeogebraCommonKernelKernelNDGeoDirectionND_(GeogebraCommonGeogebra3DKernel3DAlgosAlgoAnglePolygon3DOrientation *self, GeogebraCommonKernelConstruction *cons, IOSObjectArray *labels, GeogebraCommonKernelGeosGeoPolygon *poly, id<GeogebraCommonKernelKernelNDGeoDirectionND> orientation) {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoAnglePolygon3D_initWithGeogebraCommonKernelConstruction_withNSStringArray_withGeogebraCommonKernelGeosGeoPolygon_withGeogebraCommonKernelKernelNDGeoDirectionND_(self, cons, labels, poly, orientation);
}

GeogebraCommonGeogebra3DKernel3DAlgosAlgoAnglePolygon3DOrientation *new_GeogebraCommonGeogebra3DKernel3DAlgosAlgoAnglePolygon3DOrientation_initWithGeogebraCommonKernelConstruction_withNSStringArray_withGeogebraCommonKernelGeosGeoPolygon_withGeogebraCommonKernelKernelNDGeoDirectionND_(GeogebraCommonKernelConstruction *cons, IOSObjectArray *labels, GeogebraCommonKernelGeosGeoPolygon *poly, id<GeogebraCommonKernelKernelNDGeoDirectionND> orientation) {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoAnglePolygon3DOrientation *self = [GeogebraCommonGeogebra3DKernel3DAlgosAlgoAnglePolygon3DOrientation alloc];
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoAnglePolygon3DOrientation_initWithGeogebraCommonKernelConstruction_withNSStringArray_withGeogebraCommonKernelGeosGeoPolygon_withGeogebraCommonKernelKernelNDGeoDirectionND_(self, cons, labels, poly, orientation);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonGeogebra3DKernel3DAlgosAlgoAnglePolygon3DOrientation)
