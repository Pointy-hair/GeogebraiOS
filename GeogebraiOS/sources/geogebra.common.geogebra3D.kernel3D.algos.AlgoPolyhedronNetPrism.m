//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/geogebra3D/kernel3D/algos/AlgoPolyhedronNetPrism.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "geogebra/common/geogebra3D/kernel3D/algos/AlgoPolyhedronNet.h"
#include "geogebra/common/geogebra3D/kernel3D/algos/AlgoPolyhedronNetPrism.h"
#include "geogebra/common/geogebra3D/kernel3D/geos/GeoPoint3D.h"
#include "geogebra/common/geogebra3D/kernel3D/geos/GeoPolygon3D.h"
#include "geogebra/common/geogebra3D/kernel3D/geos/GeoPolyhedron.h"
#include "geogebra/common/geogebra3D/kernel3D/geos/GeoPolyhedronNet.h"
#include "geogebra/common/geogebra3D/kernel3D/geos/GeoSegment3D.h"
#include "geogebra/common/kernel/Construction.h"
#include "geogebra/common/kernel/Matrix/CoordMatrix4x4.h"
#include "geogebra/common/kernel/Matrix/CoordSys.h"
#include "geogebra/common/kernel/Matrix/Coords.h"
#include "geogebra/common/kernel/algos/AlgoElement.h"
#include "geogebra/common/kernel/arithmetic/NumberValue.h"
#include "geogebra/common/kernel/geos/GeoPolygon.h"
#include "geogebra/common/kernel/kernelND/GeoPointND.h"
#include "geogebra/common/kernel/kernelND/GeoSegmentND.h"

@interface GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetPrism () {
 @public
  GeogebraCommonKernelMatrixCoords *pp1_;
}

- (void)setOutputSideWithGeogebraCommonGeogebra3DKernel3DGeosGeoPolygon3D:(GeogebraCommonGeogebra3DKernel3DGeosGeoPolygon3D *)polygon;

- (void)updateSideWithInt:(jint)index
                  withInt:(jint)newBottomPointsLength;

- (void)createSideFaceWithGeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedronNet:(GeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedronNet *)net
                                                                       withInt:(jint)index
                                                                       withInt:(jint)newBottomPointsLength;

@end

J2OBJC_FIELD_SETTER(GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetPrism, pp1_, GeogebraCommonKernelMatrixCoords *)

__attribute__((unused)) static void GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetPrism_setOutputSideWithGeogebraCommonGeogebra3DKernel3DGeosGeoPolygon3D_(GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetPrism *self, GeogebraCommonGeogebra3DKernel3DGeosGeoPolygon3D *polygon);

__attribute__((unused)) static void GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetPrism_updateSideWithInt_withInt_(GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetPrism *self, jint index, jint newBottomPointsLength);

__attribute__((unused)) static void GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetPrism_createSideFaceWithGeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedronNet_withInt_withInt_(GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetPrism *self, GeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedronNet *net, jint index, jint newBottomPointsLength);

@implementation GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetPrism

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)c
                                       withNSStringArray:(IOSObjectArray *)labels
   withGeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedron:(GeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedron *)p
           withGeogebraCommonKernelArithmeticNumberValue:(id<GeogebraCommonKernelArithmeticNumberValue>)v {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetPrism_initWithGeogebraCommonKernelConstruction_withNSStringArray_withGeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedron_withGeogebraCommonKernelArithmeticNumberValue_(self, c, labels, p, v);
  return self;
}

- (jint)getPointLengthFromLabelsLengthWithInt:(jint)length {
  return length / 10;
}

- (void)createNetWithInt:(jint)n {
  GeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedronNet *net = [self getNet];
  [((GeogebraCommonKernelAlgosAlgoElement_OutputHandler *) nil_chk(outputPointsBottom_)) adjustOutputSizeWithInt:n withBoolean:NO];
  [((GeogebraCommonKernelAlgosAlgoElement_OutputHandler *) nil_chk(outputPointsSide_)) adjustOutputSizeWithInt:2 * n withBoolean:NO];
  [((GeogebraCommonKernelAlgosAlgoElement_OutputHandler *) nil_chk(outputPointsTop_)) adjustOutputSizeWithInt:n - 2 withBoolean:NO];
  [((GeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedronNet *) nil_chk(net)) startNewFace];
  for (jint i = 0; i < n; i++) {
    [net addPointToCurrentFaceWithGeogebraCommonKernelKernelNDGeoPointND:[outputPointsBottom_ getElementWithInt:i]];
  }
  [net endCurrentFace];
  for (jint i = 0; i < n; i++) {
    GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetPrism_createSideFaceWithGeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedronNet_withInt_withInt_(self, net, i, n);
  }
  [net startNewFace];
  [net addPointToCurrentFaceWithGeogebraCommonKernelKernelNDGeoPointND:[outputPointsSide_ getElementWithInt:0]];
  [net addPointToCurrentFaceWithGeogebraCommonKernelKernelNDGeoPointND:[outputPointsSide_ getElementWithInt:1]];
  for (jint i = 0; i < n - 2; i++) {
    [net addPointToCurrentFaceWithGeogebraCommonKernelKernelNDGeoPointND:[outputPointsTop_ getElementWithInt:i]];
  }
  [net endCurrentFace];
}

- (void)setOutputSideTopWithInt:(jint)n
withGeogebraCommonGeogebra3DKernel3DGeosGeoPolygon3D:(GeogebraCommonGeogebra3DKernel3DGeosGeoPolygon3D *)polygon
                        withInt:(jint)step
withGeogebraCommonKernelKernelNDGeoSegmentNDArray:(IOSObjectArray *)segments {
  if (step == n + 2) {
    [((GeogebraCommonKernelAlgosAlgoElement_OutputHandler *) nil_chk(outputPolygonsTop_)) addOutputWithGeogebraCommonKernelGeosGeoElement:polygon withBoolean:NO];
    for (jint i = 1; i < ((IOSObjectArray *) nil_chk(segments))->size_; i++) {
      [((GeogebraCommonKernelAlgosAlgoElement_OutputHandler *) nil_chk(outputSegmentsTop_)) addOutputWithGeogebraCommonKernelGeosGeoElement:(GeogebraCommonGeogebra3DKernel3DGeosGeoSegment3D *) check_class_cast(IOSObjectArray_Get(segments, i), [GeogebraCommonGeogebra3DKernel3DGeosGeoSegment3D class]) withBoolean:NO];
    }
  }
  else {
    GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetPrism_setOutputSideWithGeogebraCommonGeogebra3DKernel3DGeosGeoPolygon3D_(self, polygon);
  }
}

- (void)setOutputSideWithGeogebraCommonGeogebra3DKernel3DGeosGeoPolygon3D:(GeogebraCommonGeogebra3DKernel3DGeosGeoPolygon3D *)polygon {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetPrism_setOutputSideWithGeogebraCommonGeogebra3DKernel3DGeosGeoPolygon3D_(self, polygon);
}

- (void)computeWithDouble:(jdouble)f
withGeogebraCommonKernelGeosGeoPolygon:(GeogebraCommonKernelGeosGeoPolygon *)bottomPolygon
withGeogebraCommonKernelMatrixCoordsArray:(IOSObjectArray *)points {
  if (pp1_ == nil) {
    GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetPrism_setAndConsume_pp1_(self, new_GeogebraCommonKernelMatrixCoords_initWithInt_(4));
  }
  jint sz = ((IOSObjectArray *) nil_chk(points))->size_;
  IOSObjectArray *topP = GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNet_getPointsCoordsWithGeogebraCommonKernelGeosGeoPolygon_([((GeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedron *) nil_chk(p_)) getTopFace]);
  GeogebraCommonKernelMatrixCoords *topCo = IOSObjectArray_Get(nil_chk(topP), 0);
  [((GeogebraCommonKernelMatrixCoords *) nil_chk(topCo)) projectPlaneWithGeogebraCommonKernelMatrixCoordMatrix:[((GeogebraCommonKernelMatrixCoordSys *) nil_chk([((GeogebraCommonKernelGeosGeoPolygon *) nil_chk(bottomPolygon)) getCoordSys])) getMatrixOrthonormal] withGeogebraCommonKernelMatrixCoords:pp1_];
  jdouble dd1 = [p_ getOrientedHeight];
  if (dd1 < 0) {
    f *= -1;
    dd1 *= -1;
  }
  GeogebraCommonKernelMatrixCoords *faceDirection = [bottomPolygon getDirectionInD3];
  if ([bottomPolygon isConvexInverseDirection]) {
    f *= -1;
    faceDirection = [((GeogebraCommonKernelMatrixCoords *) nil_chk(faceDirection)) mulWithDouble:-1];
  }
  GeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *wpoint1 = nil;
  GeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *wpoint2 = nil;
  GeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *wpoint3 = nil;
  GeogebraCommonKernelMatrixCoords *cCoord = nil;
  for (jint i = 0; i < sz; i++) {
    wpoint1 = [((GeogebraCommonKernelAlgosAlgoElement_OutputHandler *) nil_chk(outputPointsSide_)) getElementWithInt:2 * i];
    jint j = 2 * i - 1;
    if (j < 0) {
      j = 2 * sz - 1;
    }
    wpoint2 = [outputPointsSide_ getElementWithInt:j];
    cCoord = IOSObjectArray_Get(topP, i);
    [((GeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *) nil_chk(wpoint1)) setCoordsWithGeogebraCommonKernelMatrixCoords:cCoord];
    [((GeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *) nil_chk(wpoint2)) setCoordsWithGeogebraCommonKernelMatrixCoords:cCoord];
    if (i > 1) {
      wpoint3 = [((GeogebraCommonKernelAlgosAlgoElement_OutputHandler *) nil_chk(outputPointsTop_)) getElementWithInt:i - 2];
      [((GeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *) nil_chk(wpoint3)) setCoordsWithGeogebraCommonKernelMatrixCoords:cCoord];
    }
  }
  IOSObjectArray *bottomSegsDirections = [IOSObjectArray arrayWithLength:sz type:GeogebraCommonKernelMatrixCoords_class_()];
  GeogebraCommonKernelMatrixCoords *p1 = IOSObjectArray_Get(points, sz - 1);
  GeogebraCommonKernelMatrixCoords *p2 = IOSObjectArray_Get(points, 0);
  IOSObjectArray_Set(bottomSegsDirections, sz - 1, [((GeogebraCommonKernelMatrixCoords *) nil_chk([((GeogebraCommonKernelMatrixCoords *) nil_chk(p2)) subWithGeogebraCommonKernelMatrixCoords:p1])) normalized]);
  for (jint i = 0; i < sz - 1; i++) {
    p1 = p2;
    p2 = IOSObjectArray_Get(points, i + 1);
    IOSObjectArray_Set(bottomSegsDirections, i, [((GeogebraCommonKernelMatrixCoords *) nil_chk([((GeogebraCommonKernelMatrixCoords *) nil_chk(p2)) subWithGeogebraCommonKernelMatrixCoords:p1])) normalized]);
  }
  GeogebraCommonKernelMatrixCoords *o = IOSObjectArray_Get(topP, 1);
  GeogebraCommonKernelMatrixCoords *vs = IOSObjectArray_Get(bottomSegsDirections, 0);
  GeogebraCommonKernelGeosGeoPolygon *side0 = [p_ getFirstSideFace];
  for (jint i = 0; i < sz - 2; i++) {
    wpoint3 = [((GeogebraCommonKernelAlgosAlgoElement_OutputHandler *) nil_chk(outputPointsTop_)) getElementWithInt:i];
    cCoord = [((GeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *) nil_chk(wpoint3)) getInhomCoordsInD3];
    [((GeogebraCommonKernelMatrixCoords *) nil_chk(cCoord)) projectPlaneWithGeogebraCommonKernelMatrixCoordMatrix:[((GeogebraCommonKernelMatrixCoordSys *) nil_chk([((GeogebraCommonKernelGeosGeoPolygon *) nil_chk(side0)) getCoordSys])) getMatrixOrthonormal] withGeogebraCommonKernelMatrixCoords:pp1_];
    jdouble dist = [((GeogebraCommonKernelMatrixCoords *) nil_chk(pp1_)) distanceWithGeogebraCommonKernelMatrixCoords:cCoord];
    [self rotateWithGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D:wpoint3 withGeogebraCommonKernelMatrixCoords:cCoord withGeogebraCommonKernelMatrixCoords:pp1_ withGeogebraCommonKernelMatrixCoords:o withGeogebraCommonKernelMatrixCoords:vs withDouble:f withGeogebraCommonKernelMatrixCoords:[side0 getDirectionInD3] withDouble:dist withBoolean:YES];
  }
  for (jint i = 0; i < 2 * sz; i += 2) {
    o = IOSObjectArray_Get(points, i / 2);
    vs = IOSObjectArray_Get(bottomSegsDirections, i / 2);
    wpoint1 = [((GeogebraCommonKernelAlgosAlgoElement_OutputHandler *) nil_chk(outputPointsSide_)) getElementWithInt:i];
    cCoord = [((GeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *) nil_chk(wpoint1)) getInhomCoordsInD3];
    [((GeogebraCommonKernelMatrixCoords *) nil_chk(cCoord)) projectPlaneWithGeogebraCommonKernelMatrixCoordMatrix:[((GeogebraCommonKernelMatrixCoordSys *) nil_chk([bottomPolygon getCoordSys])) getMatrixOrthonormal] withGeogebraCommonKernelMatrixCoords:pp1_];
    [self rotateWithGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D:wpoint1 withGeogebraCommonKernelMatrixCoords:cCoord withGeogebraCommonKernelMatrixCoords:pp1_ withGeogebraCommonKernelMatrixCoords:o withGeogebraCommonKernelMatrixCoords:vs withDouble:f withGeogebraCommonKernelMatrixCoords:faceDirection withDouble:dd1 withBoolean:NO];
    wpoint2 = [outputPointsSide_ getElementWithInt:i + 1];
    cCoord = [((GeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *) nil_chk(wpoint2)) getInhomCoordsInD3];
    [((GeogebraCommonKernelMatrixCoords *) nil_chk(cCoord)) projectPlaneWithGeogebraCommonKernelMatrixCoordMatrix:[((GeogebraCommonKernelMatrixCoordSys *) nil_chk([bottomPolygon getCoordSys])) getMatrixOrthonormal] withGeogebraCommonKernelMatrixCoords:pp1_];
    [self rotateWithGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D:wpoint2 withGeogebraCommonKernelMatrixCoords:cCoord withGeogebraCommonKernelMatrixCoords:pp1_ withGeogebraCommonKernelMatrixCoords:o withGeogebraCommonKernelMatrixCoords:vs withDouble:f withGeogebraCommonKernelMatrixCoords:faceDirection withDouble:dd1 withBoolean:NO];
    if (i == 0) {
      for (jint j = 0; j < sz - 2; j++) {
        wpoint3 = [((GeogebraCommonKernelAlgosAlgoElement_OutputHandler *) nil_chk(outputPointsTop_)) getElementWithInt:j];
        [self rotateWithGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D:wpoint3 withGeogebraCommonKernelMatrixCoords:cCoord withGeogebraCommonKernelMatrixCoords:pp1_ withGeogebraCommonKernelMatrixCoords:o withGeogebraCommonKernelMatrixCoords:vs withDouble:f withGeogebraCommonKernelMatrixCoords:faceDirection withDouble:dd1 withBoolean:NO];
      }
    }
  }
  [((GeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedronNet *) nil_chk([self getNet])) setAreaWithDouble:[p_ getArea]];
}

- (void)adjustOutputSizeWithInt:(jint)newBottomPointsLength {
  [super adjustOutputSizeWithInt:newBottomPointsLength];
  jint nOld = [((GeogebraCommonKernelAlgosAlgoElement_OutputHandler *) nil_chk(outputPointsSide_)) size] / 2;
  if (newBottomPointsLength > nOld) {
    [((GeogebraCommonKernelAlgosAlgoElement_OutputHandler *) nil_chk(outputPointsTop_)) adjustOutputSizeWithInt:newBottomPointsLength - 2 withBoolean:NO];
    [outputPointsTop_ setLabelsWithNSStringArray:nil];
    GeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedronNet *net = [self getNet];
    for (jint i = nOld; i < newBottomPointsLength - 1; i++) {
      GeogebraCommonGeogebra3DKernel3DGeosGeoSegment3D *segmentTop = (GeogebraCommonGeogebra3DKernel3DGeosGeoSegment3D *) check_class_cast([((GeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedronNet *) nil_chk(net)) createSegmentWithGeogebraCommonKernelKernelNDGeoPointND:[outputPointsTop_ getElementWithInt:i - 2] withGeogebraCommonKernelKernelNDGeoPointND:[outputPointsTop_ getElementWithInt:i - 1]], [GeogebraCommonGeogebra3DKernel3DGeosGeoSegment3D class]);
      [((GeogebraCommonKernelAlgosAlgoElement_OutputHandler *) nil_chk(outputSegmentsTop_)) addOutputWithGeogebraCommonKernelGeosGeoElement:segmentTop withBoolean:NO];
    }
    GeogebraCommonGeogebra3DKernel3DGeosGeoSegment3D *segmentTop = (GeogebraCommonGeogebra3DKernel3DGeosGeoSegment3D *) check_class_cast([((GeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedronNet *) nil_chk(net)) createSegmentWithGeogebraCommonKernelKernelNDGeoPointND:[outputPointsTop_ getElementWithInt:newBottomPointsLength - 3] withGeogebraCommonKernelKernelNDGeoPointND:[outputPointsSide_ getElementWithInt:0]], [GeogebraCommonGeogebra3DKernel3DGeosGeoSegment3D class]);
    [((GeogebraCommonKernelAlgosAlgoElement_OutputHandler *) nil_chk(outputSegmentsTop_)) addOutputWithGeogebraCommonKernelGeosGeoElement:segmentTop withBoolean:NO];
    [outputSegmentsTop_ setLabelsWithNSStringArray:nil];
  }
  if (newBottomPointsLength > bottomPointsLength_) {
    for (jint i = bottomPointsLength_; i < newBottomPointsLength && i <= nOld; i++) {
      id<GeogebraCommonKernelKernelNDGeoSegmentND> segmentBottom = [((GeogebraCommonKernelAlgosAlgoElement_OutputHandler *) nil_chk(outputSegmentsBottom_)) getElementWithInt:i - 1];
      [((id<GeogebraCommonKernelKernelNDGeoSegmentND>) nil_chk(segmentBottom)) modifyInputPointsWithGeogebraCommonKernelKernelNDGeoPointND:[((GeogebraCommonKernelAlgosAlgoElement_OutputHandler *) nil_chk(outputPointsBottom_)) getElementWithInt:i - 1] withGeogebraCommonKernelKernelNDGeoPointND:[outputPointsBottom_ getElementWithInt:i]];
      id<GeogebraCommonKernelKernelNDGeoSegmentND> segmenTop = [((GeogebraCommonKernelAlgosAlgoElement_OutputHandler *) nil_chk(outputSegmentsTop_)) getElementWithInt:i - 2];
      [((id<GeogebraCommonKernelKernelNDGeoSegmentND>) nil_chk(segmenTop)) modifyInputPointsWithGeogebraCommonKernelKernelNDGeoPointND:[((GeogebraCommonKernelAlgosAlgoElement_OutputHandler *) nil_chk(outputPointsTop_)) getElementWithInt:i - 3] withGeogebraCommonKernelKernelNDGeoPointND:[outputPointsTop_ getElementWithInt:i - 2]];
    }
    for (jint i = bottomPointsLength_ - 1; i < newBottomPointsLength && i < nOld; i++) {
      GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetPrism_updateSideWithInt_withInt_(self, i, newBottomPointsLength);
    }
  }
  if (newBottomPointsLength > nOld) {
    [outputPointsSide_ adjustOutputSizeWithInt:newBottomPointsLength * 2 withBoolean:NO];
    [outputPointsSide_ setLabelsWithNSStringArray:nil];
    GeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedronNet *net = [self getNet];
    for (jint i = nOld; i < newBottomPointsLength; i++) {
      GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetPrism_createSideFaceWithGeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedronNet_withInt_withInt_(self, net, i, newBottomPointsLength);
      GeogebraCommonGeogebra3DKernel3DGeosGeoPolygon3D *polygon = [((GeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedronNet *) nil_chk(net)) createPolygonWithInt:i + 2];
      GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetPrism_setOutputSideWithGeogebraCommonGeogebra3DKernel3DGeosGeoPolygon3D_(self, polygon);
      [((GeogebraCommonKernelAlgosAlgoElement_OutputHandler *) nil_chk(outputSegmentsBottom_)) addOutputWithGeogebraCommonKernelGeosGeoElement:(GeogebraCommonGeogebra3DKernel3DGeosGeoSegment3D *) check_class_cast(IOSObjectArray_Get(nil_chk([((GeogebraCommonGeogebra3DKernel3DGeosGeoPolygon3D *) nil_chk(polygon)) getSegments]), 0), [GeogebraCommonGeogebra3DKernel3DGeosGeoSegment3D class]) withBoolean:NO];
    }
    [((GeogebraCommonKernelAlgosAlgoElement_OutputHandler *) nil_chk(outputSegmentsBottom_)) setLabelsWithNSStringArray:nil];
    [((GeogebraCommonKernelAlgosAlgoElement_OutputHandler *) nil_chk(outputSegmentsSide_)) setLabelsWithNSStringArray:nil];
    [((GeogebraCommonKernelAlgosAlgoElement_OutputHandler *) nil_chk(outputPolygonsSide_)) setLabelsWithNSStringArray:nil];
    [self refreshOutput];
  }
  if (newBottomPointsLength > bottomPointsLength_) {
    [self updateBottomWithInt:newBottomPointsLength];
    [self updateTopWithInt:newBottomPointsLength];
  }
  else if (newBottomPointsLength < bottomPointsLength_) {
    for (jint i = newBottomPointsLength; i < bottomPointsLength_; i++) {
      [((GeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *) nil_chk([((GeogebraCommonKernelAlgosAlgoElement_OutputHandler *) nil_chk(outputPointsBottom_)) getElementWithInt:i])) setUndefined];
      [((GeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *) nil_chk([outputPointsSide_ getElementWithInt:2 * i])) setUndefined];
      [((GeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *) nil_chk([outputPointsSide_ getElementWithInt:2 * i + 1])) setUndefined];
      [((GeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *) nil_chk([((GeogebraCommonKernelAlgosAlgoElement_OutputHandler *) nil_chk(outputPointsTop_)) getElementWithInt:i - 2])) setUndefined];
    }
    id<GeogebraCommonKernelKernelNDGeoSegmentND> segmentBottom = [((GeogebraCommonKernelAlgosAlgoElement_OutputHandler *) nil_chk(outputSegmentsBottom_)) getElementWithInt:newBottomPointsLength - 1];
    [((id<GeogebraCommonKernelKernelNDGeoSegmentND>) nil_chk(segmentBottom)) modifyInputPointsWithGeogebraCommonKernelKernelNDGeoPointND:[((GeogebraCommonKernelAlgosAlgoElement_OutputHandler *) nil_chk(outputPointsBottom_)) getElementWithInt:newBottomPointsLength - 1] withGeogebraCommonKernelKernelNDGeoPointND:[outputPointsBottom_ getElementWithInt:0]];
    [self updateBottomWithInt:newBottomPointsLength];
    id<GeogebraCommonKernelKernelNDGeoSegmentND> segmentTop = [((GeogebraCommonKernelAlgosAlgoElement_OutputHandler *) nil_chk(outputSegmentsTop_)) getElementWithInt:newBottomPointsLength - 2];
    [((id<GeogebraCommonKernelKernelNDGeoSegmentND>) nil_chk(segmentTop)) modifyInputPointsWithGeogebraCommonKernelKernelNDGeoPointND:[((GeogebraCommonKernelAlgosAlgoElement_OutputHandler *) nil_chk(outputPointsTop_)) getElementWithInt:newBottomPointsLength - 3] withGeogebraCommonKernelKernelNDGeoPointND:[outputPointsSide_ getElementWithInt:0]];
    [self updateTopWithInt:newBottomPointsLength];
    GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetPrism_updateSideWithInt_withInt_(self, newBottomPointsLength - 1, newBottomPointsLength);
  }
  bottomPointsLength_ = newBottomPointsLength;
}

- (void)updateSideWithInt:(jint)index
                  withInt:(jint)newBottomPointsLength {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetPrism_updateSideWithInt_withInt_(self, index, newBottomPointsLength);
}

- (void)createSideFaceWithGeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedronNet:(GeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedronNet *)net
                                                                       withInt:(jint)index
                                                                       withInt:(jint)newBottomPointsLength {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetPrism_createSideFaceWithGeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedronNet_withInt_withInt_(self, net, index, newBottomPointsLength);
}

- (void)updateTopWithInt:(jint)newBottomPointsLength {
  GeogebraCommonKernelGeosGeoPolygon *polygon = [((GeogebraCommonKernelAlgosAlgoElement_OutputHandler *) nil_chk(outputPolygonsTop_)) getElementWithInt:0];
  IOSObjectArray *points = [IOSObjectArray arrayWithLength:newBottomPointsLength type:GeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D_class_()];
  IOSObjectArray *segments = [IOSObjectArray arrayWithLength:newBottomPointsLength type:GeogebraCommonGeogebra3DKernel3DGeosGeoSegment3D_class_()];
  IOSObjectArray_Set(points, 0, [((GeogebraCommonKernelAlgosAlgoElement_OutputHandler *) nil_chk(outputPointsSide_)) getElementWithInt:0]);
  IOSObjectArray_Set(points, 1, [outputPointsSide_ getElementWithInt:1]);
  for (jint i = 2; i < newBottomPointsLength; i++) {
    IOSObjectArray_Set(points, i, [((GeogebraCommonKernelAlgosAlgoElement_OutputHandler *) nil_chk(outputPointsTop_)) getElementWithInt:i - 2]);
  }
  IOSObjectArray_Set(segments, 0, [((GeogebraCommonKernelAlgosAlgoElement_OutputHandler *) nil_chk(outputSegmentsSide_)) getElementWithInt:0]);
  for (jint i = 1; i < newBottomPointsLength; i++) {
    IOSObjectArray_Set(segments, i, [((GeogebraCommonKernelAlgosAlgoElement_OutputHandler *) nil_chk(outputSegmentsTop_)) getElementWithInt:i - 1]);
  }
  [((GeogebraCommonKernelGeosGeoPolygon *) nil_chk(polygon)) modifyInputPointsWithGeogebraCommonKernelKernelNDGeoPointNDArray:points];
  [polygon setSegmentsWithGeogebraCommonKernelKernelNDGeoSegmentNDArray:segments];
  [polygon calcArea];
}

- (void)dealloc {
  RELEASE_(pp1_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonKernelConstruction:withNSStringArray:withGeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedron:withGeogebraCommonKernelArithmeticNumberValue:", "AlgoPolyhedronNetPrism", NULL, 0x1, NULL, NULL },
    { "getPointLengthFromLabelsLengthWithInt:", "getPointLengthFromLabelsLength", "I", 0x4, NULL, NULL },
    { "createNetWithInt:", "createNet", "V", 0x4, NULL, NULL },
    { "setOutputSideTopWithInt:withGeogebraCommonGeogebra3DKernel3DGeosGeoPolygon3D:withInt:withGeogebraCommonKernelKernelNDGeoSegmentNDArray:", "setOutputSideTop", "V", 0x4, NULL, NULL },
    { "setOutputSideWithGeogebraCommonGeogebra3DKernel3DGeosGeoPolygon3D:", "setOutputSide", "V", 0x2, NULL, NULL },
    { "computeWithDouble:withGeogebraCommonKernelGeosGeoPolygon:withGeogebraCommonKernelMatrixCoordsArray:", "compute", "V", 0x1, NULL, NULL },
    { "adjustOutputSizeWithInt:", "adjustOutputSize", "V", 0x4, NULL, NULL },
    { "updateSideWithInt:withInt:", "updateSide", "V", 0x2, NULL, NULL },
    { "createSideFaceWithGeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedronNet:withInt:withInt:", "createSideFace", "V", 0x2, NULL, NULL },
    { "updateTopWithInt:", "updateTop", "V", 0x4, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "pp1_", NULL, 0x2, "Lgeogebra.common.kernel.Matrix.Coords;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetPrism = { 2, "AlgoPolyhedronNetPrism", "geogebra.common.geogebra3D.kernel3D.algos", NULL, 0x1, 10, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetPrism;
}

@end

void GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetPrism_initWithGeogebraCommonKernelConstruction_withNSStringArray_withGeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedron_withGeogebraCommonKernelArithmeticNumberValue_(GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetPrism *self, GeogebraCommonKernelConstruction *c, IOSObjectArray *labels, GeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedron *p, id<GeogebraCommonKernelArithmeticNumberValue> v) {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNet_initWithGeogebraCommonKernelConstruction_withNSStringArray_withGeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedron_withGeogebraCommonKernelArithmeticNumberValue_(self, c, labels, p, v);
}

GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetPrism *new_GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetPrism_initWithGeogebraCommonKernelConstruction_withNSStringArray_withGeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedron_withGeogebraCommonKernelArithmeticNumberValue_(GeogebraCommonKernelConstruction *c, IOSObjectArray *labels, GeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedron *p, id<GeogebraCommonKernelArithmeticNumberValue> v) {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetPrism *self = [GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetPrism alloc];
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetPrism_initWithGeogebraCommonKernelConstruction_withNSStringArray_withGeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedron_withGeogebraCommonKernelArithmeticNumberValue_(self, c, labels, p, v);
  return self;
}

void GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetPrism_setOutputSideWithGeogebraCommonGeogebra3DKernel3DGeosGeoPolygon3D_(GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetPrism *self, GeogebraCommonGeogebra3DKernel3DGeosGeoPolygon3D *polygon) {
  [((GeogebraCommonKernelAlgosAlgoElement_OutputHandler *) nil_chk(self->outputPolygonsSide_)) addOutputWithGeogebraCommonKernelGeosGeoElement:polygon withBoolean:NO];
  [((GeogebraCommonKernelAlgosAlgoElement_OutputHandler *) nil_chk(self->outputSegmentsSide_)) addOutputWithGeogebraCommonKernelGeosGeoElement:(GeogebraCommonGeogebra3DKernel3DGeosGeoSegment3D *) check_class_cast(IOSObjectArray_Get(nil_chk([((GeogebraCommonGeogebra3DKernel3DGeosGeoPolygon3D *) nil_chk(polygon)) getSegments]), 3), [GeogebraCommonGeogebra3DKernel3DGeosGeoSegment3D class]) withBoolean:NO];
  [self->outputSegmentsSide_ addOutputWithGeogebraCommonKernelGeosGeoElement:(GeogebraCommonGeogebra3DKernel3DGeosGeoSegment3D *) check_class_cast(IOSObjectArray_Get(nil_chk([polygon getSegments]), 2), [GeogebraCommonGeogebra3DKernel3DGeosGeoSegment3D class]) withBoolean:NO];
  [self->outputSegmentsSide_ addOutputWithGeogebraCommonKernelGeosGeoElement:(GeogebraCommonGeogebra3DKernel3DGeosGeoSegment3D *) check_class_cast(IOSObjectArray_Get(nil_chk([polygon getSegments]), 1), [GeogebraCommonGeogebra3DKernel3DGeosGeoSegment3D class]) withBoolean:NO];
}

void GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetPrism_updateSideWithInt_withInt_(GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetPrism *self, jint index, jint newBottomPointsLength) {
  id<GeogebraCommonKernelKernelNDGeoPointND> pointBottom1 = [((GeogebraCommonKernelAlgosAlgoElement_OutputHandler *) nil_chk(self->outputPointsBottom_)) getElementWithInt:index];
  id<GeogebraCommonKernelKernelNDGeoPointND> pointBottom2 = [self->outputPointsBottom_ getElementWithInt:(index + 1) % newBottomPointsLength];
  id<GeogebraCommonKernelKernelNDGeoPointND> pointSide2 = [((GeogebraCommonKernelAlgosAlgoElement_OutputHandler *) nil_chk(self->outputPointsSide_)) getElementWithInt:2 * index];
  id<GeogebraCommonKernelKernelNDGeoPointND> pointSide1 = [self->outputPointsSide_ getElementWithInt:(2 * index + 1) % (2 * newBottomPointsLength)];
  id<GeogebraCommonKernelKernelNDGeoSegmentND> segmentBottom = [((GeogebraCommonKernelAlgosAlgoElement_OutputHandler *) nil_chk(self->outputSegmentsBottom_)) getElementWithInt:index];
  id<GeogebraCommonKernelKernelNDGeoSegmentND> segmentSide3 = [((GeogebraCommonKernelAlgosAlgoElement_OutputHandler *) nil_chk(self->outputSegmentsSide_)) getElementWithInt:3 * index];
  id<GeogebraCommonKernelKernelNDGeoSegmentND> segmentSide2 = [self->outputSegmentsSide_ getElementWithInt:3 * index + 1];
  id<GeogebraCommonKernelKernelNDGeoSegmentND> segmentSide1 = [self->outputSegmentsSide_ getElementWithInt:(3 * index + 2) % (3 * newBottomPointsLength)];
  [((id<GeogebraCommonKernelKernelNDGeoSegmentND>) nil_chk(segmentSide1)) modifyInputPointsWithGeogebraCommonKernelKernelNDGeoPointND:pointBottom2 withGeogebraCommonKernelKernelNDGeoPointND:pointSide1];
  [((id<GeogebraCommonKernelKernelNDGeoSegmentND>) nil_chk(segmentSide2)) modifyInputPointsWithGeogebraCommonKernelKernelNDGeoPointND:pointSide1 withGeogebraCommonKernelKernelNDGeoPointND:pointSide2];
  [((id<GeogebraCommonKernelKernelNDGeoSegmentND>) nil_chk(segmentSide3)) modifyInputPointsWithGeogebraCommonKernelKernelNDGeoPointND:pointSide2 withGeogebraCommonKernelKernelNDGeoPointND:pointBottom1];
  GeogebraCommonKernelGeosGeoPolygon *polygon = [((GeogebraCommonKernelAlgosAlgoElement_OutputHandler *) nil_chk(self->outputPolygonsSide_)) getElementWithInt:index];
  IOSObjectArray *points = [IOSObjectArray arrayWithLength:4 type:GeogebraCommonKernelKernelNDGeoPointND_class_()];
  IOSObjectArray_Set(points, 0, pointBottom1);
  IOSObjectArray_Set(points, 1, pointBottom2);
  IOSObjectArray_Set(points, 2, pointSide1);
  IOSObjectArray_Set(points, 3, pointSide2);
  [((GeogebraCommonKernelGeosGeoPolygon *) nil_chk(polygon)) modifyInputPointsWithGeogebraCommonKernelKernelNDGeoPointNDArray:points];
  IOSObjectArray *s = [IOSObjectArray arrayWithLength:4 type:GeogebraCommonKernelKernelNDGeoSegmentND_class_()];
  IOSObjectArray_Set(s, 0, segmentBottom);
  IOSObjectArray_Set(s, 1, segmentSide1);
  IOSObjectArray_Set(s, 2, segmentSide2);
  IOSObjectArray_Set(s, 2, segmentSide3);
  [polygon setSegmentsWithGeogebraCommonKernelKernelNDGeoSegmentNDArray:s];
  [polygon calcArea];
}

void GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetPrism_createSideFaceWithGeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedronNet_withInt_withInt_(GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetPrism *self, GeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedronNet *net, jint index, jint newBottomPointsLength) {
  [((GeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedronNet *) nil_chk(net)) startNewFace];
  [net addPointToCurrentFaceWithGeogebraCommonKernelKernelNDGeoPointND:[((GeogebraCommonKernelAlgosAlgoElement_OutputHandler *) nil_chk(self->outputPointsBottom_)) getElementWithInt:index]];
  [net addPointToCurrentFaceWithGeogebraCommonKernelKernelNDGeoPointND:[self->outputPointsBottom_ getElementWithInt:(index + 1) % newBottomPointsLength]];
  [net addPointToCurrentFaceWithGeogebraCommonKernelKernelNDGeoPointND:[((GeogebraCommonKernelAlgosAlgoElement_OutputHandler *) nil_chk(self->outputPointsSide_)) getElementWithInt:(2 * index + 1) % (2 * newBottomPointsLength)]];
  [net addPointToCurrentFaceWithGeogebraCommonKernelKernelNDGeoPointND:[self->outputPointsSide_ getElementWithInt:2 * index]];
  [net endCurrentFace];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetPrism)
