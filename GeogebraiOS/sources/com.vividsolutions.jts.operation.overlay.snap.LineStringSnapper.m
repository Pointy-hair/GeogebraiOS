//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/com/vividsolutions/jts/operation/overlay/snap/LineStringSnapper.java
//


#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "com/vividsolutions/jts/geom/Coordinate.h"
#include "com/vividsolutions/jts/geom/CoordinateList.h"
#include "com/vividsolutions/jts/geom/LineSegment.h"
#include "com/vividsolutions/jts/geom/LineString.h"
#include "com/vividsolutions/jts/operation/overlay/snap/LineStringSnapper.h"
#include "java/lang/Double.h"

@interface ComVividsolutionsJtsOperationOverlaySnapLineStringSnapper () {
 @public
  jdouble snapTolerance_;
  IOSObjectArray *srcPts_;
  ComVividsolutionsJtsGeomLineSegment *seg_;
  jboolean isClosed_;
}

- (void)snapVerticesWithComVividsolutionsJtsGeomCoordinateList:(ComVividsolutionsJtsGeomCoordinateList *)srcCoords
                   withComVividsolutionsJtsGeomCoordinateArray:(IOSObjectArray *)snapPts;

- (ComVividsolutionsJtsGeomCoordinate *)findSnapForVertexWithComVividsolutionsJtsGeomCoordinate:(ComVividsolutionsJtsGeomCoordinate *)pt
                                                    withComVividsolutionsJtsGeomCoordinateArray:(IOSObjectArray *)snapPts;

- (void)snapSegmentsWithComVividsolutionsJtsGeomCoordinateList:(ComVividsolutionsJtsGeomCoordinateList *)srcCoords
                   withComVividsolutionsJtsGeomCoordinateArray:(IOSObjectArray *)snapPts;

- (jint)findSegmentIndexToSnapWithComVividsolutionsJtsGeomCoordinate:(ComVividsolutionsJtsGeomCoordinate *)snapPt
                          withComVividsolutionsJtsGeomCoordinateList:(ComVividsolutionsJtsGeomCoordinateList *)srcCoords;

@end

J2OBJC_FIELD_SETTER(ComVividsolutionsJtsOperationOverlaySnapLineStringSnapper, srcPts_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(ComVividsolutionsJtsOperationOverlaySnapLineStringSnapper, seg_, ComVividsolutionsJtsGeomLineSegment *)

__attribute__((unused)) static void ComVividsolutionsJtsOperationOverlaySnapLineStringSnapper_snapVerticesWithComVividsolutionsJtsGeomCoordinateList_withComVividsolutionsJtsGeomCoordinateArray_(ComVividsolutionsJtsOperationOverlaySnapLineStringSnapper *self, ComVividsolutionsJtsGeomCoordinateList *srcCoords, IOSObjectArray *snapPts);

__attribute__((unused)) static ComVividsolutionsJtsGeomCoordinate *ComVividsolutionsJtsOperationOverlaySnapLineStringSnapper_findSnapForVertexWithComVividsolutionsJtsGeomCoordinate_withComVividsolutionsJtsGeomCoordinateArray_(ComVividsolutionsJtsOperationOverlaySnapLineStringSnapper *self, ComVividsolutionsJtsGeomCoordinate *pt, IOSObjectArray *snapPts);

__attribute__((unused)) static void ComVividsolutionsJtsOperationOverlaySnapLineStringSnapper_snapSegmentsWithComVividsolutionsJtsGeomCoordinateList_withComVividsolutionsJtsGeomCoordinateArray_(ComVividsolutionsJtsOperationOverlaySnapLineStringSnapper *self, ComVividsolutionsJtsGeomCoordinateList *srcCoords, IOSObjectArray *snapPts);

__attribute__((unused)) static jint ComVividsolutionsJtsOperationOverlaySnapLineStringSnapper_findSegmentIndexToSnapWithComVividsolutionsJtsGeomCoordinate_withComVividsolutionsJtsGeomCoordinateList_(ComVividsolutionsJtsOperationOverlaySnapLineStringSnapper *self, ComVividsolutionsJtsGeomCoordinate *snapPt, ComVividsolutionsJtsGeomCoordinateList *srcCoords);

@implementation ComVividsolutionsJtsOperationOverlaySnapLineStringSnapper

- (instancetype)initWithComVividsolutionsJtsGeomLineString:(ComVividsolutionsJtsGeomLineString *)srcLline
                                                withDouble:(jdouble)snapTolerance {
  ComVividsolutionsJtsOperationOverlaySnapLineStringSnapper_initWithComVividsolutionsJtsGeomLineString_withDouble_(self, srcLline, snapTolerance);
  return self;
}

- (instancetype)initWithComVividsolutionsJtsGeomCoordinateArray:(IOSObjectArray *)srcPts
                                                     withDouble:(jdouble)snapTolerance {
  ComVividsolutionsJtsOperationOverlaySnapLineStringSnapper_initWithComVividsolutionsJtsGeomCoordinateArray_withDouble_(self, srcPts, snapTolerance);
  return self;
}

- (IOSObjectArray *)snapToWithComVividsolutionsJtsGeomCoordinateArray:(IOSObjectArray *)snapPts {
  ComVividsolutionsJtsGeomCoordinateList *coordList = [new_ComVividsolutionsJtsGeomCoordinateList_initWithComVividsolutionsJtsGeomCoordinateArray_(srcPts_) autorelease];
  ComVividsolutionsJtsOperationOverlaySnapLineStringSnapper_snapVerticesWithComVividsolutionsJtsGeomCoordinateList_withComVividsolutionsJtsGeomCoordinateArray_(self, coordList, snapPts);
  ComVividsolutionsJtsOperationOverlaySnapLineStringSnapper_snapSegmentsWithComVividsolutionsJtsGeomCoordinateList_withComVividsolutionsJtsGeomCoordinateArray_(self, coordList, snapPts);
  IOSObjectArray *newPts = [coordList toCoordinateArray];
  return newPts;
}

- (void)snapVerticesWithComVividsolutionsJtsGeomCoordinateList:(ComVividsolutionsJtsGeomCoordinateList *)srcCoords
                   withComVividsolutionsJtsGeomCoordinateArray:(IOSObjectArray *)snapPts {
  ComVividsolutionsJtsOperationOverlaySnapLineStringSnapper_snapVerticesWithComVividsolutionsJtsGeomCoordinateList_withComVividsolutionsJtsGeomCoordinateArray_(self, srcCoords, snapPts);
}

- (ComVividsolutionsJtsGeomCoordinate *)findSnapForVertexWithComVividsolutionsJtsGeomCoordinate:(ComVividsolutionsJtsGeomCoordinate *)pt
                                                    withComVividsolutionsJtsGeomCoordinateArray:(IOSObjectArray *)snapPts {
  return ComVividsolutionsJtsOperationOverlaySnapLineStringSnapper_findSnapForVertexWithComVividsolutionsJtsGeomCoordinate_withComVividsolutionsJtsGeomCoordinateArray_(self, pt, snapPts);
}

- (void)snapSegmentsWithComVividsolutionsJtsGeomCoordinateList:(ComVividsolutionsJtsGeomCoordinateList *)srcCoords
                   withComVividsolutionsJtsGeomCoordinateArray:(IOSObjectArray *)snapPts {
  ComVividsolutionsJtsOperationOverlaySnapLineStringSnapper_snapSegmentsWithComVividsolutionsJtsGeomCoordinateList_withComVividsolutionsJtsGeomCoordinateArray_(self, srcCoords, snapPts);
}

- (jint)findSegmentIndexToSnapWithComVividsolutionsJtsGeomCoordinate:(ComVividsolutionsJtsGeomCoordinate *)snapPt
                          withComVividsolutionsJtsGeomCoordinateList:(ComVividsolutionsJtsGeomCoordinateList *)srcCoords {
  return ComVividsolutionsJtsOperationOverlaySnapLineStringSnapper_findSegmentIndexToSnapWithComVividsolutionsJtsGeomCoordinate_withComVividsolutionsJtsGeomCoordinateList_(self, snapPt, srcCoords);
}

- (void)dealloc {
  RELEASE_(srcPts_);
  RELEASE_(seg_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithComVividsolutionsJtsGeomLineString:withDouble:", "LineStringSnapper", NULL, 0x1, NULL, NULL },
    { "initWithComVividsolutionsJtsGeomCoordinateArray:withDouble:", "LineStringSnapper", NULL, 0x1, NULL, NULL },
    { "snapToWithComVividsolutionsJtsGeomCoordinateArray:", "snapTo", "[Lcom.vividsolutions.jts.geom.Coordinate;", 0x1, NULL, NULL },
    { "snapVerticesWithComVividsolutionsJtsGeomCoordinateList:withComVividsolutionsJtsGeomCoordinateArray:", "snapVertices", "V", 0x2, NULL, NULL },
    { "findSnapForVertexWithComVividsolutionsJtsGeomCoordinate:withComVividsolutionsJtsGeomCoordinateArray:", "findSnapForVertex", "Lcom.vividsolutions.jts.geom.Coordinate;", 0x2, NULL, NULL },
    { "snapSegmentsWithComVividsolutionsJtsGeomCoordinateList:withComVividsolutionsJtsGeomCoordinateArray:", "snapSegments", "V", 0x2, NULL, NULL },
    { "findSegmentIndexToSnapWithComVividsolutionsJtsGeomCoordinate:withComVividsolutionsJtsGeomCoordinateList:", "findSegmentIndexToSnap", "I", 0x2, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "snapTolerance_", NULL, 0x2, "D", NULL, NULL,  },
    { "srcPts_", NULL, 0x2, "[Lcom.vividsolutions.jts.geom.Coordinate;", NULL, NULL,  },
    { "seg_", NULL, 0x2, "Lcom.vividsolutions.jts.geom.LineSegment;", NULL, NULL,  },
    { "isClosed_", NULL, 0x2, "Z", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _ComVividsolutionsJtsOperationOverlaySnapLineStringSnapper = { 2, "LineStringSnapper", "com.vividsolutions.jts.operation.overlay.snap", NULL, 0x1, 7, methods, 4, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ComVividsolutionsJtsOperationOverlaySnapLineStringSnapper;
}

@end

void ComVividsolutionsJtsOperationOverlaySnapLineStringSnapper_initWithComVividsolutionsJtsGeomLineString_withDouble_(ComVividsolutionsJtsOperationOverlaySnapLineStringSnapper *self, ComVividsolutionsJtsGeomLineString *srcLline, jdouble snapTolerance) {
  ComVividsolutionsJtsOperationOverlaySnapLineStringSnapper_initWithComVividsolutionsJtsGeomCoordinateArray_withDouble_(self, [((ComVividsolutionsJtsGeomLineString *) nil_chk(srcLline)) getCoordinates], snapTolerance);
}

ComVividsolutionsJtsOperationOverlaySnapLineStringSnapper *new_ComVividsolutionsJtsOperationOverlaySnapLineStringSnapper_initWithComVividsolutionsJtsGeomLineString_withDouble_(ComVividsolutionsJtsGeomLineString *srcLline, jdouble snapTolerance) {
  ComVividsolutionsJtsOperationOverlaySnapLineStringSnapper *self = [ComVividsolutionsJtsOperationOverlaySnapLineStringSnapper alloc];
  ComVividsolutionsJtsOperationOverlaySnapLineStringSnapper_initWithComVividsolutionsJtsGeomLineString_withDouble_(self, srcLline, snapTolerance);
  return self;
}

void ComVividsolutionsJtsOperationOverlaySnapLineStringSnapper_initWithComVividsolutionsJtsGeomCoordinateArray_withDouble_(ComVividsolutionsJtsOperationOverlaySnapLineStringSnapper *self, IOSObjectArray *srcPts, jdouble snapTolerance) {
  NSObject_init(self);
  self->snapTolerance_ = 0.0;
  ComVividsolutionsJtsOperationOverlaySnapLineStringSnapper_setAndConsume_seg_(self, new_ComVividsolutionsJtsGeomLineSegment_init());
  self->isClosed_ = NO;
  ComVividsolutionsJtsOperationOverlaySnapLineStringSnapper_set_srcPts_(self, srcPts);
  self->isClosed_ = [((ComVividsolutionsJtsGeomCoordinate *) nil_chk(IOSObjectArray_Get(nil_chk(srcPts), 0))) equals2DWithComVividsolutionsJtsGeomCoordinate:IOSObjectArray_Get(srcPts, srcPts->size_ - 1)];
  self->snapTolerance_ = snapTolerance;
}

ComVividsolutionsJtsOperationOverlaySnapLineStringSnapper *new_ComVividsolutionsJtsOperationOverlaySnapLineStringSnapper_initWithComVividsolutionsJtsGeomCoordinateArray_withDouble_(IOSObjectArray *srcPts, jdouble snapTolerance) {
  ComVividsolutionsJtsOperationOverlaySnapLineStringSnapper *self = [ComVividsolutionsJtsOperationOverlaySnapLineStringSnapper alloc];
  ComVividsolutionsJtsOperationOverlaySnapLineStringSnapper_initWithComVividsolutionsJtsGeomCoordinateArray_withDouble_(self, srcPts, snapTolerance);
  return self;
}

void ComVividsolutionsJtsOperationOverlaySnapLineStringSnapper_snapVerticesWithComVividsolutionsJtsGeomCoordinateList_withComVividsolutionsJtsGeomCoordinateArray_(ComVividsolutionsJtsOperationOverlaySnapLineStringSnapper *self, ComVividsolutionsJtsGeomCoordinateList *srcCoords, IOSObjectArray *snapPts) {
  for (jint i = 0; i < [((ComVividsolutionsJtsGeomCoordinateList *) nil_chk(srcCoords)) size] - 1; i++) {
    ComVividsolutionsJtsGeomCoordinate *srcPt = (ComVividsolutionsJtsGeomCoordinate *) check_class_cast([srcCoords getWithInt:i], [ComVividsolutionsJtsGeomCoordinate class]);
    ComVividsolutionsJtsGeomCoordinate *snapVert = ComVividsolutionsJtsOperationOverlaySnapLineStringSnapper_findSnapForVertexWithComVividsolutionsJtsGeomCoordinate_withComVividsolutionsJtsGeomCoordinateArray_(self, srcPt, snapPts);
    if (snapVert != nil) {
      [srcCoords setWithInt:i withId:[new_ComVividsolutionsJtsGeomCoordinate_initWithComVividsolutionsJtsGeomCoordinate_(snapVert) autorelease]];
      if (i == 0 && self->isClosed_) [srcCoords setWithInt:[srcCoords size] - 1 withId:[new_ComVividsolutionsJtsGeomCoordinate_initWithComVividsolutionsJtsGeomCoordinate_(snapVert) autorelease]];
    }
  }
}

ComVividsolutionsJtsGeomCoordinate *ComVividsolutionsJtsOperationOverlaySnapLineStringSnapper_findSnapForVertexWithComVividsolutionsJtsGeomCoordinate_withComVividsolutionsJtsGeomCoordinateArray_(ComVividsolutionsJtsOperationOverlaySnapLineStringSnapper *self, ComVividsolutionsJtsGeomCoordinate *pt, IOSObjectArray *snapPts) {
  for (jint i = 0; i < ((IOSObjectArray *) nil_chk(snapPts))->size_; i++) {
    if ([((ComVividsolutionsJtsGeomCoordinate *) nil_chk(pt)) equals2DWithComVividsolutionsJtsGeomCoordinate:IOSObjectArray_Get(snapPts, i)]) return nil;
    if ([pt distanceWithComVividsolutionsJtsGeomCoordinate:IOSObjectArray_Get(snapPts, i)] < self->snapTolerance_) return IOSObjectArray_Get(snapPts, i);
  }
  return nil;
}

void ComVividsolutionsJtsOperationOverlaySnapLineStringSnapper_snapSegmentsWithComVividsolutionsJtsGeomCoordinateList_withComVividsolutionsJtsGeomCoordinateArray_(ComVividsolutionsJtsOperationOverlaySnapLineStringSnapper *self, ComVividsolutionsJtsGeomCoordinateList *srcCoords, IOSObjectArray *snapPts) {
  jint distinctPtCount = ((IOSObjectArray *) nil_chk(snapPts))->size_;
  if ([((ComVividsolutionsJtsGeomCoordinate *) nil_chk(IOSObjectArray_Get(snapPts, 0))) equals2DWithComVividsolutionsJtsGeomCoordinate:IOSObjectArray_Get(snapPts, snapPts->size_ - 1)]) distinctPtCount = snapPts->size_ - 1;
  for (jint i = 0; i < distinctPtCount; i++) {
    ComVividsolutionsJtsGeomCoordinate *snapPt = IOSObjectArray_Get(snapPts, i);
    jint index = ComVividsolutionsJtsOperationOverlaySnapLineStringSnapper_findSegmentIndexToSnapWithComVividsolutionsJtsGeomCoordinate_withComVividsolutionsJtsGeomCoordinateList_(self, snapPt, srcCoords);
    if (index >= 0) {
      [((ComVividsolutionsJtsGeomCoordinateList *) nil_chk(srcCoords)) addWithInt:index + 1 withComVividsolutionsJtsGeomCoordinate:[new_ComVividsolutionsJtsGeomCoordinate_initWithComVividsolutionsJtsGeomCoordinate_(snapPt) autorelease] withBoolean:NO];
    }
  }
}

jint ComVividsolutionsJtsOperationOverlaySnapLineStringSnapper_findSegmentIndexToSnapWithComVividsolutionsJtsGeomCoordinate_withComVividsolutionsJtsGeomCoordinateList_(ComVividsolutionsJtsOperationOverlaySnapLineStringSnapper *self, ComVividsolutionsJtsGeomCoordinate *snapPt, ComVividsolutionsJtsGeomCoordinateList *srcCoords) {
  jdouble minDist = JavaLangDouble_MAX_VALUE;
  jint snapIndex = -1;
  for (jint i = 0; i < [((ComVividsolutionsJtsGeomCoordinateList *) nil_chk(srcCoords)) size] - 1; i++) {
    ComVividsolutionsJtsGeomLineSegment_set_p0_(nil_chk(self->seg_), (ComVividsolutionsJtsGeomCoordinate *) check_class_cast([srcCoords getWithInt:i], [ComVividsolutionsJtsGeomCoordinate class]));
    ComVividsolutionsJtsGeomLineSegment_set_p1_(self->seg_, (ComVividsolutionsJtsGeomCoordinate *) check_class_cast([srcCoords getWithInt:i + 1], [ComVividsolutionsJtsGeomCoordinate class]));
    if ([((ComVividsolutionsJtsGeomCoordinate *) nil_chk(self->seg_->p0_)) equals2DWithComVividsolutionsJtsGeomCoordinate:snapPt] || [((ComVividsolutionsJtsGeomCoordinate *) nil_chk(self->seg_->p1_)) equals2DWithComVividsolutionsJtsGeomCoordinate:snapPt]) return -1;
    jdouble dist = [self->seg_ distanceWithComVividsolutionsJtsGeomCoordinate:snapPt];
    if (dist < self->snapTolerance_ && dist < minDist) {
      minDist = dist;
      snapIndex = i;
    }
  }
  return snapIndex;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComVividsolutionsJtsOperationOverlaySnapLineStringSnapper)
