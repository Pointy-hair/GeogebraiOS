//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/geogebra3D/kernel3D/algos/AlgoCenterQuadric.java
//


#include "J2ObjC_source.h"
#include "geogebra/common/geogebra3D/kernel3D/algos/AlgoCenterQuadric.h"
#include "geogebra/common/geogebra3D/kernel3D/geos/GeoPoint3D.h"
#include "geogebra/common/geogebra3D/kernel3D/geos/GeoQuadric3D.h"
#include "geogebra/common/kernel/Construction.h"
#include "geogebra/common/kernel/Matrix/Coords.h"
#include "geogebra/common/kernel/algos/AlgoCenterQuadricND.h"
#include "geogebra/common/kernel/kernelND/GeoPointND.h"
#include "geogebra/common/kernel/kernelND/GeoQuadricND.h"
#include "geogebra/common/kernel/kernelND/GeoQuadricNDConstants.h"

@implementation GeogebraCommonGeogebra3DKernel3DAlgosAlgoCenterQuadric

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                                            withNSString:(NSString *)label
    withGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3D:(GeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3D *)c {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoCenterQuadric_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3D_(self, cons, label, c);
  return self;
}

- (id<GeogebraCommonKernelKernelNDGeoPointND>)newGeoPointWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons {
  return [new_GeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D_initWithGeogebraCommonKernelConstruction_(cons) autorelease];
}

- (void)setCoords {
  switch (((GeogebraCommonKernelKernelNDGeoQuadricND *) nil_chk(c_))->type_) {
    case GeogebraCommonKernelKernelNDGeoQuadricNDConstants_QUADRIC_SINGLE_POINT:
    case GeogebraCommonKernelKernelNDGeoQuadricNDConstants_QUADRIC_INTERSECTING_LINES:
    case GeogebraCommonKernelKernelNDGeoQuadricNDConstants_QUADRIC_ELLIPSOID:
    case GeogebraCommonKernelKernelNDGeoQuadricNDConstants_QUADRIC_SPHERE:
    case GeogebraCommonKernelKernelNDGeoQuadricNDConstants_QUADRIC_HYPERBOLOID:
    case GeogebraCommonKernelKernelNDGeoQuadricNDConstants_QUADRIC_CONE:
    [((GeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *) nil_chk(((GeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *) check_class_cast(midpoint_, [GeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D class])))) setCoordsWithGeogebraCommonKernelMatrixCoords:[c_ getMidpoint3D]];
    break;
    default:
    [((id<GeogebraCommonKernelKernelNDGeoPointND>) nil_chk(midpoint_)) setUndefined];
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonKernelConstruction:withNSString:withGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3D:", "AlgoCenterQuadric", NULL, 0x1, NULL, NULL },
    { "newGeoPointWithGeogebraCommonKernelConstruction:", "newGeoPoint", "Lgeogebra.common.kernel.kernelND.GeoPointND;", 0x1, NULL, NULL },
    { "setCoords", NULL, "V", 0x4, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonGeogebra3DKernel3DAlgosAlgoCenterQuadric = { 2, "AlgoCenterQuadric", "geogebra.common.geogebra3D.kernel3D.algos", NULL, 0x1, 3, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonGeogebra3DKernel3DAlgosAlgoCenterQuadric;
}

@end

void GeogebraCommonGeogebra3DKernel3DAlgosAlgoCenterQuadric_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3D_(GeogebraCommonGeogebra3DKernel3DAlgosAlgoCenterQuadric *self, GeogebraCommonKernelConstruction *cons, NSString *label, GeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3D *c) {
  GeogebraCommonKernelAlgosAlgoCenterQuadricND_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelKernelNDGeoQuadricND_(self, cons, label, c);
}

GeogebraCommonGeogebra3DKernel3DAlgosAlgoCenterQuadric *new_GeogebraCommonGeogebra3DKernel3DAlgosAlgoCenterQuadric_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3D_(GeogebraCommonKernelConstruction *cons, NSString *label, GeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3D *c) {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoCenterQuadric *self = [GeogebraCommonGeogebra3DKernel3DAlgosAlgoCenterQuadric alloc];
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoCenterQuadric_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3D_(self, cons, label, c);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonGeogebra3DKernel3DAlgosAlgoCenterQuadric)
