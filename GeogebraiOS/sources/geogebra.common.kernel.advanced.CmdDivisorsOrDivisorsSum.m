//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/advanced/CmdDivisorsOrDivisorsSum.java
//


#include "J2ObjC_source.h"
#include "geogebra/common/kernel/Construction.h"
#include "geogebra/common/kernel/Kernel.h"
#include "geogebra/common/kernel/advanced/AlgoDivisorsSum.h"
#include "geogebra/common/kernel/advanced/CmdDivisorsOrDivisorsSum.h"
#include "geogebra/common/kernel/commands/CmdOneNumber.h"
#include "geogebra/common/kernel/geos/GeoElement.h"
#include "geogebra/common/kernel/geos/GeoNumberValue.h"
#include "geogebra/common/kernel/geos/GeoNumeric.h"

@interface GeogebraCommonKernelAdvancedCmdDivisorsOrDivisorsSum () {
 @public
  jboolean sum_;
}

@end

@implementation GeogebraCommonKernelAdvancedCmdDivisorsOrDivisorsSum

- (instancetype)initWithGeogebraCommonKernelKernel:(GeogebraCommonKernelKernel *)kernel
                                       withBoolean:(jboolean)sum {
  GeogebraCommonKernelAdvancedCmdDivisorsOrDivisorsSum_initWithGeogebraCommonKernelKernel_withBoolean_(self, kernel, sum);
  return self;
}

- (GeogebraCommonKernelGeosGeoElement *)getResultWithGeogebraCommonKernelGeosGeoNumberValue:(id<GeogebraCommonKernelGeosGeoNumberValue>)num
                                                                               withNSString:(NSString *)label {
  GeogebraCommonKernelAdvancedAlgoDivisorsSum *algo = [new_GeogebraCommonKernelAdvancedAlgoDivisorsSum_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelArithmeticNumberValue_withBoolean_(cons_, label, num, sum_) autorelease];
  return [algo getResult];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonKernelKernel:withBoolean:", "CmdDivisorsOrDivisorsSum", NULL, 0x1, NULL, NULL },
    { "getResultWithGeogebraCommonKernelGeosGeoNumberValue:withNSString:", "getResult", "Lgeogebra.common.kernel.geos.GeoElement;", 0x4, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "sum_", NULL, 0x2, "Z", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelAdvancedCmdDivisorsOrDivisorsSum = { 2, "CmdDivisorsOrDivisorsSum", "geogebra.common.kernel.advanced", NULL, 0x1, 2, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelAdvancedCmdDivisorsOrDivisorsSum;
}

@end

void GeogebraCommonKernelAdvancedCmdDivisorsOrDivisorsSum_initWithGeogebraCommonKernelKernel_withBoolean_(GeogebraCommonKernelAdvancedCmdDivisorsOrDivisorsSum *self, GeogebraCommonKernelKernel *kernel, jboolean sum) {
  GeogebraCommonKernelCommandsCmdOneNumber_initWithGeogebraCommonKernelKernel_(self, kernel);
  self->sum_ = sum;
}

GeogebraCommonKernelAdvancedCmdDivisorsOrDivisorsSum *new_GeogebraCommonKernelAdvancedCmdDivisorsOrDivisorsSum_initWithGeogebraCommonKernelKernel_withBoolean_(GeogebraCommonKernelKernel *kernel, jboolean sum) {
  GeogebraCommonKernelAdvancedCmdDivisorsOrDivisorsSum *self = [GeogebraCommonKernelAdvancedCmdDivisorsOrDivisorsSum alloc];
  GeogebraCommonKernelAdvancedCmdDivisorsOrDivisorsSum_initWithGeogebraCommonKernelKernel_withBoolean_(self, kernel, sum);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelAdvancedCmdDivisorsOrDivisorsSum)
