//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/move/ggtapi/models/json/JSONNull.java
//


#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "geogebra/common/move/ggtapi/models/json/JSONNull.h"
#include "geogebra/common/move/ggtapi/models/json/JSONValue.h"
#include "java/lang/StringBuffer.h"

@interface GeogebraCommonMoveGgtapiModelsJsonJSONNull ()

- (instancetype)init;

@end

static GeogebraCommonMoveGgtapiModelsJsonJSONNull *GeogebraCommonMoveGgtapiModelsJsonJSONNull_instance_;
J2OBJC_STATIC_FIELD_GETTER(GeogebraCommonMoveGgtapiModelsJsonJSONNull, instance_, GeogebraCommonMoveGgtapiModelsJsonJSONNull *)

__attribute__((unused)) static void GeogebraCommonMoveGgtapiModelsJsonJSONNull_init(GeogebraCommonMoveGgtapiModelsJsonJSONNull *self);

__attribute__((unused)) static GeogebraCommonMoveGgtapiModelsJsonJSONNull *new_GeogebraCommonMoveGgtapiModelsJsonJSONNull_init() NS_RETURNS_RETAINED;

J2OBJC_INITIALIZED_DEFN(GeogebraCommonMoveGgtapiModelsJsonJSONNull)

@implementation GeogebraCommonMoveGgtapiModelsJsonJSONNull

+ (GeogebraCommonMoveGgtapiModelsJsonJSONNull *)getInstance {
  return GeogebraCommonMoveGgtapiModelsJsonJSONNull_getInstance();
}

- (instancetype)init {
  GeogebraCommonMoveGgtapiModelsJsonJSONNull_init(self);
  return self;
}

- (GeogebraCommonMoveGgtapiModelsJsonJSONNull *)isNull {
  return self;
}

- (NSString *)description {
  return @"null";
}

- (void)appendToWithJavaLangStringBuffer:(JavaLangStringBuffer *)b {
  [((JavaLangStringBuffer *) nil_chk(b)) appendWithNSString:@"null"];
}

+ (void)initialize {
  if (self == [GeogebraCommonMoveGgtapiModelsJsonJSONNull class]) {
    JreStrongAssignAndConsume(&GeogebraCommonMoveGgtapiModelsJsonJSONNull_instance_, nil, new_GeogebraCommonMoveGgtapiModelsJsonJSONNull_init());
    J2OBJC_SET_INITIALIZED(GeogebraCommonMoveGgtapiModelsJsonJSONNull)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "getInstance", NULL, "Lgeogebra.common.move.ggtapi.models.json.JSONNull;", 0x9, NULL, NULL },
    { "init", "JSONNull", NULL, 0x2, NULL, NULL },
    { "isNull", NULL, "Lgeogebra.common.move.ggtapi.models.json.JSONNull;", 0x1, NULL, NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "appendToWithJavaLangStringBuffer:", "appendTo", "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "instance_", NULL, 0x1a, "Lgeogebra.common.move.ggtapi.models.json.JSONNull;", &GeogebraCommonMoveGgtapiModelsJsonJSONNull_instance_, NULL,  },
  };
  static const J2ObjcClassInfo _GeogebraCommonMoveGgtapiModelsJsonJSONNull = { 2, "JSONNull", "geogebra.common.move.ggtapi.models.json", NULL, 0x1, 5, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonMoveGgtapiModelsJsonJSONNull;
}

@end

GeogebraCommonMoveGgtapiModelsJsonJSONNull *GeogebraCommonMoveGgtapiModelsJsonJSONNull_getInstance() {
  GeogebraCommonMoveGgtapiModelsJsonJSONNull_initialize();
  return GeogebraCommonMoveGgtapiModelsJsonJSONNull_instance_;
}

void GeogebraCommonMoveGgtapiModelsJsonJSONNull_init(GeogebraCommonMoveGgtapiModelsJsonJSONNull *self) {
  GeogebraCommonMoveGgtapiModelsJsonJSONValue_init(self);
}

GeogebraCommonMoveGgtapiModelsJsonJSONNull *new_GeogebraCommonMoveGgtapiModelsJsonJSONNull_init() {
  GeogebraCommonMoveGgtapiModelsJsonJSONNull *self = [GeogebraCommonMoveGgtapiModelsJsonJSONNull alloc];
  GeogebraCommonMoveGgtapiModelsJsonJSONNull_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonMoveGgtapiModelsJsonJSONNull)
