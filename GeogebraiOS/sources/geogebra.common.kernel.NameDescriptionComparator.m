//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/NameDescriptionComparator.java
//


#include "J2ObjC_source.h"
#include "geogebra/common/kernel/NameDescriptionComparator.h"
#include "geogebra/common/kernel/geos/GeoElement.h"

@implementation GeogebraCommonKernelNameDescriptionComparator

- (jint)compareWithId:(GeogebraCommonKernelGeosGeoElement *)geo1
               withId:(GeogebraCommonKernelGeosGeoElement *)geo2 {
  if (geo1 == nil) return -1;
  else if (geo2 == nil) return 1;
  else return [((NSString *) nil_chk([geo1 getNameDescription])) compareToWithId:[geo2 getNameDescription]];
}

- (instancetype)init {
  GeogebraCommonKernelNameDescriptionComparator_init(self);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "compareWithId:withId:", "compare", "I", 0x1, NULL, NULL },
    { "init", NULL, NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelNameDescriptionComparator = { 2, "NameDescriptionComparator", "geogebra.common.kernel", NULL, 0x1, 2, methods, 0, NULL, 0, NULL, 0, NULL, NULL, "Ljava/lang/Object;Ljava/util/Comparator<Lgeogebra/common/kernel/geos/GeoElement;>;" };
  return &_GeogebraCommonKernelNameDescriptionComparator;
}

@end

void GeogebraCommonKernelNameDescriptionComparator_init(GeogebraCommonKernelNameDescriptionComparator *self) {
  NSObject_init(self);
}

GeogebraCommonKernelNameDescriptionComparator *new_GeogebraCommonKernelNameDescriptionComparator_init() {
  GeogebraCommonKernelNameDescriptionComparator *self = [GeogebraCommonKernelNameDescriptionComparator alloc];
  GeogebraCommonKernelNameDescriptionComparator_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelNameDescriptionComparator)
