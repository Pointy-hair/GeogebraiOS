//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/algos/AlgoLengthVector.java
//


#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "geogebra/common/kernel/Construction.h"
#include "geogebra/common/kernel/StringTemplate.h"
#include "geogebra/common/kernel/algos/AlgoElement.h"
#include "geogebra/common/kernel/algos/AlgoLengthVector.h"
#include "geogebra/common/kernel/algos/ConstructionElement.h"
#include "geogebra/common/kernel/commands/Commands.h"
#include "geogebra/common/kernel/geos/GeoElement.h"
#include "geogebra/common/kernel/geos/GeoNumeric.h"
#include "geogebra/common/kernel/geos/GeoVec3D.h"
#include "geogebra/common/main/Localization.h"
#include "geogebra/common/util/MyMath.h"

@interface GeogebraCommonKernelAlgosAlgoLengthVector () {
 @public
  GeogebraCommonKernelGeosGeoVec3D *v_;
  GeogebraCommonKernelGeosGeoNumeric *num_;
  IOSDoubleArray *coords_;
}

@end

J2OBJC_FIELD_SETTER(GeogebraCommonKernelAlgosAlgoLengthVector, v_, GeogebraCommonKernelGeosGeoVec3D *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelAlgosAlgoLengthVector, num_, GeogebraCommonKernelGeosGeoNumeric *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelAlgosAlgoLengthVector, coords_, IOSDoubleArray *)

__attribute__((unused)) static void GeogebraCommonKernelAlgosAlgoLengthVector_compute(GeogebraCommonKernelAlgosAlgoLengthVector *self);

@implementation GeogebraCommonKernelAlgosAlgoLengthVector

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                                            withNSString:(NSString *)label
                    withGeogebraCommonKernelGeosGeoVec3D:(GeogebraCommonKernelGeosGeoVec3D *)v {
  GeogebraCommonKernelAlgosAlgoLengthVector_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoVec3D_(self, cons, label, v);
  return self;
}

- (GeogebraCommonKernelCommandsCommandsEnum *)getClassName {
  return GeogebraCommonKernelCommandsCommandsEnum_get_Length();
}

- (void)setInputOutput {
  GeogebraCommonKernelAlgosAlgoElement_setAndConsume_input_(self, [IOSObjectArray newArrayWithLength:1 type:GeogebraCommonKernelGeosGeoElement_class_()]);
  IOSObjectArray_Set(input_, 0, v_);
  [super setOutputLengthWithInt:1];
  [super setOutputWithInt:0 withGeogebraCommonKernelGeosGeoElement:num_];
  [self setDependencies];
}

- (GeogebraCommonKernelGeosGeoNumeric *)getLength {
  return num_;
}

- (GeogebraCommonKernelGeosGeoVec3D *)getv {
  return v_;
}

- (void)compute {
  GeogebraCommonKernelAlgosAlgoLengthVector_compute(self);
}

- (NSString *)toStringWithGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl {
  return [((GeogebraCommonMainLocalization *) nil_chk([self getLoc])) getPlainWithNSString:@"LengthOfA" withNSString:[((GeogebraCommonKernelGeosGeoVec3D *) nil_chk(v_)) getLabelWithGeogebraCommonKernelStringTemplate:tpl]];
}

- (void)dealloc {
  RELEASE_(v_);
  RELEASE_(num_);
  RELEASE_(coords_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonKernelConstruction:withNSString:withGeogebraCommonKernelGeosGeoVec3D:", "AlgoLengthVector", NULL, 0x1, NULL, NULL },
    { "getClassName", NULL, "Lgeogebra.common.kernel.commands.Commands;", 0x1, NULL, NULL },
    { "setInputOutput", NULL, "V", 0x4, NULL, NULL },
    { "getLength", NULL, "Lgeogebra.common.kernel.geos.GeoNumeric;", 0x1, NULL, NULL },
    { "getv", NULL, "Lgeogebra.common.kernel.geos.GeoVec3D;", 0x0, NULL, NULL },
    { "compute", NULL, "V", 0x11, NULL, NULL },
    { "toStringWithGeogebraCommonKernelStringTemplate:", "toString", "Ljava.lang.String;", 0x11, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "v_", NULL, 0x2, "Lgeogebra.common.kernel.geos.GeoVec3D;", NULL, NULL,  },
    { "num_", NULL, 0x2, "Lgeogebra.common.kernel.geos.GeoNumeric;", NULL, NULL,  },
    { "coords_", NULL, 0x2, "[D", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelAlgosAlgoLengthVector = { 2, "AlgoLengthVector", "geogebra.common.kernel.algos", NULL, 0x1, 7, methods, 3, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelAlgosAlgoLengthVector;
}

@end

void GeogebraCommonKernelAlgosAlgoLengthVector_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoVec3D_(GeogebraCommonKernelAlgosAlgoLengthVector *self, GeogebraCommonKernelConstruction *cons, NSString *label, GeogebraCommonKernelGeosGeoVec3D *v) {
  GeogebraCommonKernelAlgosAlgoElement_initWithGeogebraCommonKernelConstruction_(self, cons);
  GeogebraCommonKernelAlgosAlgoLengthVector_setAndConsume_coords_(self, [IOSDoubleArray newArrayWithLength:2]);
  GeogebraCommonKernelAlgosAlgoLengthVector_set_v_(self, v);
  GeogebraCommonKernelAlgosAlgoLengthVector_setAndConsume_num_(self, new_GeogebraCommonKernelGeosGeoNumeric_initWithGeogebraCommonKernelConstruction_(cons));
  [self setInputOutput];
  GeogebraCommonKernelAlgosAlgoLengthVector_compute(self);
  [self->num_ setLabelWithNSString:label];
}

GeogebraCommonKernelAlgosAlgoLengthVector *new_GeogebraCommonKernelAlgosAlgoLengthVector_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoVec3D_(GeogebraCommonKernelConstruction *cons, NSString *label, GeogebraCommonKernelGeosGeoVec3D *v) {
  GeogebraCommonKernelAlgosAlgoLengthVector *self = [GeogebraCommonKernelAlgosAlgoLengthVector alloc];
  GeogebraCommonKernelAlgosAlgoLengthVector_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoVec3D_(self, cons, label, v);
  return self;
}

void GeogebraCommonKernelAlgosAlgoLengthVector_compute(GeogebraCommonKernelAlgosAlgoLengthVector *self) {
  [((GeogebraCommonKernelGeosGeoVec3D *) nil_chk(self->v_)) getInhomCoordsWithDoubleArray:self->coords_];
  [((GeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->num_)) setValueWithDouble:GeogebraCommonUtilMyMath_lengthWithDouble_withDouble_(IOSDoubleArray_Get(nil_chk(self->coords_), 0), IOSDoubleArray_Get(self->coords_, 1))];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelAlgosAlgoLengthVector)
