//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/algos/AlgoDependentGeoCopy.java
//


#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "geogebra/common/kernel/Construction.h"
#include "geogebra/common/kernel/Kernel.h"
#include "geogebra/common/kernel/StringTemplate.h"
#include "geogebra/common/kernel/algos/AlgoDependentGeoCopy.h"
#include "geogebra/common/kernel/algos/AlgoElement.h"
#include "geogebra/common/kernel/algos/Algos.h"
#include "geogebra/common/kernel/arithmetic/ExpressionNode.h"
#include "geogebra/common/kernel/arithmetic/ExpressionNodeConstants.h"
#include "geogebra/common/kernel/arithmetic/ExpressionValue.h"
#include "geogebra/common/kernel/geos/GeoElement.h"
#include "geogebra/common/kernel/geos/GeoLine.h"
#include "java/lang/Exception.h"

@interface GeogebraCommonKernelAlgosAlgoDependentGeoCopy () {
 @public
  GeogebraCommonKernelArithmeticExpressionNode *origGeoNode_;
  GeogebraCommonKernelGeosGeoElement *origGeo_, *copyGeo_;
}

@end

J2OBJC_FIELD_SETTER(GeogebraCommonKernelAlgosAlgoDependentGeoCopy, origGeoNode_, GeogebraCommonKernelArithmeticExpressionNode *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelAlgosAlgoDependentGeoCopy, origGeo_, GeogebraCommonKernelGeosGeoElement *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelAlgosAlgoDependentGeoCopy, copyGeo_, GeogebraCommonKernelGeosGeoElement *)

__attribute__((unused)) static void GeogebraCommonKernelAlgosAlgoDependentGeoCopy_compute(GeogebraCommonKernelAlgosAlgoDependentGeoCopy *self);

@implementation GeogebraCommonKernelAlgosAlgoDependentGeoCopy

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                                            withNSString:(NSString *)label
                  withGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)origGeo {
  GeogebraCommonKernelAlgosAlgoDependentGeoCopy_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoElement_(self, cons, label, origGeo);
  return self;
}

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                                            withNSString:(NSString *)label
        withGeogebraCommonKernelArithmeticExpressionNode:(GeogebraCommonKernelArithmeticExpressionNode *)origGeoNode {
  GeogebraCommonKernelAlgosAlgoDependentGeoCopy_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelArithmeticExpressionNode_(self, cons, label, origGeoNode);
  return self;
}

- (GeogebraCommonKernelAlgosAlgosEnum *)getClassName {
  return GeogebraCommonKernelAlgosAlgosEnum_get_Expression();
}

- (void)setInputOutput {
  GeogebraCommonKernelAlgosAlgoElement_setAndConsume_input_(self, [IOSObjectArray newArrayWithLength:1 type:GeogebraCommonKernelGeosGeoElement_class_()]);
  IOSObjectArray_Set(input_, 0, origGeo_);
  [self setOutputLengthWithInt:1];
  [self setOutputWithInt:0 withGeogebraCommonKernelGeosGeoElement:copyGeo_];
  [self setDependencies];
}

- (GeogebraCommonKernelGeosGeoElement *)getGeo {
  return copyGeo_;
}

- (void)compute {
  GeogebraCommonKernelAlgosAlgoDependentGeoCopy_compute(self);
}

- (NSString *)toStringWithGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl {
  if ([((GeogebraCommonKernelStringTemplate *) nil_chk(tpl)) hasTypeWithGeogebraCommonKernelArithmeticExpressionNodeConstants_StringTypeEnum:GeogebraCommonKernelArithmeticExpressionNodeConstants_StringTypeEnum_get_GEOGEBRA_XML()] && ![((GeogebraCommonKernelGeosGeoElement *) nil_chk(origGeo_)) isLabelSet] && [origGeo_ isKindOfClass:[GeogebraCommonKernelGeosGeoLine class]] && [((GeogebraCommonKernelGeosGeoLine *) check_class_cast(origGeo_, [GeogebraCommonKernelGeosGeoLine class])) getMode] == GeogebraCommonKernelGeosGeoLine_PARAMETRIC) {
    [((GeogebraCommonKernelGeosGeoLine *) check_class_cast(origGeo_, [GeogebraCommonKernelGeosGeoLine class])) setModeWithInt:GeogebraCommonKernelGeosGeoLine_EQUATION_EXPLICIT];
    NSString *ret = [((GeogebraCommonKernelGeosGeoLine *) check_class_cast(origGeo_, [GeogebraCommonKernelGeosGeoLine class])) getLabelWithGeogebraCommonKernelStringTemplate:tpl];
    [((GeogebraCommonKernelGeosGeoLine *) check_class_cast(origGeo_, [GeogebraCommonKernelGeosGeoLine class])) setModeWithInt:GeogebraCommonKernelGeosGeoLine_PARAMETRIC];
    return ret;
  }
  return [((GeogebraCommonKernelArithmeticExpressionNode *) nil_chk(origGeoNode_)) toStringWithGeogebraCommonKernelStringTemplate:tpl];
}

- (void)dealloc {
  RELEASE_(origGeoNode_);
  RELEASE_(origGeo_);
  RELEASE_(copyGeo_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonKernelConstruction:withNSString:withGeogebraCommonKernelGeosGeoElement:", "AlgoDependentGeoCopy", NULL, 0x1, NULL, NULL },
    { "initWithGeogebraCommonKernelConstruction:withNSString:withGeogebraCommonKernelArithmeticExpressionNode:", "AlgoDependentGeoCopy", NULL, 0x1, NULL, NULL },
    { "getClassName", NULL, "Lgeogebra.common.kernel.algos.Algos;", 0x1, NULL, NULL },
    { "setInputOutput", NULL, "V", 0x4, NULL, NULL },
    { "getGeo", NULL, "Lgeogebra.common.kernel.geos.GeoElement;", 0x1, NULL, NULL },
    { "compute", NULL, "V", 0x11, NULL, NULL },
    { "toStringWithGeogebraCommonKernelStringTemplate:", "toString", "Ljava.lang.String;", 0x11, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "origGeoNode_", NULL, 0x2, "Lgeogebra.common.kernel.arithmetic.ExpressionNode;", NULL, NULL,  },
    { "origGeo_", NULL, 0x2, "Lgeogebra.common.kernel.geos.GeoElement;", NULL, NULL,  },
    { "copyGeo_", NULL, 0x2, "Lgeogebra.common.kernel.geos.GeoElement;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelAlgosAlgoDependentGeoCopy = { 2, "AlgoDependentGeoCopy", "geogebra.common.kernel.algos", NULL, 0x1, 7, methods, 3, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelAlgosAlgoDependentGeoCopy;
}

@end

void GeogebraCommonKernelAlgosAlgoDependentGeoCopy_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoElement_(GeogebraCommonKernelAlgosAlgoDependentGeoCopy *self, GeogebraCommonKernelConstruction *cons, NSString *label, GeogebraCommonKernelGeosGeoElement *origGeo) {
  GeogebraCommonKernelAlgosAlgoElement_initWithGeogebraCommonKernelConstruction_(self, cons);
  GeogebraCommonKernelAlgosAlgoDependentGeoCopy_set_origGeo_(self, origGeo);
  GeogebraCommonKernelAlgosAlgoDependentGeoCopy_setAndConsume_origGeoNode_(self, new_GeogebraCommonKernelArithmeticExpressionNode_initWithGeogebraCommonKernelKernel_withGeogebraCommonKernelArithmeticExpressionValue_(self->kernel_, origGeo));
  GeogebraCommonKernelAlgosAlgoDependentGeoCopy_set_copyGeo_(self, [((GeogebraCommonKernelGeosGeoElement *) nil_chk(origGeo)) copy__]);
  [self setInputOutput];
  GeogebraCommonKernelAlgosAlgoDependentGeoCopy_compute(self);
  [((GeogebraCommonKernelGeosGeoElement *) nil_chk(self->copyGeo_)) setLabelWithNSString:label];
}

GeogebraCommonKernelAlgosAlgoDependentGeoCopy *new_GeogebraCommonKernelAlgosAlgoDependentGeoCopy_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoElement_(GeogebraCommonKernelConstruction *cons, NSString *label, GeogebraCommonKernelGeosGeoElement *origGeo) {
  GeogebraCommonKernelAlgosAlgoDependentGeoCopy *self = [GeogebraCommonKernelAlgosAlgoDependentGeoCopy alloc];
  GeogebraCommonKernelAlgosAlgoDependentGeoCopy_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoElement_(self, cons, label, origGeo);
  return self;
}

void GeogebraCommonKernelAlgosAlgoDependentGeoCopy_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelArithmeticExpressionNode_(GeogebraCommonKernelAlgosAlgoDependentGeoCopy *self, GeogebraCommonKernelConstruction *cons, NSString *label, GeogebraCommonKernelArithmeticExpressionNode *origGeoNode) {
  GeogebraCommonKernelAlgosAlgoElement_initWithGeogebraCommonKernelConstruction_(self, cons);
  GeogebraCommonKernelAlgosAlgoDependentGeoCopy_set_origGeoNode_(self, origGeoNode);
  GeogebraCommonKernelAlgosAlgoDependentGeoCopy_set_origGeo_(self, (GeogebraCommonKernelGeosGeoElement *) check_class_cast([((GeogebraCommonKernelArithmeticExpressionNode *) nil_chk(origGeoNode)) evaluateWithGeogebraCommonKernelStringTemplate:GeogebraCommonKernelStringTemplate_get_defaultTemplate_()], [GeogebraCommonKernelGeosGeoElement class]));
  GeogebraCommonKernelAlgosAlgoDependentGeoCopy_set_copyGeo_(self, [((GeogebraCommonKernelGeosGeoElement *) nil_chk(self->origGeo_)) copy__]);
  [self setInputOutput];
  GeogebraCommonKernelAlgosAlgoDependentGeoCopy_compute(self);
  [((GeogebraCommonKernelGeosGeoElement *) nil_chk(self->copyGeo_)) setLabelWithNSString:label];
}

GeogebraCommonKernelAlgosAlgoDependentGeoCopy *new_GeogebraCommonKernelAlgosAlgoDependentGeoCopy_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelArithmeticExpressionNode_(GeogebraCommonKernelConstruction *cons, NSString *label, GeogebraCommonKernelArithmeticExpressionNode *origGeoNode) {
  GeogebraCommonKernelAlgosAlgoDependentGeoCopy *self = [GeogebraCommonKernelAlgosAlgoDependentGeoCopy alloc];
  GeogebraCommonKernelAlgosAlgoDependentGeoCopy_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelArithmeticExpressionNode_(self, cons, label, origGeoNode);
  return self;
}

void GeogebraCommonKernelAlgosAlgoDependentGeoCopy_compute(GeogebraCommonKernelAlgosAlgoDependentGeoCopy *self) {
  @try {
    [((GeogebraCommonKernelGeosGeoElement *) nil_chk(self->copyGeo_)) setWithGeogebraCommonKernelGeosGeoElement:self->origGeo_];
  }
  @catch (JavaLangException *e) {
    [((GeogebraCommonKernelGeosGeoElement *) nil_chk(self->copyGeo_)) setUndefined];
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelAlgosAlgoDependentGeoCopy)
