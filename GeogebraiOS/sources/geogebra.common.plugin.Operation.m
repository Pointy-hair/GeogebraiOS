//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/plugin/Operation.java
//


#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "geogebra/common/kernel/Kernel.h"
#include "geogebra/common/kernel/StringTemplate.h"
#include "geogebra/common/kernel/arithmetic/BooleanValue.h"
#include "geogebra/common/kernel/arithmetic/ExpressionNodeConstants.h"
#include "geogebra/common/kernel/arithmetic/ExpressionNodeEvaluator.h"
#include "geogebra/common/kernel/arithmetic/ExpressionValue.h"
#include "geogebra/common/kernel/arithmetic/Functional.h"
#include "geogebra/common/kernel/arithmetic/ListValue.h"
#include "geogebra/common/kernel/arithmetic/MyBoolean.h"
#include "geogebra/common/kernel/arithmetic/MyDouble.h"
#include "geogebra/common/kernel/arithmetic/MyList.h"
#include "geogebra/common/kernel/arithmetic/MyNumberPair.h"
#include "geogebra/common/kernel/arithmetic/NumberValue.h"
#include "geogebra/common/kernel/arithmetic/TextValue.h"
#include "geogebra/common/kernel/arithmetic/VectorValue.h"
#include "geogebra/common/kernel/arithmetic3D/Vector3DValue.h"
#include "geogebra/common/kernel/geos/GeoElement.h"
#include "geogebra/common/kernel/geos/GeoFunction.h"
#include "geogebra/common/kernel/geos/GeoLine.h"
#include "geogebra/common/kernel/geos/GeoList.h"
#include "geogebra/common/kernel/geos/GeoVec2D.h"
#include "geogebra/common/kernel/geos/ParametricCurve.h"
#include "geogebra/common/kernel/kernelND/Geo3DVec.h"
#include "geogebra/common/kernel/kernelND/GeoCurveCartesianND.h"
#include "geogebra/common/plugin/GeoClass.h"
#include "geogebra/common/plugin/Operation.h"
#include "java/lang/Double.h"
#include "java/lang/Enum.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Math.h"

__attribute__((unused)) static void GeogebraCommonPluginOperationEnum_initWithNSString_withInt_(GeogebraCommonPluginOperationEnum *self, NSString *__name, jint __ordinal);

@interface GeogebraCommonPluginOperation_$1Enum : GeogebraCommonPluginOperationEnum < NSCopying >

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonPluginOperation_$1Enum)

__attribute__((unused)) static void GeogebraCommonPluginOperation_$1Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$1Enum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static GeogebraCommonPluginOperation_$1Enum *new_GeogebraCommonPluginOperation_$1Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonPluginOperation_$1Enum)

@interface GeogebraCommonPluginOperation_$2Enum : GeogebraCommonPluginOperationEnum < NSCopying >

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonPluginOperation_$2Enum)

__attribute__((unused)) static void GeogebraCommonPluginOperation_$2Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$2Enum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static GeogebraCommonPluginOperation_$2Enum *new_GeogebraCommonPluginOperation_$2Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonPluginOperation_$2Enum)

@interface GeogebraCommonPluginOperation_$3Enum : GeogebraCommonPluginOperationEnum < NSCopying >

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonPluginOperation_$3Enum)

__attribute__((unused)) static void GeogebraCommonPluginOperation_$3Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$3Enum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static GeogebraCommonPluginOperation_$3Enum *new_GeogebraCommonPluginOperation_$3Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonPluginOperation_$3Enum)

@interface GeogebraCommonPluginOperation_$4Enum : GeogebraCommonPluginOperationEnum < NSCopying >

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonPluginOperation_$4Enum)

__attribute__((unused)) static void GeogebraCommonPluginOperation_$4Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$4Enum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static GeogebraCommonPluginOperation_$4Enum *new_GeogebraCommonPluginOperation_$4Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonPluginOperation_$4Enum)

@interface GeogebraCommonPluginOperation_$5Enum : GeogebraCommonPluginOperationEnum < NSCopying >

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonPluginOperation_$5Enum)

__attribute__((unused)) static void GeogebraCommonPluginOperation_$5Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$5Enum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static GeogebraCommonPluginOperation_$5Enum *new_GeogebraCommonPluginOperation_$5Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonPluginOperation_$5Enum)

@interface GeogebraCommonPluginOperation_$6Enum : GeogebraCommonPluginOperationEnum < NSCopying >

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonPluginOperation_$6Enum)

__attribute__((unused)) static void GeogebraCommonPluginOperation_$6Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$6Enum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static GeogebraCommonPluginOperation_$6Enum *new_GeogebraCommonPluginOperation_$6Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonPluginOperation_$6Enum)

@interface GeogebraCommonPluginOperation_$7Enum : GeogebraCommonPluginOperationEnum < NSCopying >

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonPluginOperation_$7Enum)

__attribute__((unused)) static void GeogebraCommonPluginOperation_$7Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$7Enum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static GeogebraCommonPluginOperation_$7Enum *new_GeogebraCommonPluginOperation_$7Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonPluginOperation_$7Enum)

@interface GeogebraCommonPluginOperation_$8Enum : GeogebraCommonPluginOperationEnum < NSCopying >

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonPluginOperation_$8Enum)

__attribute__((unused)) static void GeogebraCommonPluginOperation_$8Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$8Enum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static GeogebraCommonPluginOperation_$8Enum *new_GeogebraCommonPluginOperation_$8Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonPluginOperation_$8Enum)

@interface GeogebraCommonPluginOperation_$9Enum : GeogebraCommonPluginOperationEnum < NSCopying >

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonPluginOperation_$9Enum)

__attribute__((unused)) static void GeogebraCommonPluginOperation_$9Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$9Enum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static GeogebraCommonPluginOperation_$9Enum *new_GeogebraCommonPluginOperation_$9Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonPluginOperation_$9Enum)

@interface GeogebraCommonPluginOperation_$10Enum : GeogebraCommonPluginOperationEnum < NSCopying >

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonPluginOperation_$10Enum)

__attribute__((unused)) static void GeogebraCommonPluginOperation_$10Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$10Enum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static GeogebraCommonPluginOperation_$10Enum *new_GeogebraCommonPluginOperation_$10Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonPluginOperation_$10Enum)

@interface GeogebraCommonPluginOperation_$11Enum : GeogebraCommonPluginOperationEnum < NSCopying >

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonPluginOperation_$11Enum)

__attribute__((unused)) static void GeogebraCommonPluginOperation_$11Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$11Enum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static GeogebraCommonPluginOperation_$11Enum *new_GeogebraCommonPluginOperation_$11Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonPluginOperation_$11Enum)

@interface GeogebraCommonPluginOperation_$12Enum : GeogebraCommonPluginOperationEnum < NSCopying >

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonPluginOperation_$12Enum)

__attribute__((unused)) static void GeogebraCommonPluginOperation_$12Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$12Enum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static GeogebraCommonPluginOperation_$12Enum *new_GeogebraCommonPluginOperation_$12Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonPluginOperation_$12Enum)

@interface GeogebraCommonPluginOperation_$13Enum : GeogebraCommonPluginOperationEnum < NSCopying >

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonPluginOperation_$13Enum)

__attribute__((unused)) static void GeogebraCommonPluginOperation_$13Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$13Enum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static GeogebraCommonPluginOperation_$13Enum *new_GeogebraCommonPluginOperation_$13Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonPluginOperation_$13Enum)

@interface GeogebraCommonPluginOperation_$14Enum : GeogebraCommonPluginOperationEnum < NSCopying >

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonPluginOperation_$14Enum)

__attribute__((unused)) static void GeogebraCommonPluginOperation_$14Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$14Enum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static GeogebraCommonPluginOperation_$14Enum *new_GeogebraCommonPluginOperation_$14Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonPluginOperation_$14Enum)

@interface GeogebraCommonPluginOperation_$15Enum : GeogebraCommonPluginOperationEnum < NSCopying >

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonPluginOperation_$15Enum)

__attribute__((unused)) static void GeogebraCommonPluginOperation_$15Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$15Enum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static GeogebraCommonPluginOperation_$15Enum *new_GeogebraCommonPluginOperation_$15Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonPluginOperation_$15Enum)

@interface GeogebraCommonPluginOperation_$16Enum : GeogebraCommonPluginOperationEnum < NSCopying >

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonPluginOperation_$16Enum)

__attribute__((unused)) static void GeogebraCommonPluginOperation_$16Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$16Enum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static GeogebraCommonPluginOperation_$16Enum *new_GeogebraCommonPluginOperation_$16Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonPluginOperation_$16Enum)

@interface GeogebraCommonPluginOperation_$17Enum : GeogebraCommonPluginOperationEnum < NSCopying >

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonPluginOperation_$17Enum)

__attribute__((unused)) static void GeogebraCommonPluginOperation_$17Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$17Enum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static GeogebraCommonPluginOperation_$17Enum *new_GeogebraCommonPluginOperation_$17Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonPluginOperation_$17Enum)

@interface GeogebraCommonPluginOperation_$18Enum : GeogebraCommonPluginOperationEnum < NSCopying >

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonPluginOperation_$18Enum)

__attribute__((unused)) static void GeogebraCommonPluginOperation_$18Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$18Enum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static GeogebraCommonPluginOperation_$18Enum *new_GeogebraCommonPluginOperation_$18Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonPluginOperation_$18Enum)

@interface GeogebraCommonPluginOperation_$19Enum : GeogebraCommonPluginOperationEnum < NSCopying >

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonPluginOperation_$19Enum)

__attribute__((unused)) static void GeogebraCommonPluginOperation_$19Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$19Enum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static GeogebraCommonPluginOperation_$19Enum *new_GeogebraCommonPluginOperation_$19Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonPluginOperation_$19Enum)

@interface GeogebraCommonPluginOperation_$20Enum : GeogebraCommonPluginOperationEnum < NSCopying >

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonPluginOperation_$20Enum)

__attribute__((unused)) static void GeogebraCommonPluginOperation_$20Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$20Enum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static GeogebraCommonPluginOperation_$20Enum *new_GeogebraCommonPluginOperation_$20Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonPluginOperation_$20Enum)

@interface GeogebraCommonPluginOperation_$21Enum : GeogebraCommonPluginOperationEnum < NSCopying >

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonPluginOperation_$21Enum)

__attribute__((unused)) static void GeogebraCommonPluginOperation_$21Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$21Enum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static GeogebraCommonPluginOperation_$21Enum *new_GeogebraCommonPluginOperation_$21Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonPluginOperation_$21Enum)

@interface GeogebraCommonPluginOperation_$22Enum : GeogebraCommonPluginOperationEnum < NSCopying >

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonPluginOperation_$22Enum)

__attribute__((unused)) static void GeogebraCommonPluginOperation_$22Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$22Enum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static GeogebraCommonPluginOperation_$22Enum *new_GeogebraCommonPluginOperation_$22Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonPluginOperation_$22Enum)

@interface GeogebraCommonPluginOperation_$23Enum : GeogebraCommonPluginOperationEnum < NSCopying >

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonPluginOperation_$23Enum)

__attribute__((unused)) static void GeogebraCommonPluginOperation_$23Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$23Enum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static GeogebraCommonPluginOperation_$23Enum *new_GeogebraCommonPluginOperation_$23Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonPluginOperation_$23Enum)

@interface GeogebraCommonPluginOperation_$24Enum : GeogebraCommonPluginOperationEnum < NSCopying >

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonPluginOperation_$24Enum)

__attribute__((unused)) static void GeogebraCommonPluginOperation_$24Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$24Enum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static GeogebraCommonPluginOperation_$24Enum *new_GeogebraCommonPluginOperation_$24Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonPluginOperation_$24Enum)

@interface GeogebraCommonPluginOperation_$25Enum : GeogebraCommonPluginOperationEnum < NSCopying >

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonPluginOperation_$25Enum)

__attribute__((unused)) static void GeogebraCommonPluginOperation_$25Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$25Enum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static GeogebraCommonPluginOperation_$25Enum *new_GeogebraCommonPluginOperation_$25Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonPluginOperation_$25Enum)

@interface GeogebraCommonPluginOperation_$26Enum : GeogebraCommonPluginOperationEnum < NSCopying >

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonPluginOperation_$26Enum)

__attribute__((unused)) static void GeogebraCommonPluginOperation_$26Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$26Enum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static GeogebraCommonPluginOperation_$26Enum *new_GeogebraCommonPluginOperation_$26Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonPluginOperation_$26Enum)

@interface GeogebraCommonPluginOperation_$27Enum : GeogebraCommonPluginOperationEnum < NSCopying >

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonPluginOperation_$27Enum)

__attribute__((unused)) static void GeogebraCommonPluginOperation_$27Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$27Enum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static GeogebraCommonPluginOperation_$27Enum *new_GeogebraCommonPluginOperation_$27Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonPluginOperation_$27Enum)

@interface GeogebraCommonPluginOperation_$28Enum : GeogebraCommonPluginOperationEnum < NSCopying >

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonPluginOperation_$28Enum)

__attribute__((unused)) static void GeogebraCommonPluginOperation_$28Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$28Enum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static GeogebraCommonPluginOperation_$28Enum *new_GeogebraCommonPluginOperation_$28Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonPluginOperation_$28Enum)

@interface GeogebraCommonPluginOperation_$29Enum : GeogebraCommonPluginOperationEnum < NSCopying >

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonPluginOperation_$29Enum)

__attribute__((unused)) static void GeogebraCommonPluginOperation_$29Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$29Enum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static GeogebraCommonPluginOperation_$29Enum *new_GeogebraCommonPluginOperation_$29Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonPluginOperation_$29Enum)

@interface GeogebraCommonPluginOperation_$30Enum : GeogebraCommonPluginOperationEnum < NSCopying >

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonPluginOperation_$30Enum)

__attribute__((unused)) static void GeogebraCommonPluginOperation_$30Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$30Enum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static GeogebraCommonPluginOperation_$30Enum *new_GeogebraCommonPluginOperation_$30Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonPluginOperation_$30Enum)

@interface GeogebraCommonPluginOperation_$31Enum : GeogebraCommonPluginOperationEnum < NSCopying >

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonPluginOperation_$31Enum)

__attribute__((unused)) static void GeogebraCommonPluginOperation_$31Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$31Enum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static GeogebraCommonPluginOperation_$31Enum *new_GeogebraCommonPluginOperation_$31Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonPluginOperation_$31Enum)

@interface GeogebraCommonPluginOperation_$32Enum : GeogebraCommonPluginOperationEnum < NSCopying >

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonPluginOperation_$32Enum)

__attribute__((unused)) static void GeogebraCommonPluginOperation_$32Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$32Enum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static GeogebraCommonPluginOperation_$32Enum *new_GeogebraCommonPluginOperation_$32Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonPluginOperation_$32Enum)

@interface GeogebraCommonPluginOperation_$33Enum : GeogebraCommonPluginOperationEnum < NSCopying >

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonPluginOperation_$33Enum)

__attribute__((unused)) static void GeogebraCommonPluginOperation_$33Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$33Enum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static GeogebraCommonPluginOperation_$33Enum *new_GeogebraCommonPluginOperation_$33Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonPluginOperation_$33Enum)

@interface GeogebraCommonPluginOperation_$34Enum : GeogebraCommonPluginOperationEnum < NSCopying >

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonPluginOperation_$34Enum)

__attribute__((unused)) static void GeogebraCommonPluginOperation_$34Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$34Enum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static GeogebraCommonPluginOperation_$34Enum *new_GeogebraCommonPluginOperation_$34Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonPluginOperation_$34Enum)

@interface GeogebraCommonPluginOperation_$35Enum : GeogebraCommonPluginOperationEnum < NSCopying >

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonPluginOperation_$35Enum)

__attribute__((unused)) static void GeogebraCommonPluginOperation_$35Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$35Enum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static GeogebraCommonPluginOperation_$35Enum *new_GeogebraCommonPluginOperation_$35Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonPluginOperation_$35Enum)

@interface GeogebraCommonPluginOperation_$36Enum : GeogebraCommonPluginOperationEnum < NSCopying >

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonPluginOperation_$36Enum)

__attribute__((unused)) static void GeogebraCommonPluginOperation_$36Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$36Enum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static GeogebraCommonPluginOperation_$36Enum *new_GeogebraCommonPluginOperation_$36Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonPluginOperation_$36Enum)

@interface GeogebraCommonPluginOperation_$37Enum : GeogebraCommonPluginOperationEnum < NSCopying >

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonPluginOperation_$37Enum)

__attribute__((unused)) static void GeogebraCommonPluginOperation_$37Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$37Enum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static GeogebraCommonPluginOperation_$37Enum *new_GeogebraCommonPluginOperation_$37Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonPluginOperation_$37Enum)

@interface GeogebraCommonPluginOperation_$38Enum : GeogebraCommonPluginOperationEnum < NSCopying >

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonPluginOperation_$38Enum)

__attribute__((unused)) static void GeogebraCommonPluginOperation_$38Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$38Enum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static GeogebraCommonPluginOperation_$38Enum *new_GeogebraCommonPluginOperation_$38Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonPluginOperation_$38Enum)

@interface GeogebraCommonPluginOperation_$39Enum : GeogebraCommonPluginOperationEnum < NSCopying >

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonPluginOperation_$39Enum)

__attribute__((unused)) static void GeogebraCommonPluginOperation_$39Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$39Enum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static GeogebraCommonPluginOperation_$39Enum *new_GeogebraCommonPluginOperation_$39Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonPluginOperation_$39Enum)

@interface GeogebraCommonPluginOperation_$40Enum : GeogebraCommonPluginOperationEnum < NSCopying >

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonPluginOperation_$40Enum)

__attribute__((unused)) static void GeogebraCommonPluginOperation_$40Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$40Enum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static GeogebraCommonPluginOperation_$40Enum *new_GeogebraCommonPluginOperation_$40Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonPluginOperation_$40Enum)

@interface GeogebraCommonPluginOperation_$41Enum : GeogebraCommonPluginOperationEnum < NSCopying >

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonPluginOperation_$41Enum)

__attribute__((unused)) static void GeogebraCommonPluginOperation_$41Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$41Enum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static GeogebraCommonPluginOperation_$41Enum *new_GeogebraCommonPluginOperation_$41Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonPluginOperation_$41Enum)

@interface GeogebraCommonPluginOperation_$42Enum : GeogebraCommonPluginOperationEnum < NSCopying >

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonPluginOperation_$42Enum)

__attribute__((unused)) static void GeogebraCommonPluginOperation_$42Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$42Enum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static GeogebraCommonPluginOperation_$42Enum *new_GeogebraCommonPluginOperation_$42Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonPluginOperation_$42Enum)

@interface GeogebraCommonPluginOperation_$43Enum : GeogebraCommonPluginOperationEnum < NSCopying >

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonPluginOperation_$43Enum)

__attribute__((unused)) static void GeogebraCommonPluginOperation_$43Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$43Enum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static GeogebraCommonPluginOperation_$43Enum *new_GeogebraCommonPluginOperation_$43Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonPluginOperation_$43Enum)

@interface GeogebraCommonPluginOperation_$44Enum : GeogebraCommonPluginOperationEnum < NSCopying >

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonPluginOperation_$44Enum)

__attribute__((unused)) static void GeogebraCommonPluginOperation_$44Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$44Enum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static GeogebraCommonPluginOperation_$44Enum *new_GeogebraCommonPluginOperation_$44Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonPluginOperation_$44Enum)

@interface GeogebraCommonPluginOperation_$45Enum : GeogebraCommonPluginOperationEnum < NSCopying >

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonPluginOperation_$45Enum)

__attribute__((unused)) static void GeogebraCommonPluginOperation_$45Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$45Enum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static GeogebraCommonPluginOperation_$45Enum *new_GeogebraCommonPluginOperation_$45Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonPluginOperation_$45Enum)

@interface GeogebraCommonPluginOperation_$46Enum : GeogebraCommonPluginOperationEnum < NSCopying >

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonPluginOperation_$46Enum)

__attribute__((unused)) static void GeogebraCommonPluginOperation_$46Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$46Enum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static GeogebraCommonPluginOperation_$46Enum *new_GeogebraCommonPluginOperation_$46Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonPluginOperation_$46Enum)

@interface GeogebraCommonPluginOperation_$47Enum : GeogebraCommonPluginOperationEnum < NSCopying >

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonPluginOperation_$47Enum)

__attribute__((unused)) static void GeogebraCommonPluginOperation_$47Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$47Enum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static GeogebraCommonPluginOperation_$47Enum *new_GeogebraCommonPluginOperation_$47Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonPluginOperation_$47Enum)

@interface GeogebraCommonPluginOperation_$48Enum : GeogebraCommonPluginOperationEnum < NSCopying >

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonPluginOperation_$48Enum)

__attribute__((unused)) static void GeogebraCommonPluginOperation_$48Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$48Enum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static GeogebraCommonPluginOperation_$48Enum *new_GeogebraCommonPluginOperation_$48Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonPluginOperation_$48Enum)

@interface GeogebraCommonPluginOperation_$49Enum : GeogebraCommonPluginOperationEnum < NSCopying >

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonPluginOperation_$49Enum)

__attribute__((unused)) static void GeogebraCommonPluginOperation_$49Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$49Enum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static GeogebraCommonPluginOperation_$49Enum *new_GeogebraCommonPluginOperation_$49Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonPluginOperation_$49Enum)

@interface GeogebraCommonPluginOperation_$50Enum : GeogebraCommonPluginOperationEnum < NSCopying >

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonPluginOperation_$50Enum)

__attribute__((unused)) static void GeogebraCommonPluginOperation_$50Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$50Enum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static GeogebraCommonPluginOperation_$50Enum *new_GeogebraCommonPluginOperation_$50Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonPluginOperation_$50Enum)

@interface GeogebraCommonPluginOperation_$51Enum : GeogebraCommonPluginOperationEnum < NSCopying >

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonPluginOperation_$51Enum)

__attribute__((unused)) static void GeogebraCommonPluginOperation_$51Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$51Enum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static GeogebraCommonPluginOperation_$51Enum *new_GeogebraCommonPluginOperation_$51Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonPluginOperation_$51Enum)

@interface GeogebraCommonPluginOperation_$52Enum : GeogebraCommonPluginOperationEnum < NSCopying >

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonPluginOperation_$52Enum)

__attribute__((unused)) static void GeogebraCommonPluginOperation_$52Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$52Enum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static GeogebraCommonPluginOperation_$52Enum *new_GeogebraCommonPluginOperation_$52Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonPluginOperation_$52Enum)

@interface GeogebraCommonPluginOperation_$53Enum : GeogebraCommonPluginOperationEnum < NSCopying >

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonPluginOperation_$53Enum)

__attribute__((unused)) static void GeogebraCommonPluginOperation_$53Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$53Enum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static GeogebraCommonPluginOperation_$53Enum *new_GeogebraCommonPluginOperation_$53Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonPluginOperation_$53Enum)

@interface GeogebraCommonPluginOperation_$54Enum : GeogebraCommonPluginOperationEnum < NSCopying >

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonPluginOperation_$54Enum)

__attribute__((unused)) static void GeogebraCommonPluginOperation_$54Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$54Enum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static GeogebraCommonPluginOperation_$54Enum *new_GeogebraCommonPluginOperation_$54Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonPluginOperation_$54Enum)

@interface GeogebraCommonPluginOperation_$55Enum : GeogebraCommonPluginOperationEnum < NSCopying >

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonPluginOperation_$55Enum)

__attribute__((unused)) static void GeogebraCommonPluginOperation_$55Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$55Enum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static GeogebraCommonPluginOperation_$55Enum *new_GeogebraCommonPluginOperation_$55Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonPluginOperation_$55Enum)

@interface GeogebraCommonPluginOperation_$56Enum : GeogebraCommonPluginOperationEnum < NSCopying >

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonPluginOperation_$56Enum)

__attribute__((unused)) static void GeogebraCommonPluginOperation_$56Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$56Enum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static GeogebraCommonPluginOperation_$56Enum *new_GeogebraCommonPluginOperation_$56Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonPluginOperation_$56Enum)

@interface GeogebraCommonPluginOperation_$57Enum : GeogebraCommonPluginOperationEnum < NSCopying >

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonPluginOperation_$57Enum)

__attribute__((unused)) static void GeogebraCommonPluginOperation_$57Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$57Enum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static GeogebraCommonPluginOperation_$57Enum *new_GeogebraCommonPluginOperation_$57Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonPluginOperation_$57Enum)

@interface GeogebraCommonPluginOperation_$58Enum : GeogebraCommonPluginOperationEnum < NSCopying >

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonPluginOperation_$58Enum)

__attribute__((unused)) static void GeogebraCommonPluginOperation_$58Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$58Enum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static GeogebraCommonPluginOperation_$58Enum *new_GeogebraCommonPluginOperation_$58Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonPluginOperation_$58Enum)

@interface GeogebraCommonPluginOperation_$59Enum : GeogebraCommonPluginOperationEnum < NSCopying >

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonPluginOperation_$59Enum)

__attribute__((unused)) static void GeogebraCommonPluginOperation_$59Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$59Enum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static GeogebraCommonPluginOperation_$59Enum *new_GeogebraCommonPluginOperation_$59Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonPluginOperation_$59Enum)

@interface GeogebraCommonPluginOperation_$60Enum : GeogebraCommonPluginOperationEnum < NSCopying >

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonPluginOperation_$60Enum)

__attribute__((unused)) static void GeogebraCommonPluginOperation_$60Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$60Enum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static GeogebraCommonPluginOperation_$60Enum *new_GeogebraCommonPluginOperation_$60Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonPluginOperation_$60Enum)

@interface GeogebraCommonPluginOperation_$61Enum : GeogebraCommonPluginOperationEnum < NSCopying >

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonPluginOperation_$61Enum)

__attribute__((unused)) static void GeogebraCommonPluginOperation_$61Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$61Enum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static GeogebraCommonPluginOperation_$61Enum *new_GeogebraCommonPluginOperation_$61Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonPluginOperation_$61Enum)

@interface GeogebraCommonPluginOperation_$62Enum : GeogebraCommonPluginOperationEnum < NSCopying >

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonPluginOperation_$62Enum)

__attribute__((unused)) static void GeogebraCommonPluginOperation_$62Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$62Enum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static GeogebraCommonPluginOperation_$62Enum *new_GeogebraCommonPluginOperation_$62Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonPluginOperation_$62Enum)

@interface GeogebraCommonPluginOperation_$63Enum : GeogebraCommonPluginOperationEnum < NSCopying >

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonPluginOperation_$63Enum)

__attribute__((unused)) static void GeogebraCommonPluginOperation_$63Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$63Enum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static GeogebraCommonPluginOperation_$63Enum *new_GeogebraCommonPluginOperation_$63Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonPluginOperation_$63Enum)

@interface GeogebraCommonPluginOperation_$64Enum : GeogebraCommonPluginOperationEnum < NSCopying >

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonPluginOperation_$64Enum)

__attribute__((unused)) static void GeogebraCommonPluginOperation_$64Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$64Enum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static GeogebraCommonPluginOperation_$64Enum *new_GeogebraCommonPluginOperation_$64Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonPluginOperation_$64Enum)

@interface GeogebraCommonPluginOperation_$65Enum : GeogebraCommonPluginOperationEnum < NSCopying >

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonPluginOperation_$65Enum)

__attribute__((unused)) static void GeogebraCommonPluginOperation_$65Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$65Enum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static GeogebraCommonPluginOperation_$65Enum *new_GeogebraCommonPluginOperation_$65Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonPluginOperation_$65Enum)

@interface GeogebraCommonPluginOperation_$66Enum : GeogebraCommonPluginOperationEnum < NSCopying >

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonPluginOperation_$66Enum)

__attribute__((unused)) static void GeogebraCommonPluginOperation_$66Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$66Enum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static GeogebraCommonPluginOperation_$66Enum *new_GeogebraCommonPluginOperation_$66Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonPluginOperation_$66Enum)

@interface GeogebraCommonPluginOperation_$67Enum : GeogebraCommonPluginOperationEnum < NSCopying >

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonPluginOperation_$67Enum)

__attribute__((unused)) static void GeogebraCommonPluginOperation_$67Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$67Enum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static GeogebraCommonPluginOperation_$67Enum *new_GeogebraCommonPluginOperation_$67Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonPluginOperation_$67Enum)

@interface GeogebraCommonPluginOperation_$68Enum : GeogebraCommonPluginOperationEnum < NSCopying >

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonPluginOperation_$68Enum)

__attribute__((unused)) static void GeogebraCommonPluginOperation_$68Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$68Enum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static GeogebraCommonPluginOperation_$68Enum *new_GeogebraCommonPluginOperation_$68Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonPluginOperation_$68Enum)

@interface GeogebraCommonPluginOperation_$69Enum : GeogebraCommonPluginOperationEnum < NSCopying >

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonPluginOperation_$69Enum)

__attribute__((unused)) static void GeogebraCommonPluginOperation_$69Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$69Enum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static GeogebraCommonPluginOperation_$69Enum *new_GeogebraCommonPluginOperation_$69Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonPluginOperation_$69Enum)

@interface GeogebraCommonPluginOperation_$70Enum : GeogebraCommonPluginOperationEnum < NSCopying >

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonPluginOperation_$70Enum)

__attribute__((unused)) static void GeogebraCommonPluginOperation_$70Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$70Enum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static GeogebraCommonPluginOperation_$70Enum *new_GeogebraCommonPluginOperation_$70Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonPluginOperation_$70Enum)

@interface GeogebraCommonPluginOperation_$71Enum : GeogebraCommonPluginOperationEnum < NSCopying >

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonPluginOperation_$71Enum)

__attribute__((unused)) static void GeogebraCommonPluginOperation_$71Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$71Enum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static GeogebraCommonPluginOperation_$71Enum *new_GeogebraCommonPluginOperation_$71Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonPluginOperation_$71Enum)

@interface GeogebraCommonPluginOperation_$72Enum : GeogebraCommonPluginOperationEnum < NSCopying >

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonPluginOperation_$72Enum)

__attribute__((unused)) static void GeogebraCommonPluginOperation_$72Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$72Enum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static GeogebraCommonPluginOperation_$72Enum *new_GeogebraCommonPluginOperation_$72Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonPluginOperation_$72Enum)

@interface GeogebraCommonPluginOperation_$73Enum : GeogebraCommonPluginOperationEnum < NSCopying >

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonPluginOperation_$73Enum)

__attribute__((unused)) static void GeogebraCommonPluginOperation_$73Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$73Enum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static GeogebraCommonPluginOperation_$73Enum *new_GeogebraCommonPluginOperation_$73Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonPluginOperation_$73Enum)

@interface GeogebraCommonPluginOperation_$74Enum : GeogebraCommonPluginOperationEnum < NSCopying >

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonPluginOperation_$74Enum)

__attribute__((unused)) static void GeogebraCommonPluginOperation_$74Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$74Enum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static GeogebraCommonPluginOperation_$74Enum *new_GeogebraCommonPluginOperation_$74Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonPluginOperation_$74Enum)

@interface GeogebraCommonPluginOperation_$75Enum : GeogebraCommonPluginOperationEnum < NSCopying >

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonPluginOperation_$75Enum)

__attribute__((unused)) static void GeogebraCommonPluginOperation_$75Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$75Enum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static GeogebraCommonPluginOperation_$75Enum *new_GeogebraCommonPluginOperation_$75Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonPluginOperation_$75Enum)

@interface GeogebraCommonPluginOperation_$76Enum : GeogebraCommonPluginOperationEnum < NSCopying >

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonPluginOperation_$76Enum)

__attribute__((unused)) static void GeogebraCommonPluginOperation_$76Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$76Enum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static GeogebraCommonPluginOperation_$76Enum *new_GeogebraCommonPluginOperation_$76Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonPluginOperation_$76Enum)

@interface GeogebraCommonPluginOperation_$77Enum : GeogebraCommonPluginOperationEnum < NSCopying >

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonPluginOperation_$77Enum)

__attribute__((unused)) static void GeogebraCommonPluginOperation_$77Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$77Enum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static GeogebraCommonPluginOperation_$77Enum *new_GeogebraCommonPluginOperation_$77Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonPluginOperation_$77Enum)

@interface GeogebraCommonPluginOperation_$78Enum : GeogebraCommonPluginOperationEnum < NSCopying >

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonPluginOperation_$78Enum)

__attribute__((unused)) static void GeogebraCommonPluginOperation_$78Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$78Enum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static GeogebraCommonPluginOperation_$78Enum *new_GeogebraCommonPluginOperation_$78Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonPluginOperation_$78Enum)

@interface GeogebraCommonPluginOperation_$79Enum : GeogebraCommonPluginOperationEnum < NSCopying >

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonPluginOperation_$79Enum)

__attribute__((unused)) static void GeogebraCommonPluginOperation_$79Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$79Enum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static GeogebraCommonPluginOperation_$79Enum *new_GeogebraCommonPluginOperation_$79Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonPluginOperation_$79Enum)

@interface GeogebraCommonPluginOperation_$80Enum : GeogebraCommonPluginOperationEnum < NSCopying >

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonPluginOperation_$80Enum)

__attribute__((unused)) static void GeogebraCommonPluginOperation_$80Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$80Enum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static GeogebraCommonPluginOperation_$80Enum *new_GeogebraCommonPluginOperation_$80Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonPluginOperation_$80Enum)

@interface GeogebraCommonPluginOperation_$81Enum : GeogebraCommonPluginOperationEnum < NSCopying >

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonPluginOperation_$81Enum)

__attribute__((unused)) static void GeogebraCommonPluginOperation_$81Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$81Enum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static GeogebraCommonPluginOperation_$81Enum *new_GeogebraCommonPluginOperation_$81Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonPluginOperation_$81Enum)

@interface GeogebraCommonPluginOperation_$82Enum : GeogebraCommonPluginOperationEnum < NSCopying >

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonPluginOperation_$82Enum)

__attribute__((unused)) static void GeogebraCommonPluginOperation_$82Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$82Enum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static GeogebraCommonPluginOperation_$82Enum *new_GeogebraCommonPluginOperation_$82Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonPluginOperation_$82Enum)

@interface GeogebraCommonPluginOperation_$83Enum : GeogebraCommonPluginOperationEnum < NSCopying >

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonPluginOperation_$83Enum)

__attribute__((unused)) static void GeogebraCommonPluginOperation_$83Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$83Enum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static GeogebraCommonPluginOperation_$83Enum *new_GeogebraCommonPluginOperation_$83Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonPluginOperation_$83Enum)

@interface GeogebraCommonPluginOperation_$84Enum : GeogebraCommonPluginOperationEnum < NSCopying >

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonPluginOperation_$84Enum)

__attribute__((unused)) static void GeogebraCommonPluginOperation_$84Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$84Enum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static GeogebraCommonPluginOperation_$84Enum *new_GeogebraCommonPluginOperation_$84Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonPluginOperation_$84Enum)

@interface GeogebraCommonPluginOperation_$85Enum : GeogebraCommonPluginOperationEnum < NSCopying >

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonPluginOperation_$85Enum)

__attribute__((unused)) static void GeogebraCommonPluginOperation_$85Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$85Enum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static GeogebraCommonPluginOperation_$85Enum *new_GeogebraCommonPluginOperation_$85Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonPluginOperation_$85Enum)

@interface GeogebraCommonPluginOperation_$86Enum : GeogebraCommonPluginOperationEnum < NSCopying >

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonPluginOperation_$86Enum)

__attribute__((unused)) static void GeogebraCommonPluginOperation_$86Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$86Enum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static GeogebraCommonPluginOperation_$86Enum *new_GeogebraCommonPluginOperation_$86Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonPluginOperation_$86Enum)

@interface GeogebraCommonPluginOperation_$87Enum : GeogebraCommonPluginOperationEnum < NSCopying >

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonPluginOperation_$87Enum)

__attribute__((unused)) static void GeogebraCommonPluginOperation_$87Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$87Enum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static GeogebraCommonPluginOperation_$87Enum *new_GeogebraCommonPluginOperation_$87Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonPluginOperation_$87Enum)

@interface GeogebraCommonPluginOperation_$88Enum : GeogebraCommonPluginOperationEnum < NSCopying >

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonPluginOperation_$88Enum)

__attribute__((unused)) static void GeogebraCommonPluginOperation_$88Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$88Enum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static GeogebraCommonPluginOperation_$88Enum *new_GeogebraCommonPluginOperation_$88Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonPluginOperation_$88Enum)

@interface GeogebraCommonPluginOperation_$89Enum : GeogebraCommonPluginOperationEnum < NSCopying >

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonPluginOperation_$89Enum)

__attribute__((unused)) static void GeogebraCommonPluginOperation_$89Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$89Enum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static GeogebraCommonPluginOperation_$89Enum *new_GeogebraCommonPluginOperation_$89Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonPluginOperation_$89Enum)

@interface GeogebraCommonPluginOperation_$90Enum : GeogebraCommonPluginOperationEnum < NSCopying >

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonPluginOperation_$90Enum)

__attribute__((unused)) static void GeogebraCommonPluginOperation_$90Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$90Enum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static GeogebraCommonPluginOperation_$90Enum *new_GeogebraCommonPluginOperation_$90Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonPluginOperation_$90Enum)

@interface GeogebraCommonPluginOperation_$91Enum : GeogebraCommonPluginOperationEnum < NSCopying >

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonPluginOperation_$91Enum)

__attribute__((unused)) static void GeogebraCommonPluginOperation_$91Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$91Enum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static GeogebraCommonPluginOperation_$91Enum *new_GeogebraCommonPluginOperation_$91Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonPluginOperation_$91Enum)

@interface GeogebraCommonPluginOperation_$92Enum : GeogebraCommonPluginOperationEnum < NSCopying >

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonPluginOperation_$92Enum)

__attribute__((unused)) static void GeogebraCommonPluginOperation_$92Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$92Enum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static GeogebraCommonPluginOperation_$92Enum *new_GeogebraCommonPluginOperation_$92Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonPluginOperation_$92Enum)

@interface GeogebraCommonPluginOperation_$93Enum : GeogebraCommonPluginOperationEnum < NSCopying >

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonPluginOperation_$93Enum)

__attribute__((unused)) static void GeogebraCommonPluginOperation_$93Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$93Enum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static GeogebraCommonPluginOperation_$93Enum *new_GeogebraCommonPluginOperation_$93Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonPluginOperation_$93Enum)

@interface GeogebraCommonPluginOperation_$94Enum : GeogebraCommonPluginOperationEnum < NSCopying >

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonPluginOperation_$94Enum)

__attribute__((unused)) static void GeogebraCommonPluginOperation_$94Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$94Enum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static GeogebraCommonPluginOperation_$94Enum *new_GeogebraCommonPluginOperation_$94Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonPluginOperation_$94Enum)

@interface GeogebraCommonPluginOperation_$95Enum : GeogebraCommonPluginOperationEnum < NSCopying >

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonPluginOperation_$95Enum)

__attribute__((unused)) static void GeogebraCommonPluginOperation_$95Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$95Enum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static GeogebraCommonPluginOperation_$95Enum *new_GeogebraCommonPluginOperation_$95Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonPluginOperation_$95Enum)

@interface GeogebraCommonPluginOperation_$96Enum : GeogebraCommonPluginOperationEnum < NSCopying >

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonPluginOperation_$96Enum)

__attribute__((unused)) static void GeogebraCommonPluginOperation_$96Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$96Enum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static GeogebraCommonPluginOperation_$96Enum *new_GeogebraCommonPluginOperation_$96Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonPluginOperation_$96Enum)

@interface GeogebraCommonPluginOperation_$97Enum : GeogebraCommonPluginOperationEnum < NSCopying >

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonPluginOperation_$97Enum)

__attribute__((unused)) static void GeogebraCommonPluginOperation_$97Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$97Enum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static GeogebraCommonPluginOperation_$97Enum *new_GeogebraCommonPluginOperation_$97Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonPluginOperation_$97Enum)

@interface GeogebraCommonPluginOperation_$98Enum : GeogebraCommonPluginOperationEnum < NSCopying >

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonPluginOperation_$98Enum)

__attribute__((unused)) static void GeogebraCommonPluginOperation_$98Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$98Enum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static GeogebraCommonPluginOperation_$98Enum *new_GeogebraCommonPluginOperation_$98Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonPluginOperation_$98Enum)

@interface GeogebraCommonPluginOperation_$99Enum : GeogebraCommonPluginOperationEnum < NSCopying >

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonPluginOperation_$99Enum)

__attribute__((unused)) static void GeogebraCommonPluginOperation_$99Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$99Enum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static GeogebraCommonPluginOperation_$99Enum *new_GeogebraCommonPluginOperation_$99Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonPluginOperation_$99Enum)

@interface GeogebraCommonPluginOperation_$100Enum : GeogebraCommonPluginOperationEnum < NSCopying >

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonPluginOperation_$100Enum)

__attribute__((unused)) static void GeogebraCommonPluginOperation_$100Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$100Enum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static GeogebraCommonPluginOperation_$100Enum *new_GeogebraCommonPluginOperation_$100Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonPluginOperation_$100Enum)

J2OBJC_INITIALIZED_DEFN(GeogebraCommonPluginOperationEnum)

GeogebraCommonPluginOperationEnum *GeogebraCommonPluginOperationEnum_values_[100];

@implementation GeogebraCommonPluginOperationEnum

+ (jboolean)isSimpleFunctionWithGeogebraCommonPluginOperationEnum:(GeogebraCommonPluginOperationEnum *)op {
  return GeogebraCommonPluginOperationEnum_isSimpleFunctionWithGeogebraCommonPluginOperationEnum_(op);
}

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jboolean)isPlusorMinus {
  return [self isEqual:GeogebraCommonPluginOperationEnum_PLUS] || [self isEqual:GeogebraCommonPluginOperationEnum_MINUS];
}

- (jboolean)isInequality {
  return [self isEqual:GeogebraCommonPluginOperationEnum_GREATER_EQUAL] || [self isEqual:GeogebraCommonPluginOperationEnum_GREATER] || [self isEqual:GeogebraCommonPluginOperationEnum_LESS] || [self isEqual:GeogebraCommonPluginOperationEnum_LESS_EQUAL];
}

- (GeogebraCommonPluginOperationEnum *)negate {
  switch ([self ordinal]) {
    case GeogebraCommonPluginOperation_GREATER:
    return GeogebraCommonPluginOperationEnum_LESS_EQUAL;
    case GeogebraCommonPluginOperation_GREATER_EQUAL:
    return GeogebraCommonPluginOperationEnum_LESS;
    case GeogebraCommonPluginOperation_LESS:
    return GeogebraCommonPluginOperationEnum_GREATER_EQUAL;
    case GeogebraCommonPluginOperation_LESS_EQUAL:
    return GeogebraCommonPluginOperationEnum_GREATER;
    case GeogebraCommonPluginOperation_EQUAL_BOOLEAN:
    return GeogebraCommonPluginOperationEnum_NOT_EQUAL;
    case GeogebraCommonPluginOperation_NOT_EQUAL:
    return GeogebraCommonPluginOperationEnum_EQUAL_BOOLEAN;
    default:
    return GeogebraCommonPluginOperationEnum_NOT;
  }
}

- (GeogebraCommonPluginOperationEnum *)reverseLeftToRight {
  switch ([self ordinal]) {
    case GeogebraCommonPluginOperation_GREATER:
    return GeogebraCommonPluginOperationEnum_LESS;
    case GeogebraCommonPluginOperation_GREATER_EQUAL:
    return GeogebraCommonPluginOperationEnum_LESS_EQUAL;
    case GeogebraCommonPluginOperation_LESS:
    return GeogebraCommonPluginOperationEnum_GREATER;
    case GeogebraCommonPluginOperation_LESS_EQUAL:
    return GeogebraCommonPluginOperationEnum_GREATER_EQUAL;
    case GeogebraCommonPluginOperation_EQUAL_BOOLEAN:
    return GeogebraCommonPluginOperationEnum_EQUAL_BOOLEAN;
    case GeogebraCommonPluginOperation_NOT_EQUAL:
    return GeogebraCommonPluginOperationEnum_NOT_EQUAL;
  }
  return GeogebraCommonPluginOperationEnum_NO_OPERATION;
}

+ (jboolean)integralIsNonContinuousWithGeogebraCommonPluginOperationEnum:(GeogebraCommonPluginOperationEnum *)op {
  return GeogebraCommonPluginOperationEnum_integralIsNonContinuousWithGeogebraCommonPluginOperationEnum_(op);
}

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  GeogebraCommonPluginOperationEnum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

IOSObjectArray *GeogebraCommonPluginOperationEnum_values() {
  GeogebraCommonPluginOperationEnum_initialize();
  return [IOSObjectArray arrayWithObjects:GeogebraCommonPluginOperationEnum_values_ count:100 type:GeogebraCommonPluginOperationEnum_class_()];
}

+ (IOSObjectArray *)values {
  return GeogebraCommonPluginOperationEnum_values();
}

+ (GeogebraCommonPluginOperationEnum *)valueOfWithNSString:(NSString *)name {
  return GeogebraCommonPluginOperationEnum_valueOfWithNSString_(name);
}

GeogebraCommonPluginOperationEnum *GeogebraCommonPluginOperationEnum_valueOfWithNSString_(NSString *name) {
  GeogebraCommonPluginOperationEnum_initialize();
  for (int i = 0; i < 100; i++) {
    GeogebraCommonPluginOperationEnum *e = GeogebraCommonPluginOperationEnum_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw [[[JavaLangIllegalArgumentException alloc] initWithNSString:name] autorelease];
  return nil;
}

- (id)copyWithZone:(NSZone *)zone {
  return [self retain];
}

+ (void)initialize {
  if (self == [GeogebraCommonPluginOperationEnum class]) {
    GeogebraCommonPluginOperationEnum_NO_OPERATION = new_GeogebraCommonPluginOperation_$1Enum_initWithNSString_withInt_(@"NO_OPERATION", 0);
    GeogebraCommonPluginOperationEnum_NOT_EQUAL = new_GeogebraCommonPluginOperation_$2Enum_initWithNSString_withInt_(@"NOT_EQUAL", 1);
    GeogebraCommonPluginOperationEnum_NOT = new_GeogebraCommonPluginOperation_$3Enum_initWithNSString_withInt_(@"NOT", 2);
    GeogebraCommonPluginOperationEnum_OR = new_GeogebraCommonPluginOperation_$4Enum_initWithNSString_withInt_(@"OR", 3);
    GeogebraCommonPluginOperationEnum_AND = new_GeogebraCommonPluginOperation_$5Enum_initWithNSString_withInt_(@"AND", 4);
    GeogebraCommonPluginOperationEnum_AND_INTERVAL = new_GeogebraCommonPluginOperation_$6Enum_initWithNSString_withInt_(@"AND_INTERVAL", 5);
    GeogebraCommonPluginOperationEnum_IMPLICATION = new_GeogebraCommonPluginOperation_$7Enum_initWithNSString_withInt_(@"IMPLICATION", 6);
    GeogebraCommonPluginOperationEnum_EQUAL_BOOLEAN = new_GeogebraCommonPluginOperation_$8Enum_initWithNSString_withInt_(@"EQUAL_BOOLEAN", 7);
    GeogebraCommonPluginOperationEnum_LESS = new_GeogebraCommonPluginOperation_$9Enum_initWithNSString_withInt_(@"LESS", 8);
    GeogebraCommonPluginOperationEnum_GREATER = new_GeogebraCommonPluginOperation_$10Enum_initWithNSString_withInt_(@"GREATER", 9);
    GeogebraCommonPluginOperationEnum_LESS_EQUAL = new_GeogebraCommonPluginOperation_$11Enum_initWithNSString_withInt_(@"LESS_EQUAL", 10);
    GeogebraCommonPluginOperationEnum_GREATER_EQUAL = new_GeogebraCommonPluginOperation_$12Enum_initWithNSString_withInt_(@"GREATER_EQUAL", 11);
    GeogebraCommonPluginOperationEnum_PARALLEL = new_GeogebraCommonPluginOperation_$13Enum_initWithNSString_withInt_(@"PARALLEL", 12);
    GeogebraCommonPluginOperationEnum_PERPENDICULAR = new_GeogebraCommonPluginOperation_$14Enum_initWithNSString_withInt_(@"PERPENDICULAR", 13);
    GeogebraCommonPluginOperationEnum_IS_ELEMENT_OF = new_GeogebraCommonPluginOperation_$15Enum_initWithNSString_withInt_(@"IS_ELEMENT_OF", 14);
    GeogebraCommonPluginOperationEnum_IS_SUBSET_OF = new_GeogebraCommonPluginOperation_$16Enum_initWithNSString_withInt_(@"IS_SUBSET_OF", 15);
    GeogebraCommonPluginOperationEnum_IS_SUBSET_OF_STRICT = new_GeogebraCommonPluginOperation_$17Enum_initWithNSString_withInt_(@"IS_SUBSET_OF_STRICT", 16);
    GeogebraCommonPluginOperationEnum_SET_DIFFERENCE = new_GeogebraCommonPluginOperation_$18Enum_initWithNSString_withInt_(@"SET_DIFFERENCE", 17);
    GeogebraCommonPluginOperationEnum_PLUS = new_GeogebraCommonPluginOperation_$19Enum_initWithNSString_withInt_(@"PLUS", 18);
    GeogebraCommonPluginOperationEnum_MINUS = new_GeogebraCommonPluginOperation_$20Enum_initWithNSString_withInt_(@"MINUS", 19);
    GeogebraCommonPluginOperationEnum_VECTORPRODUCT = new_GeogebraCommonPluginOperation_$21Enum_initWithNSString_withInt_(@"VECTORPRODUCT", 20);
    GeogebraCommonPluginOperationEnum_MULTIPLY = new_GeogebraCommonPluginOperation_$22Enum_initWithNSString_withInt_(@"MULTIPLY", 21);
    GeogebraCommonPluginOperationEnum_MULTIPLY_OR_FUNCTION = new_GeogebraCommonPluginOperation_$23Enum_initWithNSString_withInt_(@"MULTIPLY_OR_FUNCTION", 22);
    GeogebraCommonPluginOperationEnum_DIVIDE = new_GeogebraCommonPluginOperation_$24Enum_initWithNSString_withInt_(@"DIVIDE", 23);
    GeogebraCommonPluginOperationEnum_POWER = new_GeogebraCommonPluginOperation_$25Enum_initWithNSString_withInt_(@"POWER", 24);
    GeogebraCommonPluginOperationEnum_FREEHAND = new_GeogebraCommonPluginOperation_$26Enum_initWithNSString_withInt_(@"FREEHAND", 25);
    GeogebraCommonPluginOperationEnum_COS = new_GeogebraCommonPluginOperation_$27Enum_initWithNSString_withInt_(@"COS", 26);
    GeogebraCommonPluginOperationEnum_SIN = new_GeogebraCommonPluginOperation_$28Enum_initWithNSString_withInt_(@"SIN", 27);
    GeogebraCommonPluginOperationEnum_TAN = new_GeogebraCommonPluginOperation_$29Enum_initWithNSString_withInt_(@"TAN", 28);
    GeogebraCommonPluginOperationEnum_EXP = new_GeogebraCommonPluginOperation_$30Enum_initWithNSString_withInt_(@"EXP", 29);
    GeogebraCommonPluginOperationEnum_LOG = new_GeogebraCommonPluginOperation_$31Enum_initWithNSString_withInt_(@"LOG", 30);
    GeogebraCommonPluginOperationEnum_ARCCOS = new_GeogebraCommonPluginOperation_$32Enum_initWithNSString_withInt_(@"ARCCOS", 31);
    GeogebraCommonPluginOperationEnum_ARCSIN = new_GeogebraCommonPluginOperation_$33Enum_initWithNSString_withInt_(@"ARCSIN", 32);
    GeogebraCommonPluginOperationEnum_ARCTAN = new_GeogebraCommonPluginOperation_$34Enum_initWithNSString_withInt_(@"ARCTAN", 33);
    GeogebraCommonPluginOperationEnum_ARCTAN2 = new_GeogebraCommonPluginOperation_$35Enum_initWithNSString_withInt_(@"ARCTAN2", 34);
    GeogebraCommonPluginOperationEnum_NROOT = new_GeogebraCommonPluginOperation_$36Enum_initWithNSString_withInt_(@"NROOT", 35);
    GeogebraCommonPluginOperationEnum_SQRT = new_GeogebraCommonPluginOperation_$37Enum_initWithNSString_withInt_(@"SQRT", 36);
    GeogebraCommonPluginOperationEnum_SQRT_SHORT = new_GeogebraCommonPluginOperation_$38Enum_initWithNSString_withInt_(@"SQRT_SHORT", 37);
    GeogebraCommonPluginOperationEnum_ABS = new_GeogebraCommonPluginOperation_$39Enum_initWithNSString_withInt_(@"ABS", 38);
    GeogebraCommonPluginOperationEnum_SGN = new_GeogebraCommonPluginOperation_$40Enum_initWithNSString_withInt_(@"SGN", 39);
    GeogebraCommonPluginOperationEnum_XCOORD = new_GeogebraCommonPluginOperation_$41Enum_initWithNSString_withInt_(@"XCOORD", 40);
    GeogebraCommonPluginOperationEnum_YCOORD = new_GeogebraCommonPluginOperation_$42Enum_initWithNSString_withInt_(@"YCOORD", 41);
    GeogebraCommonPluginOperationEnum_ZCOORD = new_GeogebraCommonPluginOperation_$43Enum_initWithNSString_withInt_(@"ZCOORD", 42);
    GeogebraCommonPluginOperationEnum_IMAGINARY = new_GeogebraCommonPluginOperation_$44Enum_initWithNSString_withInt_(@"IMAGINARY", 43);
    GeogebraCommonPluginOperationEnum_REAL = new_GeogebraCommonPluginOperation_$45Enum_initWithNSString_withInt_(@"REAL", 44);
    GeogebraCommonPluginOperationEnum_FRACTIONAL_PART = new_GeogebraCommonPluginOperation_$46Enum_initWithNSString_withInt_(@"FRACTIONAL_PART", 45);
    GeogebraCommonPluginOperationEnum_COSH = new_GeogebraCommonPluginOperation_$47Enum_initWithNSString_withInt_(@"COSH", 46);
    GeogebraCommonPluginOperationEnum_SINH = new_GeogebraCommonPluginOperation_$48Enum_initWithNSString_withInt_(@"SINH", 47);
    GeogebraCommonPluginOperationEnum_TANH = new_GeogebraCommonPluginOperation_$49Enum_initWithNSString_withInt_(@"TANH", 48);
    GeogebraCommonPluginOperationEnum_ACOSH = new_GeogebraCommonPluginOperation_$50Enum_initWithNSString_withInt_(@"ACOSH", 49);
    GeogebraCommonPluginOperationEnum_ASINH = new_GeogebraCommonPluginOperation_$51Enum_initWithNSString_withInt_(@"ASINH", 50);
    GeogebraCommonPluginOperationEnum_ATANH = new_GeogebraCommonPluginOperation_$52Enum_initWithNSString_withInt_(@"ATANH", 51);
    GeogebraCommonPluginOperationEnum_CSC = new_GeogebraCommonPluginOperation_$53Enum_initWithNSString_withInt_(@"CSC", 52);
    GeogebraCommonPluginOperationEnum_SEC = new_GeogebraCommonPluginOperation_$54Enum_initWithNSString_withInt_(@"SEC", 53);
    GeogebraCommonPluginOperationEnum_COT = new_GeogebraCommonPluginOperation_$55Enum_initWithNSString_withInt_(@"COT", 54);
    GeogebraCommonPluginOperationEnum_CSCH = new_GeogebraCommonPluginOperation_$56Enum_initWithNSString_withInt_(@"CSCH", 55);
    GeogebraCommonPluginOperationEnum_SECH = new_GeogebraCommonPluginOperation_$57Enum_initWithNSString_withInt_(@"SECH", 56);
    GeogebraCommonPluginOperationEnum_COTH = new_GeogebraCommonPluginOperation_$58Enum_initWithNSString_withInt_(@"COTH", 57);
    GeogebraCommonPluginOperationEnum_FLOOR = new_GeogebraCommonPluginOperation_$59Enum_initWithNSString_withInt_(@"FLOOR", 58);
    GeogebraCommonPluginOperationEnum_CEIL = new_GeogebraCommonPluginOperation_$60Enum_initWithNSString_withInt_(@"CEIL", 59);
    GeogebraCommonPluginOperationEnum_FACTORIAL = new_GeogebraCommonPluginOperation_$61Enum_initWithNSString_withInt_(@"FACTORIAL", 60);
    GeogebraCommonPluginOperationEnum_ROUND = new_GeogebraCommonPluginOperation_$62Enum_initWithNSString_withInt_(@"ROUND", 61);
    GeogebraCommonPluginOperationEnum_GAMMA = new_GeogebraCommonPluginOperation_$63Enum_initWithNSString_withInt_(@"GAMMA", 62);
    GeogebraCommonPluginOperationEnum_GAMMA_INCOMPLETE = new_GeogebraCommonPluginOperation_$64Enum_initWithNSString_withInt_(@"GAMMA_INCOMPLETE", 63);
    GeogebraCommonPluginOperationEnum_GAMMA_INCOMPLETE_REGULARIZED = new_GeogebraCommonPluginOperation_$65Enum_initWithNSString_withInt_(@"GAMMA_INCOMPLETE_REGULARIZED", 64);
    GeogebraCommonPluginOperationEnum_BETA = new_GeogebraCommonPluginOperation_$66Enum_initWithNSString_withInt_(@"BETA", 65);
    GeogebraCommonPluginOperationEnum_BETA_INCOMPLETE = new_GeogebraCommonPluginOperation_$67Enum_initWithNSString_withInt_(@"BETA_INCOMPLETE", 66);
    GeogebraCommonPluginOperationEnum_BETA_INCOMPLETE_REGULARIZED = new_GeogebraCommonPluginOperation_$68Enum_initWithNSString_withInt_(@"BETA_INCOMPLETE_REGULARIZED", 67);
    GeogebraCommonPluginOperationEnum_ERF = new_GeogebraCommonPluginOperation_$69Enum_initWithNSString_withInt_(@"ERF", 68);
    GeogebraCommonPluginOperationEnum_PSI = new_GeogebraCommonPluginOperation_$70Enum_initWithNSString_withInt_(@"PSI", 69);
    GeogebraCommonPluginOperationEnum_POLYGAMMA = new_GeogebraCommonPluginOperation_$71Enum_initWithNSString_withInt_(@"POLYGAMMA", 70);
    GeogebraCommonPluginOperationEnum_LOG10 = new_GeogebraCommonPluginOperation_$72Enum_initWithNSString_withInt_(@"LOG10", 71);
    GeogebraCommonPluginOperationEnum_LOG2 = new_GeogebraCommonPluginOperation_$73Enum_initWithNSString_withInt_(@"LOG2", 72);
    GeogebraCommonPluginOperationEnum_LOGB = new_GeogebraCommonPluginOperation_$74Enum_initWithNSString_withInt_(@"LOGB", 73);
    GeogebraCommonPluginOperationEnum_CI = new_GeogebraCommonPluginOperation_$75Enum_initWithNSString_withInt_(@"CI", 74);
    GeogebraCommonPluginOperationEnum_SI = new_GeogebraCommonPluginOperation_$76Enum_initWithNSString_withInt_(@"SI", 75);
    GeogebraCommonPluginOperationEnum_EI = new_GeogebraCommonPluginOperation_$77Enum_initWithNSString_withInt_(@"EI", 76);
    GeogebraCommonPluginOperationEnum_CBRT = new_GeogebraCommonPluginOperation_$78Enum_initWithNSString_withInt_(@"CBRT", 77);
    GeogebraCommonPluginOperationEnum_RANDOM = new_GeogebraCommonPluginOperation_$79Enum_initWithNSString_withInt_(@"RANDOM", 78);
    GeogebraCommonPluginOperationEnum_CONJUGATE = new_GeogebraCommonPluginOperation_$80Enum_initWithNSString_withInt_(@"CONJUGATE", 79);
    GeogebraCommonPluginOperationEnum_ARG = new_GeogebraCommonPluginOperation_$81Enum_initWithNSString_withInt_(@"ARG", 80);
    GeogebraCommonPluginOperationEnum_FUNCTION = new_GeogebraCommonPluginOperation_$82Enum_initWithNSString_withInt_(@"FUNCTION", 81);
    GeogebraCommonPluginOperationEnum_FUNCTION_NVAR = new_GeogebraCommonPluginOperation_$83Enum_initWithNSString_withInt_(@"FUNCTION_NVAR", 82);
    GeogebraCommonPluginOperationEnum_VEC_FUNCTION = new_GeogebraCommonPluginOperation_$84Enum_initWithNSString_withInt_(@"VEC_FUNCTION", 83);
    GeogebraCommonPluginOperationEnum_DERIVATIVE = new_GeogebraCommonPluginOperation_$85Enum_initWithNSString_withInt_(@"DERIVATIVE", 84);
    GeogebraCommonPluginOperationEnum_ELEMENT_OF = new_GeogebraCommonPluginOperation_$86Enum_initWithNSString_withInt_(@"ELEMENT_OF", 85);
    GeogebraCommonPluginOperationEnum_SUBSTITUTION = new_GeogebraCommonPluginOperation_$87Enum_initWithNSString_withInt_(@"SUBSTITUTION", 86);
    GeogebraCommonPluginOperationEnum_INTEGRAL = new_GeogebraCommonPluginOperation_$88Enum_initWithNSString_withInt_(@"INTEGRAL", 87);
    GeogebraCommonPluginOperationEnum_IF = new_GeogebraCommonPluginOperation_$89Enum_initWithNSString_withInt_(@"IF", 88);
    GeogebraCommonPluginOperationEnum_IF_ELSE = new_GeogebraCommonPluginOperation_$90Enum_initWithNSString_withInt_(@"IF_ELSE", 89);
    GeogebraCommonPluginOperationEnum_IF_LIST = new_GeogebraCommonPluginOperation_$91Enum_initWithNSString_withInt_(@"IF_LIST", 90);
    GeogebraCommonPluginOperationEnum_$VAR_ROW = new_GeogebraCommonPluginOperation_$92Enum_initWithNSString_withInt_(@"$VAR_ROW", 91);
    GeogebraCommonPluginOperationEnum_$VAR_COL = new_GeogebraCommonPluginOperation_$93Enum_initWithNSString_withInt_(@"$VAR_COL", 92);
    GeogebraCommonPluginOperationEnum_$VAR_ROW_COL = new_GeogebraCommonPluginOperation_$94Enum_initWithNSString_withInt_(@"$VAR_ROW_COL", 93);
    GeogebraCommonPluginOperationEnum_ARBCONST = new_GeogebraCommonPluginOperation_$95Enum_initWithNSString_withInt_(@"ARBCONST", 94);
    GeogebraCommonPluginOperationEnum_ARBINT = new_GeogebraCommonPluginOperation_$96Enum_initWithNSString_withInt_(@"ARBINT", 95);
    GeogebraCommonPluginOperationEnum_ARBCOMPLEX = new_GeogebraCommonPluginOperation_$97Enum_initWithNSString_withInt_(@"ARBCOMPLEX", 96);
    GeogebraCommonPluginOperationEnum_SUM = new_GeogebraCommonPluginOperation_$98Enum_initWithNSString_withInt_(@"SUM", 97);
    GeogebraCommonPluginOperationEnum_ZETA = new_GeogebraCommonPluginOperation_$99Enum_initWithNSString_withInt_(@"ZETA", 98);
    GeogebraCommonPluginOperationEnum_DIFF = new_GeogebraCommonPluginOperation_$100Enum_initWithNSString_withInt_(@"DIFF", 99);
    J2OBJC_SET_INITIALIZED(GeogebraCommonPluginOperationEnum)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "isSimpleFunctionWithGeogebraCommonPluginOperationEnum:", "isSimpleFunction", "Z", 0x9, NULL, NULL },
    { "handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelStringTemplate:withBoolean:", "handle", "Lgeogebra.common.kernel.arithmetic.ExpressionValue;", 0x401, NULL, NULL },
    { "isPlusorMinus", NULL, "Z", 0x1, NULL, NULL },
    { "isInequality", NULL, "Z", 0x1, NULL, NULL },
    { "negate", NULL, "Lgeogebra.common.plugin.Operation;", 0x1, NULL, NULL },
    { "reverseLeftToRight", NULL, "Lgeogebra.common.plugin.Operation;", 0x1, NULL, NULL },
    { "integralIsNonContinuousWithGeogebraCommonPluginOperationEnum:", "integralIsNonContinuous", "Z", 0x9, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "NO_OPERATION", "NO_OPERATION", 0x4019, "Lgeogebra.common.plugin.Operation;", &GeogebraCommonPluginOperationEnum_NO_OPERATION, NULL,  },
    { "NOT_EQUAL", "NOT_EQUAL", 0x4019, "Lgeogebra.common.plugin.Operation;", &GeogebraCommonPluginOperationEnum_NOT_EQUAL, NULL,  },
    { "NOT", "NOT", 0x4019, "Lgeogebra.common.plugin.Operation;", &GeogebraCommonPluginOperationEnum_NOT, NULL,  },
    { "OR", "OR", 0x4019, "Lgeogebra.common.plugin.Operation;", &GeogebraCommonPluginOperationEnum_OR, NULL,  },
    { "AND", "AND", 0x4019, "Lgeogebra.common.plugin.Operation;", &GeogebraCommonPluginOperationEnum_AND, NULL,  },
    { "AND_INTERVAL", "AND_INTERVAL", 0x4019, "Lgeogebra.common.plugin.Operation;", &GeogebraCommonPluginOperationEnum_AND_INTERVAL, NULL,  },
    { "IMPLICATION", "IMPLICATION", 0x4019, "Lgeogebra.common.plugin.Operation;", &GeogebraCommonPluginOperationEnum_IMPLICATION, NULL,  },
    { "EQUAL_BOOLEAN", "EQUAL_BOOLEAN", 0x4019, "Lgeogebra.common.plugin.Operation;", &GeogebraCommonPluginOperationEnum_EQUAL_BOOLEAN, NULL,  },
    { "LESS", "LESS", 0x4019, "Lgeogebra.common.plugin.Operation;", &GeogebraCommonPluginOperationEnum_LESS, NULL,  },
    { "GREATER", "GREATER", 0x4019, "Lgeogebra.common.plugin.Operation;", &GeogebraCommonPluginOperationEnum_GREATER, NULL,  },
    { "LESS_EQUAL", "LESS_EQUAL", 0x4019, "Lgeogebra.common.plugin.Operation;", &GeogebraCommonPluginOperationEnum_LESS_EQUAL, NULL,  },
    { "GREATER_EQUAL", "GREATER_EQUAL", 0x4019, "Lgeogebra.common.plugin.Operation;", &GeogebraCommonPluginOperationEnum_GREATER_EQUAL, NULL,  },
    { "PARALLEL", "PARALLEL", 0x4019, "Lgeogebra.common.plugin.Operation;", &GeogebraCommonPluginOperationEnum_PARALLEL, NULL,  },
    { "PERPENDICULAR", "PERPENDICULAR", 0x4019, "Lgeogebra.common.plugin.Operation;", &GeogebraCommonPluginOperationEnum_PERPENDICULAR, NULL,  },
    { "IS_ELEMENT_OF", "IS_ELEMENT_OF", 0x4019, "Lgeogebra.common.plugin.Operation;", &GeogebraCommonPluginOperationEnum_IS_ELEMENT_OF, NULL,  },
    { "IS_SUBSET_OF", "IS_SUBSET_OF", 0x4019, "Lgeogebra.common.plugin.Operation;", &GeogebraCommonPluginOperationEnum_IS_SUBSET_OF, NULL,  },
    { "IS_SUBSET_OF_STRICT", "IS_SUBSET_OF_STRICT", 0x4019, "Lgeogebra.common.plugin.Operation;", &GeogebraCommonPluginOperationEnum_IS_SUBSET_OF_STRICT, NULL,  },
    { "SET_DIFFERENCE", "SET_DIFFERENCE", 0x4019, "Lgeogebra.common.plugin.Operation;", &GeogebraCommonPluginOperationEnum_SET_DIFFERENCE, NULL,  },
    { "PLUS", "PLUS", 0x4019, "Lgeogebra.common.plugin.Operation;", &GeogebraCommonPluginOperationEnum_PLUS, NULL,  },
    { "MINUS", "MINUS", 0x4019, "Lgeogebra.common.plugin.Operation;", &GeogebraCommonPluginOperationEnum_MINUS, NULL,  },
    { "VECTORPRODUCT", "VECTORPRODUCT", 0x4019, "Lgeogebra.common.plugin.Operation;", &GeogebraCommonPluginOperationEnum_VECTORPRODUCT, NULL,  },
    { "MULTIPLY", "MULTIPLY", 0x4019, "Lgeogebra.common.plugin.Operation;", &GeogebraCommonPluginOperationEnum_MULTIPLY, NULL,  },
    { "MULTIPLY_OR_FUNCTION", "MULTIPLY_OR_FUNCTION", 0x4019, "Lgeogebra.common.plugin.Operation;", &GeogebraCommonPluginOperationEnum_MULTIPLY_OR_FUNCTION, NULL,  },
    { "DIVIDE", "DIVIDE", 0x4019, "Lgeogebra.common.plugin.Operation;", &GeogebraCommonPluginOperationEnum_DIVIDE, NULL,  },
    { "POWER", "POWER", 0x4019, "Lgeogebra.common.plugin.Operation;", &GeogebraCommonPluginOperationEnum_POWER, NULL,  },
    { "FREEHAND", "FREEHAND", 0x4019, "Lgeogebra.common.plugin.Operation;", &GeogebraCommonPluginOperationEnum_FREEHAND, NULL,  },
    { "COS", "COS", 0x4019, "Lgeogebra.common.plugin.Operation;", &GeogebraCommonPluginOperationEnum_COS, NULL,  },
    { "SIN", "SIN", 0x4019, "Lgeogebra.common.plugin.Operation;", &GeogebraCommonPluginOperationEnum_SIN, NULL,  },
    { "TAN", "TAN", 0x4019, "Lgeogebra.common.plugin.Operation;", &GeogebraCommonPluginOperationEnum_TAN, NULL,  },
    { "EXP", "EXP", 0x4019, "Lgeogebra.common.plugin.Operation;", &GeogebraCommonPluginOperationEnum_EXP, NULL,  },
    { "LOG", "LOG", 0x4019, "Lgeogebra.common.plugin.Operation;", &GeogebraCommonPluginOperationEnum_LOG, NULL,  },
    { "ARCCOS", "ARCCOS", 0x4019, "Lgeogebra.common.plugin.Operation;", &GeogebraCommonPluginOperationEnum_ARCCOS, NULL,  },
    { "ARCSIN", "ARCSIN", 0x4019, "Lgeogebra.common.plugin.Operation;", &GeogebraCommonPluginOperationEnum_ARCSIN, NULL,  },
    { "ARCTAN", "ARCTAN", 0x4019, "Lgeogebra.common.plugin.Operation;", &GeogebraCommonPluginOperationEnum_ARCTAN, NULL,  },
    { "ARCTAN2", "ARCTAN2", 0x4019, "Lgeogebra.common.plugin.Operation;", &GeogebraCommonPluginOperationEnum_ARCTAN2, NULL,  },
    { "NROOT", "NROOT", 0x4019, "Lgeogebra.common.plugin.Operation;", &GeogebraCommonPluginOperationEnum_NROOT, NULL,  },
    { "SQRT", "SQRT", 0x4019, "Lgeogebra.common.plugin.Operation;", &GeogebraCommonPluginOperationEnum_SQRT, NULL,  },
    { "SQRT_SHORT", "SQRT_SHORT", 0x4019, "Lgeogebra.common.plugin.Operation;", &GeogebraCommonPluginOperationEnum_SQRT_SHORT, NULL,  },
    { "ABS", "ABS", 0x4019, "Lgeogebra.common.plugin.Operation;", &GeogebraCommonPluginOperationEnum_ABS, NULL,  },
    { "SGN", "SGN", 0x4019, "Lgeogebra.common.plugin.Operation;", &GeogebraCommonPluginOperationEnum_SGN, NULL,  },
    { "XCOORD", "XCOORD", 0x4019, "Lgeogebra.common.plugin.Operation;", &GeogebraCommonPluginOperationEnum_XCOORD, NULL,  },
    { "YCOORD", "YCOORD", 0x4019, "Lgeogebra.common.plugin.Operation;", &GeogebraCommonPluginOperationEnum_YCOORD, NULL,  },
    { "ZCOORD", "ZCOORD", 0x4019, "Lgeogebra.common.plugin.Operation;", &GeogebraCommonPluginOperationEnum_ZCOORD, NULL,  },
    { "IMAGINARY", "IMAGINARY", 0x4019, "Lgeogebra.common.plugin.Operation;", &GeogebraCommonPluginOperationEnum_IMAGINARY, NULL,  },
    { "REAL", "REAL", 0x4019, "Lgeogebra.common.plugin.Operation;", &GeogebraCommonPluginOperationEnum_REAL, NULL,  },
    { "FRACTIONAL_PART", "FRACTIONAL_PART", 0x4019, "Lgeogebra.common.plugin.Operation;", &GeogebraCommonPluginOperationEnum_FRACTIONAL_PART, NULL,  },
    { "COSH", "COSH", 0x4019, "Lgeogebra.common.plugin.Operation;", &GeogebraCommonPluginOperationEnum_COSH, NULL,  },
    { "SINH", "SINH", 0x4019, "Lgeogebra.common.plugin.Operation;", &GeogebraCommonPluginOperationEnum_SINH, NULL,  },
    { "TANH", "TANH", 0x4019, "Lgeogebra.common.plugin.Operation;", &GeogebraCommonPluginOperationEnum_TANH, NULL,  },
    { "ACOSH", "ACOSH", 0x4019, "Lgeogebra.common.plugin.Operation;", &GeogebraCommonPluginOperationEnum_ACOSH, NULL,  },
    { "ASINH", "ASINH", 0x4019, "Lgeogebra.common.plugin.Operation;", &GeogebraCommonPluginOperationEnum_ASINH, NULL,  },
    { "ATANH", "ATANH", 0x4019, "Lgeogebra.common.plugin.Operation;", &GeogebraCommonPluginOperationEnum_ATANH, NULL,  },
    { "CSC", "CSC", 0x4019, "Lgeogebra.common.plugin.Operation;", &GeogebraCommonPluginOperationEnum_CSC, NULL,  },
    { "SEC", "SEC", 0x4019, "Lgeogebra.common.plugin.Operation;", &GeogebraCommonPluginOperationEnum_SEC, NULL,  },
    { "COT", "COT", 0x4019, "Lgeogebra.common.plugin.Operation;", &GeogebraCommonPluginOperationEnum_COT, NULL,  },
    { "CSCH", "CSCH", 0x4019, "Lgeogebra.common.plugin.Operation;", &GeogebraCommonPluginOperationEnum_CSCH, NULL,  },
    { "SECH", "SECH", 0x4019, "Lgeogebra.common.plugin.Operation;", &GeogebraCommonPluginOperationEnum_SECH, NULL,  },
    { "COTH", "COTH", 0x4019, "Lgeogebra.common.plugin.Operation;", &GeogebraCommonPluginOperationEnum_COTH, NULL,  },
    { "FLOOR", "FLOOR", 0x4019, "Lgeogebra.common.plugin.Operation;", &GeogebraCommonPluginOperationEnum_FLOOR, NULL,  },
    { "CEIL", "CEIL", 0x4019, "Lgeogebra.common.plugin.Operation;", &GeogebraCommonPluginOperationEnum_CEIL, NULL,  },
    { "FACTORIAL", "FACTORIAL", 0x4019, "Lgeogebra.common.plugin.Operation;", &GeogebraCommonPluginOperationEnum_FACTORIAL, NULL,  },
    { "ROUND", "ROUND", 0x4019, "Lgeogebra.common.plugin.Operation;", &GeogebraCommonPluginOperationEnum_ROUND, NULL,  },
    { "GAMMA", "GAMMA", 0x4019, "Lgeogebra.common.plugin.Operation;", &GeogebraCommonPluginOperationEnum_GAMMA, NULL,  },
    { "GAMMA_INCOMPLETE", "GAMMA_INCOMPLETE", 0x4019, "Lgeogebra.common.plugin.Operation;", &GeogebraCommonPluginOperationEnum_GAMMA_INCOMPLETE, NULL,  },
    { "GAMMA_INCOMPLETE_REGULARIZED", "GAMMA_INCOMPLETE_REGULARIZED", 0x4019, "Lgeogebra.common.plugin.Operation;", &GeogebraCommonPluginOperationEnum_GAMMA_INCOMPLETE_REGULARIZED, NULL,  },
    { "BETA", "BETA", 0x4019, "Lgeogebra.common.plugin.Operation;", &GeogebraCommonPluginOperationEnum_BETA, NULL,  },
    { "BETA_INCOMPLETE", "BETA_INCOMPLETE", 0x4019, "Lgeogebra.common.plugin.Operation;", &GeogebraCommonPluginOperationEnum_BETA_INCOMPLETE, NULL,  },
    { "BETA_INCOMPLETE_REGULARIZED", "BETA_INCOMPLETE_REGULARIZED", 0x4019, "Lgeogebra.common.plugin.Operation;", &GeogebraCommonPluginOperationEnum_BETA_INCOMPLETE_REGULARIZED, NULL,  },
    { "ERF", "ERF", 0x4019, "Lgeogebra.common.plugin.Operation;", &GeogebraCommonPluginOperationEnum_ERF, NULL,  },
    { "PSI", "PSI", 0x4019, "Lgeogebra.common.plugin.Operation;", &GeogebraCommonPluginOperationEnum_PSI, NULL,  },
    { "POLYGAMMA", "POLYGAMMA", 0x4019, "Lgeogebra.common.plugin.Operation;", &GeogebraCommonPluginOperationEnum_POLYGAMMA, NULL,  },
    { "LOG10", "LOG10", 0x4019, "Lgeogebra.common.plugin.Operation;", &GeogebraCommonPluginOperationEnum_LOG10, NULL,  },
    { "LOG2", "LOG2", 0x4019, "Lgeogebra.common.plugin.Operation;", &GeogebraCommonPluginOperationEnum_LOG2, NULL,  },
    { "LOGB", "LOGB", 0x4019, "Lgeogebra.common.plugin.Operation;", &GeogebraCommonPluginOperationEnum_LOGB, NULL,  },
    { "CI", "CI", 0x4019, "Lgeogebra.common.plugin.Operation;", &GeogebraCommonPluginOperationEnum_CI, NULL,  },
    { "SI", "SI", 0x4019, "Lgeogebra.common.plugin.Operation;", &GeogebraCommonPluginOperationEnum_SI, NULL,  },
    { "EI", "EI", 0x4019, "Lgeogebra.common.plugin.Operation;", &GeogebraCommonPluginOperationEnum_EI, NULL,  },
    { "CBRT", "CBRT", 0x4019, "Lgeogebra.common.plugin.Operation;", &GeogebraCommonPluginOperationEnum_CBRT, NULL,  },
    { "RANDOM", "RANDOM", 0x4019, "Lgeogebra.common.plugin.Operation;", &GeogebraCommonPluginOperationEnum_RANDOM, NULL,  },
    { "CONJUGATE", "CONJUGATE", 0x4019, "Lgeogebra.common.plugin.Operation;", &GeogebraCommonPluginOperationEnum_CONJUGATE, NULL,  },
    { "ARG", "ARG", 0x4019, "Lgeogebra.common.plugin.Operation;", &GeogebraCommonPluginOperationEnum_ARG, NULL,  },
    { "FUNCTION", "FUNCTION", 0x4019, "Lgeogebra.common.plugin.Operation;", &GeogebraCommonPluginOperationEnum_FUNCTION, NULL,  },
    { "FUNCTION_NVAR", "FUNCTION_NVAR", 0x4019, "Lgeogebra.common.plugin.Operation;", &GeogebraCommonPluginOperationEnum_FUNCTION_NVAR, NULL,  },
    { "VEC_FUNCTION", "VEC_FUNCTION", 0x4019, "Lgeogebra.common.plugin.Operation;", &GeogebraCommonPluginOperationEnum_VEC_FUNCTION, NULL,  },
    { "DERIVATIVE", "DERIVATIVE", 0x4019, "Lgeogebra.common.plugin.Operation;", &GeogebraCommonPluginOperationEnum_DERIVATIVE, NULL,  },
    { "ELEMENT_OF", "ELEMENT_OF", 0x4019, "Lgeogebra.common.plugin.Operation;", &GeogebraCommonPluginOperationEnum_ELEMENT_OF, NULL,  },
    { "SUBSTITUTION", "SUBSTITUTION", 0x4019, "Lgeogebra.common.plugin.Operation;", &GeogebraCommonPluginOperationEnum_SUBSTITUTION, NULL,  },
    { "INTEGRAL", "INTEGRAL", 0x4019, "Lgeogebra.common.plugin.Operation;", &GeogebraCommonPluginOperationEnum_INTEGRAL, NULL,  },
    { "IF", "IF", 0x4019, "Lgeogebra.common.plugin.Operation;", &GeogebraCommonPluginOperationEnum_IF, NULL,  },
    { "IF_ELSE", "IF_ELSE", 0x4019, "Lgeogebra.common.plugin.Operation;", &GeogebraCommonPluginOperationEnum_IF_ELSE, NULL,  },
    { "IF_LIST", "IF_LIST", 0x4019, "Lgeogebra.common.plugin.Operation;", &GeogebraCommonPluginOperationEnum_IF_LIST, NULL,  },
    { "$VAR_ROW", "$VAR_ROW", 0x4019, "Lgeogebra.common.plugin.Operation;", &GeogebraCommonPluginOperationEnum_$VAR_ROW, NULL,  },
    { "$VAR_COL", "$VAR_COL", 0x4019, "Lgeogebra.common.plugin.Operation;", &GeogebraCommonPluginOperationEnum_$VAR_COL, NULL,  },
    { "$VAR_ROW_COL", "$VAR_ROW_COL", 0x4019, "Lgeogebra.common.plugin.Operation;", &GeogebraCommonPluginOperationEnum_$VAR_ROW_COL, NULL,  },
    { "ARBCONST", "ARBCONST", 0x4019, "Lgeogebra.common.plugin.Operation;", &GeogebraCommonPluginOperationEnum_ARBCONST, NULL,  },
    { "ARBINT", "ARBINT", 0x4019, "Lgeogebra.common.plugin.Operation;", &GeogebraCommonPluginOperationEnum_ARBINT, NULL,  },
    { "ARBCOMPLEX", "ARBCOMPLEX", 0x4019, "Lgeogebra.common.plugin.Operation;", &GeogebraCommonPluginOperationEnum_ARBCOMPLEX, NULL,  },
    { "SUM", "SUM", 0x4019, "Lgeogebra.common.plugin.Operation;", &GeogebraCommonPluginOperationEnum_SUM, NULL,  },
    { "ZETA", "ZETA", 0x4019, "Lgeogebra.common.plugin.Operation;", &GeogebraCommonPluginOperationEnum_ZETA, NULL,  },
    { "DIFF", "DIFF", 0x4019, "Lgeogebra.common.plugin.Operation;", &GeogebraCommonPluginOperationEnum_DIFF, NULL,  },
  };
  static const char *superclass_type_args[] = {"Lgeogebra.common.plugin.Operation;"};
  static const J2ObjcClassInfo _GeogebraCommonPluginOperationEnum = { 2, "Operation", "geogebra.common.plugin", NULL, 0x4401, 7, methods, 100, fields, 1, superclass_type_args, 0, NULL, NULL, "Ljava/lang/Enum<Lgeogebra/common/plugin/Operation;>;" };
  return &_GeogebraCommonPluginOperationEnum;
}

@end

jboolean GeogebraCommonPluginOperationEnum_isSimpleFunctionWithGeogebraCommonPluginOperationEnum_(GeogebraCommonPluginOperationEnum *op) {
  GeogebraCommonPluginOperationEnum_initialize();
  switch ([op ordinal]) {
    case GeogebraCommonPluginOperation_SIN:
    case GeogebraCommonPluginOperation_COS:
    case GeogebraCommonPluginOperation_TAN:
    case GeogebraCommonPluginOperation_ARCSIN:
    case GeogebraCommonPluginOperation_ARCCOS:
    case GeogebraCommonPluginOperation_ARCTAN:
    case GeogebraCommonPluginOperation_SINH:
    case GeogebraCommonPluginOperation_COSH:
    case GeogebraCommonPluginOperation_TANH:
    case GeogebraCommonPluginOperation_ASINH:
    case GeogebraCommonPluginOperation_ACOSH:
    case GeogebraCommonPluginOperation_ATANH:
    case GeogebraCommonPluginOperation_CSC:
    case GeogebraCommonPluginOperation_SEC:
    case GeogebraCommonPluginOperation_COT:
    case GeogebraCommonPluginOperation_CSCH:
    case GeogebraCommonPluginOperation_SECH:
    case GeogebraCommonPluginOperation_COTH:
    case GeogebraCommonPluginOperation_EXP:
    case GeogebraCommonPluginOperation_ZETA:
    case GeogebraCommonPluginOperation_LOG:
    case GeogebraCommonPluginOperation_LOG10:
    case GeogebraCommonPluginOperation_LOG2:
    case GeogebraCommonPluginOperation_SQRT:
    case GeogebraCommonPluginOperation_CBRT:
    case GeogebraCommonPluginOperation_ERF:
    case GeogebraCommonPluginOperation_ABS:
    case GeogebraCommonPluginOperation_CI:
    case GeogebraCommonPluginOperation_SI:
    case GeogebraCommonPluginOperation_EI:
    case GeogebraCommonPluginOperation_PSI:
    case GeogebraCommonPluginOperation_GAMMA:
    return YES;
  }
  return NO;
}

jboolean GeogebraCommonPluginOperationEnum_integralIsNonContinuousWithGeogebraCommonPluginOperationEnum_(GeogebraCommonPluginOperationEnum *op) {
  GeogebraCommonPluginOperationEnum_initialize();
  switch ([op ordinal]) {
    case GeogebraCommonPluginOperation_ABS:
    case GeogebraCommonPluginOperation_SGN:
    case GeogebraCommonPluginOperation_FLOOR:
    case GeogebraCommonPluginOperation_CEIL:
    case GeogebraCommonPluginOperation_ROUND:
    case GeogebraCommonPluginOperation_TAN:
    case GeogebraCommonPluginOperation_COT:
    case GeogebraCommonPluginOperation_SEC:
    case GeogebraCommonPluginOperation_CSC:
    case GeogebraCommonPluginOperation_FRACTIONAL_PART:
    case GeogebraCommonPluginOperation_ZETA:
    case GeogebraCommonPluginOperation_GAMMA:
    case GeogebraCommonPluginOperation_GAMMA_INCOMPLETE:
    case GeogebraCommonPluginOperation_GAMMA_INCOMPLETE_REGULARIZED:
    case GeogebraCommonPluginOperation_BETA:
    case GeogebraCommonPluginOperation_BETA_INCOMPLETE:
    case GeogebraCommonPluginOperation_BETA_INCOMPLETE_REGULARIZED:
    case GeogebraCommonPluginOperation_POLYGAMMA:
    case GeogebraCommonPluginOperation_PSI:
    case GeogebraCommonPluginOperation_IF:
    case GeogebraCommonPluginOperation_IF_ELSE:
    return YES;
  }
  return NO;
}

void GeogebraCommonPluginOperationEnum_initWithNSString_withInt_(GeogebraCommonPluginOperationEnum *self, NSString *__name, jint __ordinal) {
  JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonPluginOperationEnum)

@implementation GeogebraCommonPluginOperation_$1Enum

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX {
  return nil;
}

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  GeogebraCommonPluginOperation_$1Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelStringTemplate:withBoolean:", "handle", "Lgeogebra.common.kernel.arithmetic.ExpressionValue;", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonPluginOperation_$1Enum = { 2, "", "geogebra.common.plugin", "Operation", 0xc018, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonPluginOperation_$1Enum;
}

@end

void GeogebraCommonPluginOperation_$1Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$1Enum *self, NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperationEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

GeogebraCommonPluginOperation_$1Enum *new_GeogebraCommonPluginOperation_$1Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperation_$1Enum *self = [GeogebraCommonPluginOperation_$1Enum alloc];
  GeogebraCommonPluginOperation_$1Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonPluginOperation_$1Enum)

@implementation GeogebraCommonPluginOperation_$2Enum

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX {
  GeogebraCommonKernelArithmeticMyBoolean *b = GeogebraCommonKernelArithmeticExpressionNodeEvaluator_evalEqualsWithGeogebraCommonKernelKernel_withGeogebraCommonKernelArithmeticExpressionValue_withGeogebraCommonKernelArithmeticExpressionValue_([((GeogebraCommonKernelArithmeticExpressionNodeEvaluator *) nil_chk(ev)) getKernel], lt, rt);
  if (b == nil) {
    return [ev illegalComparisonWithGeogebraCommonKernelArithmeticExpressionValue:lt withGeogebraCommonKernelArithmeticExpressionValue:rt withNSString:GeogebraCommonKernelArithmeticExpressionNodeConstants_get_strNOT_EQUAL_()];
  }
  [b setValueWithBoolean:![((GeogebraCommonKernelArithmeticMyBoolean *) nil_chk(b)) getBoolean]];
  return b;
}

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  GeogebraCommonPluginOperation_$2Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelStringTemplate:withBoolean:", "handle", "Lgeogebra.common.kernel.arithmetic.ExpressionValue;", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonPluginOperation_$2Enum = { 2, "", "geogebra.common.plugin", "Operation", 0xc018, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonPluginOperation_$2Enum;
}

@end

void GeogebraCommonPluginOperation_$2Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$2Enum *self, NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperationEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

GeogebraCommonPluginOperation_$2Enum *new_GeogebraCommonPluginOperation_$2Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperation_$2Enum *self = [GeogebraCommonPluginOperation_$2Enum alloc];
  GeogebraCommonPluginOperation_$2Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonPluginOperation_$2Enum)

@implementation GeogebraCommonPluginOperation_$3Enum

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX {
  if ([GeogebraCommonKernelArithmeticBooleanValue_class_() isInstance:lt]) {
    GeogebraCommonKernelArithmeticMyBoolean *bool_ = [((id<GeogebraCommonKernelArithmeticBooleanValue>) nil_chk(((id<GeogebraCommonKernelArithmeticBooleanValue>) check_protocol_cast(lt, @protocol(GeogebraCommonKernelArithmeticBooleanValue))))) getMyBoolean];
    [bool_ setValueWithBoolean:![((GeogebraCommonKernelArithmeticMyBoolean *) nil_chk(bool_)) getBoolean]];
    return bool_;
  }
  return [((GeogebraCommonKernelArithmeticExpressionNodeEvaluator *) nil_chk(ev)) illegalBooleanWithGeogebraCommonKernelArithmeticExpressionValue:lt withNSString:GeogebraCommonKernelArithmeticExpressionNodeConstants_get_strNOT_()];
}

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  GeogebraCommonPluginOperation_$3Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelStringTemplate:withBoolean:", "handle", "Lgeogebra.common.kernel.arithmetic.ExpressionValue;", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonPluginOperation_$3Enum = { 2, "", "geogebra.common.plugin", "Operation", 0xc018, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonPluginOperation_$3Enum;
}

@end

void GeogebraCommonPluginOperation_$3Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$3Enum *self, NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperationEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

GeogebraCommonPluginOperation_$3Enum *new_GeogebraCommonPluginOperation_$3Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperation_$3Enum *self = [GeogebraCommonPluginOperation_$3Enum alloc];
  GeogebraCommonPluginOperation_$3Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonPluginOperation_$3Enum)

@implementation GeogebraCommonPluginOperation_$4Enum

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX {
  if ([GeogebraCommonKernelArithmeticBooleanValue_class_() isInstance:lt] && [GeogebraCommonKernelArithmeticBooleanValue_class_() isInstance:rt]) {
    GeogebraCommonKernelArithmeticMyBoolean *bool_ = [((id<GeogebraCommonKernelArithmeticBooleanValue>) nil_chk(((id<GeogebraCommonKernelArithmeticBooleanValue>) check_protocol_cast(lt, @protocol(GeogebraCommonKernelArithmeticBooleanValue))))) getMyBoolean];
    [bool_ setValueWithBoolean:[((GeogebraCommonKernelArithmeticMyBoolean *) nil_chk(bool_)) getBoolean] || [((id<GeogebraCommonKernelArithmeticBooleanValue>) nil_chk(((id<GeogebraCommonKernelArithmeticBooleanValue>) check_protocol_cast(rt, @protocol(GeogebraCommonKernelArithmeticBooleanValue))))) getBoolean]];
    return bool_;
  }
  return [((GeogebraCommonKernelArithmeticExpressionNodeEvaluator *) nil_chk(ev)) illegalBinaryWithGeogebraCommonKernelArithmeticExpressionValue:lt withGeogebraCommonKernelArithmeticExpressionValue:rt withNSString:@"IllegalBoolean" withNSString:GeogebraCommonKernelArithmeticExpressionNodeConstants_get_strNOT_()];
}

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  GeogebraCommonPluginOperation_$4Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelStringTemplate:withBoolean:", "handle", "Lgeogebra.common.kernel.arithmetic.ExpressionValue;", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonPluginOperation_$4Enum = { 2, "", "geogebra.common.plugin", "Operation", 0xc018, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonPluginOperation_$4Enum;
}

@end

void GeogebraCommonPluginOperation_$4Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$4Enum *self, NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperationEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

GeogebraCommonPluginOperation_$4Enum *new_GeogebraCommonPluginOperation_$4Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperation_$4Enum *self = [GeogebraCommonPluginOperation_$4Enum alloc];
  GeogebraCommonPluginOperation_$4Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonPluginOperation_$4Enum)

@implementation GeogebraCommonPluginOperation_$5Enum

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX {
  if ([GeogebraCommonKernelArithmeticBooleanValue_class_() isInstance:lt] && [GeogebraCommonKernelArithmeticBooleanValue_class_() isInstance:rt]) {
    GeogebraCommonKernelArithmeticMyBoolean *bool_ = [((id<GeogebraCommonKernelArithmeticBooleanValue>) nil_chk(((id<GeogebraCommonKernelArithmeticBooleanValue>) check_protocol_cast(lt, @protocol(GeogebraCommonKernelArithmeticBooleanValue))))) getMyBoolean];
    [bool_ setValueWithBoolean:[((GeogebraCommonKernelArithmeticMyBoolean *) nil_chk(bool_)) getBoolean] && [((id<GeogebraCommonKernelArithmeticBooleanValue>) nil_chk(((id<GeogebraCommonKernelArithmeticBooleanValue>) check_protocol_cast(rt, @protocol(GeogebraCommonKernelArithmeticBooleanValue))))) getBoolean]];
    return bool_;
  }
  return [((GeogebraCommonKernelArithmeticExpressionNodeEvaluator *) nil_chk(ev)) illegalBinaryWithGeogebraCommonKernelArithmeticExpressionValue:lt withGeogebraCommonKernelArithmeticExpressionValue:rt withNSString:@"IllegalBoolean" withNSString:GeogebraCommonKernelArithmeticExpressionNodeConstants_get_strNOT_()];
}

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  GeogebraCommonPluginOperation_$5Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelStringTemplate:withBoolean:", "handle", "Lgeogebra.common.kernel.arithmetic.ExpressionValue;", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonPluginOperation_$5Enum = { 2, "", "geogebra.common.plugin", "Operation", 0xc018, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonPluginOperation_$5Enum;
}

@end

void GeogebraCommonPluginOperation_$5Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$5Enum *self, NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperationEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

GeogebraCommonPluginOperation_$5Enum *new_GeogebraCommonPluginOperation_$5Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperation_$5Enum *self = [GeogebraCommonPluginOperation_$5Enum alloc];
  GeogebraCommonPluginOperation_$5Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonPluginOperation_$5Enum)

@implementation GeogebraCommonPluginOperation_$6Enum

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX {
  return [((GeogebraCommonPluginOperationEnum *) nil_chk(GeogebraCommonPluginOperationEnum_get_AND())) handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:ev withGeogebraCommonKernelArithmeticExpressionValue:lt withGeogebraCommonKernelArithmeticExpressionValue:rt withGeogebraCommonKernelArithmeticExpressionValue:left withGeogebraCommonKernelArithmeticExpressionValue:right withGeogebraCommonKernelStringTemplate:tpl withBoolean:holdsLaTeX];
}

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  GeogebraCommonPluginOperation_$6Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelStringTemplate:withBoolean:", "handle", "Lgeogebra.common.kernel.arithmetic.ExpressionValue;", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonPluginOperation_$6Enum = { 2, "", "geogebra.common.plugin", "Operation", 0xc018, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonPluginOperation_$6Enum;
}

@end

void GeogebraCommonPluginOperation_$6Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$6Enum *self, NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperationEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

GeogebraCommonPluginOperation_$6Enum *new_GeogebraCommonPluginOperation_$6Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperation_$6Enum *self = [GeogebraCommonPluginOperation_$6Enum alloc];
  GeogebraCommonPluginOperation_$6Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonPluginOperation_$6Enum)

@implementation GeogebraCommonPluginOperation_$7Enum

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX {
  if ([GeogebraCommonKernelArithmeticBooleanValue_class_() isInstance:lt] && [GeogebraCommonKernelArithmeticBooleanValue_class_() isInstance:rt]) {
    GeogebraCommonKernelArithmeticMyBoolean *bool_ = [((id<GeogebraCommonKernelArithmeticBooleanValue>) nil_chk(((id<GeogebraCommonKernelArithmeticBooleanValue>) check_protocol_cast(lt, @protocol(GeogebraCommonKernelArithmeticBooleanValue))))) getMyBoolean];
    [bool_ setValueWithBoolean:![((GeogebraCommonKernelArithmeticMyBoolean *) nil_chk(bool_)) getBoolean] || [((id<GeogebraCommonKernelArithmeticBooleanValue>) nil_chk(((id<GeogebraCommonKernelArithmeticBooleanValue>) check_protocol_cast(rt, @protocol(GeogebraCommonKernelArithmeticBooleanValue))))) getBoolean]];
    return bool_;
  }
  return [((GeogebraCommonKernelArithmeticExpressionNodeEvaluator *) nil_chk(ev)) illegalBinaryWithGeogebraCommonKernelArithmeticExpressionValue:lt withGeogebraCommonKernelArithmeticExpressionValue:rt withNSString:@"IllegalBoolean" withNSString:GeogebraCommonKernelArithmeticExpressionNodeConstants_get_strNOT_()];
}

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  GeogebraCommonPluginOperation_$7Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelStringTemplate:withBoolean:", "handle", "Lgeogebra.common.kernel.arithmetic.ExpressionValue;", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonPluginOperation_$7Enum = { 2, "", "geogebra.common.plugin", "Operation", 0xc018, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonPluginOperation_$7Enum;
}

@end

void GeogebraCommonPluginOperation_$7Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$7Enum *self, NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperationEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

GeogebraCommonPluginOperation_$7Enum *new_GeogebraCommonPluginOperation_$7Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperation_$7Enum *self = [GeogebraCommonPluginOperation_$7Enum alloc];
  GeogebraCommonPluginOperation_$7Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonPluginOperation_$7Enum)

@implementation GeogebraCommonPluginOperation_$8Enum

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX {
  GeogebraCommonKernelArithmeticMyBoolean *b = GeogebraCommonKernelArithmeticExpressionNodeEvaluator_evalEqualsWithGeogebraCommonKernelKernel_withGeogebraCommonKernelArithmeticExpressionValue_withGeogebraCommonKernelArithmeticExpressionValue_([((GeogebraCommonKernelArithmeticExpressionNodeEvaluator *) nil_chk(ev)) getKernel], lt, rt);
  if (b == nil) {
    return [ev illegalComparisonWithGeogebraCommonKernelArithmeticExpressionValue:lt withGeogebraCommonKernelArithmeticExpressionValue:rt withNSString:GeogebraCommonKernelArithmeticExpressionNodeConstants_get_strNOT_EQUAL_()];
  }
  return b;
}

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  GeogebraCommonPluginOperation_$8Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelStringTemplate:withBoolean:", "handle", "Lgeogebra.common.kernel.arithmetic.ExpressionValue;", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonPluginOperation_$8Enum = { 2, "", "geogebra.common.plugin", "Operation", 0xc018, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonPluginOperation_$8Enum;
}

@end

void GeogebraCommonPluginOperation_$8Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$8Enum *self, NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperationEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

GeogebraCommonPluginOperation_$8Enum *new_GeogebraCommonPluginOperation_$8Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperation_$8Enum *self = [GeogebraCommonPluginOperation_$8Enum alloc];
  GeogebraCommonPluginOperation_$8Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonPluginOperation_$8Enum)

@implementation GeogebraCommonPluginOperation_$9Enum

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX {
  if ([GeogebraCommonKernelArithmeticNumberValue_class_() isInstance:lt] && [GeogebraCommonKernelArithmeticNumberValue_class_() isInstance:rt]) {
    return [new_GeogebraCommonKernelArithmeticMyBoolean_initWithGeogebraCommonKernelKernel_withBoolean_([((GeogebraCommonKernelArithmeticExpressionNodeEvaluator *) nil_chk(ev)) getKernel], GeogebraCommonKernelKernel_isGreaterWithDouble_withDouble_([((id<GeogebraCommonKernelArithmeticNumberValue>) nil_chk(((id<GeogebraCommonKernelArithmeticNumberValue>) check_protocol_cast(rt, @protocol(GeogebraCommonKernelArithmeticNumberValue))))) getDouble], [((id<GeogebraCommonKernelArithmeticNumberValue>) nil_chk(((id<GeogebraCommonKernelArithmeticNumberValue>) check_protocol_cast(lt, @protocol(GeogebraCommonKernelArithmeticNumberValue))))) getDouble])) autorelease];
  }
  if ([GeogebraCommonKernelArithmeticTextValue_class_() isInstance:lt] && [GeogebraCommonKernelArithmeticTextValue_class_() isInstance:rt]) {
    jint comp = [((NSString *) nil_chk([((id<GeogebraCommonKernelArithmeticTextValue>) nil_chk(((id<GeogebraCommonKernelArithmeticTextValue>) check_protocol_cast(lt, @protocol(GeogebraCommonKernelArithmeticTextValue))))) toValueStringWithGeogebraCommonKernelStringTemplate:tpl])) compareToWithId:[((id<GeogebraCommonKernelArithmeticTextValue>) nil_chk(((id<GeogebraCommonKernelArithmeticTextValue>) check_protocol_cast(rt, @protocol(GeogebraCommonKernelArithmeticTextValue))))) toValueStringWithGeogebraCommonKernelStringTemplate:tpl]];
    return [new_GeogebraCommonKernelArithmeticMyBoolean_initWithGeogebraCommonKernelKernel_withBoolean_([((GeogebraCommonKernelArithmeticExpressionNodeEvaluator *) nil_chk(ev)) getKernel], comp < 0) autorelease];
  }
  return [((GeogebraCommonKernelArithmeticExpressionNodeEvaluator *) nil_chk(ev)) illegalComparisonWithGeogebraCommonKernelArithmeticExpressionValue:lt withGeogebraCommonKernelArithmeticExpressionValue:rt withNSString:@"<"];
}

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  GeogebraCommonPluginOperation_$9Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelStringTemplate:withBoolean:", "handle", "Lgeogebra.common.kernel.arithmetic.ExpressionValue;", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonPluginOperation_$9Enum = { 2, "", "geogebra.common.plugin", "Operation", 0xc018, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonPluginOperation_$9Enum;
}

@end

void GeogebraCommonPluginOperation_$9Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$9Enum *self, NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperationEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

GeogebraCommonPluginOperation_$9Enum *new_GeogebraCommonPluginOperation_$9Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperation_$9Enum *self = [GeogebraCommonPluginOperation_$9Enum alloc];
  GeogebraCommonPluginOperation_$9Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonPluginOperation_$9Enum)

@implementation GeogebraCommonPluginOperation_$10Enum

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX {
  if ([GeogebraCommonKernelArithmeticNumberValue_class_() isInstance:lt] && [GeogebraCommonKernelArithmeticNumberValue_class_() isInstance:rt]) {
    return [new_GeogebraCommonKernelArithmeticMyBoolean_initWithGeogebraCommonKernelKernel_withBoolean_([((GeogebraCommonKernelArithmeticExpressionNodeEvaluator *) nil_chk(ev)) getKernel], GeogebraCommonKernelKernel_isGreaterWithDouble_withDouble_([((id<GeogebraCommonKernelArithmeticNumberValue>) nil_chk(((id<GeogebraCommonKernelArithmeticNumberValue>) check_protocol_cast(lt, @protocol(GeogebraCommonKernelArithmeticNumberValue))))) getDouble], [((id<GeogebraCommonKernelArithmeticNumberValue>) nil_chk(((id<GeogebraCommonKernelArithmeticNumberValue>) check_protocol_cast(rt, @protocol(GeogebraCommonKernelArithmeticNumberValue))))) getDouble])) autorelease];
  }
  if ([GeogebraCommonKernelArithmeticTextValue_class_() isInstance:lt] && [GeogebraCommonKernelArithmeticTextValue_class_() isInstance:rt]) {
    jint comp = [((NSString *) nil_chk([((id<GeogebraCommonKernelArithmeticTextValue>) nil_chk(((id<GeogebraCommonKernelArithmeticTextValue>) check_protocol_cast(lt, @protocol(GeogebraCommonKernelArithmeticTextValue))))) toValueStringWithGeogebraCommonKernelStringTemplate:tpl])) compareToWithId:[((id<GeogebraCommonKernelArithmeticTextValue>) nil_chk(((id<GeogebraCommonKernelArithmeticTextValue>) check_protocol_cast(rt, @protocol(GeogebraCommonKernelArithmeticTextValue))))) toValueStringWithGeogebraCommonKernelStringTemplate:tpl]];
    return [new_GeogebraCommonKernelArithmeticMyBoolean_initWithGeogebraCommonKernelKernel_withBoolean_([((GeogebraCommonKernelArithmeticExpressionNodeEvaluator *) nil_chk(ev)) getKernel], comp > 0) autorelease];
  }
  return [((GeogebraCommonKernelArithmeticExpressionNodeEvaluator *) nil_chk(ev)) illegalComparisonWithGeogebraCommonKernelArithmeticExpressionValue:lt withGeogebraCommonKernelArithmeticExpressionValue:rt withNSString:@">"];
}

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  GeogebraCommonPluginOperation_$10Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelStringTemplate:withBoolean:", "handle", "Lgeogebra.common.kernel.arithmetic.ExpressionValue;", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonPluginOperation_$10Enum = { 2, "", "geogebra.common.plugin", "Operation", 0xc018, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonPluginOperation_$10Enum;
}

@end

void GeogebraCommonPluginOperation_$10Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$10Enum *self, NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperationEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

GeogebraCommonPluginOperation_$10Enum *new_GeogebraCommonPluginOperation_$10Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperation_$10Enum *self = [GeogebraCommonPluginOperation_$10Enum alloc];
  GeogebraCommonPluginOperation_$10Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonPluginOperation_$10Enum)

@implementation GeogebraCommonPluginOperation_$11Enum

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX {
  if ([GeogebraCommonKernelArithmeticNumberValue_class_() isInstance:lt] && [GeogebraCommonKernelArithmeticNumberValue_class_() isInstance:rt]) {
    return [new_GeogebraCommonKernelArithmeticMyBoolean_initWithGeogebraCommonKernelKernel_withBoolean_([((GeogebraCommonKernelArithmeticExpressionNodeEvaluator *) nil_chk(ev)) getKernel], GeogebraCommonKernelKernel_isGreaterEqualWithDouble_withDouble_([((id<GeogebraCommonKernelArithmeticNumberValue>) nil_chk(((id<GeogebraCommonKernelArithmeticNumberValue>) check_protocol_cast(rt, @protocol(GeogebraCommonKernelArithmeticNumberValue))))) getDouble], [((id<GeogebraCommonKernelArithmeticNumberValue>) nil_chk(((id<GeogebraCommonKernelArithmeticNumberValue>) check_protocol_cast(lt, @protocol(GeogebraCommonKernelArithmeticNumberValue))))) getDouble])) autorelease];
  }
  if ([GeogebraCommonKernelArithmeticTextValue_class_() isInstance:lt] && [GeogebraCommonKernelArithmeticTextValue_class_() isInstance:rt]) {
    jint comp = [((NSString *) nil_chk([((id<GeogebraCommonKernelArithmeticTextValue>) nil_chk(((id<GeogebraCommonKernelArithmeticTextValue>) check_protocol_cast(lt, @protocol(GeogebraCommonKernelArithmeticTextValue))))) toValueStringWithGeogebraCommonKernelStringTemplate:tpl])) compareToWithId:[((id<GeogebraCommonKernelArithmeticTextValue>) nil_chk(((id<GeogebraCommonKernelArithmeticTextValue>) check_protocol_cast(rt, @protocol(GeogebraCommonKernelArithmeticTextValue))))) toValueStringWithGeogebraCommonKernelStringTemplate:tpl]];
    return [new_GeogebraCommonKernelArithmeticMyBoolean_initWithGeogebraCommonKernelKernel_withBoolean_([((GeogebraCommonKernelArithmeticExpressionNodeEvaluator *) nil_chk(ev)) getKernel], comp <= 0) autorelease];
  }
  return [((GeogebraCommonKernelArithmeticExpressionNodeEvaluator *) nil_chk(ev)) illegalComparisonWithGeogebraCommonKernelArithmeticExpressionValue:lt withGeogebraCommonKernelArithmeticExpressionValue:rt withNSString:GeogebraCommonKernelArithmeticExpressionNodeConstants_get_strLESS_EQUAL_()];
}

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  GeogebraCommonPluginOperation_$11Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelStringTemplate:withBoolean:", "handle", "Lgeogebra.common.kernel.arithmetic.ExpressionValue;", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonPluginOperation_$11Enum = { 2, "", "geogebra.common.plugin", "Operation", 0xc018, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonPluginOperation_$11Enum;
}

@end

void GeogebraCommonPluginOperation_$11Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$11Enum *self, NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperationEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

GeogebraCommonPluginOperation_$11Enum *new_GeogebraCommonPluginOperation_$11Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperation_$11Enum *self = [GeogebraCommonPluginOperation_$11Enum alloc];
  GeogebraCommonPluginOperation_$11Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonPluginOperation_$11Enum)

@implementation GeogebraCommonPluginOperation_$12Enum

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX {
  if ([GeogebraCommonKernelArithmeticNumberValue_class_() isInstance:lt] && [GeogebraCommonKernelArithmeticNumberValue_class_() isInstance:rt]) {
    return [new_GeogebraCommonKernelArithmeticMyBoolean_initWithGeogebraCommonKernelKernel_withBoolean_([((GeogebraCommonKernelArithmeticExpressionNodeEvaluator *) nil_chk(ev)) getKernel], GeogebraCommonKernelKernel_isGreaterEqualWithDouble_withDouble_([((id<GeogebraCommonKernelArithmeticNumberValue>) nil_chk(((id<GeogebraCommonKernelArithmeticNumberValue>) check_protocol_cast(lt, @protocol(GeogebraCommonKernelArithmeticNumberValue))))) getDouble], [((id<GeogebraCommonKernelArithmeticNumberValue>) nil_chk(((id<GeogebraCommonKernelArithmeticNumberValue>) check_protocol_cast(rt, @protocol(GeogebraCommonKernelArithmeticNumberValue))))) getDouble])) autorelease];
  }
  if ([GeogebraCommonKernelArithmeticTextValue_class_() isInstance:lt] && [GeogebraCommonKernelArithmeticTextValue_class_() isInstance:rt]) {
    jint comp = [((NSString *) nil_chk([((id<GeogebraCommonKernelArithmeticTextValue>) nil_chk(((id<GeogebraCommonKernelArithmeticTextValue>) check_protocol_cast(lt, @protocol(GeogebraCommonKernelArithmeticTextValue))))) toValueStringWithGeogebraCommonKernelStringTemplate:tpl])) compareToWithId:[((id<GeogebraCommonKernelArithmeticTextValue>) nil_chk(((id<GeogebraCommonKernelArithmeticTextValue>) check_protocol_cast(rt, @protocol(GeogebraCommonKernelArithmeticTextValue))))) toValueStringWithGeogebraCommonKernelStringTemplate:tpl]];
    return [new_GeogebraCommonKernelArithmeticMyBoolean_initWithGeogebraCommonKernelKernel_withBoolean_([((GeogebraCommonKernelArithmeticExpressionNodeEvaluator *) nil_chk(ev)) getKernel], comp >= 0) autorelease];
  }
  return [((GeogebraCommonKernelArithmeticExpressionNodeEvaluator *) nil_chk(ev)) illegalComparisonWithGeogebraCommonKernelArithmeticExpressionValue:lt withGeogebraCommonKernelArithmeticExpressionValue:rt withNSString:GeogebraCommonKernelArithmeticExpressionNodeConstants_get_strGREATER_EQUAL_()];
}

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  GeogebraCommonPluginOperation_$12Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelStringTemplate:withBoolean:", "handle", "Lgeogebra.common.kernel.arithmetic.ExpressionValue;", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonPluginOperation_$12Enum = { 2, "", "geogebra.common.plugin", "Operation", 0xc018, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonPluginOperation_$12Enum;
}

@end

void GeogebraCommonPluginOperation_$12Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$12Enum *self, NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperationEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

GeogebraCommonPluginOperation_$12Enum *new_GeogebraCommonPluginOperation_$12Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperation_$12Enum *self = [GeogebraCommonPluginOperation_$12Enum alloc];
  GeogebraCommonPluginOperation_$12Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonPluginOperation_$12Enum)

@implementation GeogebraCommonPluginOperation_$13Enum

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX {
  if (([lt isKindOfClass:[GeogebraCommonKernelGeosGeoLine class]]) && ([rt isKindOfClass:[GeogebraCommonKernelGeosGeoLine class]])) {
    return [new_GeogebraCommonKernelArithmeticMyBoolean_initWithGeogebraCommonKernelKernel_withBoolean_([((GeogebraCommonKernelArithmeticExpressionNodeEvaluator *) nil_chk(ev)) getKernel], [((GeogebraCommonKernelGeosGeoLine *) nil_chk(((GeogebraCommonKernelGeosGeoLine *) check_class_cast(lt, [GeogebraCommonKernelGeosGeoLine class])))) isParallelWithGeogebraCommonKernelGeosGeoLine:(GeogebraCommonKernelGeosGeoLine *) check_class_cast(rt, [GeogebraCommonKernelGeosGeoLine class])]) autorelease];
  }
  return [((GeogebraCommonKernelArithmeticExpressionNodeEvaluator *) nil_chk(ev)) illegalComparisonWithGeogebraCommonKernelArithmeticExpressionValue:lt withGeogebraCommonKernelArithmeticExpressionValue:rt withNSString:GeogebraCommonKernelArithmeticExpressionNodeConstants_get_strPARALLEL_()];
}

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  GeogebraCommonPluginOperation_$13Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelStringTemplate:withBoolean:", "handle", "Lgeogebra.common.kernel.arithmetic.ExpressionValue;", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonPluginOperation_$13Enum = { 2, "", "geogebra.common.plugin", "Operation", 0xc018, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonPluginOperation_$13Enum;
}

@end

void GeogebraCommonPluginOperation_$13Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$13Enum *self, NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperationEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

GeogebraCommonPluginOperation_$13Enum *new_GeogebraCommonPluginOperation_$13Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperation_$13Enum *self = [GeogebraCommonPluginOperation_$13Enum alloc];
  GeogebraCommonPluginOperation_$13Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonPluginOperation_$13Enum)

@implementation GeogebraCommonPluginOperation_$14Enum

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX {
  if (([lt isKindOfClass:[GeogebraCommonKernelGeosGeoLine class]]) && ([rt isKindOfClass:[GeogebraCommonKernelGeosGeoLine class]])) {
    return [new_GeogebraCommonKernelArithmeticMyBoolean_initWithGeogebraCommonKernelKernel_withBoolean_([((GeogebraCommonKernelArithmeticExpressionNodeEvaluator *) nil_chk(ev)) getKernel], [((GeogebraCommonKernelGeosGeoLine *) nil_chk(((GeogebraCommonKernelGeosGeoLine *) check_class_cast(lt, [GeogebraCommonKernelGeosGeoLine class])))) isPerpendicularWithGeogebraCommonKernelGeosGeoLine:(GeogebraCommonKernelGeosGeoLine *) check_class_cast(rt, [GeogebraCommonKernelGeosGeoLine class])]) autorelease];
  }
  return [((GeogebraCommonKernelArithmeticExpressionNodeEvaluator *) nil_chk(ev)) illegalComparisonWithGeogebraCommonKernelArithmeticExpressionValue:lt withGeogebraCommonKernelArithmeticExpressionValue:rt withNSString:GeogebraCommonKernelArithmeticExpressionNodeConstants_get_strPERPENDICULAR_()];
}

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  GeogebraCommonPluginOperation_$14Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelStringTemplate:withBoolean:", "handle", "Lgeogebra.common.kernel.arithmetic.ExpressionValue;", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonPluginOperation_$14Enum = { 2, "", "geogebra.common.plugin", "Operation", 0xc018, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonPluginOperation_$14Enum;
}

@end

void GeogebraCommonPluginOperation_$14Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$14Enum *self, NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperationEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

GeogebraCommonPluginOperation_$14Enum *new_GeogebraCommonPluginOperation_$14Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperation_$14Enum *self = [GeogebraCommonPluginOperation_$14Enum alloc];
  GeogebraCommonPluginOperation_$14Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonPluginOperation_$14Enum)

@implementation GeogebraCommonPluginOperation_$15Enum

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX {
  if ([GeogebraCommonKernelArithmeticListValue_class_() isInstance:rt]) {
    return [new_GeogebraCommonKernelArithmeticMyBoolean_initWithGeogebraCommonKernelKernel_withBoolean_([((GeogebraCommonKernelArithmeticExpressionNodeEvaluator *) nil_chk(ev)) getKernel], GeogebraCommonKernelArithmeticMyList_isElementOfWithGeogebraCommonKernelArithmeticExpressionValue_withGeogebraCommonKernelArithmeticMyList_(lt, [((id<GeogebraCommonKernelArithmeticListValue>) nil_chk(((id<GeogebraCommonKernelArithmeticListValue>) check_protocol_cast(rt, @protocol(GeogebraCommonKernelArithmeticListValue))))) getMyList])) autorelease];
  }
  return [((GeogebraCommonKernelArithmeticExpressionNodeEvaluator *) nil_chk(ev)) illegalListOpWithGeogebraCommonKernelArithmeticExpressionValue:lt withGeogebraCommonKernelArithmeticExpressionValue:rt withNSString:GeogebraCommonKernelArithmeticExpressionNodeConstants_get_strIS_ELEMENT_OF_()];
}

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  GeogebraCommonPluginOperation_$15Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelStringTemplate:withBoolean:", "handle", "Lgeogebra.common.kernel.arithmetic.ExpressionValue;", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonPluginOperation_$15Enum = { 2, "", "geogebra.common.plugin", "Operation", 0xc018, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonPluginOperation_$15Enum;
}

@end

void GeogebraCommonPluginOperation_$15Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$15Enum *self, NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperationEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

GeogebraCommonPluginOperation_$15Enum *new_GeogebraCommonPluginOperation_$15Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperation_$15Enum *self = [GeogebraCommonPluginOperation_$15Enum alloc];
  GeogebraCommonPluginOperation_$15Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonPluginOperation_$15Enum)

@implementation GeogebraCommonPluginOperation_$16Enum

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX {
  if ([GeogebraCommonKernelArithmeticListValue_class_() isInstance:lt] && [GeogebraCommonKernelArithmeticListValue_class_() isInstance:rt]) {
    return [new_GeogebraCommonKernelArithmeticMyBoolean_initWithGeogebraCommonKernelKernel_withBoolean_([((GeogebraCommonKernelArithmeticExpressionNodeEvaluator *) nil_chk(ev)) getKernel], GeogebraCommonKernelArithmeticMyList_listContainsWithGeogebraCommonKernelArithmeticMyList_withGeogebraCommonKernelArithmeticMyList_withGeogebraCommonKernelStringTemplate_([((id<GeogebraCommonKernelArithmeticListValue>) nil_chk(((id<GeogebraCommonKernelArithmeticListValue>) check_protocol_cast(rt, @protocol(GeogebraCommonKernelArithmeticListValue))))) getMyList], [((id<GeogebraCommonKernelArithmeticListValue>) nil_chk(((id<GeogebraCommonKernelArithmeticListValue>) check_protocol_cast(lt, @protocol(GeogebraCommonKernelArithmeticListValue))))) getMyList], tpl)) autorelease];
  }
  return [((GeogebraCommonKernelArithmeticExpressionNodeEvaluator *) nil_chk(ev)) illegalListOpWithGeogebraCommonKernelArithmeticExpressionValue:lt withGeogebraCommonKernelArithmeticExpressionValue:rt withNSString:GeogebraCommonKernelArithmeticExpressionNodeConstants_get_strIS_SUBSET_OF_()];
}

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  GeogebraCommonPluginOperation_$16Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelStringTemplate:withBoolean:", "handle", "Lgeogebra.common.kernel.arithmetic.ExpressionValue;", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonPluginOperation_$16Enum = { 2, "", "geogebra.common.plugin", "Operation", 0xc018, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonPluginOperation_$16Enum;
}

@end

void GeogebraCommonPluginOperation_$16Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$16Enum *self, NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperationEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

GeogebraCommonPluginOperation_$16Enum *new_GeogebraCommonPluginOperation_$16Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperation_$16Enum *self = [GeogebraCommonPluginOperation_$16Enum alloc];
  GeogebraCommonPluginOperation_$16Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonPluginOperation_$16Enum)

@implementation GeogebraCommonPluginOperation_$17Enum

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX {
  if ([GeogebraCommonKernelArithmeticListValue_class_() isInstance:lt] && [GeogebraCommonKernelArithmeticListValue_class_() isInstance:rt]) {
    return [new_GeogebraCommonKernelArithmeticMyBoolean_initWithGeogebraCommonKernelKernel_withBoolean_([((GeogebraCommonKernelArithmeticExpressionNodeEvaluator *) nil_chk(ev)) getKernel], GeogebraCommonKernelArithmeticMyList_listContainsStrictWithGeogebraCommonKernelArithmeticMyList_withGeogebraCommonKernelArithmeticMyList_withGeogebraCommonKernelStringTemplate_([((id<GeogebraCommonKernelArithmeticListValue>) nil_chk(((id<GeogebraCommonKernelArithmeticListValue>) check_protocol_cast(rt, @protocol(GeogebraCommonKernelArithmeticListValue))))) getMyList], [((id<GeogebraCommonKernelArithmeticListValue>) nil_chk(((id<GeogebraCommonKernelArithmeticListValue>) check_protocol_cast(lt, @protocol(GeogebraCommonKernelArithmeticListValue))))) getMyList], tpl)) autorelease];
  }
  return [((GeogebraCommonKernelArithmeticExpressionNodeEvaluator *) nil_chk(ev)) illegalListOpWithGeogebraCommonKernelArithmeticExpressionValue:lt withGeogebraCommonKernelArithmeticExpressionValue:rt withNSString:GeogebraCommonKernelArithmeticExpressionNodeConstants_get_strIS_SUBSET_OF_STRICT_()];
}

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  GeogebraCommonPluginOperation_$17Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelStringTemplate:withBoolean:", "handle", "Lgeogebra.common.kernel.arithmetic.ExpressionValue;", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonPluginOperation_$17Enum = { 2, "", "geogebra.common.plugin", "Operation", 0xc018, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonPluginOperation_$17Enum;
}

@end

void GeogebraCommonPluginOperation_$17Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$17Enum *self, NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperationEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

GeogebraCommonPluginOperation_$17Enum *new_GeogebraCommonPluginOperation_$17Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperation_$17Enum *self = [GeogebraCommonPluginOperation_$17Enum alloc];
  GeogebraCommonPluginOperation_$17Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonPluginOperation_$17Enum)

@implementation GeogebraCommonPluginOperation_$18Enum

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX {
  if ([GeogebraCommonKernelArithmeticListValue_class_() isInstance:lt] && [GeogebraCommonKernelArithmeticListValue_class_() isInstance:rt]) {
    return GeogebraCommonKernelArithmeticMyList_setDifferenceWithGeogebraCommonKernelKernel_withGeogebraCommonKernelArithmeticMyList_withGeogebraCommonKernelArithmeticMyList_([((GeogebraCommonKernelArithmeticExpressionNodeEvaluator *) nil_chk(ev)) getKernel], [((id<GeogebraCommonKernelArithmeticListValue>) nil_chk(((id<GeogebraCommonKernelArithmeticListValue>) check_protocol_cast(lt, @protocol(GeogebraCommonKernelArithmeticListValue))))) getMyList], [((id<GeogebraCommonKernelArithmeticListValue>) nil_chk(((id<GeogebraCommonKernelArithmeticListValue>) check_protocol_cast(rt, @protocol(GeogebraCommonKernelArithmeticListValue))))) getMyList]);
  }
  return [((GeogebraCommonKernelArithmeticExpressionNodeEvaluator *) nil_chk(ev)) illegalListOpWithGeogebraCommonKernelArithmeticExpressionValue:lt withGeogebraCommonKernelArithmeticExpressionValue:rt withNSString:GeogebraCommonKernelArithmeticExpressionNodeConstants_get_strSET_DIFFERENCE_()];
}

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  GeogebraCommonPluginOperation_$18Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelStringTemplate:withBoolean:", "handle", "Lgeogebra.common.kernel.arithmetic.ExpressionValue;", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonPluginOperation_$18Enum = { 2, "", "geogebra.common.plugin", "Operation", 0xc018, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonPluginOperation_$18Enum;
}

@end

void GeogebraCommonPluginOperation_$18Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$18Enum *self, NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperationEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

GeogebraCommonPluginOperation_$18Enum *new_GeogebraCommonPluginOperation_$18Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperation_$18Enum *self = [GeogebraCommonPluginOperation_$18Enum alloc];
  GeogebraCommonPluginOperation_$18Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonPluginOperation_$18Enum)

@implementation GeogebraCommonPluginOperation_$19Enum

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX {
  return [((GeogebraCommonKernelArithmeticExpressionNodeEvaluator *) nil_chk(ev)) handlePlusWithGeogebraCommonKernelArithmeticExpressionValue:lt withGeogebraCommonKernelArithmeticExpressionValue:rt withGeogebraCommonKernelStringTemplate:tpl withBoolean:holdsLaTeX];
}

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  GeogebraCommonPluginOperation_$19Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelStringTemplate:withBoolean:", "handle", "Lgeogebra.common.kernel.arithmetic.ExpressionValue;", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonPluginOperation_$19Enum = { 2, "", "geogebra.common.plugin", "Operation", 0xc018, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonPluginOperation_$19Enum;
}

@end

void GeogebraCommonPluginOperation_$19Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$19Enum *self, NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperationEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

GeogebraCommonPluginOperation_$19Enum *new_GeogebraCommonPluginOperation_$19Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperation_$19Enum *self = [GeogebraCommonPluginOperation_$19Enum alloc];
  GeogebraCommonPluginOperation_$19Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonPluginOperation_$19Enum)

@implementation GeogebraCommonPluginOperation_$20Enum

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX {
  return [((GeogebraCommonKernelArithmeticExpressionNodeEvaluator *) nil_chk(ev)) handleMinusWithGeogebraCommonKernelArithmeticExpressionValue:lt withGeogebraCommonKernelArithmeticExpressionValue:rt];
}

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  GeogebraCommonPluginOperation_$20Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelStringTemplate:withBoolean:", "handle", "Lgeogebra.common.kernel.arithmetic.ExpressionValue;", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonPluginOperation_$20Enum = { 2, "", "geogebra.common.plugin", "Operation", 0xc018, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonPluginOperation_$20Enum;
}

@end

void GeogebraCommonPluginOperation_$20Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$20Enum *self, NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperationEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

GeogebraCommonPluginOperation_$20Enum *new_GeogebraCommonPluginOperation_$20Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperation_$20Enum *self = [GeogebraCommonPluginOperation_$20Enum alloc];
  GeogebraCommonPluginOperation_$20Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonPluginOperation_$20Enum)

@implementation GeogebraCommonPluginOperation_$21Enum

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX {
  return [((GeogebraCommonKernelArithmeticExpressionNodeEvaluator *) nil_chk(ev)) handleVectorProductWithGeogebraCommonKernelArithmeticExpressionValue:lt withGeogebraCommonKernelArithmeticExpressionValue:rt withGeogebraCommonKernelStringTemplate:tpl withBoolean:holdsLaTeX];
}

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  GeogebraCommonPluginOperation_$21Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelStringTemplate:withBoolean:", "handle", "Lgeogebra.common.kernel.arithmetic.ExpressionValue;", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonPluginOperation_$21Enum = { 2, "", "geogebra.common.plugin", "Operation", 0xc018, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonPluginOperation_$21Enum;
}

@end

void GeogebraCommonPluginOperation_$21Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$21Enum *self, NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperationEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

GeogebraCommonPluginOperation_$21Enum *new_GeogebraCommonPluginOperation_$21Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperation_$21Enum *self = [GeogebraCommonPluginOperation_$21Enum alloc];
  GeogebraCommonPluginOperation_$21Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonPluginOperation_$21Enum)

@implementation GeogebraCommonPluginOperation_$22Enum

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX {
  return [((GeogebraCommonKernelArithmeticExpressionNodeEvaluator *) nil_chk(ev)) handleMultWithGeogebraCommonKernelArithmeticExpressionValue:lt withGeogebraCommonKernelArithmeticExpressionValue:rt withGeogebraCommonKernelStringTemplate:tpl withBoolean:holdsLaTeX];
}

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  GeogebraCommonPluginOperation_$22Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelStringTemplate:withBoolean:", "handle", "Lgeogebra.common.kernel.arithmetic.ExpressionValue;", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonPluginOperation_$22Enum = { 2, "", "geogebra.common.plugin", "Operation", 0xc018, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonPluginOperation_$22Enum;
}

@end

void GeogebraCommonPluginOperation_$22Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$22Enum *self, NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperationEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

GeogebraCommonPluginOperation_$22Enum *new_GeogebraCommonPluginOperation_$22Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperation_$22Enum *self = [GeogebraCommonPluginOperation_$22Enum alloc];
  GeogebraCommonPluginOperation_$22Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonPluginOperation_$22Enum)

@implementation GeogebraCommonPluginOperation_$23Enum

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX {
  return [((GeogebraCommonKernelArithmeticExpressionNodeEvaluator *) nil_chk(ev)) handleMultWithGeogebraCommonKernelArithmeticExpressionValue:lt withGeogebraCommonKernelArithmeticExpressionValue:rt withGeogebraCommonKernelStringTemplate:tpl withBoolean:holdsLaTeX];
}

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  GeogebraCommonPluginOperation_$23Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelStringTemplate:withBoolean:", "handle", "Lgeogebra.common.kernel.arithmetic.ExpressionValue;", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonPluginOperation_$23Enum = { 2, "", "geogebra.common.plugin", "Operation", 0xc018, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonPluginOperation_$23Enum;
}

@end

void GeogebraCommonPluginOperation_$23Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$23Enum *self, NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperationEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

GeogebraCommonPluginOperation_$23Enum *new_GeogebraCommonPluginOperation_$23Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperation_$23Enum *self = [GeogebraCommonPluginOperation_$23Enum alloc];
  GeogebraCommonPluginOperation_$23Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonPluginOperation_$23Enum)

@implementation GeogebraCommonPluginOperation_$24Enum

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX {
  return [((GeogebraCommonKernelArithmeticExpressionNodeEvaluator *) nil_chk(ev)) handleDivideWithGeogebraCommonKernelArithmeticExpressionValue:lt withGeogebraCommonKernelArithmeticExpressionValue:rt withGeogebraCommonKernelArithmeticExpressionValue:left withGeogebraCommonKernelArithmeticExpressionValue:right];
}

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  GeogebraCommonPluginOperation_$24Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelStringTemplate:withBoolean:", "handle", "Lgeogebra.common.kernel.arithmetic.ExpressionValue;", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonPluginOperation_$24Enum = { 2, "", "geogebra.common.plugin", "Operation", 0xc018, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonPluginOperation_$24Enum;
}

@end

void GeogebraCommonPluginOperation_$24Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$24Enum *self, NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperationEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

GeogebraCommonPluginOperation_$24Enum *new_GeogebraCommonPluginOperation_$24Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperation_$24Enum *self = [GeogebraCommonPluginOperation_$24Enum alloc];
  GeogebraCommonPluginOperation_$24Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonPluginOperation_$24Enum)

@implementation GeogebraCommonPluginOperation_$25Enum

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX {
  return [((GeogebraCommonKernelArithmeticExpressionNodeEvaluator *) nil_chk(ev)) handlePowerWithGeogebraCommonKernelArithmeticExpressionValue:lt withGeogebraCommonKernelArithmeticExpressionValue:rt withGeogebraCommonKernelArithmeticExpressionValue:right];
}

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  GeogebraCommonPluginOperation_$25Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelStringTemplate:withBoolean:", "handle", "Lgeogebra.common.kernel.arithmetic.ExpressionValue;", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonPluginOperation_$25Enum = { 2, "", "geogebra.common.plugin", "Operation", 0xc018, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonPluginOperation_$25Enum;
}

@end

void GeogebraCommonPluginOperation_$25Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$25Enum *self, NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperationEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

GeogebraCommonPluginOperation_$25Enum *new_GeogebraCommonPluginOperation_$25Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperation_$25Enum *self = [GeogebraCommonPluginOperation_$25Enum alloc];
  GeogebraCommonPluginOperation_$25Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonPluginOperation_$25Enum)

@implementation GeogebraCommonPluginOperation_$26Enum

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX {
  if ([GeogebraCommonKernelArithmeticNumberValue_class_() isInstance:lt] && [GeogebraCommonKernelArithmeticListValue_class_() isInstance:rt]) {
    jdouble x = [((id<GeogebraCommonKernelArithmeticNumberValue>) nil_chk(((id<GeogebraCommonKernelArithmeticNumberValue>) check_protocol_cast(lt, @protocol(GeogebraCommonKernelArithmeticNumberValue))))) getDouble];
    jdouble ret = JavaLangDouble_NaN;
    if ([((id<GeogebraCommonKernelArithmeticExpressionValue>) nil_chk(rt)) isGeoElement]) {
      GeogebraCommonKernelGeosGeoList *list = (GeogebraCommonKernelGeosGeoList *) check_class_cast(rt, [GeogebraCommonKernelGeosGeoList class]);
      jint n = [list size] - 3;
      if ((n >= 1) && [((GeogebraCommonPluginGeoClassEnum *) nil_chk([list getElementType])) isEqual:GeogebraCommonPluginGeoClassEnum_get_NUMERIC()]) {
        jdouble min = [((id<GeogebraCommonKernelArithmeticNumberValue>) nil_chk(((id<GeogebraCommonKernelArithmeticNumberValue>) check_protocol_cast(([list getWithInt:0]), @protocol(GeogebraCommonKernelArithmeticNumberValue))))) getDouble];
        jdouble max = [((id<GeogebraCommonKernelArithmeticNumberValue>) nil_chk(((id<GeogebraCommonKernelArithmeticNumberValue>) check_protocol_cast(([list getWithInt:1]), @protocol(GeogebraCommonKernelArithmeticNumberValue))))) getDouble];
        if ((min > max) || (x > max) || (x < min)) {
          return [new_GeogebraCommonKernelArithmeticMyDouble_initWithGeogebraCommonKernelKernel_withDouble_([((GeogebraCommonKernelArithmeticExpressionNodeEvaluator *) nil_chk(ev)) getKernel], JavaLangDouble_NaN) autorelease];
        }
        jdouble step = (max - min) / n;
        jint index = J2ObjCFpToInt(JavaLangMath_floorWithDouble_((x - min) / step));
        if (index > (n - 1)) {
          ret = [((id<GeogebraCommonKernelArithmeticNumberValue>) nil_chk(((id<GeogebraCommonKernelArithmeticNumberValue>) check_protocol_cast(([list getWithInt:n + 2]), @protocol(GeogebraCommonKernelArithmeticNumberValue))))) getDouble];
        }
        else {
          jdouble y1 = [((id<GeogebraCommonKernelArithmeticNumberValue>) nil_chk(((id<GeogebraCommonKernelArithmeticNumberValue>) check_protocol_cast(([list getWithInt:index + 2]), @protocol(GeogebraCommonKernelArithmeticNumberValue))))) getDouble];
          jdouble y2 = [((id<GeogebraCommonKernelArithmeticNumberValue>) nil_chk(((id<GeogebraCommonKernelArithmeticNumberValue>) check_protocol_cast(([list getWithInt:index + 3]), @protocol(GeogebraCommonKernelArithmeticNumberValue))))) getDouble];
          jdouble x1 = min + (index * step);
          ret = y1 + (((x - x1) * (y2 - y1)) / step);
        }
      }
    }
    return [new_GeogebraCommonKernelArithmeticMyDouble_initWithGeogebraCommonKernelKernel_withDouble_([((GeogebraCommonKernelArithmeticExpressionNodeEvaluator *) nil_chk(ev)) getKernel], ret) autorelease];
  }
  return [((GeogebraCommonKernelArithmeticExpressionNodeEvaluator *) nil_chk(ev)) illegalArgumentWithGeogebraCommonKernelArithmeticExpressionValue:lt withGeogebraCommonKernelArithmeticExpressionValue:rt withNSString:@"freehand("];
}

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  GeogebraCommonPluginOperation_$26Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelStringTemplate:withBoolean:", "handle", "Lgeogebra.common.kernel.arithmetic.ExpressionValue;", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonPluginOperation_$26Enum = { 2, "", "geogebra.common.plugin", "Operation", 0xc018, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonPluginOperation_$26Enum;
}

@end

void GeogebraCommonPluginOperation_$26Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$26Enum *self, NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperationEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

GeogebraCommonPluginOperation_$26Enum *new_GeogebraCommonPluginOperation_$26Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperation_$26Enum *self = [GeogebraCommonPluginOperation_$26Enum alloc];
  GeogebraCommonPluginOperation_$26Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonPluginOperation_$26Enum)

@implementation GeogebraCommonPluginOperation_$27Enum

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX {
  if ([GeogebraCommonKernelArithmeticNumberValue_class_() isInstance:lt]) {
    return [((GeogebraCommonKernelArithmeticMyDouble *) nil_chk([((id<GeogebraCommonKernelArithmeticNumberValue>) nil_chk(((id<GeogebraCommonKernelArithmeticNumberValue>) check_protocol_cast(lt, @protocol(GeogebraCommonKernelArithmeticNumberValue))))) getNumber])) cos];
  }
  else if ([GeogebraCommonKernelArithmeticVectorValue_class_() isInstance:lt]) {
    GeogebraCommonKernelGeosGeoVec2D *vec = [((id<GeogebraCommonKernelArithmeticVectorValue>) nil_chk(((id<GeogebraCommonKernelArithmeticVectorValue>) check_protocol_cast(lt, @protocol(GeogebraCommonKernelArithmeticVectorValue))))) getVector];
    GeogebraCommonKernelGeosGeoVec2D_complexCosWithGeogebraCommonKernelGeosGeoVec2D_withGeogebraCommonKernelGeosGeoVec2D_(vec, vec);
    return vec;
  }
  return [((GeogebraCommonKernelArithmeticExpressionNodeEvaluator *) nil_chk(ev)) polynomialOrDieWithGeogebraCommonKernelArithmeticExpressionValue:lt withGeogebraCommonPluginOperationEnum:self withNSString:@"cos("];
}

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  GeogebraCommonPluginOperation_$27Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelStringTemplate:withBoolean:", "handle", "Lgeogebra.common.kernel.arithmetic.ExpressionValue;", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonPluginOperation_$27Enum = { 2, "", "geogebra.common.plugin", "Operation", 0xc018, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonPluginOperation_$27Enum;
}

@end

void GeogebraCommonPluginOperation_$27Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$27Enum *self, NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperationEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

GeogebraCommonPluginOperation_$27Enum *new_GeogebraCommonPluginOperation_$27Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperation_$27Enum *self = [GeogebraCommonPluginOperation_$27Enum alloc];
  GeogebraCommonPluginOperation_$27Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonPluginOperation_$27Enum)

@implementation GeogebraCommonPluginOperation_$28Enum

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX {
  if ([GeogebraCommonKernelArithmeticNumberValue_class_() isInstance:lt]) {
    return [((GeogebraCommonKernelArithmeticMyDouble *) nil_chk([((id<GeogebraCommonKernelArithmeticNumberValue>) nil_chk(((id<GeogebraCommonKernelArithmeticNumberValue>) check_protocol_cast(lt, @protocol(GeogebraCommonKernelArithmeticNumberValue))))) getNumber])) sin];
  }
  else if ([GeogebraCommonKernelArithmeticVectorValue_class_() isInstance:lt]) {
    GeogebraCommonKernelGeosGeoVec2D *vec = [((id<GeogebraCommonKernelArithmeticVectorValue>) nil_chk(((id<GeogebraCommonKernelArithmeticVectorValue>) check_protocol_cast(lt, @protocol(GeogebraCommonKernelArithmeticVectorValue))))) getVector];
    GeogebraCommonKernelGeosGeoVec2D_complexSinWithGeogebraCommonKernelGeosGeoVec2D_withGeogebraCommonKernelGeosGeoVec2D_(vec, vec);
    return vec;
  }
  return [((GeogebraCommonKernelArithmeticExpressionNodeEvaluator *) nil_chk(ev)) polynomialOrDieWithGeogebraCommonKernelArithmeticExpressionValue:lt withGeogebraCommonPluginOperationEnum:self withNSString:@"sin("];
}

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  GeogebraCommonPluginOperation_$28Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelStringTemplate:withBoolean:", "handle", "Lgeogebra.common.kernel.arithmetic.ExpressionValue;", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonPluginOperation_$28Enum = { 2, "", "geogebra.common.plugin", "Operation", 0xc018, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonPluginOperation_$28Enum;
}

@end

void GeogebraCommonPluginOperation_$28Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$28Enum *self, NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperationEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

GeogebraCommonPluginOperation_$28Enum *new_GeogebraCommonPluginOperation_$28Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperation_$28Enum *self = [GeogebraCommonPluginOperation_$28Enum alloc];
  GeogebraCommonPluginOperation_$28Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonPluginOperation_$28Enum)

@implementation GeogebraCommonPluginOperation_$29Enum

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX {
  if ([GeogebraCommonKernelArithmeticNumberValue_class_() isInstance:lt]) {
    return [((GeogebraCommonKernelArithmeticMyDouble *) nil_chk([((id<GeogebraCommonKernelArithmeticNumberValue>) nil_chk(((id<GeogebraCommonKernelArithmeticNumberValue>) check_protocol_cast(lt, @protocol(GeogebraCommonKernelArithmeticNumberValue))))) getNumber])) tan];
  }
  else if ([GeogebraCommonKernelArithmeticVectorValue_class_() isInstance:lt]) {
    GeogebraCommonKernelGeosGeoVec2D *vec = [((id<GeogebraCommonKernelArithmeticVectorValue>) nil_chk(((id<GeogebraCommonKernelArithmeticVectorValue>) check_protocol_cast(lt, @protocol(GeogebraCommonKernelArithmeticVectorValue))))) getVector];
    GeogebraCommonKernelGeosGeoVec2D_complexTanWithGeogebraCommonKernelGeosGeoVec2D_withGeogebraCommonKernelGeosGeoVec2D_(vec, vec);
    return vec;
  }
  return [((GeogebraCommonKernelArithmeticExpressionNodeEvaluator *) nil_chk(ev)) polynomialOrDieWithGeogebraCommonKernelArithmeticExpressionValue:lt withGeogebraCommonPluginOperationEnum:self withNSString:@"tan("];
}

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  GeogebraCommonPluginOperation_$29Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelStringTemplate:withBoolean:", "handle", "Lgeogebra.common.kernel.arithmetic.ExpressionValue;", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonPluginOperation_$29Enum = { 2, "", "geogebra.common.plugin", "Operation", 0xc018, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonPluginOperation_$29Enum;
}

@end

void GeogebraCommonPluginOperation_$29Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$29Enum *self, NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperationEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

GeogebraCommonPluginOperation_$29Enum *new_GeogebraCommonPluginOperation_$29Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperation_$29Enum *self = [GeogebraCommonPluginOperation_$29Enum alloc];
  GeogebraCommonPluginOperation_$29Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonPluginOperation_$29Enum)

@implementation GeogebraCommonPluginOperation_$30Enum

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX {
  if ([GeogebraCommonKernelArithmeticNumberValue_class_() isInstance:lt]) {
    return [((GeogebraCommonKernelArithmeticMyDouble *) nil_chk([((id<GeogebraCommonKernelArithmeticNumberValue>) nil_chk(((id<GeogebraCommonKernelArithmeticNumberValue>) check_protocol_cast(lt, @protocol(GeogebraCommonKernelArithmeticNumberValue))))) getNumber])) exp];
  }
  else if ([GeogebraCommonKernelArithmeticVectorValue_class_() isInstance:lt]) {
    GeogebraCommonKernelGeosGeoVec2D *vec = [((id<GeogebraCommonKernelArithmeticVectorValue>) nil_chk(((id<GeogebraCommonKernelArithmeticVectorValue>) check_protocol_cast(lt, @protocol(GeogebraCommonKernelArithmeticVectorValue))))) getVector];
    GeogebraCommonKernelGeosGeoVec2D_complexExpWithGeogebraCommonKernelGeosGeoVec2D_withGeogebraCommonKernelGeosGeoVec2D_(vec, vec);
    return vec;
  }
  else return [((GeogebraCommonKernelArithmeticExpressionNodeEvaluator *) nil_chk(ev)) polynomialOrDieWithGeogebraCommonKernelArithmeticExpressionValue:lt withGeogebraCommonPluginOperationEnum:self withNSString:@"exp("];
}

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  GeogebraCommonPluginOperation_$30Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelStringTemplate:withBoolean:", "handle", "Lgeogebra.common.kernel.arithmetic.ExpressionValue;", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonPluginOperation_$30Enum = { 2, "", "geogebra.common.plugin", "Operation", 0xc018, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonPluginOperation_$30Enum;
}

@end

void GeogebraCommonPluginOperation_$30Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$30Enum *self, NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperationEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

GeogebraCommonPluginOperation_$30Enum *new_GeogebraCommonPluginOperation_$30Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperation_$30Enum *self = [GeogebraCommonPluginOperation_$30Enum alloc];
  GeogebraCommonPluginOperation_$30Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonPluginOperation_$30Enum)

@implementation GeogebraCommonPluginOperation_$31Enum

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX {
  if ([GeogebraCommonKernelArithmeticNumberValue_class_() isInstance:lt]) {
    return [((GeogebraCommonKernelArithmeticMyDouble *) nil_chk([((id<GeogebraCommonKernelArithmeticNumberValue>) nil_chk(((id<GeogebraCommonKernelArithmeticNumberValue>) check_protocol_cast(lt, @protocol(GeogebraCommonKernelArithmeticNumberValue))))) getNumber])) log];
  }
  else if ([GeogebraCommonKernelArithmeticVectorValue_class_() isInstance:lt]) {
    GeogebraCommonKernelGeosGeoVec2D *vec = [((id<GeogebraCommonKernelArithmeticVectorValue>) nil_chk(((id<GeogebraCommonKernelArithmeticVectorValue>) check_protocol_cast(lt, @protocol(GeogebraCommonKernelArithmeticVectorValue))))) getVector];
    GeogebraCommonKernelGeosGeoVec2D_complexLogWithGeogebraCommonKernelGeosGeoVec2D_withGeogebraCommonKernelGeosGeoVec2D_(vec, vec);
    return vec;
  }
  else return [((GeogebraCommonKernelArithmeticExpressionNodeEvaluator *) nil_chk(ev)) polynomialOrDieWithGeogebraCommonKernelArithmeticExpressionValue:lt withGeogebraCommonPluginOperationEnum:self withNSString:@"log("];
}

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  GeogebraCommonPluginOperation_$31Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelStringTemplate:withBoolean:", "handle", "Lgeogebra.common.kernel.arithmetic.ExpressionValue;", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonPluginOperation_$31Enum = { 2, "", "geogebra.common.plugin", "Operation", 0xc018, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonPluginOperation_$31Enum;
}

@end

void GeogebraCommonPluginOperation_$31Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$31Enum *self, NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperationEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

GeogebraCommonPluginOperation_$31Enum *new_GeogebraCommonPluginOperation_$31Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperation_$31Enum *self = [GeogebraCommonPluginOperation_$31Enum alloc];
  GeogebraCommonPluginOperation_$31Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonPluginOperation_$31Enum)

@implementation GeogebraCommonPluginOperation_$32Enum

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX {
  if ([GeogebraCommonKernelArithmeticNumberValue_class_() isInstance:lt]) {
    return [((GeogebraCommonKernelArithmeticMyDouble *) nil_chk([((id<GeogebraCommonKernelArithmeticNumberValue>) nil_chk(((id<GeogebraCommonKernelArithmeticNumberValue>) check_protocol_cast(lt, @protocol(GeogebraCommonKernelArithmeticNumberValue))))) getNumber])) acos];
  }
  return [((GeogebraCommonKernelArithmeticExpressionNodeEvaluator *) nil_chk(ev)) polynomialOrDieWithGeogebraCommonKernelArithmeticExpressionValue:lt withGeogebraCommonPluginOperationEnum:self withNSString:@"acos("];
}

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  GeogebraCommonPluginOperation_$32Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelStringTemplate:withBoolean:", "handle", "Lgeogebra.common.kernel.arithmetic.ExpressionValue;", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonPluginOperation_$32Enum = { 2, "", "geogebra.common.plugin", "Operation", 0xc018, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonPluginOperation_$32Enum;
}

@end

void GeogebraCommonPluginOperation_$32Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$32Enum *self, NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperationEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

GeogebraCommonPluginOperation_$32Enum *new_GeogebraCommonPluginOperation_$32Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperation_$32Enum *self = [GeogebraCommonPluginOperation_$32Enum alloc];
  GeogebraCommonPluginOperation_$32Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonPluginOperation_$32Enum)

@implementation GeogebraCommonPluginOperation_$33Enum

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX {
  if ([GeogebraCommonKernelArithmeticNumberValue_class_() isInstance:lt]) {
    return [((GeogebraCommonKernelArithmeticMyDouble *) nil_chk([((id<GeogebraCommonKernelArithmeticNumberValue>) nil_chk(((id<GeogebraCommonKernelArithmeticNumberValue>) check_protocol_cast(lt, @protocol(GeogebraCommonKernelArithmeticNumberValue))))) getNumber])) asin];
  }
  return [((GeogebraCommonKernelArithmeticExpressionNodeEvaluator *) nil_chk(ev)) polynomialOrDieWithGeogebraCommonKernelArithmeticExpressionValue:lt withGeogebraCommonPluginOperationEnum:self withNSString:@"asin("];
}

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  GeogebraCommonPluginOperation_$33Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelStringTemplate:withBoolean:", "handle", "Lgeogebra.common.kernel.arithmetic.ExpressionValue;", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonPluginOperation_$33Enum = { 2, "", "geogebra.common.plugin", "Operation", 0xc018, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonPluginOperation_$33Enum;
}

@end

void GeogebraCommonPluginOperation_$33Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$33Enum *self, NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperationEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

GeogebraCommonPluginOperation_$33Enum *new_GeogebraCommonPluginOperation_$33Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperation_$33Enum *self = [GeogebraCommonPluginOperation_$33Enum alloc];
  GeogebraCommonPluginOperation_$33Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonPluginOperation_$33Enum)

@implementation GeogebraCommonPluginOperation_$34Enum

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX {
  if ([GeogebraCommonKernelArithmeticNumberValue_class_() isInstance:lt]) {
    return [((GeogebraCommonKernelArithmeticMyDouble *) nil_chk([((id<GeogebraCommonKernelArithmeticNumberValue>) nil_chk(((id<GeogebraCommonKernelArithmeticNumberValue>) check_protocol_cast(lt, @protocol(GeogebraCommonKernelArithmeticNumberValue))))) getNumber])) atan];
  }
  return [((GeogebraCommonKernelArithmeticExpressionNodeEvaluator *) nil_chk(ev)) polynomialOrDieWithGeogebraCommonKernelArithmeticExpressionValue:lt withGeogebraCommonPluginOperationEnum:self withNSString:@"atan("];
}

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  GeogebraCommonPluginOperation_$34Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelStringTemplate:withBoolean:", "handle", "Lgeogebra.common.kernel.arithmetic.ExpressionValue;", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonPluginOperation_$34Enum = { 2, "", "geogebra.common.plugin", "Operation", 0xc018, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonPluginOperation_$34Enum;
}

@end

void GeogebraCommonPluginOperation_$34Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$34Enum *self, NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperationEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

GeogebraCommonPluginOperation_$34Enum *new_GeogebraCommonPluginOperation_$34Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperation_$34Enum *self = [GeogebraCommonPluginOperation_$34Enum alloc];
  GeogebraCommonPluginOperation_$34Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonPluginOperation_$34Enum)

@implementation GeogebraCommonPluginOperation_$35Enum

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX {
  if ([GeogebraCommonKernelArithmeticNumberValue_class_() isInstance:lt] && [GeogebraCommonKernelArithmeticNumberValue_class_() isInstance:rt]) {
    return [((GeogebraCommonKernelArithmeticMyDouble *) nil_chk([((GeogebraCommonKernelArithmeticMyDouble *) nil_chk([((id<GeogebraCommonKernelArithmeticNumberValue>) nil_chk(((id<GeogebraCommonKernelArithmeticNumberValue>) check_protocol_cast(lt, @protocol(GeogebraCommonKernelArithmeticNumberValue))))) getNumber])) atan2WithGeogebraCommonKernelArithmeticNumberValue:(id<GeogebraCommonKernelArithmeticNumberValue>) check_protocol_cast(rt, @protocol(GeogebraCommonKernelArithmeticNumberValue))])) getNumber];
  }
  return [((GeogebraCommonKernelArithmeticExpressionNodeEvaluator *) nil_chk(ev)) illegalArgumentWithGeogebraCommonKernelArithmeticExpressionValue:lt withGeogebraCommonKernelArithmeticExpressionValue:rt withNSString:@"arctan2("];
}

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  GeogebraCommonPluginOperation_$35Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelStringTemplate:withBoolean:", "handle", "Lgeogebra.common.kernel.arithmetic.ExpressionValue;", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonPluginOperation_$35Enum = { 2, "", "geogebra.common.plugin", "Operation", 0xc018, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonPluginOperation_$35Enum;
}

@end

void GeogebraCommonPluginOperation_$35Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$35Enum *self, NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperationEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

GeogebraCommonPluginOperation_$35Enum *new_GeogebraCommonPluginOperation_$35Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperation_$35Enum *self = [GeogebraCommonPluginOperation_$35Enum alloc];
  GeogebraCommonPluginOperation_$35Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonPluginOperation_$35Enum)

@implementation GeogebraCommonPluginOperation_$36Enum

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX {
  GeogebraCommonKernelKernel *kernel = [((GeogebraCommonKernelArithmeticExpressionNodeEvaluator *) nil_chk(ev)) getKernel];
  if ([GeogebraCommonKernelArithmeticNumberValue_class_() isInstance:rt]) {
    jdouble n = [((id<GeogebraCommonKernelArithmeticNumberValue>) nil_chk(((id<GeogebraCommonKernelArithmeticNumberValue>) check_protocol_cast(rt, @protocol(GeogebraCommonKernelArithmeticNumberValue))))) getDouble];
    GeogebraCommonKernelArithmeticMyDouble *exp = [new_GeogebraCommonKernelArithmeticMyDouble_initWithGeogebraCommonKernelKernel_withDouble_(kernel, 1 / n) autorelease];
    if ([GeogebraCommonKernelArithmeticNumberValue_class_() isInstance:lt]) {
      GeogebraCommonKernelArithmeticMyDouble *root = [((id<GeogebraCommonKernelArithmeticNumberValue>) nil_chk(((id<GeogebraCommonKernelArithmeticNumberValue>) check_protocol_cast(lt, @protocol(GeogebraCommonKernelArithmeticNumberValue))))) getNumber];
      if (GeogebraCommonKernelKernel_isGreaterWithDouble_withDouble_(0, [((GeogebraCommonKernelArithmeticMyDouble *) nil_chk(root)) getDouble]) && GeogebraCommonKernelKernel_isIntegerWithDouble_(n) && JavaLangMath_roundWithDouble_(n) % 2 == 1) {
        GeogebraCommonKernelArithmeticMyDouble_powDoubleSgnChangeWithGeogebraCommonKernelArithmeticMyDouble_withGeogebraCommonKernelArithmeticMyDouble_withGeogebraCommonKernelArithmeticMyDouble_(root, exp, root);
      }
      else {
        GeogebraCommonKernelArithmeticMyDouble_powWithGeogebraCommonKernelArithmeticMyDouble_withGeogebraCommonKernelArithmeticMyDouble_withGeogebraCommonKernelArithmeticMyDouble_(root, exp, root);
      }
      return root;
    }
    else if ([GeogebraCommonKernelArithmeticVectorValue_class_() isInstance:lt]) {
      GeogebraCommonKernelGeosGeoVec2D *vec = [((id<GeogebraCommonKernelArithmeticVectorValue>) nil_chk(((id<GeogebraCommonKernelArithmeticVectorValue>) check_protocol_cast(lt, @protocol(GeogebraCommonKernelArithmeticVectorValue))))) getVector];
      GeogebraCommonKernelGeosGeoVec2D_complexPowerWithGeogebraCommonKernelGeosGeoVec2D_withGeogebraCommonKernelArithmeticNumberValue_withGeogebraCommonKernelGeosGeoVec2D_(vec, exp, vec);
      return vec;
    }
  }
  return [ev illegalArgumentWithGeogebraCommonKernelArithmeticExpressionValue:lt withGeogebraCommonKernelArithmeticExpressionValue:rt withNSString:@"nroot("];
}

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  GeogebraCommonPluginOperation_$36Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelStringTemplate:withBoolean:", "handle", "Lgeogebra.common.kernel.arithmetic.ExpressionValue;", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonPluginOperation_$36Enum = { 2, "", "geogebra.common.plugin", "Operation", 0xc018, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonPluginOperation_$36Enum;
}

@end

void GeogebraCommonPluginOperation_$36Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$36Enum *self, NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperationEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

GeogebraCommonPluginOperation_$36Enum *new_GeogebraCommonPluginOperation_$36Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperation_$36Enum *self = [GeogebraCommonPluginOperation_$36Enum alloc];
  GeogebraCommonPluginOperation_$36Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonPluginOperation_$36Enum)

@implementation GeogebraCommonPluginOperation_$37Enum

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX {
  if ([GeogebraCommonKernelArithmeticNumberValue_class_() isInstance:lt]) {
    return [((GeogebraCommonKernelArithmeticMyDouble *) nil_chk([((id<GeogebraCommonKernelArithmeticNumberValue>) nil_chk(((id<GeogebraCommonKernelArithmeticNumberValue>) check_protocol_cast(lt, @protocol(GeogebraCommonKernelArithmeticNumberValue))))) getNumber])) sqrt];
  }
  else if ([GeogebraCommonKernelArithmeticVectorValue_class_() isInstance:lt]) {
    GeogebraCommonKernelGeosGeoVec2D *vec = [((id<GeogebraCommonKernelArithmeticVectorValue>) nil_chk(((id<GeogebraCommonKernelArithmeticVectorValue>) check_protocol_cast(lt, @protocol(GeogebraCommonKernelArithmeticVectorValue))))) getVector];
    GeogebraCommonKernelGeosGeoVec2D_complexSqrtWithGeogebraCommonKernelGeosGeoVec2D_withGeogebraCommonKernelGeosGeoVec2D_(vec, vec);
    return vec;
  }
  else return [((GeogebraCommonKernelArithmeticExpressionNodeEvaluator *) nil_chk(ev)) polynomialOrDieWithGeogebraCommonKernelArithmeticExpressionValue:lt withGeogebraCommonPluginOperationEnum:self withNSString:@"sqrt("];
}

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  GeogebraCommonPluginOperation_$37Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelStringTemplate:withBoolean:", "handle", "Lgeogebra.common.kernel.arithmetic.ExpressionValue;", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonPluginOperation_$37Enum = { 2, "", "geogebra.common.plugin", "Operation", 0xc018, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonPluginOperation_$37Enum;
}

@end

void GeogebraCommonPluginOperation_$37Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$37Enum *self, NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperationEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

GeogebraCommonPluginOperation_$37Enum *new_GeogebraCommonPluginOperation_$37Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperation_$37Enum *self = [GeogebraCommonPluginOperation_$37Enum alloc];
  GeogebraCommonPluginOperation_$37Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonPluginOperation_$37Enum)

@implementation GeogebraCommonPluginOperation_$38Enum

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX {
  return [((GeogebraCommonPluginOperationEnum *) nil_chk(GeogebraCommonPluginOperationEnum_get_SQRT())) handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:ev withGeogebraCommonKernelArithmeticExpressionValue:lt withGeogebraCommonKernelArithmeticExpressionValue:rt withGeogebraCommonKernelArithmeticExpressionValue:left withGeogebraCommonKernelArithmeticExpressionValue:right withGeogebraCommonKernelStringTemplate:tpl withBoolean:holdsLaTeX];
}

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  GeogebraCommonPluginOperation_$38Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelStringTemplate:withBoolean:", "handle", "Lgeogebra.common.kernel.arithmetic.ExpressionValue;", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonPluginOperation_$38Enum = { 2, "", "geogebra.common.plugin", "Operation", 0xc018, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonPluginOperation_$38Enum;
}

@end

void GeogebraCommonPluginOperation_$38Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$38Enum *self, NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperationEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

GeogebraCommonPluginOperation_$38Enum *new_GeogebraCommonPluginOperation_$38Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperation_$38Enum *self = [GeogebraCommonPluginOperation_$38Enum alloc];
  GeogebraCommonPluginOperation_$38Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonPluginOperation_$38Enum)

@implementation GeogebraCommonPluginOperation_$39Enum

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX {
  GeogebraCommonKernelKernel *kernel = [((GeogebraCommonKernelArithmeticExpressionNodeEvaluator *) nil_chk(ev)) getKernel];
  GeogebraCommonKernelGeosGeoVec2D *vec;
  if ([GeogebraCommonKernelArithmeticNumberValue_class_() isInstance:lt]) {
    return [((GeogebraCommonKernelArithmeticMyDouble *) nil_chk([((id<GeogebraCommonKernelArithmeticNumberValue>) nil_chk(((id<GeogebraCommonKernelArithmeticNumberValue>) check_protocol_cast(lt, @protocol(GeogebraCommonKernelArithmeticNumberValue))))) getNumber])) abs];
  }
  else if ([GeogebraCommonKernelArithmeticVectorValue_class_() isInstance:lt]) {
    vec = [((id<GeogebraCommonKernelArithmeticVectorValue>) nil_chk(((id<GeogebraCommonKernelArithmeticVectorValue>) check_protocol_cast(lt, @protocol(GeogebraCommonKernelArithmeticVectorValue))))) getVector];
    return [new_GeogebraCommonKernelArithmeticMyDouble_initWithGeogebraCommonKernelKernel_withDouble_(kernel, GeogebraCommonKernelGeosGeoVec2D_complexAbsWithGeogebraCommonKernelGeosGeoVec2D_(vec)) autorelease];
  }
  else if ([GeogebraCommonKernelArithmetic3DVector3DValue_class_() isInstance:lt]) {
    id<GeogebraCommonKernelKernelNDGeo3DVec> vec3d = [((id<GeogebraCommonKernelArithmetic3DVector3DValue>) nil_chk(((id<GeogebraCommonKernelArithmetic3DVector3DValue>) check_protocol_cast(lt, @protocol(GeogebraCommonKernelArithmetic3DVector3DValue))))) getVector];
    return [new_GeogebraCommonKernelArithmeticMyDouble_initWithGeogebraCommonKernelKernel_withDouble_(kernel, [((id<GeogebraCommonKernelKernelNDGeo3DVec>) nil_chk(vec3d)) length]) autorelease];
  }
  else return [ev polynomialOrDieWithGeogebraCommonKernelArithmeticExpressionValue:lt withGeogebraCommonPluginOperationEnum:GeogebraCommonPluginOperationEnum_get_ABS() withNSString:@"abs("];
}

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  GeogebraCommonPluginOperation_$39Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelStringTemplate:withBoolean:", "handle", "Lgeogebra.common.kernel.arithmetic.ExpressionValue;", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonPluginOperation_$39Enum = { 2, "", "geogebra.common.plugin", "Operation", 0xc018, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonPluginOperation_$39Enum;
}

@end

void GeogebraCommonPluginOperation_$39Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$39Enum *self, NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperationEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

GeogebraCommonPluginOperation_$39Enum *new_GeogebraCommonPluginOperation_$39Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperation_$39Enum *self = [GeogebraCommonPluginOperation_$39Enum alloc];
  GeogebraCommonPluginOperation_$39Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonPluginOperation_$39Enum)

@implementation GeogebraCommonPluginOperation_$40Enum

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX {
  if ([GeogebraCommonKernelArithmeticNumberValue_class_() isInstance:lt]) {
    return [((GeogebraCommonKernelArithmeticMyDouble *) nil_chk([((id<GeogebraCommonKernelArithmeticNumberValue>) nil_chk(((id<GeogebraCommonKernelArithmeticNumberValue>) check_protocol_cast(lt, @protocol(GeogebraCommonKernelArithmeticNumberValue))))) getNumber])) sgn];
  }
  return [((GeogebraCommonKernelArithmeticExpressionNodeEvaluator *) nil_chk(ev)) polynomialOrDieWithGeogebraCommonKernelArithmeticExpressionValue:lt withGeogebraCommonPluginOperationEnum:self withNSString:@"sgn("];
}

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  GeogebraCommonPluginOperation_$40Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelStringTemplate:withBoolean:", "handle", "Lgeogebra.common.kernel.arithmetic.ExpressionValue;", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonPluginOperation_$40Enum = { 2, "", "geogebra.common.plugin", "Operation", 0xc018, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonPluginOperation_$40Enum;
}

@end

void GeogebraCommonPluginOperation_$40Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$40Enum *self, NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperationEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

GeogebraCommonPluginOperation_$40Enum *new_GeogebraCommonPluginOperation_$40Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperation_$40Enum *self = [GeogebraCommonPluginOperation_$40Enum alloc];
  GeogebraCommonPluginOperation_$40Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonPluginOperation_$40Enum)

@implementation GeogebraCommonPluginOperation_$41Enum

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX {
  return [((GeogebraCommonKernelArithmeticExpressionNodeEvaluator *) nil_chk(ev)) handleXcoordWithGeogebraCommonKernelArithmeticExpressionValue:lt withGeogebraCommonPluginOperationEnum:self];
}

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  GeogebraCommonPluginOperation_$41Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelStringTemplate:withBoolean:", "handle", "Lgeogebra.common.kernel.arithmetic.ExpressionValue;", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonPluginOperation_$41Enum = { 2, "", "geogebra.common.plugin", "Operation", 0xc018, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonPluginOperation_$41Enum;
}

@end

void GeogebraCommonPluginOperation_$41Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$41Enum *self, NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperationEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

GeogebraCommonPluginOperation_$41Enum *new_GeogebraCommonPluginOperation_$41Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperation_$41Enum *self = [GeogebraCommonPluginOperation_$41Enum alloc];
  GeogebraCommonPluginOperation_$41Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonPluginOperation_$41Enum)

@implementation GeogebraCommonPluginOperation_$42Enum

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX {
  return [((GeogebraCommonKernelArithmeticExpressionNodeEvaluator *) nil_chk(ev)) handleYcoordWithGeogebraCommonKernelArithmeticExpressionValue:lt withGeogebraCommonPluginOperationEnum:self];
}

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  GeogebraCommonPluginOperation_$42Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelStringTemplate:withBoolean:", "handle", "Lgeogebra.common.kernel.arithmetic.ExpressionValue;", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonPluginOperation_$42Enum = { 2, "", "geogebra.common.plugin", "Operation", 0xc018, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonPluginOperation_$42Enum;
}

@end

void GeogebraCommonPluginOperation_$42Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$42Enum *self, NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperationEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

GeogebraCommonPluginOperation_$42Enum *new_GeogebraCommonPluginOperation_$42Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperation_$42Enum *self = [GeogebraCommonPluginOperation_$42Enum alloc];
  GeogebraCommonPluginOperation_$42Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonPluginOperation_$42Enum)

@implementation GeogebraCommonPluginOperation_$43Enum

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX {
  GeogebraCommonKernelKernel *kernel = [((GeogebraCommonKernelArithmeticExpressionNodeEvaluator *) nil_chk(ev)) getKernel];
  if ([GeogebraCommonKernelArithmeticVectorValue_class_() isInstance:lt]) {
    return [new_GeogebraCommonKernelArithmeticMyDouble_initWithGeogebraCommonKernelKernel_withDouble_(kernel, 0) autorelease];
  }
  else if ([GeogebraCommonKernelArithmetic3DVector3DValue_class_() isInstance:lt]) {
    return [new_GeogebraCommonKernelArithmeticMyDouble_initWithGeogebraCommonKernelKernel_withDouble_(kernel, IOSDoubleArray_Get(nil_chk([((id<GeogebraCommonKernelArithmetic3DVector3DValue>) nil_chk(((id<GeogebraCommonKernelArithmetic3DVector3DValue>) check_protocol_cast(lt, @protocol(GeogebraCommonKernelArithmetic3DVector3DValue))))) getPointAsDouble]), 2)) autorelease];
  }
  else if ([lt isKindOfClass:[GeogebraCommonKernelGeosGeoLine class]]) {
    return [new_GeogebraCommonKernelArithmeticMyDouble_initWithGeogebraCommonKernelKernel_withDouble_(kernel, ((GeogebraCommonKernelGeosGeoLine *) nil_chk(((GeogebraCommonKernelGeosGeoLine *) check_class_cast(lt, [GeogebraCommonKernelGeosGeoLine class]))))->z_) autorelease];
  }
  return [ev polynomialOrDieWithGeogebraCommonKernelArithmeticExpressionValue:lt withGeogebraCommonPluginOperationEnum:GeogebraCommonPluginOperationEnum_get_YCOORD() withNSString:@"z("];
}

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  GeogebraCommonPluginOperation_$43Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelStringTemplate:withBoolean:", "handle", "Lgeogebra.common.kernel.arithmetic.ExpressionValue;", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonPluginOperation_$43Enum = { 2, "", "geogebra.common.plugin", "Operation", 0xc018, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonPluginOperation_$43Enum;
}

@end

void GeogebraCommonPluginOperation_$43Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$43Enum *self, NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperationEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

GeogebraCommonPluginOperation_$43Enum *new_GeogebraCommonPluginOperation_$43Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperation_$43Enum *self = [GeogebraCommonPluginOperation_$43Enum alloc];
  GeogebraCommonPluginOperation_$43Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonPluginOperation_$43Enum)

@implementation GeogebraCommonPluginOperation_$44Enum

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX {
  return [((GeogebraCommonKernelArithmeticExpressionNodeEvaluator *) nil_chk(ev)) handleYcoordWithGeogebraCommonKernelArithmeticExpressionValue:lt withGeogebraCommonPluginOperationEnum:self];
}

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  GeogebraCommonPluginOperation_$44Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelStringTemplate:withBoolean:", "handle", "Lgeogebra.common.kernel.arithmetic.ExpressionValue;", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonPluginOperation_$44Enum = { 2, "", "geogebra.common.plugin", "Operation", 0xc018, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonPluginOperation_$44Enum;
}

@end

void GeogebraCommonPluginOperation_$44Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$44Enum *self, NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperationEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

GeogebraCommonPluginOperation_$44Enum *new_GeogebraCommonPluginOperation_$44Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperation_$44Enum *self = [GeogebraCommonPluginOperation_$44Enum alloc];
  GeogebraCommonPluginOperation_$44Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonPluginOperation_$44Enum)

@implementation GeogebraCommonPluginOperation_$45Enum

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX {
  return [((GeogebraCommonKernelArithmeticExpressionNodeEvaluator *) nil_chk(ev)) handleXcoordWithGeogebraCommonKernelArithmeticExpressionValue:lt withGeogebraCommonPluginOperationEnum:self];
}

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  GeogebraCommonPluginOperation_$45Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelStringTemplate:withBoolean:", "handle", "Lgeogebra.common.kernel.arithmetic.ExpressionValue;", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonPluginOperation_$45Enum = { 2, "", "geogebra.common.plugin", "Operation", 0xc018, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonPluginOperation_$45Enum;
}

@end

void GeogebraCommonPluginOperation_$45Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$45Enum *self, NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperationEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

GeogebraCommonPluginOperation_$45Enum *new_GeogebraCommonPluginOperation_$45Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperation_$45Enum *self = [GeogebraCommonPluginOperation_$45Enum alloc];
  GeogebraCommonPluginOperation_$45Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonPluginOperation_$45Enum)

@implementation GeogebraCommonPluginOperation_$46Enum

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX {
  if ([GeogebraCommonKernelArithmeticNumberValue_class_() isInstance:lt]) {
    return [((GeogebraCommonKernelArithmeticMyDouble *) nil_chk([((id<GeogebraCommonKernelArithmeticNumberValue>) nil_chk(((id<GeogebraCommonKernelArithmeticNumberValue>) check_protocol_cast(lt, @protocol(GeogebraCommonKernelArithmeticNumberValue))))) getNumber])) fractionalPart];
  }
  return [((GeogebraCommonKernelArithmeticExpressionNodeEvaluator *) nil_chk(ev)) polynomialOrDieWithGeogebraCommonKernelArithmeticExpressionValue:lt withGeogebraCommonPluginOperationEnum:self withNSString:@"fractionalPart("];
}

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  GeogebraCommonPluginOperation_$46Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelStringTemplate:withBoolean:", "handle", "Lgeogebra.common.kernel.arithmetic.ExpressionValue;", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonPluginOperation_$46Enum = { 2, "", "geogebra.common.plugin", "Operation", 0xc018, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonPluginOperation_$46Enum;
}

@end

void GeogebraCommonPluginOperation_$46Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$46Enum *self, NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperationEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

GeogebraCommonPluginOperation_$46Enum *new_GeogebraCommonPluginOperation_$46Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperation_$46Enum *self = [GeogebraCommonPluginOperation_$46Enum alloc];
  GeogebraCommonPluginOperation_$46Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonPluginOperation_$46Enum)

@implementation GeogebraCommonPluginOperation_$47Enum

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX {
  if ([GeogebraCommonKernelArithmeticNumberValue_class_() isInstance:lt]) {
    return [((GeogebraCommonKernelArithmeticMyDouble *) nil_chk([((id<GeogebraCommonKernelArithmeticNumberValue>) nil_chk(((id<GeogebraCommonKernelArithmeticNumberValue>) check_protocol_cast(lt, @protocol(GeogebraCommonKernelArithmeticNumberValue))))) getNumber])) cosh];
  }
  else if ([GeogebraCommonKernelArithmeticVectorValue_class_() isInstance:lt]) {
    GeogebraCommonKernelGeosGeoVec2D *vec = [((id<GeogebraCommonKernelArithmeticVectorValue>) nil_chk(((id<GeogebraCommonKernelArithmeticVectorValue>) check_protocol_cast(lt, @protocol(GeogebraCommonKernelArithmeticVectorValue))))) getVector];
    GeogebraCommonKernelGeosGeoVec2D_complexCoshWithGeogebraCommonKernelGeosGeoVec2D_withGeogebraCommonKernelGeosGeoVec2D_(vec, vec);
    return vec;
  }
  return [((GeogebraCommonKernelArithmeticExpressionNodeEvaluator *) nil_chk(ev)) polynomialOrDieWithGeogebraCommonKernelArithmeticExpressionValue:lt withGeogebraCommonPluginOperationEnum:self withNSString:@"cosh("];
}

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  GeogebraCommonPluginOperation_$47Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelStringTemplate:withBoolean:", "handle", "Lgeogebra.common.kernel.arithmetic.ExpressionValue;", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonPluginOperation_$47Enum = { 2, "", "geogebra.common.plugin", "Operation", 0xc018, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonPluginOperation_$47Enum;
}

@end

void GeogebraCommonPluginOperation_$47Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$47Enum *self, NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperationEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

GeogebraCommonPluginOperation_$47Enum *new_GeogebraCommonPluginOperation_$47Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperation_$47Enum *self = [GeogebraCommonPluginOperation_$47Enum alloc];
  GeogebraCommonPluginOperation_$47Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonPluginOperation_$47Enum)

@implementation GeogebraCommonPluginOperation_$48Enum

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX {
  if ([GeogebraCommonKernelArithmeticNumberValue_class_() isInstance:lt]) {
    return [((GeogebraCommonKernelArithmeticMyDouble *) nil_chk([((id<GeogebraCommonKernelArithmeticNumberValue>) nil_chk(((id<GeogebraCommonKernelArithmeticNumberValue>) check_protocol_cast(lt, @protocol(GeogebraCommonKernelArithmeticNumberValue))))) getNumber])) sinh];
  }
  else if ([GeogebraCommonKernelArithmeticVectorValue_class_() isInstance:lt]) {
    GeogebraCommonKernelGeosGeoVec2D *vec = [((id<GeogebraCommonKernelArithmeticVectorValue>) nil_chk(((id<GeogebraCommonKernelArithmeticVectorValue>) check_protocol_cast(lt, @protocol(GeogebraCommonKernelArithmeticVectorValue))))) getVector];
    GeogebraCommonKernelGeosGeoVec2D_complexSinhWithGeogebraCommonKernelGeosGeoVec2D_withGeogebraCommonKernelGeosGeoVec2D_(vec, vec);
    return vec;
  }
  return [((GeogebraCommonKernelArithmeticExpressionNodeEvaluator *) nil_chk(ev)) polynomialOrDieWithGeogebraCommonKernelArithmeticExpressionValue:lt withGeogebraCommonPluginOperationEnum:self withNSString:@"sinh("];
}

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  GeogebraCommonPluginOperation_$48Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelStringTemplate:withBoolean:", "handle", "Lgeogebra.common.kernel.arithmetic.ExpressionValue;", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonPluginOperation_$48Enum = { 2, "", "geogebra.common.plugin", "Operation", 0xc018, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonPluginOperation_$48Enum;
}

@end

void GeogebraCommonPluginOperation_$48Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$48Enum *self, NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperationEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

GeogebraCommonPluginOperation_$48Enum *new_GeogebraCommonPluginOperation_$48Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperation_$48Enum *self = [GeogebraCommonPluginOperation_$48Enum alloc];
  GeogebraCommonPluginOperation_$48Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonPluginOperation_$48Enum)

@implementation GeogebraCommonPluginOperation_$49Enum

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX {
  if ([GeogebraCommonKernelArithmeticNumberValue_class_() isInstance:lt]) {
    return [((GeogebraCommonKernelArithmeticMyDouble *) nil_chk([((id<GeogebraCommonKernelArithmeticNumberValue>) nil_chk(((id<GeogebraCommonKernelArithmeticNumberValue>) check_protocol_cast(lt, @protocol(GeogebraCommonKernelArithmeticNumberValue))))) getNumber])) tanh];
  }
  else if ([GeogebraCommonKernelArithmeticVectorValue_class_() isInstance:lt]) {
    GeogebraCommonKernelGeosGeoVec2D *vec = [((id<GeogebraCommonKernelArithmeticVectorValue>) nil_chk(((id<GeogebraCommonKernelArithmeticVectorValue>) check_protocol_cast(lt, @protocol(GeogebraCommonKernelArithmeticVectorValue))))) getVector];
    GeogebraCommonKernelGeosGeoVec2D_complexTanhWithGeogebraCommonKernelGeosGeoVec2D_withGeogebraCommonKernelGeosGeoVec2D_(vec, vec);
    return vec;
  }
  return [((GeogebraCommonKernelArithmeticExpressionNodeEvaluator *) nil_chk(ev)) polynomialOrDieWithGeogebraCommonKernelArithmeticExpressionValue:lt withGeogebraCommonPluginOperationEnum:self withNSString:@"tanh("];
}

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  GeogebraCommonPluginOperation_$49Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelStringTemplate:withBoolean:", "handle", "Lgeogebra.common.kernel.arithmetic.ExpressionValue;", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonPluginOperation_$49Enum = { 2, "", "geogebra.common.plugin", "Operation", 0xc018, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonPluginOperation_$49Enum;
}

@end

void GeogebraCommonPluginOperation_$49Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$49Enum *self, NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperationEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

GeogebraCommonPluginOperation_$49Enum *new_GeogebraCommonPluginOperation_$49Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperation_$49Enum *self = [GeogebraCommonPluginOperation_$49Enum alloc];
  GeogebraCommonPluginOperation_$49Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonPluginOperation_$49Enum)

@implementation GeogebraCommonPluginOperation_$50Enum

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX {
  if ([GeogebraCommonKernelArithmeticNumberValue_class_() isInstance:lt]) {
    return [((GeogebraCommonKernelArithmeticMyDouble *) nil_chk([((id<GeogebraCommonKernelArithmeticNumberValue>) nil_chk(((id<GeogebraCommonKernelArithmeticNumberValue>) check_protocol_cast(lt, @protocol(GeogebraCommonKernelArithmeticNumberValue))))) getNumber])) acosh];
  }
  return [((GeogebraCommonKernelArithmeticExpressionNodeEvaluator *) nil_chk(ev)) polynomialOrDieWithGeogebraCommonKernelArithmeticExpressionValue:lt withGeogebraCommonPluginOperationEnum:self withNSString:@"acosh("];
}

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  GeogebraCommonPluginOperation_$50Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelStringTemplate:withBoolean:", "handle", "Lgeogebra.common.kernel.arithmetic.ExpressionValue;", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonPluginOperation_$50Enum = { 2, "", "geogebra.common.plugin", "Operation", 0xc018, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonPluginOperation_$50Enum;
}

@end

void GeogebraCommonPluginOperation_$50Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$50Enum *self, NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperationEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

GeogebraCommonPluginOperation_$50Enum *new_GeogebraCommonPluginOperation_$50Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperation_$50Enum *self = [GeogebraCommonPluginOperation_$50Enum alloc];
  GeogebraCommonPluginOperation_$50Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonPluginOperation_$50Enum)

@implementation GeogebraCommonPluginOperation_$51Enum

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX {
  if ([GeogebraCommonKernelArithmeticNumberValue_class_() isInstance:lt]) {
    return [((GeogebraCommonKernelArithmeticMyDouble *) nil_chk([((id<GeogebraCommonKernelArithmeticNumberValue>) nil_chk(((id<GeogebraCommonKernelArithmeticNumberValue>) check_protocol_cast(lt, @protocol(GeogebraCommonKernelArithmeticNumberValue))))) getNumber])) asinh];
  }
  return [((GeogebraCommonKernelArithmeticExpressionNodeEvaluator *) nil_chk(ev)) polynomialOrDieWithGeogebraCommonKernelArithmeticExpressionValue:lt withGeogebraCommonPluginOperationEnum:self withNSString:@"asinh("];
}

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  GeogebraCommonPluginOperation_$51Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelStringTemplate:withBoolean:", "handle", "Lgeogebra.common.kernel.arithmetic.ExpressionValue;", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonPluginOperation_$51Enum = { 2, "", "geogebra.common.plugin", "Operation", 0xc018, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonPluginOperation_$51Enum;
}

@end

void GeogebraCommonPluginOperation_$51Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$51Enum *self, NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperationEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

GeogebraCommonPluginOperation_$51Enum *new_GeogebraCommonPluginOperation_$51Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperation_$51Enum *self = [GeogebraCommonPluginOperation_$51Enum alloc];
  GeogebraCommonPluginOperation_$51Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonPluginOperation_$51Enum)

@implementation GeogebraCommonPluginOperation_$52Enum

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX {
  if ([GeogebraCommonKernelArithmeticNumberValue_class_() isInstance:lt]) {
    return [((GeogebraCommonKernelArithmeticMyDouble *) nil_chk([((id<GeogebraCommonKernelArithmeticNumberValue>) nil_chk(((id<GeogebraCommonKernelArithmeticNumberValue>) check_protocol_cast(lt, @protocol(GeogebraCommonKernelArithmeticNumberValue))))) getNumber])) atanh];
  }
  return [((GeogebraCommonKernelArithmeticExpressionNodeEvaluator *) nil_chk(ev)) polynomialOrDieWithGeogebraCommonKernelArithmeticExpressionValue:lt withGeogebraCommonPluginOperationEnum:self withNSString:@"atanh("];
}

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  GeogebraCommonPluginOperation_$52Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelStringTemplate:withBoolean:", "handle", "Lgeogebra.common.kernel.arithmetic.ExpressionValue;", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonPluginOperation_$52Enum = { 2, "", "geogebra.common.plugin", "Operation", 0xc018, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonPluginOperation_$52Enum;
}

@end

void GeogebraCommonPluginOperation_$52Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$52Enum *self, NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperationEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

GeogebraCommonPluginOperation_$52Enum *new_GeogebraCommonPluginOperation_$52Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperation_$52Enum *self = [GeogebraCommonPluginOperation_$52Enum alloc];
  GeogebraCommonPluginOperation_$52Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonPluginOperation_$52Enum)

@implementation GeogebraCommonPluginOperation_$53Enum

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX {
  if ([GeogebraCommonKernelArithmeticNumberValue_class_() isInstance:lt]) {
    return [((GeogebraCommonKernelArithmeticMyDouble *) nil_chk([((id<GeogebraCommonKernelArithmeticNumberValue>) nil_chk(((id<GeogebraCommonKernelArithmeticNumberValue>) check_protocol_cast(lt, @protocol(GeogebraCommonKernelArithmeticNumberValue))))) getNumber])) csc];
  }
  else if ([GeogebraCommonKernelArithmeticVectorValue_class_() isInstance:lt]) {
    GeogebraCommonKernelGeosGeoVec2D *vec = [((id<GeogebraCommonKernelArithmeticVectorValue>) nil_chk(((id<GeogebraCommonKernelArithmeticVectorValue>) check_protocol_cast(lt, @protocol(GeogebraCommonKernelArithmeticVectorValue))))) getVector];
    GeogebraCommonKernelGeosGeoVec2D_complexCscWithGeogebraCommonKernelGeosGeoVec2D_withGeogebraCommonKernelGeosGeoVec2D_(vec, vec);
    return vec;
  }
  return [((GeogebraCommonKernelArithmeticExpressionNodeEvaluator *) nil_chk(ev)) polynomialOrDieWithGeogebraCommonKernelArithmeticExpressionValue:lt withGeogebraCommonPluginOperationEnum:self withNSString:@"csc("];
}

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  GeogebraCommonPluginOperation_$53Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelStringTemplate:withBoolean:", "handle", "Lgeogebra.common.kernel.arithmetic.ExpressionValue;", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonPluginOperation_$53Enum = { 2, "", "geogebra.common.plugin", "Operation", 0xc018, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonPluginOperation_$53Enum;
}

@end

void GeogebraCommonPluginOperation_$53Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$53Enum *self, NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperationEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

GeogebraCommonPluginOperation_$53Enum *new_GeogebraCommonPluginOperation_$53Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperation_$53Enum *self = [GeogebraCommonPluginOperation_$53Enum alloc];
  GeogebraCommonPluginOperation_$53Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonPluginOperation_$53Enum)

@implementation GeogebraCommonPluginOperation_$54Enum

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX {
  if ([GeogebraCommonKernelArithmeticNumberValue_class_() isInstance:lt]) {
    return [((GeogebraCommonKernelArithmeticMyDouble *) nil_chk([((id<GeogebraCommonKernelArithmeticNumberValue>) nil_chk(((id<GeogebraCommonKernelArithmeticNumberValue>) check_protocol_cast(lt, @protocol(GeogebraCommonKernelArithmeticNumberValue))))) getNumber])) sec];
  }
  else if ([GeogebraCommonKernelArithmeticVectorValue_class_() isInstance:lt]) {
    GeogebraCommonKernelGeosGeoVec2D *vec = [((id<GeogebraCommonKernelArithmeticVectorValue>) nil_chk(((id<GeogebraCommonKernelArithmeticVectorValue>) check_protocol_cast(lt, @protocol(GeogebraCommonKernelArithmeticVectorValue))))) getVector];
    GeogebraCommonKernelGeosGeoVec2D_complexSecWithGeogebraCommonKernelGeosGeoVec2D_withGeogebraCommonKernelGeosGeoVec2D_(vec, vec);
    return vec;
  }
  return [((GeogebraCommonKernelArithmeticExpressionNodeEvaluator *) nil_chk(ev)) polynomialOrDieWithGeogebraCommonKernelArithmeticExpressionValue:lt withGeogebraCommonPluginOperationEnum:self withNSString:@"sec("];
}

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  GeogebraCommonPluginOperation_$54Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelStringTemplate:withBoolean:", "handle", "Lgeogebra.common.kernel.arithmetic.ExpressionValue;", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonPluginOperation_$54Enum = { 2, "", "geogebra.common.plugin", "Operation", 0xc018, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonPluginOperation_$54Enum;
}

@end

void GeogebraCommonPluginOperation_$54Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$54Enum *self, NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperationEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

GeogebraCommonPluginOperation_$54Enum *new_GeogebraCommonPluginOperation_$54Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperation_$54Enum *self = [GeogebraCommonPluginOperation_$54Enum alloc];
  GeogebraCommonPluginOperation_$54Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonPluginOperation_$54Enum)

@implementation GeogebraCommonPluginOperation_$55Enum

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX {
  if ([GeogebraCommonKernelArithmeticNumberValue_class_() isInstance:lt]) {
    return [((GeogebraCommonKernelArithmeticMyDouble *) nil_chk([((id<GeogebraCommonKernelArithmeticNumberValue>) nil_chk(((id<GeogebraCommonKernelArithmeticNumberValue>) check_protocol_cast(lt, @protocol(GeogebraCommonKernelArithmeticNumberValue))))) getNumber])) cot];
  }
  else if ([GeogebraCommonKernelArithmeticVectorValue_class_() isInstance:lt]) {
    GeogebraCommonKernelGeosGeoVec2D *vec = [((id<GeogebraCommonKernelArithmeticVectorValue>) nil_chk(((id<GeogebraCommonKernelArithmeticVectorValue>) check_protocol_cast(lt, @protocol(GeogebraCommonKernelArithmeticVectorValue))))) getVector];
    GeogebraCommonKernelGeosGeoVec2D_complexCotWithGeogebraCommonKernelGeosGeoVec2D_withGeogebraCommonKernelGeosGeoVec2D_(vec, vec);
    return vec;
  }
  return [((GeogebraCommonKernelArithmeticExpressionNodeEvaluator *) nil_chk(ev)) polynomialOrDieWithGeogebraCommonKernelArithmeticExpressionValue:lt withGeogebraCommonPluginOperationEnum:self withNSString:@"cot("];
}

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  GeogebraCommonPluginOperation_$55Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelStringTemplate:withBoolean:", "handle", "Lgeogebra.common.kernel.arithmetic.ExpressionValue;", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonPluginOperation_$55Enum = { 2, "", "geogebra.common.plugin", "Operation", 0xc018, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonPluginOperation_$55Enum;
}

@end

void GeogebraCommonPluginOperation_$55Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$55Enum *self, NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperationEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

GeogebraCommonPluginOperation_$55Enum *new_GeogebraCommonPluginOperation_$55Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperation_$55Enum *self = [GeogebraCommonPluginOperation_$55Enum alloc];
  GeogebraCommonPluginOperation_$55Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonPluginOperation_$55Enum)

@implementation GeogebraCommonPluginOperation_$56Enum

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX {
  if ([GeogebraCommonKernelArithmeticNumberValue_class_() isInstance:lt]) {
    return [((GeogebraCommonKernelArithmeticMyDouble *) nil_chk([((id<GeogebraCommonKernelArithmeticNumberValue>) nil_chk(((id<GeogebraCommonKernelArithmeticNumberValue>) check_protocol_cast(lt, @protocol(GeogebraCommonKernelArithmeticNumberValue))))) getNumber])) csch];
  }
  else if ([GeogebraCommonKernelArithmeticVectorValue_class_() isInstance:lt]) {
    GeogebraCommonKernelGeosGeoVec2D *vec = [((id<GeogebraCommonKernelArithmeticVectorValue>) nil_chk(((id<GeogebraCommonKernelArithmeticVectorValue>) check_protocol_cast(lt, @protocol(GeogebraCommonKernelArithmeticVectorValue))))) getVector];
    GeogebraCommonKernelGeosGeoVec2D_complexCschWithGeogebraCommonKernelGeosGeoVec2D_withGeogebraCommonKernelGeosGeoVec2D_(vec, vec);
    return vec;
  }
  return [((GeogebraCommonKernelArithmeticExpressionNodeEvaluator *) nil_chk(ev)) polynomialOrDieWithGeogebraCommonKernelArithmeticExpressionValue:lt withGeogebraCommonPluginOperationEnum:self withNSString:@"csch("];
}

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  GeogebraCommonPluginOperation_$56Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelStringTemplate:withBoolean:", "handle", "Lgeogebra.common.kernel.arithmetic.ExpressionValue;", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonPluginOperation_$56Enum = { 2, "", "geogebra.common.plugin", "Operation", 0xc018, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonPluginOperation_$56Enum;
}

@end

void GeogebraCommonPluginOperation_$56Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$56Enum *self, NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperationEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

GeogebraCommonPluginOperation_$56Enum *new_GeogebraCommonPluginOperation_$56Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperation_$56Enum *self = [GeogebraCommonPluginOperation_$56Enum alloc];
  GeogebraCommonPluginOperation_$56Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonPluginOperation_$56Enum)

@implementation GeogebraCommonPluginOperation_$57Enum

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX {
  if ([GeogebraCommonKernelArithmeticNumberValue_class_() isInstance:lt]) {
    return [((GeogebraCommonKernelArithmeticMyDouble *) nil_chk([((id<GeogebraCommonKernelArithmeticNumberValue>) nil_chk(((id<GeogebraCommonKernelArithmeticNumberValue>) check_protocol_cast(lt, @protocol(GeogebraCommonKernelArithmeticNumberValue))))) getNumber])) sech];
  }
  else if ([GeogebraCommonKernelArithmeticVectorValue_class_() isInstance:lt]) {
    GeogebraCommonKernelGeosGeoVec2D *vec = [((id<GeogebraCommonKernelArithmeticVectorValue>) nil_chk(((id<GeogebraCommonKernelArithmeticVectorValue>) check_protocol_cast(lt, @protocol(GeogebraCommonKernelArithmeticVectorValue))))) getVector];
    GeogebraCommonKernelGeosGeoVec2D_complexSechWithGeogebraCommonKernelGeosGeoVec2D_withGeogebraCommonKernelGeosGeoVec2D_(vec, vec);
    return vec;
  }
  return [((GeogebraCommonKernelArithmeticExpressionNodeEvaluator *) nil_chk(ev)) polynomialOrDieWithGeogebraCommonKernelArithmeticExpressionValue:lt withGeogebraCommonPluginOperationEnum:self withNSString:@"sech("];
}

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  GeogebraCommonPluginOperation_$57Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelStringTemplate:withBoolean:", "handle", "Lgeogebra.common.kernel.arithmetic.ExpressionValue;", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonPluginOperation_$57Enum = { 2, "", "geogebra.common.plugin", "Operation", 0xc018, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonPluginOperation_$57Enum;
}

@end

void GeogebraCommonPluginOperation_$57Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$57Enum *self, NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperationEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

GeogebraCommonPluginOperation_$57Enum *new_GeogebraCommonPluginOperation_$57Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperation_$57Enum *self = [GeogebraCommonPluginOperation_$57Enum alloc];
  GeogebraCommonPluginOperation_$57Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonPluginOperation_$57Enum)

@implementation GeogebraCommonPluginOperation_$58Enum

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX {
  if ([GeogebraCommonKernelArithmeticNumberValue_class_() isInstance:lt]) {
    return [((GeogebraCommonKernelArithmeticMyDouble *) nil_chk([((id<GeogebraCommonKernelArithmeticNumberValue>) nil_chk(((id<GeogebraCommonKernelArithmeticNumberValue>) check_protocol_cast(lt, @protocol(GeogebraCommonKernelArithmeticNumberValue))))) getNumber])) coth];
  }
  else if ([GeogebraCommonKernelArithmeticVectorValue_class_() isInstance:lt]) {
    GeogebraCommonKernelGeosGeoVec2D *vec = [((id<GeogebraCommonKernelArithmeticVectorValue>) nil_chk(((id<GeogebraCommonKernelArithmeticVectorValue>) check_protocol_cast(lt, @protocol(GeogebraCommonKernelArithmeticVectorValue))))) getVector];
    GeogebraCommonKernelGeosGeoVec2D_complexCothWithGeogebraCommonKernelGeosGeoVec2D_withGeogebraCommonKernelGeosGeoVec2D_(vec, vec);
    return vec;
  }
  return [((GeogebraCommonKernelArithmeticExpressionNodeEvaluator *) nil_chk(ev)) polynomialOrDieWithGeogebraCommonKernelArithmeticExpressionValue:lt withGeogebraCommonPluginOperationEnum:self withNSString:@"coth("];
}

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  GeogebraCommonPluginOperation_$58Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelStringTemplate:withBoolean:", "handle", "Lgeogebra.common.kernel.arithmetic.ExpressionValue;", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonPluginOperation_$58Enum = { 2, "", "geogebra.common.plugin", "Operation", 0xc018, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonPluginOperation_$58Enum;
}

@end

void GeogebraCommonPluginOperation_$58Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$58Enum *self, NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperationEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

GeogebraCommonPluginOperation_$58Enum *new_GeogebraCommonPluginOperation_$58Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperation_$58Enum *self = [GeogebraCommonPluginOperation_$58Enum alloc];
  GeogebraCommonPluginOperation_$58Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonPluginOperation_$58Enum)

@implementation GeogebraCommonPluginOperation_$59Enum

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX {
  if ([GeogebraCommonKernelArithmeticNumberValue_class_() isInstance:lt]) {
    return [((GeogebraCommonKernelArithmeticMyDouble *) nil_chk([((id<GeogebraCommonKernelArithmeticNumberValue>) nil_chk(((id<GeogebraCommonKernelArithmeticNumberValue>) check_protocol_cast(lt, @protocol(GeogebraCommonKernelArithmeticNumberValue))))) getNumber])) floor];
  }
  if ([GeogebraCommonKernelArithmeticVectorValue_class_() isInstance:lt]) {
    GeogebraCommonKernelGeosGeoVec2D *ret = [((GeogebraCommonKernelGeosGeoVec2D *) nil_chk([((id<GeogebraCommonKernelArithmeticVectorValue>) nil_chk(((id<GeogebraCommonKernelArithmeticVectorValue>) check_protocol_cast(lt, @protocol(GeogebraCommonKernelArithmeticVectorValue))))) getVector])) floor];
    [((GeogebraCommonKernelGeosGeoVec2D *) nil_chk(ret)) setModeWithInt:[((id<GeogebraCommonKernelArithmeticVectorValue>) nil_chk(((id<GeogebraCommonKernelArithmeticVectorValue>) check_protocol_cast(lt, @protocol(GeogebraCommonKernelArithmeticVectorValue))))) getMode]];
    return ret;
  }
  if ([GeogebraCommonKernelArithmetic3DVector3DValue_class_() isInstance:lt]) {
    id<GeogebraCommonKernelKernelNDGeo3DVec> ret = [((id<GeogebraCommonKernelKernelNDGeo3DVec>) nil_chk([((id<GeogebraCommonKernelArithmetic3DVector3DValue>) nil_chk(((id<GeogebraCommonKernelArithmetic3DVector3DValue>) check_protocol_cast(lt, @protocol(GeogebraCommonKernelArithmetic3DVector3DValue))))) getVector])) floor];
    return ret;
  }
  return [((GeogebraCommonKernelArithmeticExpressionNodeEvaluator *) nil_chk(ev)) polynomialOrDieWithGeogebraCommonKernelArithmeticExpressionValue:lt withGeogebraCommonPluginOperationEnum:self withNSString:@"floor("];
}

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  GeogebraCommonPluginOperation_$59Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelStringTemplate:withBoolean:", "handle", "Lgeogebra.common.kernel.arithmetic.ExpressionValue;", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonPluginOperation_$59Enum = { 2, "", "geogebra.common.plugin", "Operation", 0xc018, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonPluginOperation_$59Enum;
}

@end

void GeogebraCommonPluginOperation_$59Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$59Enum *self, NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperationEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

GeogebraCommonPluginOperation_$59Enum *new_GeogebraCommonPluginOperation_$59Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperation_$59Enum *self = [GeogebraCommonPluginOperation_$59Enum alloc];
  GeogebraCommonPluginOperation_$59Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonPluginOperation_$59Enum)

@implementation GeogebraCommonPluginOperation_$60Enum

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX {
  if ([GeogebraCommonKernelArithmeticNumberValue_class_() isInstance:lt]) {
    return [((GeogebraCommonKernelArithmeticMyDouble *) nil_chk([((id<GeogebraCommonKernelArithmeticNumberValue>) nil_chk(((id<GeogebraCommonKernelArithmeticNumberValue>) check_protocol_cast(lt, @protocol(GeogebraCommonKernelArithmeticNumberValue))))) getNumber])) ceil];
  }
  if ([GeogebraCommonKernelArithmeticVectorValue_class_() isInstance:lt]) {
    GeogebraCommonKernelGeosGeoVec2D *ret = [((GeogebraCommonKernelGeosGeoVec2D *) nil_chk([((id<GeogebraCommonKernelArithmeticVectorValue>) nil_chk(((id<GeogebraCommonKernelArithmeticVectorValue>) check_protocol_cast(lt, @protocol(GeogebraCommonKernelArithmeticVectorValue))))) getVector])) ceil];
    [((GeogebraCommonKernelGeosGeoVec2D *) nil_chk(ret)) setModeWithInt:[((id<GeogebraCommonKernelArithmeticVectorValue>) nil_chk(((id<GeogebraCommonKernelArithmeticVectorValue>) check_protocol_cast(lt, @protocol(GeogebraCommonKernelArithmeticVectorValue))))) getMode]];
    return ret;
  }
  if ([GeogebraCommonKernelArithmetic3DVector3DValue_class_() isInstance:lt]) {
    id<GeogebraCommonKernelKernelNDGeo3DVec> ret = [((id<GeogebraCommonKernelKernelNDGeo3DVec>) nil_chk([((id<GeogebraCommonKernelArithmetic3DVector3DValue>) nil_chk(((id<GeogebraCommonKernelArithmetic3DVector3DValue>) check_protocol_cast(lt, @protocol(GeogebraCommonKernelArithmetic3DVector3DValue))))) getVector])) ceil];
    return ret;
  }
  return [((GeogebraCommonKernelArithmeticExpressionNodeEvaluator *) nil_chk(ev)) polynomialOrDieWithGeogebraCommonKernelArithmeticExpressionValue:lt withGeogebraCommonPluginOperationEnum:self withNSString:@"ceil("];
}

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  GeogebraCommonPluginOperation_$60Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelStringTemplate:withBoolean:", "handle", "Lgeogebra.common.kernel.arithmetic.ExpressionValue;", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonPluginOperation_$60Enum = { 2, "", "geogebra.common.plugin", "Operation", 0xc018, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonPluginOperation_$60Enum;
}

@end

void GeogebraCommonPluginOperation_$60Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$60Enum *self, NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperationEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

GeogebraCommonPluginOperation_$60Enum *new_GeogebraCommonPluginOperation_$60Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperation_$60Enum *self = [GeogebraCommonPluginOperation_$60Enum alloc];
  GeogebraCommonPluginOperation_$60Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonPluginOperation_$60Enum)

@implementation GeogebraCommonPluginOperation_$61Enum

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX {
  if ([GeogebraCommonKernelArithmeticNumberValue_class_() isInstance:lt]) {
    return [((GeogebraCommonKernelArithmeticMyDouble *) nil_chk([((id<GeogebraCommonKernelArithmeticNumberValue>) nil_chk(((id<GeogebraCommonKernelArithmeticNumberValue>) check_protocol_cast(lt, @protocol(GeogebraCommonKernelArithmeticNumberValue))))) getNumber])) factorial];
  }
  return [((GeogebraCommonKernelArithmeticExpressionNodeEvaluator *) nil_chk(ev)) polynomialOrDieWithGeogebraCommonKernelArithmeticExpressionValue:lt withGeogebraCommonPluginOperationEnum:self withNSString:@"" withNSString:@"!"];
}

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  GeogebraCommonPluginOperation_$61Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelStringTemplate:withBoolean:", "handle", "Lgeogebra.common.kernel.arithmetic.ExpressionValue;", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonPluginOperation_$61Enum = { 2, "", "geogebra.common.plugin", "Operation", 0xc018, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonPluginOperation_$61Enum;
}

@end

void GeogebraCommonPluginOperation_$61Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$61Enum *self, NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperationEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

GeogebraCommonPluginOperation_$61Enum *new_GeogebraCommonPluginOperation_$61Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperation_$61Enum *self = [GeogebraCommonPluginOperation_$61Enum alloc];
  GeogebraCommonPluginOperation_$61Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonPluginOperation_$61Enum)

@implementation GeogebraCommonPluginOperation_$62Enum

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX {
  if ([GeogebraCommonKernelArithmeticNumberValue_class_() isInstance:lt]) {
    if ([GeogebraCommonKernelArithmeticNumberValue_class_() isInstance:rt] && (!JavaLangDouble_isNaNWithDouble_([((id<GeogebraCommonKernelArithmeticNumberValue>) nil_chk(((id<GeogebraCommonKernelArithmeticNumberValue>) check_protocol_cast(rt, @protocol(GeogebraCommonKernelArithmeticNumberValue))))) getDouble]) || [((id<GeogebraCommonKernelArithmeticExpressionValue>) nil_chk(rt)) isGeoElement])) {
      return [((GeogebraCommonKernelArithmeticMyDouble *) nil_chk([((id<GeogebraCommonKernelArithmeticNumberValue>) nil_chk(((id<GeogebraCommonKernelArithmeticNumberValue>) check_protocol_cast(lt, @protocol(GeogebraCommonKernelArithmeticNumberValue))))) getNumber])) roundWithDouble:[((id<GeogebraCommonKernelArithmeticNumberValue>) nil_chk(((id<GeogebraCommonKernelArithmeticNumberValue>) check_protocol_cast(rt, @protocol(GeogebraCommonKernelArithmeticNumberValue))))) getDouble]];
    }
    return [((GeogebraCommonKernelArithmeticMyDouble *) nil_chk([((id<GeogebraCommonKernelArithmeticNumberValue>) nil_chk(((id<GeogebraCommonKernelArithmeticNumberValue>) check_protocol_cast(lt, @protocol(GeogebraCommonKernelArithmeticNumberValue))))) getNumber])) round];
  }
  if ([GeogebraCommonKernelArithmeticVectorValue_class_() isInstance:lt]) {
    GeogebraCommonKernelGeosGeoVec2D *ret = [((GeogebraCommonKernelGeosGeoVec2D *) nil_chk([((id<GeogebraCommonKernelArithmeticVectorValue>) nil_chk(((id<GeogebraCommonKernelArithmeticVectorValue>) check_protocol_cast(lt, @protocol(GeogebraCommonKernelArithmeticVectorValue))))) getVector])) round];
    [((GeogebraCommonKernelGeosGeoVec2D *) nil_chk(ret)) setModeWithInt:[((id<GeogebraCommonKernelArithmeticVectorValue>) nil_chk(((id<GeogebraCommonKernelArithmeticVectorValue>) check_protocol_cast(lt, @protocol(GeogebraCommonKernelArithmeticVectorValue))))) getMode]];
    return ret;
  }
  if ([GeogebraCommonKernelArithmetic3DVector3DValue_class_() isInstance:lt]) {
    id<GeogebraCommonKernelKernelNDGeo3DVec> ret = [((id<GeogebraCommonKernelKernelNDGeo3DVec>) nil_chk([((id<GeogebraCommonKernelArithmetic3DVector3DValue>) nil_chk(((id<GeogebraCommonKernelArithmetic3DVector3DValue>) check_protocol_cast(lt, @protocol(GeogebraCommonKernelArithmetic3DVector3DValue))))) getVector])) round];
    return ret;
  }
  return [((GeogebraCommonKernelArithmeticExpressionNodeEvaluator *) nil_chk(ev)) polynomialOrDieWithGeogebraCommonKernelArithmeticExpressionValue:lt withGeogebraCommonPluginOperationEnum:self withNSString:@"round("];
}

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  GeogebraCommonPluginOperation_$62Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelStringTemplate:withBoolean:", "handle", "Lgeogebra.common.kernel.arithmetic.ExpressionValue;", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonPluginOperation_$62Enum = { 2, "", "geogebra.common.plugin", "Operation", 0xc018, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonPluginOperation_$62Enum;
}

@end

void GeogebraCommonPluginOperation_$62Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$62Enum *self, NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperationEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

GeogebraCommonPluginOperation_$62Enum *new_GeogebraCommonPluginOperation_$62Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperation_$62Enum *self = [GeogebraCommonPluginOperation_$62Enum alloc];
  GeogebraCommonPluginOperation_$62Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonPluginOperation_$62Enum)

@implementation GeogebraCommonPluginOperation_$63Enum

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX {
  if ([GeogebraCommonKernelArithmeticNumberValue_class_() isInstance:lt]) {
    return [((GeogebraCommonKernelArithmeticMyDouble *) nil_chk([((id<GeogebraCommonKernelArithmeticNumberValue>) nil_chk(((id<GeogebraCommonKernelArithmeticNumberValue>) check_protocol_cast(lt, @protocol(GeogebraCommonKernelArithmeticNumberValue))))) getNumber])) gamma];
  }
  return [((GeogebraCommonKernelArithmeticExpressionNodeEvaluator *) nil_chk(ev)) polynomialOrDieWithGeogebraCommonKernelArithmeticExpressionValue:lt withGeogebraCommonPluginOperationEnum:self withNSString:@"gamma("];
}

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  GeogebraCommonPluginOperation_$63Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelStringTemplate:withBoolean:", "handle", "Lgeogebra.common.kernel.arithmetic.ExpressionValue;", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonPluginOperation_$63Enum = { 2, "", "geogebra.common.plugin", "Operation", 0xc018, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonPluginOperation_$63Enum;
}

@end

void GeogebraCommonPluginOperation_$63Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$63Enum *self, NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperationEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

GeogebraCommonPluginOperation_$63Enum *new_GeogebraCommonPluginOperation_$63Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperation_$63Enum *self = [GeogebraCommonPluginOperation_$63Enum alloc];
  GeogebraCommonPluginOperation_$63Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonPluginOperation_$63Enum)

@implementation GeogebraCommonPluginOperation_$64Enum

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX {
  if ([GeogebraCommonKernelArithmeticNumberValue_class_() isInstance:lt] && [GeogebraCommonKernelArithmeticNumberValue_class_() isInstance:rt]) {
    return [((GeogebraCommonKernelArithmeticMyDouble *) nil_chk([((id<GeogebraCommonKernelArithmeticNumberValue>) nil_chk(((id<GeogebraCommonKernelArithmeticNumberValue>) check_protocol_cast(rt, @protocol(GeogebraCommonKernelArithmeticNumberValue))))) getNumber])) gammaIncompleteWithGeogebraCommonKernelArithmeticNumberValue:(id<GeogebraCommonKernelArithmeticNumberValue>) check_protocol_cast(lt, @protocol(GeogebraCommonKernelArithmeticNumberValue))];
  }
  return [((GeogebraCommonKernelArithmeticExpressionNodeEvaluator *) nil_chk(ev)) illegalArgumentWithGeogebraCommonKernelArithmeticExpressionValue:lt withGeogebraCommonKernelArithmeticExpressionValue:rt withNSString:@"gammaIncomplete"];
}

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  GeogebraCommonPluginOperation_$64Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelStringTemplate:withBoolean:", "handle", "Lgeogebra.common.kernel.arithmetic.ExpressionValue;", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonPluginOperation_$64Enum = { 2, "", "geogebra.common.plugin", "Operation", 0xc018, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonPluginOperation_$64Enum;
}

@end

void GeogebraCommonPluginOperation_$64Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$64Enum *self, NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperationEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

GeogebraCommonPluginOperation_$64Enum *new_GeogebraCommonPluginOperation_$64Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperation_$64Enum *self = [GeogebraCommonPluginOperation_$64Enum alloc];
  GeogebraCommonPluginOperation_$64Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonPluginOperation_$64Enum)

@implementation GeogebraCommonPluginOperation_$65Enum

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX {
  if ([GeogebraCommonKernelArithmeticNumberValue_class_() isInstance:lt] && [GeogebraCommonKernelArithmeticNumberValue_class_() isInstance:rt]) {
    return [((GeogebraCommonKernelArithmeticMyDouble *) nil_chk([((id<GeogebraCommonKernelArithmeticNumberValue>) nil_chk(((id<GeogebraCommonKernelArithmeticNumberValue>) check_protocol_cast(rt, @protocol(GeogebraCommonKernelArithmeticNumberValue))))) getNumber])) gammaIncompleteRegularizedWithGeogebraCommonKernelArithmeticNumberValue:(id<GeogebraCommonKernelArithmeticNumberValue>) check_protocol_cast(lt, @protocol(GeogebraCommonKernelArithmeticNumberValue))];
  }
  return [((GeogebraCommonKernelArithmeticExpressionNodeEvaluator *) nil_chk(ev)) illegalArgumentWithGeogebraCommonKernelArithmeticExpressionValue:lt withGeogebraCommonKernelArithmeticExpressionValue:rt withNSString:@"gammaIncompleteRegularized"];
}

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  GeogebraCommonPluginOperation_$65Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelStringTemplate:withBoolean:", "handle", "Lgeogebra.common.kernel.arithmetic.ExpressionValue;", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonPluginOperation_$65Enum = { 2, "", "geogebra.common.plugin", "Operation", 0xc018, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonPluginOperation_$65Enum;
}

@end

void GeogebraCommonPluginOperation_$65Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$65Enum *self, NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperationEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

GeogebraCommonPluginOperation_$65Enum *new_GeogebraCommonPluginOperation_$65Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperation_$65Enum *self = [GeogebraCommonPluginOperation_$65Enum alloc];
  GeogebraCommonPluginOperation_$65Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonPluginOperation_$65Enum)

@implementation GeogebraCommonPluginOperation_$66Enum

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX {
  if ([GeogebraCommonKernelArithmeticNumberValue_class_() isInstance:lt] && [GeogebraCommonKernelArithmeticNumberValue_class_() isInstance:rt]) {
    return [((GeogebraCommonKernelArithmeticMyDouble *) nil_chk([((id<GeogebraCommonKernelArithmeticNumberValue>) nil_chk(((id<GeogebraCommonKernelArithmeticNumberValue>) check_protocol_cast(rt, @protocol(GeogebraCommonKernelArithmeticNumberValue))))) getNumber])) betaWithGeogebraCommonKernelArithmeticNumberValue:(id<GeogebraCommonKernelArithmeticNumberValue>) check_protocol_cast(lt, @protocol(GeogebraCommonKernelArithmeticNumberValue))];
  }
  return [((GeogebraCommonKernelArithmeticExpressionNodeEvaluator *) nil_chk(ev)) illegalArgumentWithGeogebraCommonKernelArithmeticExpressionValue:lt withGeogebraCommonKernelArithmeticExpressionValue:rt withNSString:@"beta("];
}

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  GeogebraCommonPluginOperation_$66Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelStringTemplate:withBoolean:", "handle", "Lgeogebra.common.kernel.arithmetic.ExpressionValue;", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonPluginOperation_$66Enum = { 2, "", "geogebra.common.plugin", "Operation", 0xc018, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonPluginOperation_$66Enum;
}

@end

void GeogebraCommonPluginOperation_$66Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$66Enum *self, NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperationEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

GeogebraCommonPluginOperation_$66Enum *new_GeogebraCommonPluginOperation_$66Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperation_$66Enum *self = [GeogebraCommonPluginOperation_$66Enum alloc];
  GeogebraCommonPluginOperation_$66Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonPluginOperation_$66Enum)

@implementation GeogebraCommonPluginOperation_$67Enum

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX {
  if ([GeogebraCommonKernelArithmeticVectorValue_class_() isInstance:lt] && [GeogebraCommonKernelArithmeticNumberValue_class_() isInstance:rt]) {
    return [((GeogebraCommonKernelArithmeticMyDouble *) nil_chk([((id<GeogebraCommonKernelArithmeticNumberValue>) nil_chk(((id<GeogebraCommonKernelArithmeticNumberValue>) check_protocol_cast(rt, @protocol(GeogebraCommonKernelArithmeticNumberValue))))) getNumber])) betaIncompleteWithGeogebraCommonKernelArithmeticVectorValue:(id<GeogebraCommonKernelArithmeticVectorValue>) check_protocol_cast(lt, @protocol(GeogebraCommonKernelArithmeticVectorValue))];
  }
  return [((GeogebraCommonKernelArithmeticExpressionNodeEvaluator *) nil_chk(ev)) illegalArgumentWithGeogebraCommonKernelArithmeticExpressionValue:lt withGeogebraCommonKernelArithmeticExpressionValue:rt withNSString:@"betaIncomplete("];
}

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  GeogebraCommonPluginOperation_$67Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelStringTemplate:withBoolean:", "handle", "Lgeogebra.common.kernel.arithmetic.ExpressionValue;", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonPluginOperation_$67Enum = { 2, "", "geogebra.common.plugin", "Operation", 0xc018, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonPluginOperation_$67Enum;
}

@end

void GeogebraCommonPluginOperation_$67Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$67Enum *self, NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperationEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

GeogebraCommonPluginOperation_$67Enum *new_GeogebraCommonPluginOperation_$67Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperation_$67Enum *self = [GeogebraCommonPluginOperation_$67Enum alloc];
  GeogebraCommonPluginOperation_$67Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonPluginOperation_$67Enum)

@implementation GeogebraCommonPluginOperation_$68Enum

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX {
  if ([GeogebraCommonKernelArithmeticVectorValue_class_() isInstance:lt] && [GeogebraCommonKernelArithmeticNumberValue_class_() isInstance:rt]) {
    return [((GeogebraCommonKernelArithmeticMyDouble *) nil_chk([((id<GeogebraCommonKernelArithmeticNumberValue>) nil_chk(((id<GeogebraCommonKernelArithmeticNumberValue>) check_protocol_cast(rt, @protocol(GeogebraCommonKernelArithmeticNumberValue))))) getNumber])) betaIncompleteRegularizedWithGeogebraCommonKernelArithmeticVectorValue:(id<GeogebraCommonKernelArithmeticVectorValue>) check_protocol_cast(lt, @protocol(GeogebraCommonKernelArithmeticVectorValue))];
  }
  return [((GeogebraCommonKernelArithmeticExpressionNodeEvaluator *) nil_chk(ev)) illegalArgumentWithGeogebraCommonKernelArithmeticExpressionValue:lt withGeogebraCommonKernelArithmeticExpressionValue:rt withNSString:@"betaIncompleteRegularized("];
}

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  GeogebraCommonPluginOperation_$68Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelStringTemplate:withBoolean:", "handle", "Lgeogebra.common.kernel.arithmetic.ExpressionValue;", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonPluginOperation_$68Enum = { 2, "", "geogebra.common.plugin", "Operation", 0xc018, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonPluginOperation_$68Enum;
}

@end

void GeogebraCommonPluginOperation_$68Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$68Enum *self, NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperationEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

GeogebraCommonPluginOperation_$68Enum *new_GeogebraCommonPluginOperation_$68Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperation_$68Enum *self = [GeogebraCommonPluginOperation_$68Enum alloc];
  GeogebraCommonPluginOperation_$68Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonPluginOperation_$68Enum)

@implementation GeogebraCommonPluginOperation_$69Enum

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX {
  if ([GeogebraCommonKernelArithmeticNumberValue_class_() isInstance:lt]) {
    return [((GeogebraCommonKernelArithmeticMyDouble *) nil_chk([((id<GeogebraCommonKernelArithmeticNumberValue>) nil_chk(((id<GeogebraCommonKernelArithmeticNumberValue>) check_protocol_cast(lt, @protocol(GeogebraCommonKernelArithmeticNumberValue))))) getNumber])) erf];
  }
  return [((GeogebraCommonKernelArithmeticExpressionNodeEvaluator *) nil_chk(ev)) polynomialOrDieWithGeogebraCommonKernelArithmeticExpressionValue:lt withGeogebraCommonPluginOperationEnum:self withNSString:@"erf("];
}

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  GeogebraCommonPluginOperation_$69Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelStringTemplate:withBoolean:", "handle", "Lgeogebra.common.kernel.arithmetic.ExpressionValue;", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonPluginOperation_$69Enum = { 2, "", "geogebra.common.plugin", "Operation", 0xc018, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonPluginOperation_$69Enum;
}

@end

void GeogebraCommonPluginOperation_$69Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$69Enum *self, NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperationEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

GeogebraCommonPluginOperation_$69Enum *new_GeogebraCommonPluginOperation_$69Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperation_$69Enum *self = [GeogebraCommonPluginOperation_$69Enum alloc];
  GeogebraCommonPluginOperation_$69Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonPluginOperation_$69Enum)

@implementation GeogebraCommonPluginOperation_$70Enum

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX {
  if ([GeogebraCommonKernelArithmeticNumberValue_class_() isInstance:lt]) {
    return [((GeogebraCommonKernelArithmeticMyDouble *) nil_chk([((id<GeogebraCommonKernelArithmeticNumberValue>) nil_chk(((id<GeogebraCommonKernelArithmeticNumberValue>) check_protocol_cast(lt, @protocol(GeogebraCommonKernelArithmeticNumberValue))))) getNumber])) psi];
  }
  return [((GeogebraCommonKernelArithmeticExpressionNodeEvaluator *) nil_chk(ev)) polynomialOrDieWithGeogebraCommonKernelArithmeticExpressionValue:lt withGeogebraCommonPluginOperationEnum:self withNSString:@"psi("];
}

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  GeogebraCommonPluginOperation_$70Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelStringTemplate:withBoolean:", "handle", "Lgeogebra.common.kernel.arithmetic.ExpressionValue;", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonPluginOperation_$70Enum = { 2, "", "geogebra.common.plugin", "Operation", 0xc018, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonPluginOperation_$70Enum;
}

@end

void GeogebraCommonPluginOperation_$70Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$70Enum *self, NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperationEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

GeogebraCommonPluginOperation_$70Enum *new_GeogebraCommonPluginOperation_$70Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperation_$70Enum *self = [GeogebraCommonPluginOperation_$70Enum alloc];
  GeogebraCommonPluginOperation_$70Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonPluginOperation_$70Enum)

@implementation GeogebraCommonPluginOperation_$71Enum

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX {
  if ([GeogebraCommonKernelArithmeticNumberValue_class_() isInstance:lt] && [GeogebraCommonKernelArithmeticNumberValue_class_() isInstance:rt]) {
    return [((GeogebraCommonKernelArithmeticMyDouble *) nil_chk([((id<GeogebraCommonKernelArithmeticNumberValue>) nil_chk(((id<GeogebraCommonKernelArithmeticNumberValue>) check_protocol_cast(rt, @protocol(GeogebraCommonKernelArithmeticNumberValue))))) getNumber])) polygammaWithGeogebraCommonKernelArithmeticNumberValue:(id<GeogebraCommonKernelArithmeticNumberValue>) check_protocol_cast(lt, @protocol(GeogebraCommonKernelArithmeticNumberValue))];
  }
  return [((GeogebraCommonKernelArithmeticExpressionNodeEvaluator *) nil_chk(ev)) polynomialOrDieWithGeogebraCommonKernelArithmeticExpressionValue:lt withGeogebraCommonPluginOperationEnum:self withNSString:@"polygamma("];
}

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  GeogebraCommonPluginOperation_$71Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelStringTemplate:withBoolean:", "handle", "Lgeogebra.common.kernel.arithmetic.ExpressionValue;", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonPluginOperation_$71Enum = { 2, "", "geogebra.common.plugin", "Operation", 0xc018, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonPluginOperation_$71Enum;
}

@end

void GeogebraCommonPluginOperation_$71Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$71Enum *self, NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperationEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

GeogebraCommonPluginOperation_$71Enum *new_GeogebraCommonPluginOperation_$71Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperation_$71Enum *self = [GeogebraCommonPluginOperation_$71Enum alloc];
  GeogebraCommonPluginOperation_$71Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonPluginOperation_$71Enum)

@implementation GeogebraCommonPluginOperation_$72Enum

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX {
  if ([GeogebraCommonKernelArithmeticNumberValue_class_() isInstance:lt]) {
    return [((GeogebraCommonKernelArithmeticMyDouble *) nil_chk([((id<GeogebraCommonKernelArithmeticNumberValue>) nil_chk(((id<GeogebraCommonKernelArithmeticNumberValue>) check_protocol_cast(lt, @protocol(GeogebraCommonKernelArithmeticNumberValue))))) getNumber])) log10];
  }
  return [((GeogebraCommonKernelArithmeticExpressionNodeEvaluator *) nil_chk(ev)) polynomialOrDieWithGeogebraCommonKernelArithmeticExpressionValue:lt withGeogebraCommonPluginOperationEnum:self withNSString:@"log10("];
}

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  GeogebraCommonPluginOperation_$72Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelStringTemplate:withBoolean:", "handle", "Lgeogebra.common.kernel.arithmetic.ExpressionValue;", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonPluginOperation_$72Enum = { 2, "", "geogebra.common.plugin", "Operation", 0xc018, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonPluginOperation_$72Enum;
}

@end

void GeogebraCommonPluginOperation_$72Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$72Enum *self, NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperationEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

GeogebraCommonPluginOperation_$72Enum *new_GeogebraCommonPluginOperation_$72Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperation_$72Enum *self = [GeogebraCommonPluginOperation_$72Enum alloc];
  GeogebraCommonPluginOperation_$72Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonPluginOperation_$72Enum)

@implementation GeogebraCommonPluginOperation_$73Enum

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX {
  if ([GeogebraCommonKernelArithmeticNumberValue_class_() isInstance:lt]) {
    return [((GeogebraCommonKernelArithmeticMyDouble *) nil_chk([((id<GeogebraCommonKernelArithmeticNumberValue>) nil_chk(((id<GeogebraCommonKernelArithmeticNumberValue>) check_protocol_cast(lt, @protocol(GeogebraCommonKernelArithmeticNumberValue))))) getNumber])) log2];
  }
  return [((GeogebraCommonKernelArithmeticExpressionNodeEvaluator *) nil_chk(ev)) polynomialOrDieWithGeogebraCommonKernelArithmeticExpressionValue:lt withGeogebraCommonPluginOperationEnum:self withNSString:@"log2("];
}

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  GeogebraCommonPluginOperation_$73Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelStringTemplate:withBoolean:", "handle", "Lgeogebra.common.kernel.arithmetic.ExpressionValue;", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonPluginOperation_$73Enum = { 2, "", "geogebra.common.plugin", "Operation", 0xc018, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonPluginOperation_$73Enum;
}

@end

void GeogebraCommonPluginOperation_$73Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$73Enum *self, NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperationEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

GeogebraCommonPluginOperation_$73Enum *new_GeogebraCommonPluginOperation_$73Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperation_$73Enum *self = [GeogebraCommonPluginOperation_$73Enum alloc];
  GeogebraCommonPluginOperation_$73Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonPluginOperation_$73Enum)

@implementation GeogebraCommonPluginOperation_$74Enum

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX {
  if ([GeogebraCommonKernelArithmeticNumberValue_class_() isInstance:lt] && [GeogebraCommonKernelArithmeticNumberValue_class_() isInstance:rt]) {
    return [((GeogebraCommonKernelArithmeticMyDouble *) nil_chk([((id<GeogebraCommonKernelArithmeticNumberValue>) nil_chk(((id<GeogebraCommonKernelArithmeticNumberValue>) check_protocol_cast(rt, @protocol(GeogebraCommonKernelArithmeticNumberValue))))) getNumber])) logWithGeogebraCommonKernelArithmeticNumberValue:(id<GeogebraCommonKernelArithmeticNumberValue>) check_protocol_cast(lt, @protocol(GeogebraCommonKernelArithmeticNumberValue))];
  }
  return [((GeogebraCommonKernelArithmeticExpressionNodeEvaluator *) nil_chk(ev)) illegalArgumentWithGeogebraCommonKernelArithmeticExpressionValue:lt withGeogebraCommonKernelArithmeticExpressionValue:rt withNSString:@"log("];
}

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  GeogebraCommonPluginOperation_$74Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelStringTemplate:withBoolean:", "handle", "Lgeogebra.common.kernel.arithmetic.ExpressionValue;", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonPluginOperation_$74Enum = { 2, "", "geogebra.common.plugin", "Operation", 0xc018, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonPluginOperation_$74Enum;
}

@end

void GeogebraCommonPluginOperation_$74Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$74Enum *self, NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperationEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

GeogebraCommonPluginOperation_$74Enum *new_GeogebraCommonPluginOperation_$74Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperation_$74Enum *self = [GeogebraCommonPluginOperation_$74Enum alloc];
  GeogebraCommonPluginOperation_$74Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonPluginOperation_$74Enum)

@implementation GeogebraCommonPluginOperation_$75Enum

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX {
  if ([GeogebraCommonKernelArithmeticNumberValue_class_() isInstance:lt]) {
    return [((GeogebraCommonKernelArithmeticMyDouble *) nil_chk([((id<GeogebraCommonKernelArithmeticNumberValue>) nil_chk(((id<GeogebraCommonKernelArithmeticNumberValue>) check_protocol_cast(lt, @protocol(GeogebraCommonKernelArithmeticNumberValue))))) getNumber])) cosineIntegral];
  }
  return [((GeogebraCommonKernelArithmeticExpressionNodeEvaluator *) nil_chk(ev)) polynomialOrDieWithGeogebraCommonKernelArithmeticExpressionValue:lt withGeogebraCommonPluginOperationEnum:self withNSString:@"cosIntegral("];
}

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  GeogebraCommonPluginOperation_$75Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelStringTemplate:withBoolean:", "handle", "Lgeogebra.common.kernel.arithmetic.ExpressionValue;", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonPluginOperation_$75Enum = { 2, "", "geogebra.common.plugin", "Operation", 0xc018, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonPluginOperation_$75Enum;
}

@end

void GeogebraCommonPluginOperation_$75Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$75Enum *self, NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperationEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

GeogebraCommonPluginOperation_$75Enum *new_GeogebraCommonPluginOperation_$75Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperation_$75Enum *self = [GeogebraCommonPluginOperation_$75Enum alloc];
  GeogebraCommonPluginOperation_$75Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonPluginOperation_$75Enum)

@implementation GeogebraCommonPluginOperation_$76Enum

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX {
  if ([GeogebraCommonKernelArithmeticNumberValue_class_() isInstance:lt]) {
    return [((GeogebraCommonKernelArithmeticMyDouble *) nil_chk([((id<GeogebraCommonKernelArithmeticNumberValue>) nil_chk(((id<GeogebraCommonKernelArithmeticNumberValue>) check_protocol_cast(lt, @protocol(GeogebraCommonKernelArithmeticNumberValue))))) getNumber])) sineIntegral];
  }
  return [((GeogebraCommonKernelArithmeticExpressionNodeEvaluator *) nil_chk(ev)) polynomialOrDieWithGeogebraCommonKernelArithmeticExpressionValue:lt withGeogebraCommonPluginOperationEnum:self withNSString:@"sinIntegral("];
}

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  GeogebraCommonPluginOperation_$76Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelStringTemplate:withBoolean:", "handle", "Lgeogebra.common.kernel.arithmetic.ExpressionValue;", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonPluginOperation_$76Enum = { 2, "", "geogebra.common.plugin", "Operation", 0xc018, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonPluginOperation_$76Enum;
}

@end

void GeogebraCommonPluginOperation_$76Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$76Enum *self, NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperationEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

GeogebraCommonPluginOperation_$76Enum *new_GeogebraCommonPluginOperation_$76Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperation_$76Enum *self = [GeogebraCommonPluginOperation_$76Enum alloc];
  GeogebraCommonPluginOperation_$76Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonPluginOperation_$76Enum)

@implementation GeogebraCommonPluginOperation_$77Enum

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX {
  if ([GeogebraCommonKernelArithmeticNumberValue_class_() isInstance:lt]) {
    return [((GeogebraCommonKernelArithmeticMyDouble *) nil_chk([((id<GeogebraCommonKernelArithmeticNumberValue>) nil_chk(((id<GeogebraCommonKernelArithmeticNumberValue>) check_protocol_cast(lt, @protocol(GeogebraCommonKernelArithmeticNumberValue))))) getNumber])) expIntegral];
  }
  return [((GeogebraCommonKernelArithmeticExpressionNodeEvaluator *) nil_chk(ev)) polynomialOrDieWithGeogebraCommonKernelArithmeticExpressionValue:lt withGeogebraCommonPluginOperationEnum:self withNSString:@"expIntegral("];
}

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  GeogebraCommonPluginOperation_$77Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelStringTemplate:withBoolean:", "handle", "Lgeogebra.common.kernel.arithmetic.ExpressionValue;", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonPluginOperation_$77Enum = { 2, "", "geogebra.common.plugin", "Operation", 0xc018, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonPluginOperation_$77Enum;
}

@end

void GeogebraCommonPluginOperation_$77Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$77Enum *self, NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperationEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

GeogebraCommonPluginOperation_$77Enum *new_GeogebraCommonPluginOperation_$77Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperation_$77Enum *self = [GeogebraCommonPluginOperation_$77Enum alloc];
  GeogebraCommonPluginOperation_$77Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonPluginOperation_$77Enum)

@implementation GeogebraCommonPluginOperation_$78Enum

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX {
  if ([GeogebraCommonKernelArithmeticNumberValue_class_() isInstance:lt]) {
    return [((GeogebraCommonKernelArithmeticMyDouble *) nil_chk([((id<GeogebraCommonKernelArithmeticNumberValue>) nil_chk(((id<GeogebraCommonKernelArithmeticNumberValue>) check_protocol_cast(lt, @protocol(GeogebraCommonKernelArithmeticNumberValue))))) getNumber])) cbrt];
  }
  else if ([GeogebraCommonKernelArithmeticVectorValue_class_() isInstance:lt]) {
    GeogebraCommonKernelGeosGeoVec2D *vec = [((id<GeogebraCommonKernelArithmeticVectorValue>) nil_chk(((id<GeogebraCommonKernelArithmeticVectorValue>) check_protocol_cast(lt, @protocol(GeogebraCommonKernelArithmeticVectorValue))))) getVector];
    GeogebraCommonKernelGeosGeoVec2D_complexCbrtWithGeogebraCommonKernelGeosGeoVec2D_withGeogebraCommonKernelGeosGeoVec2D_(vec, vec);
    return vec;
  }
  return [((GeogebraCommonKernelArithmeticExpressionNodeEvaluator *) nil_chk(ev)) polynomialOrDieWithGeogebraCommonKernelArithmeticExpressionValue:lt withGeogebraCommonPluginOperationEnum:self withNSString:@"cbrt("];
}

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  GeogebraCommonPluginOperation_$78Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelStringTemplate:withBoolean:", "handle", "Lgeogebra.common.kernel.arithmetic.ExpressionValue;", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonPluginOperation_$78Enum = { 2, "", "geogebra.common.plugin", "Operation", 0xc018, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonPluginOperation_$78Enum;
}

@end

void GeogebraCommonPluginOperation_$78Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$78Enum *self, NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperationEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

GeogebraCommonPluginOperation_$78Enum *new_GeogebraCommonPluginOperation_$78Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperation_$78Enum *self = [GeogebraCommonPluginOperation_$78Enum alloc];
  GeogebraCommonPluginOperation_$78Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonPluginOperation_$78Enum)

@implementation GeogebraCommonPluginOperation_$79Enum

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX {
  return [((id<GeogebraCommonKernelArithmeticNumberValue>) nil_chk(((id<GeogebraCommonKernelArithmeticNumberValue>) check_protocol_cast(lt, @protocol(GeogebraCommonKernelArithmeticNumberValue))))) getNumber];
}

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  GeogebraCommonPluginOperation_$79Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelStringTemplate:withBoolean:", "handle", "Lgeogebra.common.kernel.arithmetic.ExpressionValue;", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonPluginOperation_$79Enum = { 2, "", "geogebra.common.plugin", "Operation", 0xc018, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonPluginOperation_$79Enum;
}

@end

void GeogebraCommonPluginOperation_$79Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$79Enum *self, NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperationEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

GeogebraCommonPluginOperation_$79Enum *new_GeogebraCommonPluginOperation_$79Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperation_$79Enum *self = [GeogebraCommonPluginOperation_$79Enum alloc];
  GeogebraCommonPluginOperation_$79Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonPluginOperation_$79Enum)

@implementation GeogebraCommonPluginOperation_$80Enum

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX {
  if ([GeogebraCommonKernelArithmeticNumberValue_class_() isInstance:lt]) {
    return [((id<GeogebraCommonKernelArithmeticNumberValue>) nil_chk(((id<GeogebraCommonKernelArithmeticNumberValue>) check_protocol_cast(lt, @protocol(GeogebraCommonKernelArithmeticNumberValue))))) getNumber];
  }
  else if ([GeogebraCommonKernelArithmeticVectorValue_class_() isInstance:lt]) {
    GeogebraCommonKernelGeosGeoVec2D *vec = [((id<GeogebraCommonKernelArithmeticVectorValue>) nil_chk(((id<GeogebraCommonKernelArithmeticVectorValue>) check_protocol_cast(lt, @protocol(GeogebraCommonKernelArithmeticVectorValue))))) getVector];
    GeogebraCommonKernelGeosGeoVec2D_complexConjugateWithGeogebraCommonKernelGeosGeoVec2D_withGeogebraCommonKernelGeosGeoVec2D_(vec, vec);
    return vec;
  }
  return [((GeogebraCommonKernelArithmeticExpressionNodeEvaluator *) nil_chk(ev)) polynomialOrDieWithGeogebraCommonKernelArithmeticExpressionValue:lt withGeogebraCommonPluginOperationEnum:self withNSString:@"conjugate("];
}

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  GeogebraCommonPluginOperation_$80Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelStringTemplate:withBoolean:", "handle", "Lgeogebra.common.kernel.arithmetic.ExpressionValue;", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonPluginOperation_$80Enum = { 2, "", "geogebra.common.plugin", "Operation", 0xc018, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonPluginOperation_$80Enum;
}

@end

void GeogebraCommonPluginOperation_$80Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$80Enum *self, NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperationEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

GeogebraCommonPluginOperation_$80Enum *new_GeogebraCommonPluginOperation_$80Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperation_$80Enum *self = [GeogebraCommonPluginOperation_$80Enum alloc];
  GeogebraCommonPluginOperation_$80Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonPluginOperation_$80Enum)

@implementation GeogebraCommonPluginOperation_$81Enum

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX {
  GeogebraCommonKernelKernel *kernel = [((GeogebraCommonKernelArithmeticExpressionNodeEvaluator *) nil_chk(ev)) getKernel];
  if ([GeogebraCommonKernelArithmeticVectorValue_class_() isInstance:lt]) {
    GeogebraCommonKernelGeosGeoVec2D *vec = [((id<GeogebraCommonKernelArithmeticVectorValue>) nil_chk(((id<GeogebraCommonKernelArithmeticVectorValue>) check_protocol_cast(lt, @protocol(GeogebraCommonKernelArithmeticVectorValue))))) getVector];
    GeogebraCommonKernelArithmeticMyDouble *ret = [new_GeogebraCommonKernelArithmeticMyDouble_initWithGeogebraCommonKernelKernel_withDouble_(kernel, GeogebraCommonKernelGeosGeoVec2D_argWithGeogebraCommonKernelGeosGeoVec2D_(vec)) autorelease];
    [ret setAngle];
    return ret;
  }
  else if ([GeogebraCommonKernelArithmeticNumberValue_class_() isInstance:lt]) {
    return [new_GeogebraCommonKernelArithmeticMyDouble_initWithGeogebraCommonKernelKernel_withDouble_(kernel, [((id<GeogebraCommonKernelArithmeticNumberValue>) nil_chk(((id<GeogebraCommonKernelArithmeticNumberValue>) check_protocol_cast(lt, @protocol(GeogebraCommonKernelArithmeticNumberValue))))) getDouble] < 0 ? JavaLangMath_PI : 0) autorelease];
  }
  return [ev polynomialOrDieWithGeogebraCommonKernelArithmeticExpressionValue:lt withGeogebraCommonPluginOperationEnum:self withNSString:@"arg("];
}

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  GeogebraCommonPluginOperation_$81Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelStringTemplate:withBoolean:", "handle", "Lgeogebra.common.kernel.arithmetic.ExpressionValue;", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonPluginOperation_$81Enum = { 2, "", "geogebra.common.plugin", "Operation", 0xc018, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonPluginOperation_$81Enum;
}

@end

void GeogebraCommonPluginOperation_$81Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$81Enum *self, NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperationEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

GeogebraCommonPluginOperation_$81Enum *new_GeogebraCommonPluginOperation_$81Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperation_$81Enum *self = [GeogebraCommonPluginOperation_$81Enum alloc];
  GeogebraCommonPluginOperation_$81Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonPluginOperation_$81Enum)

@implementation GeogebraCommonPluginOperation_$82Enum

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX {
  return [((GeogebraCommonKernelArithmeticExpressionNodeEvaluator *) nil_chk(ev)) handleFunctionWithGeogebraCommonKernelArithmeticExpressionValue:lt withGeogebraCommonKernelArithmeticExpressionValue:rt withGeogebraCommonKernelArithmeticExpressionValue:left];
}

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  GeogebraCommonPluginOperation_$82Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelStringTemplate:withBoolean:", "handle", "Lgeogebra.common.kernel.arithmetic.ExpressionValue;", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonPluginOperation_$82Enum = { 2, "", "geogebra.common.plugin", "Operation", 0xc018, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonPluginOperation_$82Enum;
}

@end

void GeogebraCommonPluginOperation_$82Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$82Enum *self, NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperationEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

GeogebraCommonPluginOperation_$82Enum *new_GeogebraCommonPluginOperation_$82Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperation_$82Enum *self = [GeogebraCommonPluginOperation_$82Enum alloc];
  GeogebraCommonPluginOperation_$82Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonPluginOperation_$82Enum)

@implementation GeogebraCommonPluginOperation_$83Enum

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX {
  return [((GeogebraCommonKernelArithmeticExpressionNodeEvaluator *) nil_chk(ev)) handleFunctionNVarWithGeogebraCommonKernelArithmeticExpressionValue:lt withGeogebraCommonKernelArithmeticExpressionValue:rt];
}

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  GeogebraCommonPluginOperation_$83Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelStringTemplate:withBoolean:", "handle", "Lgeogebra.common.kernel.arithmetic.ExpressionValue;", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonPluginOperation_$83Enum = { 2, "", "geogebra.common.plugin", "Operation", 0xc018, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonPluginOperation_$83Enum;
}

@end

void GeogebraCommonPluginOperation_$83Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$83Enum *self, NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperationEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

GeogebraCommonPluginOperation_$83Enum *new_GeogebraCommonPluginOperation_$83Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperation_$83Enum *self = [GeogebraCommonPluginOperation_$83Enum alloc];
  GeogebraCommonPluginOperation_$83Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonPluginOperation_$83Enum)

@implementation GeogebraCommonPluginOperation_$84Enum

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX {
  if ([GeogebraCommonKernelArithmeticNumberValue_class_() isInstance:rt]) {
    id<GeogebraCommonKernelArithmeticNumberValue> arg = (id<GeogebraCommonKernelArithmeticNumberValue>) check_protocol_cast(rt, @protocol(GeogebraCommonKernelArithmeticNumberValue));
    if ([lt isKindOfClass:[GeogebraCommonKernelKernelNDGeoCurveCartesianND class]]) {
      return [((GeogebraCommonKernelKernelNDGeoCurveCartesianND *) nil_chk(((GeogebraCommonKernelKernelNDGeoCurveCartesianND *) check_class_cast(lt, [GeogebraCommonKernelKernelNDGeoCurveCartesianND class])))) evaluateCurveWithDouble:[((id<GeogebraCommonKernelArithmeticNumberValue>) nil_chk(arg)) getDouble]];
    }
    return [((id<GeogebraCommonKernelGeosParametricCurve>) nil_chk(((id<GeogebraCommonKernelGeosParametricCurve>) check_protocol_cast(lt, @protocol(GeogebraCommonKernelGeosParametricCurve))))) evaluateCurveWithDouble:[((id<GeogebraCommonKernelArithmeticNumberValue>) nil_chk(arg)) getDouble]];
  }
  return [((GeogebraCommonKernelArithmeticExpressionNodeEvaluator *) nil_chk(ev)) illegalArgumentWithGeogebraCommonKernelArithmeticExpressionValue:rt];
}

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  GeogebraCommonPluginOperation_$84Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelStringTemplate:withBoolean:", "handle", "Lgeogebra.common.kernel.arithmetic.ExpressionValue;", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonPluginOperation_$84Enum = { 2, "", "geogebra.common.plugin", "Operation", 0xc018, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonPluginOperation_$84Enum;
}

@end

void GeogebraCommonPluginOperation_$84Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$84Enum *self, NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperationEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

GeogebraCommonPluginOperation_$84Enum *new_GeogebraCommonPluginOperation_$84Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperation_$84Enum *self = [GeogebraCommonPluginOperation_$84Enum alloc];
  GeogebraCommonPluginOperation_$84Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonPluginOperation_$84Enum)

@implementation GeogebraCommonPluginOperation_$85Enum

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX {
  if ([GeogebraCommonKernelArithmeticNumberValue_class_() isInstance:rt]) {
    if ([GeogebraCommonKernelArithmeticFunctional_class_() isInstance:lt]) {
      return [((id<GeogebraCommonKernelArithmeticFunctional>) nil_chk(((id<GeogebraCommonKernelArithmeticFunctional>) check_protocol_cast(lt, @protocol(GeogebraCommonKernelArithmeticFunctional))))) getGeoDerivativeWithInt:(jint) JavaLangMath_roundWithDouble_([((id<GeogebraCommonKernelArithmeticNumberValue>) nil_chk(((id<GeogebraCommonKernelArithmeticNumberValue>) check_protocol_cast(rt, @protocol(GeogebraCommonKernelArithmeticNumberValue))))) getDouble])];
    }
    else if ([lt isKindOfClass:[GeogebraCommonKernelKernelNDGeoCurveCartesianND class]]) {
      return [((GeogebraCommonKernelKernelNDGeoCurveCartesianND *) nil_chk(((GeogebraCommonKernelKernelNDGeoCurveCartesianND *) check_class_cast(lt, [GeogebraCommonKernelKernelNDGeoCurveCartesianND class])))) getGeoDerivativeWithInt:(jint) JavaLangMath_roundWithDouble_([((id<GeogebraCommonKernelArithmeticNumberValue>) nil_chk(((id<GeogebraCommonKernelArithmeticNumberValue>) check_protocol_cast(rt, @protocol(GeogebraCommonKernelArithmeticNumberValue))))) getDouble])];
    }
  }
  return [((GeogebraCommonKernelArithmeticExpressionNodeEvaluator *) nil_chk(ev)) illegalArgumentWithGeogebraCommonKernelArithmeticExpressionValue:rt];
}

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  GeogebraCommonPluginOperation_$85Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelStringTemplate:withBoolean:", "handle", "Lgeogebra.common.kernel.arithmetic.ExpressionValue;", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonPluginOperation_$85Enum = { 2, "", "geogebra.common.plugin", "Operation", 0xc018, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonPluginOperation_$85Enum;
}

@end

void GeogebraCommonPluginOperation_$85Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$85Enum *self, NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperationEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

GeogebraCommonPluginOperation_$85Enum *new_GeogebraCommonPluginOperation_$85Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperation_$85Enum *self = [GeogebraCommonPluginOperation_$85Enum alloc];
  GeogebraCommonPluginOperation_$85Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonPluginOperation_$85Enum)

@implementation GeogebraCommonPluginOperation_$86Enum

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX {
  return [new_GeogebraCommonKernelArithmeticMyDouble_initWithGeogebraCommonKernelKernel_withDouble_([((GeogebraCommonKernelArithmeticExpressionNodeEvaluator *) nil_chk(ev)) getKernel], JavaLangDouble_NaN) autorelease];
}

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  GeogebraCommonPluginOperation_$86Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelStringTemplate:withBoolean:", "handle", "Lgeogebra.common.kernel.arithmetic.ExpressionValue;", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonPluginOperation_$86Enum = { 2, "", "geogebra.common.plugin", "Operation", 0xc018, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonPluginOperation_$86Enum;
}

@end

void GeogebraCommonPluginOperation_$86Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$86Enum *self, NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperationEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

GeogebraCommonPluginOperation_$86Enum *new_GeogebraCommonPluginOperation_$86Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperation_$86Enum *self = [GeogebraCommonPluginOperation_$86Enum alloc];
  GeogebraCommonPluginOperation_$86Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonPluginOperation_$86Enum)

@implementation GeogebraCommonPluginOperation_$87Enum

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX {
  return [new_GeogebraCommonKernelArithmeticMyDouble_initWithGeogebraCommonKernelKernel_withDouble_([((GeogebraCommonKernelArithmeticExpressionNodeEvaluator *) nil_chk(ev)) getKernel], JavaLangDouble_NaN) autorelease];
}

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  GeogebraCommonPluginOperation_$87Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelStringTemplate:withBoolean:", "handle", "Lgeogebra.common.kernel.arithmetic.ExpressionValue;", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonPluginOperation_$87Enum = { 2, "", "geogebra.common.plugin", "Operation", 0xc018, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonPluginOperation_$87Enum;
}

@end

void GeogebraCommonPluginOperation_$87Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$87Enum *self, NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperationEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

GeogebraCommonPluginOperation_$87Enum *new_GeogebraCommonPluginOperation_$87Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperation_$87Enum *self = [GeogebraCommonPluginOperation_$87Enum alloc];
  GeogebraCommonPluginOperation_$87Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonPluginOperation_$87Enum)

@implementation GeogebraCommonPluginOperation_$88Enum

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX {
  return [new_GeogebraCommonKernelArithmeticMyDouble_initWithGeogebraCommonKernelKernel_withDouble_([((GeogebraCommonKernelArithmeticExpressionNodeEvaluator *) nil_chk(ev)) getKernel], JavaLangDouble_NaN) autorelease];
}

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  GeogebraCommonPluginOperation_$88Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelStringTemplate:withBoolean:", "handle", "Lgeogebra.common.kernel.arithmetic.ExpressionValue;", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonPluginOperation_$88Enum = { 2, "", "geogebra.common.plugin", "Operation", 0xc018, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonPluginOperation_$88Enum;
}

@end

void GeogebraCommonPluginOperation_$88Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$88Enum *self, NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperationEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

GeogebraCommonPluginOperation_$88Enum *new_GeogebraCommonPluginOperation_$88Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperation_$88Enum *self = [GeogebraCommonPluginOperation_$88Enum alloc];
  GeogebraCommonPluginOperation_$88Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonPluginOperation_$88Enum)

@implementation GeogebraCommonPluginOperation_$89Enum

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX {
  if ([GeogebraCommonKernelArithmeticBooleanValue_class_() isInstance:lt]) {
    if ([((id<GeogebraCommonKernelArithmeticBooleanValue>) nil_chk(((id<GeogebraCommonKernelArithmeticBooleanValue>) check_protocol_cast(lt, @protocol(GeogebraCommonKernelArithmeticBooleanValue))))) getBoolean]) {
      return rt;
    }
    return [new_GeogebraCommonKernelArithmeticMyDouble_initWithGeogebraCommonKernelKernel_withDouble_([((GeogebraCommonKernelArithmeticExpressionNodeEvaluator *) nil_chk(ev)) getKernel], JavaLangDouble_NaN) autorelease];
  }
  return [((GeogebraCommonKernelArithmeticExpressionNodeEvaluator *) nil_chk(ev)) illegalArgumentWithGeogebraCommonKernelArithmeticExpressionValue:lt withGeogebraCommonKernelArithmeticExpressionValue:rt withNSString:@"if("];
}

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  GeogebraCommonPluginOperation_$89Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelStringTemplate:withBoolean:", "handle", "Lgeogebra.common.kernel.arithmetic.ExpressionValue;", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonPluginOperation_$89Enum = { 2, "", "geogebra.common.plugin", "Operation", 0xc018, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonPluginOperation_$89Enum;
}

@end

void GeogebraCommonPluginOperation_$89Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$89Enum *self, NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperationEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

GeogebraCommonPluginOperation_$89Enum *new_GeogebraCommonPluginOperation_$89Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperation_$89Enum *self = [GeogebraCommonPluginOperation_$89Enum alloc];
  GeogebraCommonPluginOperation_$89Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonPluginOperation_$89Enum)

@implementation GeogebraCommonPluginOperation_$90Enum

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX {
  if ([lt isKindOfClass:[GeogebraCommonKernelArithmeticMyNumberPair class]]) {
    id<GeogebraCommonKernelArithmeticExpressionValue> cond = [((id<GeogebraCommonKernelArithmeticExpressionValue>) nil_chk([((GeogebraCommonKernelArithmeticMyNumberPair *) nil_chk(((GeogebraCommonKernelArithmeticMyNumberPair *) check_class_cast(lt, [GeogebraCommonKernelArithmeticMyNumberPair class])))) getX])) evaluateWithGeogebraCommonKernelStringTemplate:tpl];
    if ([GeogebraCommonKernelArithmeticBooleanValue_class_() isInstance:cond]) {
      if ([((id<GeogebraCommonKernelArithmeticBooleanValue>) nil_chk(((id<GeogebraCommonKernelArithmeticBooleanValue>) check_protocol_cast(cond, @protocol(GeogebraCommonKernelArithmeticBooleanValue))))) getBoolean]) {
        return [((id<GeogebraCommonKernelArithmeticExpressionValue>) nil_chk([((GeogebraCommonKernelArithmeticMyNumberPair *) nil_chk(((GeogebraCommonKernelArithmeticMyNumberPair *) check_class_cast(lt, [GeogebraCommonKernelArithmeticMyNumberPair class])))) getY])) evaluateWithGeogebraCommonKernelStringTemplate:tpl];
      }
      return rt;
    }
  }
  return [((GeogebraCommonKernelArithmeticExpressionNodeEvaluator *) nil_chk(ev)) illegalArgumentWithGeogebraCommonKernelArithmeticExpressionValue:lt withGeogebraCommonKernelArithmeticExpressionValue:rt withNSString:@"if("];
}

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  GeogebraCommonPluginOperation_$90Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelStringTemplate:withBoolean:", "handle", "Lgeogebra.common.kernel.arithmetic.ExpressionValue;", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonPluginOperation_$90Enum = { 2, "", "geogebra.common.plugin", "Operation", 0xc018, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonPluginOperation_$90Enum;
}

@end

void GeogebraCommonPluginOperation_$90Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$90Enum *self, NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperationEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

GeogebraCommonPluginOperation_$90Enum *new_GeogebraCommonPluginOperation_$90Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperation_$90Enum *self = [GeogebraCommonPluginOperation_$90Enum alloc];
  GeogebraCommonPluginOperation_$90Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonPluginOperation_$90Enum)

@implementation GeogebraCommonPluginOperation_$91Enum

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX {
  if ([lt isKindOfClass:[GeogebraCommonKernelArithmeticMyList class]] && [rt isKindOfClass:[GeogebraCommonKernelArithmeticMyList class]]) {
    GeogebraCommonKernelArithmeticMyList *cond = (GeogebraCommonKernelArithmeticMyList *) check_class_cast(lt, [GeogebraCommonKernelArithmeticMyList class]);
    for (jint i = 0; i < [((GeogebraCommonKernelArithmeticMyList *) nil_chk(cond)) size]; i++) {
      id<GeogebraCommonKernelArithmeticExpressionValue> curr = [((id<GeogebraCommonKernelArithmeticExpressionValue>) nil_chk([cond getListElementWithInt:i])) evaluateWithGeogebraCommonKernelStringTemplate:tpl];
      if ([GeogebraCommonKernelArithmeticBooleanValue_class_() isInstance:curr]) {
        if ([((id<GeogebraCommonKernelArithmeticBooleanValue>) nil_chk(((id<GeogebraCommonKernelArithmeticBooleanValue>) check_protocol_cast(curr, @protocol(GeogebraCommonKernelArithmeticBooleanValue))))) getBoolean]) {
          return [((id<GeogebraCommonKernelArithmeticExpressionValue>) nil_chk([((GeogebraCommonKernelArithmeticMyList *) nil_chk(((GeogebraCommonKernelArithmeticMyList *) check_class_cast(rt, [GeogebraCommonKernelArithmeticMyList class])))) getListElementWithInt:i])) evaluateWithGeogebraCommonKernelStringTemplate:tpl];
        }
      }
    }
    return [cond size] == [((GeogebraCommonKernelArithmeticMyList *) nil_chk(((GeogebraCommonKernelArithmeticMyList *) check_class_cast(rt, [GeogebraCommonKernelArithmeticMyList class])))) size] ? [new_GeogebraCommonKernelArithmeticMyDouble_initWithGeogebraCommonKernelKernel_withDouble_([((GeogebraCommonKernelArithmeticExpressionNodeEvaluator *) nil_chk(ev)) getKernel], JavaLangDouble_NaN) autorelease] : ((id) [((id<GeogebraCommonKernelArithmeticExpressionValue>) nil_chk([((GeogebraCommonKernelArithmeticMyList *) nil_chk(((GeogebraCommonKernelArithmeticMyList *) check_class_cast(rt, [GeogebraCommonKernelArithmeticMyList class])))) getListElementWithInt:[cond size]])) evaluateWithGeogebraCommonKernelStringTemplate:tpl]);
  }
  return [((GeogebraCommonKernelArithmeticExpressionNodeEvaluator *) nil_chk(ev)) illegalArgumentWithGeogebraCommonKernelArithmeticExpressionValue:lt withGeogebraCommonKernelArithmeticExpressionValue:rt withNSString:@"if("];
}

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  GeogebraCommonPluginOperation_$91Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelStringTemplate:withBoolean:", "handle", "Lgeogebra.common.kernel.arithmetic.ExpressionValue;", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonPluginOperation_$91Enum = { 2, "", "geogebra.common.plugin", "Operation", 0xc018, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonPluginOperation_$91Enum;
}

@end

void GeogebraCommonPluginOperation_$91Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$91Enum *self, NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperationEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

GeogebraCommonPluginOperation_$91Enum *new_GeogebraCommonPluginOperation_$91Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperation_$91Enum *self = [GeogebraCommonPluginOperation_$91Enum alloc];
  GeogebraCommonPluginOperation_$91Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonPluginOperation_$91Enum)

@implementation GeogebraCommonPluginOperation_$92Enum

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX {
  return lt;
}

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  GeogebraCommonPluginOperation_$92Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelStringTemplate:withBoolean:", "handle", "Lgeogebra.common.kernel.arithmetic.ExpressionValue;", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonPluginOperation_$92Enum = { 2, "", "geogebra.common.plugin", "Operation", 0xc018, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonPluginOperation_$92Enum;
}

@end

void GeogebraCommonPluginOperation_$92Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$92Enum *self, NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperationEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

GeogebraCommonPluginOperation_$92Enum *new_GeogebraCommonPluginOperation_$92Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperation_$92Enum *self = [GeogebraCommonPluginOperation_$92Enum alloc];
  GeogebraCommonPluginOperation_$92Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonPluginOperation_$92Enum)

@implementation GeogebraCommonPluginOperation_$93Enum

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX {
  return lt;
}

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  GeogebraCommonPluginOperation_$93Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelStringTemplate:withBoolean:", "handle", "Lgeogebra.common.kernel.arithmetic.ExpressionValue;", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonPluginOperation_$93Enum = { 2, "", "geogebra.common.plugin", "Operation", 0xc018, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonPluginOperation_$93Enum;
}

@end

void GeogebraCommonPluginOperation_$93Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$93Enum *self, NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperationEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

GeogebraCommonPluginOperation_$93Enum *new_GeogebraCommonPluginOperation_$93Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperation_$93Enum *self = [GeogebraCommonPluginOperation_$93Enum alloc];
  GeogebraCommonPluginOperation_$93Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonPluginOperation_$93Enum)

@implementation GeogebraCommonPluginOperation_$94Enum

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX {
  return lt;
}

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  GeogebraCommonPluginOperation_$94Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelStringTemplate:withBoolean:", "handle", "Lgeogebra.common.kernel.arithmetic.ExpressionValue;", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonPluginOperation_$94Enum = { 2, "", "geogebra.common.plugin", "Operation", 0xc018, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonPluginOperation_$94Enum;
}

@end

void GeogebraCommonPluginOperation_$94Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$94Enum *self, NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperationEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

GeogebraCommonPluginOperation_$94Enum *new_GeogebraCommonPluginOperation_$94Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperation_$94Enum *self = [GeogebraCommonPluginOperation_$94Enum alloc];
  GeogebraCommonPluginOperation_$94Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonPluginOperation_$94Enum)

@implementation GeogebraCommonPluginOperation_$95Enum

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX {
  return [new_GeogebraCommonKernelArithmeticMyDouble_initWithGeogebraCommonKernelKernel_withDouble_([((GeogebraCommonKernelArithmeticExpressionNodeEvaluator *) nil_chk(ev)) getKernel], 0.0) autorelease];
}

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  GeogebraCommonPluginOperation_$95Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelStringTemplate:withBoolean:", "handle", "Lgeogebra.common.kernel.arithmetic.ExpressionValue;", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonPluginOperation_$95Enum = { 2, "", "geogebra.common.plugin", "Operation", 0xc018, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonPluginOperation_$95Enum;
}

@end

void GeogebraCommonPluginOperation_$95Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$95Enum *self, NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperationEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

GeogebraCommonPluginOperation_$95Enum *new_GeogebraCommonPluginOperation_$95Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperation_$95Enum *self = [GeogebraCommonPluginOperation_$95Enum alloc];
  GeogebraCommonPluginOperation_$95Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonPluginOperation_$95Enum)

@implementation GeogebraCommonPluginOperation_$96Enum

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX {
  return [new_GeogebraCommonKernelArithmeticMyDouble_initWithGeogebraCommonKernelKernel_withDouble_([((GeogebraCommonKernelArithmeticExpressionNodeEvaluator *) nil_chk(ev)) getKernel], 0.0) autorelease];
}

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  GeogebraCommonPluginOperation_$96Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelStringTemplate:withBoolean:", "handle", "Lgeogebra.common.kernel.arithmetic.ExpressionValue;", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonPluginOperation_$96Enum = { 2, "", "geogebra.common.plugin", "Operation", 0xc018, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonPluginOperation_$96Enum;
}

@end

void GeogebraCommonPluginOperation_$96Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$96Enum *self, NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperationEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

GeogebraCommonPluginOperation_$96Enum *new_GeogebraCommonPluginOperation_$96Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperation_$96Enum *self = [GeogebraCommonPluginOperation_$96Enum alloc];
  GeogebraCommonPluginOperation_$96Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonPluginOperation_$96Enum)

@implementation GeogebraCommonPluginOperation_$97Enum

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX {
  return [new_GeogebraCommonKernelArithmeticMyDouble_initWithGeogebraCommonKernelKernel_withDouble_([((GeogebraCommonKernelArithmeticExpressionNodeEvaluator *) nil_chk(ev)) getKernel], 0.0) autorelease];
}

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  GeogebraCommonPluginOperation_$97Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelStringTemplate:withBoolean:", "handle", "Lgeogebra.common.kernel.arithmetic.ExpressionValue;", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonPluginOperation_$97Enum = { 2, "", "geogebra.common.plugin", "Operation", 0xc018, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonPluginOperation_$97Enum;
}

@end

void GeogebraCommonPluginOperation_$97Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$97Enum *self, NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperationEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

GeogebraCommonPluginOperation_$97Enum *new_GeogebraCommonPluginOperation_$97Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperation_$97Enum *self = [GeogebraCommonPluginOperation_$97Enum alloc];
  GeogebraCommonPluginOperation_$97Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonPluginOperation_$97Enum)

@implementation GeogebraCommonPluginOperation_$98Enum

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX {
  return [new_GeogebraCommonKernelArithmeticMyDouble_initWithGeogebraCommonKernelKernel_withDouble_([((GeogebraCommonKernelArithmeticExpressionNodeEvaluator *) nil_chk(ev)) getKernel], JavaLangDouble_NaN) autorelease];
}

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  GeogebraCommonPluginOperation_$98Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelStringTemplate:withBoolean:", "handle", "Lgeogebra.common.kernel.arithmetic.ExpressionValue;", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonPluginOperation_$98Enum = { 2, "", "geogebra.common.plugin", "Operation", 0xc018, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonPluginOperation_$98Enum;
}

@end

void GeogebraCommonPluginOperation_$98Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$98Enum *self, NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperationEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

GeogebraCommonPluginOperation_$98Enum *new_GeogebraCommonPluginOperation_$98Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperation_$98Enum *self = [GeogebraCommonPluginOperation_$98Enum alloc];
  GeogebraCommonPluginOperation_$98Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonPluginOperation_$98Enum)

@implementation GeogebraCommonPluginOperation_$99Enum

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX {
  if ([GeogebraCommonKernelArithmeticNumberValue_class_() isInstance:lt]) {
    return [((GeogebraCommonKernelArithmeticMyDouble *) nil_chk([((id<GeogebraCommonKernelArithmeticNumberValue>) nil_chk(((id<GeogebraCommonKernelArithmeticNumberValue>) check_protocol_cast(lt, @protocol(GeogebraCommonKernelArithmeticNumberValue))))) getNumber])) zeta];
  }
  else if ([GeogebraCommonKernelArithmeticVectorValue_class_() isInstance:lt]) {
    GeogebraCommonKernelGeosGeoVec2D *vec = [((id<GeogebraCommonKernelArithmeticVectorValue>) nil_chk(((id<GeogebraCommonKernelArithmeticVectorValue>) check_protocol_cast(lt, @protocol(GeogebraCommonKernelArithmeticVectorValue))))) getVector];
    GeogebraCommonKernelGeosGeoVec2D_complexZetaWithGeogebraCommonKernelGeosGeoVec2D_withGeogebraCommonKernelGeosGeoVec2D_(vec, vec);
    return vec;
  }
  else return [((GeogebraCommonKernelArithmeticExpressionNodeEvaluator *) nil_chk(ev)) polynomialOrDieWithGeogebraCommonKernelArithmeticExpressionValue:lt withGeogebraCommonPluginOperationEnum:self withNSString:@"zeta("];
}

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  GeogebraCommonPluginOperation_$99Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelStringTemplate:withBoolean:", "handle", "Lgeogebra.common.kernel.arithmetic.ExpressionValue;", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonPluginOperation_$99Enum = { 2, "", "geogebra.common.plugin", "Operation", 0xc018, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonPluginOperation_$99Enum;
}

@end

void GeogebraCommonPluginOperation_$99Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$99Enum *self, NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperationEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

GeogebraCommonPluginOperation_$99Enum *new_GeogebraCommonPluginOperation_$99Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperation_$99Enum *self = [GeogebraCommonPluginOperation_$99Enum alloc];
  GeogebraCommonPluginOperation_$99Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonPluginOperation_$99Enum)

@implementation GeogebraCommonPluginOperation_$100Enum

- (id<GeogebraCommonKernelArithmeticExpressionValue>)handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:(GeogebraCommonKernelArithmeticExpressionNodeEvaluator *)ev
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)left
                                                                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)right
                                                                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                                                                         withBoolean:(jboolean)holdsLaTeX {
  return [new_GeogebraCommonKernelArithmeticMyDouble_initWithGeogebraCommonKernelKernel_withDouble_([((GeogebraCommonKernelArithmeticExpressionNodeEvaluator *) nil_chk(ev)) getKernel], JavaLangDouble_NaN) autorelease];
}

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  GeogebraCommonPluginOperation_$100Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "handleWithGeogebraCommonKernelArithmeticExpressionNodeEvaluator:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelStringTemplate:withBoolean:", "handle", "Lgeogebra.common.kernel.arithmetic.ExpressionValue;", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonPluginOperation_$100Enum = { 2, "", "geogebra.common.plugin", "Operation", 0xc018, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonPluginOperation_$100Enum;
}

@end

void GeogebraCommonPluginOperation_$100Enum_initWithNSString_withInt_(GeogebraCommonPluginOperation_$100Enum *self, NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperationEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

GeogebraCommonPluginOperation_$100Enum *new_GeogebraCommonPluginOperation_$100Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  GeogebraCommonPluginOperation_$100Enum *self = [GeogebraCommonPluginOperation_$100Enum alloc];
  GeogebraCommonPluginOperation_$100Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonPluginOperation_$100Enum)
