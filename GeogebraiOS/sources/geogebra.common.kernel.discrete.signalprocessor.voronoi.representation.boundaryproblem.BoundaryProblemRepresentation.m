//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/discrete/signalprocessor/voronoi/representation/boundaryproblem/BoundaryProblemRepresentation.java
//


#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "geogebra/common/kernel/discrete/signalprocessor/voronoi/VPoint.h"
#include "geogebra/common/kernel/discrete/signalprocessor/voronoi/eventqueue/VSiteEvent.h"
#include "geogebra/common/kernel/discrete/signalprocessor/voronoi/representation/AbstractRepresentation.h"
#include "geogebra/common/kernel/discrete/signalprocessor/voronoi/representation/boundaryproblem/BoundaryProblemRepresentation.h"
#include "geogebra/common/kernel/discrete/signalprocessor/voronoi/representation/boundaryproblem/VHalfEdge.h"
#include "geogebra/common/kernel/discrete/signalprocessor/voronoi/representation/boundaryproblem/VVertex.h"
#include "geogebra/common/kernel/discrete/signalprocessor/voronoi/representation/boundaryproblem/voronoicell/VVoronoiCell.h"
#include "geogebra/common/kernel/discrete/signalprocessor/voronoi/representation/voronoicell/VoronoiCellRepresentation.h"
#include "geogebra/common/kernel/discrete/signalprocessor/voronoi/statusstructure/VLinkedNode.h"
#include "java/lang/Math.h"
#include "java/util/ArrayList.h"
#include "java/util/Arrays.h"
#include "java/util/Collection.h"

@interface GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemBoundaryProblemRepresentation () {
 @public
  jint vertexnumber_;
  id<JavaUtilCollection> vertexpoints_;
  GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationVoronoicellVoronoiCellRepresentation *voronoirepresentation_;
}

+ (jboolean)checkHasConnectionsWithGeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemVVertex:(GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemVVertex *)vertex
                               withGeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemVVertex:(GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemVVertex *)ignore;

+ (GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemVVertex *)getPreviousVertexWithInt:(jint)vertexnumber
                          withGeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemVVertex:(GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemVVertex *)currpoint
                          withGeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemVVertex:(GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemVVertex *)point;

@end

J2OBJC_FIELD_SETTER(GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemBoundaryProblemRepresentation, vertexpoints_, id<JavaUtilCollection>)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemBoundaryProblemRepresentation, voronoirepresentation_, GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationVoronoicellVoronoiCellRepresentation *)

__attribute__((unused)) static jboolean GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemBoundaryProblemRepresentation_checkHasConnectionsWithGeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemVVertex_withGeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemVVertex_(GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemVVertex *vertex, GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemVVertex *ignore);

__attribute__((unused)) static GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemVVertex *GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemBoundaryProblemRepresentation_getPreviousVertexWithInt_withGeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemVVertex_withGeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemVVertex_(jint vertexnumber, GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemVVertex *currpoint, GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemVVertex *point);

jdouble GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemBoundaryProblemRepresentation_MIN_ANGLE_TO_ALLOW_ = 0.0;
jint GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemBoundaryProblemRepresentation_VORONOICELLAREA_CUTOFF_ = 8000;

@implementation GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemBoundaryProblemRepresentation

- (instancetype)init {
  GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemBoundaryProblemRepresentation_init(self);
  return self;
}

- (GeogebraCommonKernelDiscreteSignalprocessorVoronoiVPoint *)createPointWithDouble:(jdouble)x
                                                                         withDouble:(jdouble)y {
  return [new_GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemVoronoicellVVoronoiCell_initWithDouble_withDouble_(x, y) autorelease];
}

- (void)beginAlgorithmWithJavaUtilCollection:(id<JavaUtilCollection>)points {
  GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemBoundaryProblemRepresentation_set_vertexpoints_(self, points);
  for (GeogebraCommonKernelDiscreteSignalprocessorVoronoiVPoint * __strong point in nil_chk(points)) {
    GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemVVertex *vertex = (GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemVVertex *) check_class_cast(point, [GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemVVertex class]);
    [((GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemVVertex *) nil_chk(vertex)) clearConnectedVertexs];
  }
  vertexnumber_ = 1;
  [((GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationVoronoicellVoronoiCellRepresentation *) nil_chk(voronoirepresentation_)) beginAlgorithmWithJavaUtilCollection:points];
}

- (void)siteEventWithGeogebraCommonKernelDiscreteSignalprocessorVoronoiStatusstructureVLinkedNode:(GeogebraCommonKernelDiscreteSignalprocessorVoronoiStatusstructureVLinkedNode *)n1
                 withGeogebraCommonKernelDiscreteSignalprocessorVoronoiStatusstructureVLinkedNode:(GeogebraCommonKernelDiscreteSignalprocessorVoronoiStatusstructureVLinkedNode *)n2
                 withGeogebraCommonKernelDiscreteSignalprocessorVoronoiStatusstructureVLinkedNode:(GeogebraCommonKernelDiscreteSignalprocessorVoronoiStatusstructureVLinkedNode *)n3 {
  if (GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemBoundaryProblemRepresentation_VORONOICELLAREA_CUTOFF_ > 0) [((GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationVoronoicellVoronoiCellRepresentation *) nil_chk(voronoirepresentation_)) siteEventWithGeogebraCommonKernelDiscreteSignalprocessorVoronoiStatusstructureVLinkedNode:n1 withGeogebraCommonKernelDiscreteSignalprocessorVoronoiStatusstructureVLinkedNode:n2 withGeogebraCommonKernelDiscreteSignalprocessorVoronoiStatusstructureVLinkedNode:n3];
}

- (void)circleEventWithGeogebraCommonKernelDiscreteSignalprocessorVoronoiStatusstructureVLinkedNode:(GeogebraCommonKernelDiscreteSignalprocessorVoronoiStatusstructureVLinkedNode *)n1
                   withGeogebraCommonKernelDiscreteSignalprocessorVoronoiStatusstructureVLinkedNode:(GeogebraCommonKernelDiscreteSignalprocessorVoronoiStatusstructureVLinkedNode *)n2
                   withGeogebraCommonKernelDiscreteSignalprocessorVoronoiStatusstructureVLinkedNode:(GeogebraCommonKernelDiscreteSignalprocessorVoronoiStatusstructureVLinkedNode *)n3
                                                                                            withInt:(jint)circle_x
                                                                                            withInt:(jint)circle_y {
  if (GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemBoundaryProblemRepresentation_VORONOICELLAREA_CUTOFF_ > 0) [((GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationVoronoicellVoronoiCellRepresentation *) nil_chk(voronoirepresentation_)) circleEventWithGeogebraCommonKernelDiscreteSignalprocessorVoronoiStatusstructureVLinkedNode:n1 withGeogebraCommonKernelDiscreteSignalprocessorVoronoiStatusstructureVLinkedNode:n2 withGeogebraCommonKernelDiscreteSignalprocessorVoronoiStatusstructureVLinkedNode:n3 withInt:circle_x withInt:circle_y];
  GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemVVertex *g1 = (GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemVVertex *) check_class_cast([((GeogebraCommonKernelDiscreteSignalprocessorVoronoiEventqueueVSiteEvent *) nil_chk(((GeogebraCommonKernelDiscreteSignalprocessorVoronoiStatusstructureVLinkedNode *) nil_chk(n1))->siteevent_)) getPoint], [GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemVVertex class]);
  GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemVVertex *g2 = (GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemVVertex *) check_class_cast([((GeogebraCommonKernelDiscreteSignalprocessorVoronoiStatusstructureVLinkedNode *) nil_chk(n2))->siteevent_ getPoint], [GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemVVertex class]);
  GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemVVertex *g3 = (GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemVVertex *) check_class_cast([((GeogebraCommonKernelDiscreteSignalprocessorVoronoiStatusstructureVLinkedNode *) nil_chk(n3))->siteevent_ getPoint], [GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemVVertex class]);
  if (GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemBoundaryProblemRepresentation_MIN_ANGLE_TO_ALLOW_ > 0) {
    IOSDoubleArray *distances = [IOSDoubleArray arrayWithLength:3];
    *IOSDoubleArray_GetRef(distances, 0) = [((GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemVVertex *) nil_chk(g1)) distanceToWithGeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemVVertex:g2];
    *IOSDoubleArray_GetRef(distances, 1) = [((GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemVVertex *) nil_chk(g2)) distanceToWithGeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemVVertex:g3];
    *IOSDoubleArray_GetRef(distances, 2) = [((GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemVVertex *) nil_chk(g3)) distanceToWithGeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemVVertex:g1];
    JavaUtilArrays_sortWithDoubleArray_(distances);
    jdouble a = IOSDoubleArray_Get(distances, 0);
    jdouble b = IOSDoubleArray_Get(distances, 1);
    jdouble c = IOSDoubleArray_Get(distances, 2);
    jdouble angle = JavaLangMath_acosWithDouble_((b * b + c * c - a * a) / (2 * b * c));
    if (angle < GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemBoundaryProblemRepresentation_MIN_ANGLE_TO_ALLOW_) {
      return;
    }
  }
  [((GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemVVertex *) nil_chk(g1)) addConnectedVertexWithGeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemVHalfEdge:[new_GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemVHalfEdge_initWithInt_withGeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemVVertex_(vertexnumber_, g2) autorelease]];
  [((GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemVVertex *) nil_chk(g2)) addConnectedVertexWithGeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemVHalfEdge:[new_GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemVHalfEdge_initWithInt_withGeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemVVertex_(vertexnumber_, g3) autorelease]];
  [((GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemVVertex *) nil_chk(g3)) addConnectedVertexWithGeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemVHalfEdge:[new_GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemVHalfEdge_initWithInt_withGeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemVVertex_(vertexnumber_, g1) autorelease]];
  vertexnumber_++;
}

- (void)endAlgorithmWithJavaUtilCollection:(id<JavaUtilCollection>)points
                                withDouble:(jdouble)lastsweeplineposition
withGeogebraCommonKernelDiscreteSignalprocessorVoronoiStatusstructureVLinkedNode:(GeogebraCommonKernelDiscreteSignalprocessorVoronoiStatusstructureVLinkedNode *)headnode {
  if (GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemBoundaryProblemRepresentation_VORONOICELLAREA_CUTOFF_ > 0) [((GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationVoronoicellVoronoiCellRepresentation *) nil_chk(voronoirepresentation_)) endAlgorithmWithJavaUtilCollection:points withDouble:lastsweeplineposition withGeogebraCommonKernelDiscreteSignalprocessorVoronoiStatusstructureVLinkedNode:headnode];
  for (GeogebraCommonKernelDiscreteSignalprocessorVoronoiVPoint * __strong point in nil_chk(vertexpoints_)) {
    GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemVVertex *vertex = (GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemVVertex *) check_class_cast(point, [GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemVVertex class]);
    if (vertex == nil || [vertex getConnectedVertexs] == nil) continue;
    for (GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemVHalfEdge * __strong connectededge in nil_chk([((GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemVVertex *) nil_chk(vertex)) getConnectedVertexs])) {
      GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemVVertex *prevvertex = GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemBoundaryProblemRepresentation_getPreviousVertexWithInt_withGeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemVVertex_withGeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemVVertex_(((GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemVHalfEdge *) nil_chk(connectededge))->vertexnumber_, connectededge->vertex_, vertex);
      if (prevvertex == nil) {
        continue;
      }
      for (GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemVHalfEdge * __strong connectededge2 in nil_chk([vertex getConnectedVertexs])) {
        if (((GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemVHalfEdge *) nil_chk(connectededge2))->vertex_ == prevvertex) {
          if (GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemBoundaryProblemRepresentation_VORONOICELLAREA_CUTOFF_ > 0) {
            GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemVoronoicellVVoronoiCell *voronoicell1 = (GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemVoronoicellVVoronoiCell *) check_class_cast(vertex, [GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemVoronoicellVVoronoiCell class]);
            GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemVoronoicellVVoronoiCell *voronoicell2 = (GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemVoronoicellVVoronoiCell *) check_class_cast(prevvertex, [GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemVoronoicellVVoronoiCell class]);
            jint area1 = [voronoicell1 getAreaOfCell];
            jint area2 = [((GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemVoronoicellVVoronoiCell *) nil_chk(voronoicell2)) getAreaOfCell];
            if ((area1 > 80000 && area2 > 80000) || (area1 < 0 && area2 < 0)) {
            }
            else if (area1 > GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemBoundaryProblemRepresentation_VORONOICELLAREA_CUTOFF_ && area2 <= GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemBoundaryProblemRepresentation_VORONOICELLAREA_CUTOFF_) {
              break;
            }
            else if (area2 > GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemBoundaryProblemRepresentation_VORONOICELLAREA_CUTOFF_ && area1 <= GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemBoundaryProblemRepresentation_VORONOICELLAREA_CUTOFF_) {
              break;
            }
          }
          connectededge2->isdeleted_ = YES;
          GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemVHalfEdge *tmpotheredge = [((GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemVVertex *) nil_chk(prevvertex)) getNextConnectedEdgeWithInt:connectededge->vertexnumber_];
          ((GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemVHalfEdge *) nil_chk(tmpotheredge))->isdeleted_ = YES;
          break;
        }
      }
    }
  }
  if (GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemBoundaryProblemRepresentation_VORONOICELLAREA_CUTOFF_ > 0) {
    jboolean haschanged;
    do {
      haschanged = NO;
      for (GeogebraCommonKernelDiscreteSignalprocessorVoronoiVPoint * __strong point in vertexpoints_) {
        GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemVVertex *vertex = (GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemVVertex *) check_class_cast(point, [GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemVVertex class]);
        if (vertex == nil || [vertex getConnectedVertexs] == nil) continue;
        for (GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemVHalfEdge * __strong connectededge in nil_chk([((GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemVVertex *) nil_chk(vertex)) getConnectedVertexs])) {
          if (((GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemVHalfEdge *) nil_chk(connectededge))->isdeleted_) {
            continue;
          }
          if (GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemBoundaryProblemRepresentation_checkHasConnectionsWithGeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemVVertex_withGeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemVVertex_(connectededge->vertex_, vertex) == NO) {
            haschanged = YES;
            connectededge->isdeleted_ = YES;
            GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemVHalfEdge *tmpotheredge = [((GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemVVertex *) nil_chk(connectededge->vertex_)) getNextConnectedEdgeWithGeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemVVertex:vertex];
            ((GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemVHalfEdge *) nil_chk(tmpotheredge))->isdeleted_ = YES;
          }
        }
      }
    }
    while (haschanged);
  }
}

+ (jboolean)checkHasConnectionsWithGeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemVVertex:(GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemVVertex *)vertex
                               withGeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemVVertex:(GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemVVertex *)ignore {
  return GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemBoundaryProblemRepresentation_checkHasConnectionsWithGeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemVVertex_withGeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemVVertex_(vertex, ignore);
}

+ (GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemVVertex *)getPreviousVertexWithInt:(jint)vertexnumber
                          withGeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemVVertex:(GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemVVertex *)currpoint
                          withGeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemVVertex:(GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemVVertex *)point {
  return GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemBoundaryProblemRepresentation_getPreviousVertexWithInt_withGeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemVVertex_withGeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemVVertex_(vertexnumber, currpoint, point);
}

- (void)dealloc {
  RELEASE_(vertexpoints_);
  RELEASE_(voronoirepresentation_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "BoundaryProblemRepresentation", NULL, 0x1, NULL, NULL },
    { "createPointWithDouble:withDouble:", "createPoint", "Lgeogebra.common.kernel.discrete.signalprocessor.voronoi.VPoint;", 0x1, NULL, NULL },
    { "beginAlgorithmWithJavaUtilCollection:", "beginAlgorithm", "V", 0x1, NULL, NULL },
    { "siteEventWithGeogebraCommonKernelDiscreteSignalprocessorVoronoiStatusstructureVLinkedNode:withGeogebraCommonKernelDiscreteSignalprocessorVoronoiStatusstructureVLinkedNode:withGeogebraCommonKernelDiscreteSignalprocessorVoronoiStatusstructureVLinkedNode:", "siteEvent", "V", 0x1, NULL, NULL },
    { "circleEventWithGeogebraCommonKernelDiscreteSignalprocessorVoronoiStatusstructureVLinkedNode:withGeogebraCommonKernelDiscreteSignalprocessorVoronoiStatusstructureVLinkedNode:withGeogebraCommonKernelDiscreteSignalprocessorVoronoiStatusstructureVLinkedNode:withInt:withInt:", "circleEvent", "V", 0x1, NULL, NULL },
    { "endAlgorithmWithJavaUtilCollection:withDouble:withGeogebraCommonKernelDiscreteSignalprocessorVoronoiStatusstructureVLinkedNode:", "endAlgorithm", "V", 0x1, NULL, NULL },
    { "checkHasConnectionsWithGeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemVVertex:withGeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemVVertex:", "checkHasConnections", "Z", 0xa, NULL, NULL },
    { "getPreviousVertexWithInt:withGeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemVVertex:withGeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemVVertex:", "getPreviousVertex", "Lgeogebra.common.kernel.discrete.signalprocessor.voronoi.representation.boundaryproblem.VVertex;", 0xa, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "MIN_ANGLE_TO_ALLOW_", NULL, 0x9, "D", &GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemBoundaryProblemRepresentation_MIN_ANGLE_TO_ALLOW_, NULL,  },
    { "VORONOICELLAREA_CUTOFF_", NULL, 0x9, "I", &GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemBoundaryProblemRepresentation_VORONOICELLAREA_CUTOFF_, NULL,  },
    { "vertexnumber_", NULL, 0x2, "I", NULL, NULL,  },
    { "vertexpoints_", NULL, 0x2, "Ljava.util.Collection;", NULL, "Ljava/util/Collection<Lgeogebra/common/kernel/discrete/signalprocessor/voronoi/VPoint;>;",  },
    { "voronoirepresentation_", NULL, 0x12, "Lgeogebra.common.kernel.discrete.signalprocessor.voronoi.representation.voronoicell.VoronoiCellRepresentation;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemBoundaryProblemRepresentation = { 2, "BoundaryProblemRepresentation", "geogebra.common.kernel.discrete.signalprocessor.voronoi.representation.boundaryproblem", NULL, 0x1, 8, methods, 5, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemBoundaryProblemRepresentation;
}

@end

void GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemBoundaryProblemRepresentation_init(GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemBoundaryProblemRepresentation *self) {
  GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationAbstractRepresentation_init(self);
  GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemBoundaryProblemRepresentation_setAndConsume_voronoirepresentation_(self, new_GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationVoronoicellVoronoiCellRepresentation_init());
}

GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemBoundaryProblemRepresentation *new_GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemBoundaryProblemRepresentation_init() {
  GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemBoundaryProblemRepresentation *self = [GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemBoundaryProblemRepresentation alloc];
  GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemBoundaryProblemRepresentation_init(self);
  return self;
}

jboolean GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemBoundaryProblemRepresentation_checkHasConnectionsWithGeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemVVertex_withGeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemVVertex_(GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemVVertex *vertex, GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemVVertex *ignore) {
  GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemBoundaryProblemRepresentation_initialize();
  for (GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemVHalfEdge * __strong halfedge in nil_chk([((GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemVVertex *) nil_chk(vertex)) getConnectedVertexs])) {
    if (((GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemVHalfEdge *) nil_chk(halfedge))->isdeleted_ == NO && halfedge->vertex_ != ignore) {
      return YES;
    }
  }
  return NO;
}

GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemVVertex *GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemBoundaryProblemRepresentation_getPreviousVertexWithInt_withGeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemVVertex_withGeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemVVertex_(jint vertexnumber, GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemVVertex *currpoint, GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemVVertex *point) {
  GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemBoundaryProblemRepresentation_initialize();
  GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemVVertex *prevpoint = nil;
  while (currpoint != point) {
    prevpoint = currpoint;
    currpoint = [((GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemVVertex *) nil_chk(currpoint)) getNextConnectedVertexWithInt:vertexnumber];
    if (currpoint == nil) {
      return nil;
    }
  }
  return prevpoint;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemBoundaryProblemRepresentation)
