//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/algos/AlgoAngle.java
//


#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "geogebra/common/euclidian/EuclidianConstants.h"
#include "geogebra/common/euclidian/draw/DrawAngle.h"
#include "geogebra/common/kernel/Construction.h"
#include "geogebra/common/kernel/Matrix/Coords.h"
#include "geogebra/common/kernel/algos/AlgoAngle.h"
#include "geogebra/common/kernel/algos/AlgoElement.h"
#include "geogebra/common/kernel/commands/Commands.h"
#include "geogebra/common/kernel/geos/GeoAngle.h"
#include "geogebra/common/kernel/kernelND/GeoPointND.h"

@implementation GeogebraCommonKernelAlgosAlgoAngle

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)c {
  GeogebraCommonKernelAlgosAlgoAngle_initWithGeogebraCommonKernelConstruction_(self, c);
  return self;
}

- (void)initCoords {
}

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)c
                                             withBoolean:(jboolean)addToConstructionList {
  GeogebraCommonKernelAlgosAlgoAngle_initWithGeogebraCommonKernelConstruction_withBoolean_(self, c, addToConstructionList);
  return self;
}

- (GeogebraCommonKernelGeosGeoAngle *)newGeoAngleWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons {
  GeogebraCommonKernelGeosGeoAngle *ret = [new_GeogebraCommonKernelGeosGeoAngle_initWithGeogebraCommonKernelConstruction_(cons) autorelease];
  [ret setDrawableWithBoolean:YES];
  return ret;
}

- (GeogebraCommonKernelCommandsCommandsEnum *)getClassName {
  return GeogebraCommonKernelCommandsCommandsEnum_get_Angle();
}

- (jint)getRelatedModeID {
  return GeogebraCommonEuclidianEuclidianConstants_MODE_ANGLE;
}

- (GeogebraCommonKernelMatrixCoords *)getVn {
  return GeogebraCommonKernelMatrixCoords_get_VZ_();
}

- (jboolean)updateDrawInfoWithDoubleArray:(IOSDoubleArray *)m
                          withDoubleArray:(IOSDoubleArray *)firstVec
 withGeogebraCommonEuclidianDrawDrawAngle:(GeogebraCommonEuclidianDrawDrawAngle *)drawable {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jboolean)getCoordsInD3WithGeogebraCommonKernelMatrixCoordsArray:(IOSObjectArray *)drawCoords {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

+ (jboolean)centerIsNotDrawableWithGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)vertex {
  return GeogebraCommonKernelAlgosAlgoAngle_centerIsNotDrawableWithGeogebraCommonKernelKernelNDGeoPointND_(vertex);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonKernelConstruction:", "AlgoAngle", NULL, 0x1, NULL, NULL },
    { "initCoords", NULL, "V", 0x4, NULL, NULL },
    { "initWithGeogebraCommonKernelConstruction:withBoolean:", "AlgoAngle", NULL, 0x4, NULL, NULL },
    { "newGeoAngleWithGeogebraCommonKernelConstruction:", "newGeoAngle", "Lgeogebra.common.kernel.geos.GeoAngle;", 0x4, NULL, NULL },
    { "getClassName", NULL, "Lgeogebra.common.kernel.commands.Commands;", 0x11, NULL, NULL },
    { "getRelatedModeID", NULL, "I", 0x11, NULL, NULL },
    { "getVn", NULL, "Lgeogebra.common.kernel.Matrix.Coords;", 0x1, NULL, NULL },
    { "updateDrawInfoWithDoubleArray:withDoubleArray:withGeogebraCommonEuclidianDrawDrawAngle:", "updateDrawInfo", "Z", 0x401, NULL, NULL },
    { "getCoordsInD3WithGeogebraCommonKernelMatrixCoordsArray:", "getCoordsInD3", "Z", 0x401, NULL, NULL },
    { "centerIsNotDrawableWithGeogebraCommonKernelKernelNDGeoPointND:", "centerIsNotDrawable", "Z", 0x1c, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelAlgosAlgoAngle = { 2, "AlgoAngle", "geogebra.common.kernel.algos", NULL, 0x401, 10, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelAlgosAlgoAngle;
}

@end

void GeogebraCommonKernelAlgosAlgoAngle_initWithGeogebraCommonKernelConstruction_(GeogebraCommonKernelAlgosAlgoAngle *self, GeogebraCommonKernelConstruction *c) {
  GeogebraCommonKernelAlgosAlgoElement_initWithGeogebraCommonKernelConstruction_(self, c);
  [self initCoords];
}

void GeogebraCommonKernelAlgosAlgoAngle_initWithGeogebraCommonKernelConstruction_withBoolean_(GeogebraCommonKernelAlgosAlgoAngle *self, GeogebraCommonKernelConstruction *c, jboolean addToConstructionList) {
  GeogebraCommonKernelAlgosAlgoElement_initWithGeogebraCommonKernelConstruction_withBoolean_(self, c, addToConstructionList);
}

jboolean GeogebraCommonKernelAlgosAlgoAngle_centerIsNotDrawableWithGeogebraCommonKernelKernelNDGeoPointND_(id<GeogebraCommonKernelKernelNDGeoPointND> vertex) {
  GeogebraCommonKernelAlgosAlgoAngle_initialize();
  return vertex == nil || ![vertex isDefined] || [vertex isInfinite];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelAlgosAlgoAngle)
