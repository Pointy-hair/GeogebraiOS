//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/algos/AlgoIteration.java
//


#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "geogebra/common/kernel/Construction.h"
#include "geogebra/common/kernel/algos/AlgoElement.h"
#include "geogebra/common/kernel/algos/AlgoIteration.h"
#include "geogebra/common/kernel/commands/Commands.h"
#include "geogebra/common/kernel/geos/GeoElement.h"
#include "geogebra/common/kernel/geos/GeoFunction.h"
#include "geogebra/common/kernel/geos/GeoNumberValue.h"
#include "geogebra/common/kernel/geos/GeoNumeric.h"
#include "java/lang/Math.h"

@interface GeogebraCommonKernelAlgosAlgoIteration () {
 @public
  GeogebraCommonKernelGeosGeoFunction *f_;
  id<GeogebraCommonKernelGeosGeoNumberValue> startValue_, n_;
  GeogebraCommonKernelGeosGeoElement *startValueGeo_, *nGeo_;
  GeogebraCommonKernelGeosGeoNumeric *result_;
}

@end

J2OBJC_FIELD_SETTER(GeogebraCommonKernelAlgosAlgoIteration, f_, GeogebraCommonKernelGeosGeoFunction *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelAlgosAlgoIteration, startValue_, id<GeogebraCommonKernelGeosGeoNumberValue>)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelAlgosAlgoIteration, n_, id<GeogebraCommonKernelGeosGeoNumberValue>)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelAlgosAlgoIteration, startValueGeo_, GeogebraCommonKernelGeosGeoElement *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelAlgosAlgoIteration, nGeo_, GeogebraCommonKernelGeosGeoElement *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelAlgosAlgoIteration, result_, GeogebraCommonKernelGeosGeoNumeric *)

__attribute__((unused)) static void GeogebraCommonKernelAlgosAlgoIteration_compute(GeogebraCommonKernelAlgosAlgoIteration *self);

@implementation GeogebraCommonKernelAlgosAlgoIteration

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                                            withNSString:(NSString *)label
                 withGeogebraCommonKernelGeosGeoFunction:(GeogebraCommonKernelGeosGeoFunction *)f
              withGeogebraCommonKernelGeosGeoNumberValue:(id<GeogebraCommonKernelGeosGeoNumberValue>)startValue
              withGeogebraCommonKernelGeosGeoNumberValue:(id<GeogebraCommonKernelGeosGeoNumberValue>)n {
  GeogebraCommonKernelAlgosAlgoIteration_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoFunction_withGeogebraCommonKernelGeosGeoNumberValue_withGeogebraCommonKernelGeosGeoNumberValue_(self, cons, label, f, startValue, n);
  return self;
}

- (GeogebraCommonKernelCommandsCommandsEnum *)getClassName {
  return GeogebraCommonKernelCommandsCommandsEnum_get_Iteration();
}

- (void)setInputOutput {
  GeogebraCommonKernelAlgosAlgoElement_setAndConsume_input_(self, [IOSObjectArray newArrayWithLength:3 type:GeogebraCommonKernelGeosGeoElement_class_()]);
  IOSObjectArray_Set(input_, 0, f_);
  IOSObjectArray_Set(input_, 1, startValueGeo_);
  IOSObjectArray_Set(input_, 2, nGeo_);
  [super setOutputLengthWithInt:1];
  [super setOutputWithInt:0 withGeogebraCommonKernelGeosGeoElement:result_];
  [self setDependencies];
}

- (GeogebraCommonKernelGeosGeoNumeric *)getResult {
  return result_;
}

- (void)compute {
  GeogebraCommonKernelAlgosAlgoIteration_compute(self);
}

- (void)dealloc {
  RELEASE_(f_);
  RELEASE_(startValue_);
  RELEASE_(n_);
  RELEASE_(startValueGeo_);
  RELEASE_(nGeo_);
  RELEASE_(result_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonKernelConstruction:withNSString:withGeogebraCommonKernelGeosGeoFunction:withGeogebraCommonKernelGeosGeoNumberValue:withGeogebraCommonKernelGeosGeoNumberValue:", "AlgoIteration", NULL, 0x1, NULL, NULL },
    { "getClassName", NULL, "Lgeogebra.common.kernel.commands.Commands;", 0x1, NULL, NULL },
    { "setInputOutput", NULL, "V", 0x4, NULL, NULL },
    { "getResult", NULL, "Lgeogebra.common.kernel.geos.GeoNumeric;", 0x1, NULL, NULL },
    { "compute", NULL, "V", 0x11, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "f_", NULL, 0x2, "Lgeogebra.common.kernel.geos.GeoFunction;", NULL, NULL,  },
    { "startValue_", NULL, 0x2, "Lgeogebra.common.kernel.geos.GeoNumberValue;", NULL, NULL,  },
    { "n_", NULL, 0x2, "Lgeogebra.common.kernel.geos.GeoNumberValue;", NULL, NULL,  },
    { "startValueGeo_", NULL, 0x2, "Lgeogebra.common.kernel.geos.GeoElement;", NULL, NULL,  },
    { "nGeo_", NULL, 0x2, "Lgeogebra.common.kernel.geos.GeoElement;", NULL, NULL,  },
    { "result_", NULL, 0x2, "Lgeogebra.common.kernel.geos.GeoNumeric;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelAlgosAlgoIteration = { 2, "AlgoIteration", "geogebra.common.kernel.algos", NULL, 0x1, 5, methods, 6, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelAlgosAlgoIteration;
}

@end

void GeogebraCommonKernelAlgosAlgoIteration_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoFunction_withGeogebraCommonKernelGeosGeoNumberValue_withGeogebraCommonKernelGeosGeoNumberValue_(GeogebraCommonKernelAlgosAlgoIteration *self, GeogebraCommonKernelConstruction *cons, NSString *label, GeogebraCommonKernelGeosGeoFunction *f, id<GeogebraCommonKernelGeosGeoNumberValue> startValue, id<GeogebraCommonKernelGeosGeoNumberValue> n) {
  GeogebraCommonKernelAlgosAlgoElement_initWithGeogebraCommonKernelConstruction_(self, cons);
  GeogebraCommonKernelAlgosAlgoIteration_set_f_(self, f);
  GeogebraCommonKernelAlgosAlgoIteration_set_startValue_(self, startValue);
  GeogebraCommonKernelAlgosAlgoIteration_set_startValueGeo_(self, [((id<GeogebraCommonKernelGeosGeoNumberValue>) nil_chk(startValue)) toGeoElement]);
  GeogebraCommonKernelAlgosAlgoIteration_set_n_(self, n);
  GeogebraCommonKernelAlgosAlgoIteration_set_nGeo_(self, [((id<GeogebraCommonKernelGeosGeoNumberValue>) nil_chk(n)) toGeoElement]);
  GeogebraCommonKernelAlgosAlgoIteration_setAndConsume_result_(self, new_GeogebraCommonKernelGeosGeoNumeric_initWithGeogebraCommonKernelConstruction_(cons));
  [self setInputOutput];
  GeogebraCommonKernelAlgosAlgoIteration_compute(self);
  [self->result_ setLabelWithNSString:label];
}

GeogebraCommonKernelAlgosAlgoIteration *new_GeogebraCommonKernelAlgosAlgoIteration_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoFunction_withGeogebraCommonKernelGeosGeoNumberValue_withGeogebraCommonKernelGeosGeoNumberValue_(GeogebraCommonKernelConstruction *cons, NSString *label, GeogebraCommonKernelGeosGeoFunction *f, id<GeogebraCommonKernelGeosGeoNumberValue> startValue, id<GeogebraCommonKernelGeosGeoNumberValue> n) {
  GeogebraCommonKernelAlgosAlgoIteration *self = [GeogebraCommonKernelAlgosAlgoIteration alloc];
  GeogebraCommonKernelAlgosAlgoIteration_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoFunction_withGeogebraCommonKernelGeosGeoNumberValue_withGeogebraCommonKernelGeosGeoNumberValue_(self, cons, label, f, startValue, n);
  return self;
}

void GeogebraCommonKernelAlgosAlgoIteration_compute(GeogebraCommonKernelAlgosAlgoIteration *self) {
  if (![((GeogebraCommonKernelGeosGeoFunction *) nil_chk(self->f_)) isDefined] || ![((GeogebraCommonKernelGeosGeoElement *) nil_chk(self->startValueGeo_)) isDefined] || ![((GeogebraCommonKernelGeosGeoElement *) nil_chk(self->nGeo_)) isDefined]) {
    [((GeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->result_)) setUndefined];
    return;
  }
  jint iterations = (jint) JavaLangMath_roundWithDouble_([((id<GeogebraCommonKernelGeosGeoNumberValue>) nil_chk(self->n_)) getDouble]);
  if (iterations < 0) {
    [((GeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->result_)) setUndefined];
    return;
  }
  jdouble val = [((id<GeogebraCommonKernelGeosGeoNumberValue>) nil_chk(self->startValue_)) getDouble];
  for (jint i = 0; i < iterations; i++) {
    val = [self->f_ evaluateWithDouble:val];
  }
  [((GeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->result_)) setValueWithDouble:val];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelAlgosAlgoIteration)
