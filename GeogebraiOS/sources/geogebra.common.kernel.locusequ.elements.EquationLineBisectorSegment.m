//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/locusequ/elements/EquationLineBisectorSegment.java
//


#include "J2ObjC_source.h"
#include "geogebra/common/kernel/algos/AlgoElement.h"
#include "geogebra/common/kernel/algos/AlgoLineBisectorSegment.h"
#include "geogebra/common/kernel/geos/GeoElement.h"
#include "geogebra/common/kernel/geos/GeoPoint.h"
#include "geogebra/common/kernel/geos/GeoSegment.h"
#include "geogebra/common/kernel/locusequ/EquationScope.h"
#include "geogebra/common/kernel/locusequ/elements/EquationGenericBisector.h"
#include "geogebra/common/kernel/locusequ/elements/EquationLineBisectorSegment.h"

@implementation GeogebraCommonKernelLocusequElementsEquationLineBisectorSegment

- (instancetype)initWithGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)line
             withGeogebraCommonKernelLocusequEquationScope:(GeogebraCommonKernelLocusequEquationScope *)scope {
  GeogebraCommonKernelLocusequElementsEquationLineBisectorSegment_initWithGeogebraCommonKernelGeosGeoElement_withGeogebraCommonKernelLocusequEquationScope_(self, line, scope);
  return self;
}

- (jboolean)isAlgebraic {
  return NO;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonKernelGeosGeoElement:withGeogebraCommonKernelLocusequEquationScope:", "EquationLineBisectorSegment", NULL, 0x1, NULL, NULL },
    { "isAlgebraic", NULL, "Z", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelLocusequElementsEquationLineBisectorSegment = { 2, "EquationLineBisectorSegment", "geogebra.common.kernel.locusequ.elements", NULL, 0x1, 2, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelLocusequElementsEquationLineBisectorSegment;
}

@end

void GeogebraCommonKernelLocusequElementsEquationLineBisectorSegment_initWithGeogebraCommonKernelGeosGeoElement_withGeogebraCommonKernelLocusequEquationScope_(GeogebraCommonKernelLocusequElementsEquationLineBisectorSegment *self, GeogebraCommonKernelGeosGeoElement *line, GeogebraCommonKernelLocusequEquationScope *scope) {
  GeogebraCommonKernelLocusequElementsEquationGenericBisector_initWithGeogebraCommonKernelGeosGeoElement_withGeogebraCommonKernelLocusequEquationScope_(self, line, scope);
  GeogebraCommonKernelAlgosAlgoLineBisectorSegment *algo = (GeogebraCommonKernelAlgosAlgoLineBisectorSegment *) check_class_cast([((GeogebraCommonKernelGeosGeoElement *) nil_chk(line)) getParentAlgorithm], [GeogebraCommonKernelAlgosAlgoLineBisectorSegment class]);
  GeogebraCommonKernelGeosGeoSegment *segment = [((GeogebraCommonKernelAlgosAlgoLineBisectorSegment *) nil_chk(algo)) getSegment];
  [self setExtremePointsWithGeogebraCommonKernelGeosGeoPoint:[((GeogebraCommonKernelGeosGeoSegment *) nil_chk(segment)) getStartPoint] withGeogebraCommonKernelGeosGeoPoint:[segment getEndPoint]];
}

GeogebraCommonKernelLocusequElementsEquationLineBisectorSegment *new_GeogebraCommonKernelLocusequElementsEquationLineBisectorSegment_initWithGeogebraCommonKernelGeosGeoElement_withGeogebraCommonKernelLocusequEquationScope_(GeogebraCommonKernelGeosGeoElement *line, GeogebraCommonKernelLocusequEquationScope *scope) {
  GeogebraCommonKernelLocusequElementsEquationLineBisectorSegment *self = [GeogebraCommonKernelLocusequElementsEquationLineBisectorSegment alloc];
  GeogebraCommonKernelLocusequElementsEquationLineBisectorSegment_initWithGeogebraCommonKernelGeosGeoElement_withGeogebraCommonKernelLocusequEquationScope_(self, line, scope);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelLocusequElementsEquationLineBisectorSegment)
