//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/Matrix/CoordMatrixUtil.java
//


#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "geogebra/common/kernel/Kernel.h"
#include "geogebra/common/kernel/Matrix/CoordMatrix.h"
#include "geogebra/common/kernel/Matrix/CoordMatrixUtil.h"
#include "geogebra/common/kernel/Matrix/Coords.h"
#include "java/lang/Double.h"
#include "java/lang/Math.h"

@implementation GeogebraCommonKernelMatrixCoordMatrixUtil

+ (IOSObjectArray *)nearestPointsFromTwoLinesWithGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)o1
                                             withGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)v1
                                             withGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)o2
                                             withGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)v2 {
  return GeogebraCommonKernelMatrixCoordMatrixUtil_nearestPointsFromTwoLinesWithGeogebraCommonKernelMatrixCoords_withGeogebraCommonKernelMatrixCoords_withGeogebraCommonKernelMatrixCoords_withGeogebraCommonKernelMatrixCoords_(o1, v1, o2, v2);
}

+ (void)nearestPointsFromTwoLinesWithGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)o1
                                 withGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)v1
                                 withGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)o2
                                 withGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)v2
                                                      withDoubleArray:(IOSDoubleArray *)project1
                                                      withDoubleArray:(IOSDoubleArray *)project2
                                                      withDoubleArray:(IOSDoubleArray *)lineCoords
                                                      withDoubleArray:(IOSDoubleArray *)tmp {
  GeogebraCommonKernelMatrixCoordMatrixUtil_nearestPointsFromTwoLinesWithGeogebraCommonKernelMatrixCoords_withGeogebraCommonKernelMatrixCoords_withGeogebraCommonKernelMatrixCoords_withGeogebraCommonKernelMatrixCoords_withDoubleArray_withDoubleArray_withDoubleArray_withDoubleArray_(o1, v1, o2, v2, project1, project2, lineCoords, tmp);
}

+ (IOSObjectArray *)intersectLinePlaneWithGeogebraCommonKernelMatrixCoordMatrix:(GeogebraCommonKernelMatrixCoordMatrix *)line
                                      withGeogebraCommonKernelMatrixCoordMatrix:(GeogebraCommonKernelMatrixCoordMatrix *)plane {
  return GeogebraCommonKernelMatrixCoordMatrixUtil_intersectLinePlaneWithGeogebraCommonKernelMatrixCoordMatrix_withGeogebraCommonKernelMatrixCoordMatrix_(line, plane);
}

+ (void)sphericalCoordsWithGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)v
                       withGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)ret {
  GeogebraCommonKernelMatrixCoordMatrixUtil_sphericalCoordsWithGeogebraCommonKernelMatrixCoords_withGeogebraCommonKernelMatrixCoords_(v, ret);
}

+ (GeogebraCommonKernelMatrixCoords *)lineEquationVectorWithGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)origin
                                                        withGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)direction
                                                   withGeogebraCommonKernelMatrixCoordMatrix:(GeogebraCommonKernelMatrixCoordMatrix *)plane {
  return GeogebraCommonKernelMatrixCoordMatrixUtil_lineEquationVectorWithGeogebraCommonKernelMatrixCoords_withGeogebraCommonKernelMatrixCoords_withGeogebraCommonKernelMatrixCoordMatrix_(origin, direction, plane);
}

+ (GeogebraCommonKernelMatrixCoords *)lineEquationVectorWithGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)origin
                                                        withGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)direction {
  return GeogebraCommonKernelMatrixCoordMatrixUtil_lineEquationVectorWithGeogebraCommonKernelMatrixCoords_withGeogebraCommonKernelMatrixCoords_(origin, direction);
}

+ (IOSObjectArray *)intersectPlanesWithGeogebraCommonKernelMatrixCoordMatrix:(GeogebraCommonKernelMatrixCoordMatrix *)plane1
                                   withGeogebraCommonKernelMatrixCoordMatrix:(GeogebraCommonKernelMatrixCoordMatrix *)plane2 {
  return GeogebraCommonKernelMatrixCoordMatrixUtil_intersectPlanesWithGeogebraCommonKernelMatrixCoordMatrix_withGeogebraCommonKernelMatrixCoordMatrix_(plane1, plane2);
}

- (instancetype)init {
  GeogebraCommonKernelMatrixCoordMatrixUtil_init(self);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "nearestPointsFromTwoLinesWithGeogebraCommonKernelMatrixCoords:withGeogebraCommonKernelMatrixCoords:withGeogebraCommonKernelMatrixCoords:withGeogebraCommonKernelMatrixCoords:", "nearestPointsFromTwoLines", "[Lgeogebra.common.kernel.Matrix.Coords;", 0x19, NULL, NULL },
    { "nearestPointsFromTwoLinesWithGeogebraCommonKernelMatrixCoords:withGeogebraCommonKernelMatrixCoords:withGeogebraCommonKernelMatrixCoords:withGeogebraCommonKernelMatrixCoords:withDoubleArray:withDoubleArray:withDoubleArray:withDoubleArray:", "nearestPointsFromTwoLines", "V", 0x19, NULL, NULL },
    { "intersectLinePlaneWithGeogebraCommonKernelMatrixCoordMatrix:withGeogebraCommonKernelMatrixCoordMatrix:", "intersectLinePlane", "[Lgeogebra.common.kernel.Matrix.Coords;", 0x19, NULL, NULL },
    { "sphericalCoordsWithGeogebraCommonKernelMatrixCoords:withGeogebraCommonKernelMatrixCoords:", "sphericalCoords", "V", 0x19, NULL, NULL },
    { "lineEquationVectorWithGeogebraCommonKernelMatrixCoords:withGeogebraCommonKernelMatrixCoords:withGeogebraCommonKernelMatrixCoordMatrix:", "lineEquationVector", "Lgeogebra.common.kernel.Matrix.Coords;", 0x19, NULL, NULL },
    { "lineEquationVectorWithGeogebraCommonKernelMatrixCoords:withGeogebraCommonKernelMatrixCoords:", "lineEquationVector", "Lgeogebra.common.kernel.Matrix.Coords;", 0x19, NULL, NULL },
    { "intersectPlanesWithGeogebraCommonKernelMatrixCoordMatrix:withGeogebraCommonKernelMatrixCoordMatrix:", "intersectPlanes", "[Lgeogebra.common.kernel.Matrix.Coords;", 0x19, NULL, NULL },
    { "init", NULL, NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelMatrixCoordMatrixUtil = { 2, "CoordMatrixUtil", "geogebra.common.kernel.Matrix", NULL, 0x11, 8, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelMatrixCoordMatrixUtil;
}

@end

IOSObjectArray *GeogebraCommonKernelMatrixCoordMatrixUtil_nearestPointsFromTwoLinesWithGeogebraCommonKernelMatrixCoords_withGeogebraCommonKernelMatrixCoords_withGeogebraCommonKernelMatrixCoords_withGeogebraCommonKernelMatrixCoords_(GeogebraCommonKernelMatrixCoords *o1, GeogebraCommonKernelMatrixCoords *v1, GeogebraCommonKernelMatrixCoords *o2, GeogebraCommonKernelMatrixCoords *v2) {
  GeogebraCommonKernelMatrixCoordMatrixUtil_initialize();
  IOSDoubleArray *project1 = [IOSDoubleArray arrayWithLength:4], *project2 = [IOSDoubleArray arrayWithLength:4], *lineCoords = [IOSDoubleArray arrayWithLength:2];
  GeogebraCommonKernelMatrixCoordMatrixUtil_nearestPointsFromTwoLinesWithGeogebraCommonKernelMatrixCoords_withGeogebraCommonKernelMatrixCoords_withGeogebraCommonKernelMatrixCoords_withGeogebraCommonKernelMatrixCoords_withDoubleArray_withDoubleArray_withDoubleArray_withDoubleArray_(o1, v1, o2, v2, project1, project2, lineCoords, [IOSDoubleArray arrayWithLength:4]);
  return [IOSObjectArray arrayWithObjects:(id[]){ [new_GeogebraCommonKernelMatrixCoords_initWithDoubleArray_(project1) autorelease], [new_GeogebraCommonKernelMatrixCoords_initWithDoubleArray_(project2) autorelease], [new_GeogebraCommonKernelMatrixCoords_initWithDoubleArray_(lineCoords) autorelease] } count:3 type:GeogebraCommonKernelMatrixCoords_class_()];
}

void GeogebraCommonKernelMatrixCoordMatrixUtil_nearestPointsFromTwoLinesWithGeogebraCommonKernelMatrixCoords_withGeogebraCommonKernelMatrixCoords_withGeogebraCommonKernelMatrixCoords_withGeogebraCommonKernelMatrixCoords_withDoubleArray_withDoubleArray_withDoubleArray_withDoubleArray_(GeogebraCommonKernelMatrixCoords *o1, GeogebraCommonKernelMatrixCoords *v1, GeogebraCommonKernelMatrixCoords *o2, GeogebraCommonKernelMatrixCoords *v2, IOSDoubleArray *project1, IOSDoubleArray *project2, IOSDoubleArray *lineCoords, IOSDoubleArray *tmp) {
  GeogebraCommonKernelMatrixCoordMatrixUtil_initialize();
  GeogebraCommonKernelMatrixCoords *vn = [((GeogebraCommonKernelMatrixCoords *) nil_chk(v1)) crossProductWithGeogebraCommonKernelMatrixCoords:v2];
  if ([((GeogebraCommonKernelMatrixCoords *) nil_chk(vn)) equalsForKernelWithDouble:0 withDouble:GeogebraCommonKernelKernel_STANDARD_PRECISION]) {
    [v1 copy__WithDoubleArray:project1];
    [((GeogebraCommonKernelMatrixCoords *) nil_chk(v2)) copy__WithDoubleArray:project2];
    *IOSDoubleArray_GetRef(nil_chk(lineCoords), 0) = JavaLangDouble_NaN;
    *IOSDoubleArray_GetRef(lineCoords, 1) = JavaLangDouble_NaN;
    return;
  }
  [((GeogebraCommonKernelMatrixCoords *) nil_chk(o2)) projectPlaneNoCheckWithGeogebraCommonKernelMatrixCoords:v1 withGeogebraCommonKernelMatrixCoords:vn withGeogebraCommonKernelMatrixCoords:v2 withGeogebraCommonKernelMatrixCoords:o1 withDoubleArray:project2 withDoubleArray:tmp];
  *IOSDoubleArray_GetRef(nil_chk(lineCoords), 1) = -IOSDoubleArray_Get(nil_chk(tmp), 2);
  [((GeogebraCommonKernelMatrixCoords *) nil_chk(o1)) projectPlaneNoCheckWithGeogebraCommonKernelMatrixCoords:v2 withGeogebraCommonKernelMatrixCoords:vn withGeogebraCommonKernelMatrixCoords:v1 withGeogebraCommonKernelMatrixCoords:o2 withDoubleArray:project1 withDoubleArray:tmp];
  *IOSDoubleArray_GetRef(lineCoords, 0) = -IOSDoubleArray_Get(tmp, 2);
}

IOSObjectArray *GeogebraCommonKernelMatrixCoordMatrixUtil_intersectLinePlaneWithGeogebraCommonKernelMatrixCoordMatrix_withGeogebraCommonKernelMatrixCoordMatrix_(GeogebraCommonKernelMatrixCoordMatrix *line, GeogebraCommonKernelMatrixCoordMatrix *plane) {
  GeogebraCommonKernelMatrixCoordMatrixUtil_initialize();
  GeogebraCommonKernelMatrixCoords *v = [((GeogebraCommonKernelMatrixCoordMatrix *) nil_chk(line)) getColumnWithInt:1];
  GeogebraCommonKernelMatrixCoords *o = [line getColumnWithInt:2];
  IOSObjectArray *result = [IOSObjectArray arrayWithObjects:(id[]){ [new_GeogebraCommonKernelMatrixCoords_initWithInt_(4) autorelease], [new_GeogebraCommonKernelMatrixCoords_initWithInt_(4) autorelease] } count:2 type:GeogebraCommonKernelMatrixCoords_class_()];
  [((GeogebraCommonKernelMatrixCoords *) nil_chk(o)) projectPlaneThruVWithGeogebraCommonKernelMatrixCoordMatrix:plane withGeogebraCommonKernelMatrixCoords:v withGeogebraCommonKernelMatrixCoords:IOSObjectArray_Get(result, 0) withGeogebraCommonKernelMatrixCoords:IOSObjectArray_Get(result, 1)];
  return result;
}

void GeogebraCommonKernelMatrixCoordMatrixUtil_sphericalCoordsWithGeogebraCommonKernelMatrixCoords_withGeogebraCommonKernelMatrixCoords_(GeogebraCommonKernelMatrixCoords *v, GeogebraCommonKernelMatrixCoords *ret) {
  GeogebraCommonKernelMatrixCoordMatrixUtil_initialize();
  jdouble x = [((GeogebraCommonKernelMatrixCoords *) nil_chk(v)) getWithInt:1];
  jdouble y = [v getWithInt:2];
  jdouble z = [v getWithInt:3];
  jdouble n2 = x * x + y * y;
  jdouble n1 = JavaLangMath_sqrtWithDouble_(n2);
  jdouble norm = JavaLangMath_sqrtWithDouble_(n2 + z * z);
  jdouble a;
  if (n1 == 0) a = 0;
  else {
    a = JavaLangMath_acosWithDouble_(x / n1);
    if (y < 0) a *= -1;
  }
  jdouble b;
  if (norm == 0) b = 0;
  else {
    b = JavaLangMath_acosWithDouble_(n1 / norm);
    if (z < 0) b *= -1;
  }
  [((GeogebraCommonKernelMatrixCoords *) nil_chk(ret)) setXWithDouble:norm];
  [ret setYWithDouble:a];
  [ret setZWithDouble:b];
}

GeogebraCommonKernelMatrixCoords *GeogebraCommonKernelMatrixCoordMatrixUtil_lineEquationVectorWithGeogebraCommonKernelMatrixCoords_withGeogebraCommonKernelMatrixCoords_withGeogebraCommonKernelMatrixCoordMatrix_(GeogebraCommonKernelMatrixCoords *origin, GeogebraCommonKernelMatrixCoords *direction, GeogebraCommonKernelMatrixCoordMatrix *plane) {
  GeogebraCommonKernelMatrixCoordMatrixUtil_initialize();
  GeogebraCommonKernelMatrixCoords *o = [new_GeogebraCommonKernelMatrixCoords_initWithInt_(4) autorelease];
  [((GeogebraCommonKernelMatrixCoords *) nil_chk(origin)) projectPlaneInPlaneCoordsWithGeogebraCommonKernelMatrixCoordMatrix:plane withGeogebraCommonKernelMatrixCoords:o];
  GeogebraCommonKernelMatrixCoords *d = [new_GeogebraCommonKernelMatrixCoords_initWithInt_(4) autorelease];
  [((GeogebraCommonKernelMatrixCoords *) nil_chk(direction)) projectPlaneInPlaneCoordsWithGeogebraCommonKernelMatrixCoordMatrix:plane withGeogebraCommonKernelMatrixCoords:d];
  return GeogebraCommonKernelMatrixCoordMatrixUtil_lineEquationVectorWithGeogebraCommonKernelMatrixCoords_withGeogebraCommonKernelMatrixCoords_(o, d);
}

GeogebraCommonKernelMatrixCoords *GeogebraCommonKernelMatrixCoordMatrixUtil_lineEquationVectorWithGeogebraCommonKernelMatrixCoords_withGeogebraCommonKernelMatrixCoords_(GeogebraCommonKernelMatrixCoords *origin, GeogebraCommonKernelMatrixCoords *direction) {
  GeogebraCommonKernelMatrixCoordMatrixUtil_initialize();
  if (!GeogebraCommonKernelKernel_isZeroWithDouble_([((GeogebraCommonKernelMatrixCoords *) nil_chk(origin)) getZ]) || !GeogebraCommonKernelKernel_isZeroWithDouble_([((GeogebraCommonKernelMatrixCoords *) nil_chk(direction)) getZ])) return nil;
  jdouble x = -[((GeogebraCommonKernelMatrixCoords *) nil_chk(direction)) getY];
  jdouble y = [direction getX];
  jdouble z = -x * [origin getX] - y * [origin getY];
  return [new_GeogebraCommonKernelMatrixCoords_initWithDouble_withDouble_withDouble_(x, y, z) autorelease];
}

IOSObjectArray *GeogebraCommonKernelMatrixCoordMatrixUtil_intersectPlanesWithGeogebraCommonKernelMatrixCoordMatrix_withGeogebraCommonKernelMatrixCoordMatrix_(GeogebraCommonKernelMatrixCoordMatrix *plane1, GeogebraCommonKernelMatrixCoordMatrix *plane2) {
  GeogebraCommonKernelMatrixCoordMatrixUtil_initialize();
  GeogebraCommonKernelMatrixCoords *vn1 = [((GeogebraCommonKernelMatrixCoordMatrix *) nil_chk(plane1)) getVz];
  GeogebraCommonKernelMatrixCoords *vn2 = [((GeogebraCommonKernelMatrixCoordMatrix *) nil_chk(plane2)) getVz];
  GeogebraCommonKernelMatrixCoords *v = [((GeogebraCommonKernelMatrixCoords *) nil_chk(vn1)) crossProductWithGeogebraCommonKernelMatrixCoords:vn2];
  GeogebraCommonKernelMatrixCoords *direction = [new_GeogebraCommonKernelMatrixCoords_initWithInt_(4) autorelease];
  GeogebraCommonKernelMatrixCoords *origin = [new_GeogebraCommonKernelMatrixCoords_initWithInt_(4) autorelease];
  if ([((GeogebraCommonKernelMatrixCoords *) nil_chk(v)) isZero]) {
    [origin setWithGeogebraCommonKernelMatrixCoords:[plane1 getOrigin]];
    [((GeogebraCommonKernelMatrixCoords *) nil_chk([plane1 getOrigin])) projectPlaneInPlaneCoordsWithGeogebraCommonKernelMatrixCoordMatrix:plane2 withGeogebraCommonKernelMatrixCoords:direction];
    if (!GeogebraCommonKernelKernel_isZeroWithDouble_([direction getZ])) {
      [origin setWithDouble:0];
    }
  }
  else {
    [((GeogebraCommonKernelMatrixCoords *) nil_chk([plane1 getOrigin])) projectPlaneThruVWithGeogebraCommonKernelMatrixCoordMatrix:plane2 withGeogebraCommonKernelMatrixCoords:[vn1 crossProduct4WithGeogebraCommonKernelMatrixCoords:v] withGeogebraCommonKernelMatrixCoords:origin];
  }
  [direction setWithGeogebraCommonKernelMatrixCoords:v];
  [direction setWWithDouble:0];
  return [IOSObjectArray arrayWithObjects:(id[]){ origin, direction } count:2 type:GeogebraCommonKernelMatrixCoords_class_()];
}

void GeogebraCommonKernelMatrixCoordMatrixUtil_init(GeogebraCommonKernelMatrixCoordMatrixUtil *self) {
  NSObject_init(self);
}

GeogebraCommonKernelMatrixCoordMatrixUtil *new_GeogebraCommonKernelMatrixCoordMatrixUtil_init() {
  GeogebraCommonKernelMatrixCoordMatrixUtil *self = [GeogebraCommonKernelMatrixCoordMatrixUtil alloc];
  GeogebraCommonKernelMatrixCoordMatrixUtil_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelMatrixCoordMatrixUtil)
