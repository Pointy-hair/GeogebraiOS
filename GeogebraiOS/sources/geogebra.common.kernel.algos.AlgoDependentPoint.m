//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/algos/AlgoDependentPoint.java
//


#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "geogebra/common/kernel/Construction.h"
#include "geogebra/common/kernel/Kernel.h"
#include "geogebra/common/kernel/StringTemplate.h"
#include "geogebra/common/kernel/algos/AlgoDependentPoint.h"
#include "geogebra/common/kernel/algos/AlgoElement.h"
#include "geogebra/common/kernel/algos/Algos.h"
#include "geogebra/common/kernel/arithmetic/ExpressionNode.h"
#include "geogebra/common/kernel/arithmetic/ExpressionValue.h"
#include "geogebra/common/kernel/arithmetic/VectorValue.h"
#include "geogebra/common/kernel/geos/GeoPoint.h"
#include "geogebra/common/kernel/geos/GeoVec2D.h"
#include "java/lang/Double.h"
#include "java/lang/Exception.h"

@interface GeogebraCommonKernelAlgosAlgoDependentPoint () {
 @public
  GeogebraCommonKernelArithmeticExpressionNode *root_;
  GeogebraCommonKernelGeosGeoPoint *P_;
  GeogebraCommonKernelGeosGeoVec2D *temp_;
}

@end

J2OBJC_FIELD_SETTER(GeogebraCommonKernelAlgosAlgoDependentPoint, root_, GeogebraCommonKernelArithmeticExpressionNode *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelAlgosAlgoDependentPoint, P_, GeogebraCommonKernelGeosGeoPoint *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelAlgosAlgoDependentPoint, temp_, GeogebraCommonKernelGeosGeoVec2D *)

__attribute__((unused)) static void GeogebraCommonKernelAlgosAlgoDependentPoint_compute(GeogebraCommonKernelAlgosAlgoDependentPoint *self);

@implementation GeogebraCommonKernelAlgosAlgoDependentPoint

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                                            withNSString:(NSString *)label
        withGeogebraCommonKernelArithmeticExpressionNode:(GeogebraCommonKernelArithmeticExpressionNode *)root
                                             withBoolean:(jboolean)complex {
  GeogebraCommonKernelAlgosAlgoDependentPoint_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelArithmeticExpressionNode_withBoolean_(self, cons, label, root, complex);
  return self;
}

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
        withGeogebraCommonKernelArithmeticExpressionNode:(GeogebraCommonKernelArithmeticExpressionNode *)root
                                             withBoolean:(jboolean)complex {
  GeogebraCommonKernelAlgosAlgoDependentPoint_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelArithmeticExpressionNode_withBoolean_(self, cons, root, complex);
  return self;
}

- (GeogebraCommonKernelAlgosAlgosEnum *)getClassName {
  return GeogebraCommonKernelAlgosAlgosEnum_get_Expression();
}

- (void)setInputOutput {
  GeogebraCommonKernelAlgosAlgoElement_set_input_(self, [((GeogebraCommonKernelArithmeticExpressionNode *) nil_chk(root_)) getGeoElementVariables]);
  [self setOutputLengthWithInt:1];
  [self setOutputWithInt:0 withGeogebraCommonKernelGeosGeoElement:P_];
  [self setDependencies];
}

- (GeogebraCommonKernelGeosGeoPoint *)getPoint {
  return P_;
}

- (GeogebraCommonKernelArithmeticExpressionNode *)getExpressionNode {
  return root_;
}

- (void)compute {
  GeogebraCommonKernelAlgosAlgoDependentPoint_compute(self);
}

- (NSString *)toStringWithGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl {
  return [((GeogebraCommonKernelArithmeticExpressionNode *) nil_chk(root_)) toStringWithGeogebraCommonKernelStringTemplate:tpl];
}

- (void)dealloc {
  RELEASE_(root_);
  RELEASE_(P_);
  RELEASE_(temp_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonKernelConstruction:withNSString:withGeogebraCommonKernelArithmeticExpressionNode:withBoolean:", "AlgoDependentPoint", NULL, 0x1, NULL, NULL },
    { "initWithGeogebraCommonKernelConstruction:withGeogebraCommonKernelArithmeticExpressionNode:withBoolean:", "AlgoDependentPoint", NULL, 0x1, NULL, NULL },
    { "getClassName", NULL, "Lgeogebra.common.kernel.algos.Algos;", 0x1, NULL, NULL },
    { "setInputOutput", NULL, "V", 0x4, NULL, NULL },
    { "getPoint", NULL, "Lgeogebra.common.kernel.geos.GeoPoint;", 0x1, NULL, NULL },
    { "getExpressionNode", NULL, "Lgeogebra.common.kernel.arithmetic.ExpressionNode;", 0x1, NULL, NULL },
    { "compute", NULL, "V", 0x11, NULL, NULL },
    { "toStringWithGeogebraCommonKernelStringTemplate:", "toString", "Ljava.lang.String;", 0x11, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "root_", NULL, 0x2, "Lgeogebra.common.kernel.arithmetic.ExpressionNode;", NULL, NULL,  },
    { "P_", NULL, 0x2, "Lgeogebra.common.kernel.geos.GeoPoint;", NULL, NULL,  },
    { "temp_", NULL, 0x2, "Lgeogebra.common.kernel.geos.GeoVec2D;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelAlgosAlgoDependentPoint = { 2, "AlgoDependentPoint", "geogebra.common.kernel.algos", NULL, 0x1, 8, methods, 3, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelAlgosAlgoDependentPoint;
}

@end

void GeogebraCommonKernelAlgosAlgoDependentPoint_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelArithmeticExpressionNode_withBoolean_(GeogebraCommonKernelAlgosAlgoDependentPoint *self, GeogebraCommonKernelConstruction *cons, NSString *label, GeogebraCommonKernelArithmeticExpressionNode *root, jboolean complex) {
  GeogebraCommonKernelAlgosAlgoDependentPoint_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelArithmeticExpressionNode_withBoolean_(self, cons, root, complex);
  [((GeogebraCommonKernelGeosGeoPoint *) nil_chk(self->P_)) setLabelWithNSString:label];
}

GeogebraCommonKernelAlgosAlgoDependentPoint *new_GeogebraCommonKernelAlgosAlgoDependentPoint_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelArithmeticExpressionNode_withBoolean_(GeogebraCommonKernelConstruction *cons, NSString *label, GeogebraCommonKernelArithmeticExpressionNode *root, jboolean complex) {
  GeogebraCommonKernelAlgosAlgoDependentPoint *self = [GeogebraCommonKernelAlgosAlgoDependentPoint alloc];
  GeogebraCommonKernelAlgosAlgoDependentPoint_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelArithmeticExpressionNode_withBoolean_(self, cons, label, root, complex);
  return self;
}

void GeogebraCommonKernelAlgosAlgoDependentPoint_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelArithmeticExpressionNode_withBoolean_(GeogebraCommonKernelAlgosAlgoDependentPoint *self, GeogebraCommonKernelConstruction *cons, GeogebraCommonKernelArithmeticExpressionNode *root, jboolean complex) {
  GeogebraCommonKernelAlgosAlgoElement_initWithGeogebraCommonKernelConstruction_(self, cons);
  GeogebraCommonKernelAlgosAlgoDependentPoint_set_root_(self, root);
  GeogebraCommonKernelAlgosAlgoDependentPoint_setAndConsume_P_(self, new_GeogebraCommonKernelGeosGeoPoint_initWithGeogebraCommonKernelConstruction_(cons));
  [self setInputOutput];
  if (complex) [self->P_ setModeWithInt:GeogebraCommonKernelKernel_COORD_COMPLEX];
  GeogebraCommonKernelAlgosAlgoDependentPoint_compute(self);
}

GeogebraCommonKernelAlgosAlgoDependentPoint *new_GeogebraCommonKernelAlgosAlgoDependentPoint_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelArithmeticExpressionNode_withBoolean_(GeogebraCommonKernelConstruction *cons, GeogebraCommonKernelArithmeticExpressionNode *root, jboolean complex) {
  GeogebraCommonKernelAlgosAlgoDependentPoint *self = [GeogebraCommonKernelAlgosAlgoDependentPoint alloc];
  GeogebraCommonKernelAlgosAlgoDependentPoint_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelArithmeticExpressionNode_withBoolean_(self, cons, root, complex);
  return self;
}

void GeogebraCommonKernelAlgosAlgoDependentPoint_compute(GeogebraCommonKernelAlgosAlgoDependentPoint *self) {
  @try {
    GeogebraCommonKernelAlgosAlgoDependentPoint_set_temp_(self, [((id<GeogebraCommonKernelArithmeticVectorValue>) nil_chk(((id<GeogebraCommonKernelArithmeticVectorValue>) check_protocol_cast([((GeogebraCommonKernelArithmeticExpressionNode *) nil_chk(self->root_)) evaluateWithGeogebraCommonKernelStringTemplate:GeogebraCommonKernelStringTemplate_get_defaultTemplate_()], @protocol(GeogebraCommonKernelArithmeticVectorValue))))) getVector]);
    if (JavaLangDouble_isInfiniteWithDouble_([((GeogebraCommonKernelGeosGeoVec2D *) nil_chk(self->temp_)) getX]) || JavaLangDouble_isInfiniteWithDouble_([self->temp_ getY])) {
      [((GeogebraCommonKernelGeosGeoPoint *) nil_chk(self->P_)) setUndefined];
    }
    else {
      [((GeogebraCommonKernelGeosGeoPoint *) nil_chk(self->P_)) setCoordsWithDouble:[self->temp_ getX] withDouble:[self->temp_ getY] withDouble:1.0];
    }
  }
  @catch (JavaLangException *e) {
    [((GeogebraCommonKernelGeosGeoPoint *) nil_chk(self->P_)) setUndefined];
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelAlgosAlgoDependentPoint)
