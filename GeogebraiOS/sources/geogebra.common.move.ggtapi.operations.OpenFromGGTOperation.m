//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/move/ggtapi/operations/OpenFromGGTOperation.java
//


#include "J2ObjC_source.h"
#include "geogebra/common/main/App.h"
#include "geogebra/common/main/Localization.h"
#include "geogebra/common/move/ggtapi/models/AuthenticationModel.h"
#include "geogebra/common/move/ggtapi/models/GeoGebraTubeUser.h"
#include "geogebra/common/move/ggtapi/operations/LogInOperation.h"
#include "geogebra/common/move/ggtapi/operations/OpenFromGGTOperation.h"
#include "geogebra/common/move/operations/BaseOperation.h"
#include "geogebra/common/move/views/BaseEventView.h"

static NSString *GeogebraCommonMoveGgtapiOperationsOpenFromGGTOperation_GGT_URL_ = @"http://tube.geogebra.org/widgetprovider/index/widgettype/";
J2OBJC_STATIC_FIELD_GETTER(GeogebraCommonMoveGgtapiOperationsOpenFromGGTOperation, GGT_URL_, NSString *)
J2OBJC_STATIC_FIELD_SETTER(GeogebraCommonMoveGgtapiOperationsOpenFromGGTOperation, GGT_URL_, NSString *)

@implementation GeogebraCommonMoveGgtapiOperationsOpenFromGGTOperation

- (instancetype)initWithGeogebraCommonMainApp:(GeogebraCommonMainApp *)app {
  GeogebraCommonMoveGgtapiOperationsOpenFromGGTOperation_initWithGeogebraCommonMainApp_(self, app);
  return self;
}

- (NSString *)generateOpenFromGGTURLWithNSString:(NSString *)type {
  NSString *url = JreStrcat("$$", GeogebraCommonMoveGgtapiOperationsOpenFromGGTOperation_GGT_URL_, type);
  if ([((GeogebraCommonMoveGgtapiOperationsLogInOperation *) nil_chk([((GeogebraCommonMainApp *) nil_chk(app_)) getLoginOperation])) isLoggedIn]) {
    NSString *token = [((GeogebraCommonMoveGgtapiModelsGeoGebraTubeUser *) nil_chk([((GeogebraCommonMoveGgtapiModelsAuthenticationModel *) nil_chk([((GeogebraCommonMoveGgtapiOperationsLogInOperation *) nil_chk([app_ getLoginOperation])) getModel])) getLoggedInUser])) getLoginToken];
    if (token != nil) {
      url = JreStrcat("$$", url, JreStrcat("$$", @"/lt/", token));
    }
  }
  else {
    url = JreStrcat("$$", url, @"/lt/nouser");
  }
  url = JreStrcat("$$", url, JreStrcat("$$", @"/?lang=", [((GeogebraCommonMainLocalization *) nil_chk([app_ getLocalization])) getLanguage]));
  return url;
}

- (void)dealloc {
  RELEASE_(app_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonMainApp:", "OpenFromGGTOperation", NULL, 0x1, NULL, NULL },
    { "generateOpenFromGGTURLWithNSString:", "generateOpenFromGGTURL", "Ljava.lang.String;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "GGT_URL_", NULL, 0xa, "Ljava.lang.String;", &GeogebraCommonMoveGgtapiOperationsOpenFromGGTOperation_GGT_URL_, NULL,  },
    { "app_", NULL, 0x4, "Lgeogebra.common.main.App;", NULL, NULL,  },
  };
  static const char *superclass_type_args[] = {"Lgeogebra.common.move.views.EventRenderable;"};
  static const char *inner_classes[] = {"Lgeogebra.common.move.ggtapi.operations.OpenFromGGTOperation$APP_TYPE;"};
  static const J2ObjcClassInfo _GeogebraCommonMoveGgtapiOperationsOpenFromGGTOperation = { 2, "OpenFromGGTOperation", "geogebra.common.move.ggtapi.operations", NULL, 0x1, 2, methods, 2, fields, 1, superclass_type_args, 1, inner_classes, NULL, "Lgeogebra/common/move/operations/BaseOperation<Lgeogebra/common/move/views/EventRenderable;>;" };
  return &_GeogebraCommonMoveGgtapiOperationsOpenFromGGTOperation;
}

@end

void GeogebraCommonMoveGgtapiOperationsOpenFromGGTOperation_initWithGeogebraCommonMainApp_(GeogebraCommonMoveGgtapiOperationsOpenFromGGTOperation *self, GeogebraCommonMainApp *app) {
  GeogebraCommonMoveOperationsBaseOperation_init(self);
  GeogebraCommonMoveGgtapiOperationsOpenFromGGTOperation_set_app_(self, app);
  [self setViewWithGeogebraCommonMoveViewsBaseView:[new_GeogebraCommonMoveViewsBaseEventView_init() autorelease]];
}

GeogebraCommonMoveGgtapiOperationsOpenFromGGTOperation *new_GeogebraCommonMoveGgtapiOperationsOpenFromGGTOperation_initWithGeogebraCommonMainApp_(GeogebraCommonMainApp *app) {
  GeogebraCommonMoveGgtapiOperationsOpenFromGGTOperation *self = [GeogebraCommonMoveGgtapiOperationsOpenFromGGTOperation alloc];
  GeogebraCommonMoveGgtapiOperationsOpenFromGGTOperation_initWithGeogebraCommonMainApp_(self, app);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonMoveGgtapiOperationsOpenFromGGTOperation)

NSString *GeogebraCommonMoveGgtapiOperationsOpenFromGGTOperation_APP_TYPE_WEB_ = @"web";
NSString *GeogebraCommonMoveGgtapiOperationsOpenFromGGTOperation_APP_TYPE_DESKTOP_ = @"desktop";

@implementation GeogebraCommonMoveGgtapiOperationsOpenFromGGTOperation_APP_TYPE

- (instancetype)init {
  GeogebraCommonMoveGgtapiOperationsOpenFromGGTOperation_APP_TYPE_init(self);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", NULL, NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "WEB_", NULL, 0x19, "Ljava.lang.String;", &GeogebraCommonMoveGgtapiOperationsOpenFromGGTOperation_APP_TYPE_WEB_, NULL,  },
    { "DESKTOP_", NULL, 0x19, "Ljava.lang.String;", &GeogebraCommonMoveGgtapiOperationsOpenFromGGTOperation_APP_TYPE_DESKTOP_, NULL,  },
  };
  static const J2ObjcClassInfo _GeogebraCommonMoveGgtapiOperationsOpenFromGGTOperation_APP_TYPE = { 2, "APP_TYPE", "geogebra.common.move.ggtapi.operations", "OpenFromGGTOperation", 0x19, 1, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonMoveGgtapiOperationsOpenFromGGTOperation_APP_TYPE;
}

@end

void GeogebraCommonMoveGgtapiOperationsOpenFromGGTOperation_APP_TYPE_init(GeogebraCommonMoveGgtapiOperationsOpenFromGGTOperation_APP_TYPE *self) {
  NSObject_init(self);
}

GeogebraCommonMoveGgtapiOperationsOpenFromGGTOperation_APP_TYPE *new_GeogebraCommonMoveGgtapiOperationsOpenFromGGTOperation_APP_TYPE_init() {
  GeogebraCommonMoveGgtapiOperationsOpenFromGGTOperation_APP_TYPE *self = [GeogebraCommonMoveGgtapiOperationsOpenFromGGTOperation_APP_TYPE alloc];
  GeogebraCommonMoveGgtapiOperationsOpenFromGGTOperation_APP_TYPE_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonMoveGgtapiOperationsOpenFromGGTOperation_APP_TYPE)
