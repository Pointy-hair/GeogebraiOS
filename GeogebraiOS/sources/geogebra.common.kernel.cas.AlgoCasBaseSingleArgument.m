//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/cas/AlgoCasBaseSingleArgument.java
//


#include "J2ObjC_source.h"
#include "geogebra/common/kernel/Construction.h"
#include "geogebra/common/kernel/StringTemplate.h"
#include "geogebra/common/kernel/algos/AlgoCasBase.h"
#include "geogebra/common/kernel/arithmetic/MyArbitraryConstant.h"
#include "geogebra/common/kernel/cas/AlgoCasBaseSingleArgument.h"
#include "geogebra/common/kernel/commands/Commands.h"
#include "geogebra/common/kernel/geos/CasEvaluableFunction.h"
#include "geogebra/common/kernel/geos/GeoElement.h"

@interface GeogebraCommonKernelCasAlgoCasBaseSingleArgument () {
 @public
  GeogebraCommonKernelArithmeticMyArbitraryConstant *arbconst_;
}

@end

J2OBJC_FIELD_SETTER(GeogebraCommonKernelCasAlgoCasBaseSingleArgument, arbconst_, GeogebraCommonKernelArithmeticMyArbitraryConstant *)

@implementation GeogebraCommonKernelCasAlgoCasBaseSingleArgument

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                                            withNSString:(NSString *)label
        withGeogebraCommonKernelGeosCasEvaluableFunction:(id<GeogebraCommonKernelGeosCasEvaluableFunction>)f
            withGeogebraCommonKernelCommandsCommandsEnum:(GeogebraCommonKernelCommandsCommandsEnum *)cmd {
  GeogebraCommonKernelCasAlgoCasBaseSingleArgument_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosCasEvaluableFunction_withGeogebraCommonKernelCommandsCommandsEnum_(self, cons, label, f, cmd);
  return self;
}

- (void)applyCasCommandWithGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl {
  GeogebraCommonKernelCommandsCommandsEnum *cmd = [self getClassName];
  [((id<GeogebraCommonKernelGeosCasEvaluableFunction>) nil_chk(g_)) setUsingCasCommandWithNSString:JreStrcat("$$", [((GeogebraCommonKernelCommandsCommandsEnum *) nil_chk(cmd)) name], @"[%]") withGeogebraCommonKernelGeosCasEvaluableFunction:f_ withBoolean:NO withGeogebraCommonKernelArithmeticMyArbitraryConstant:arbconst_];
  if ([((id<GeogebraCommonKernelGeosCasEvaluableFunction>) nil_chk(f_)) isDefined] && ![g_ isDefined]) {
    [((GeogebraCommonKernelGeosGeoElement *) nil_chk([g_ toGeoElement])) setWithGeogebraCommonKernelGeosGeoElement:[f_ toGeoElement]];
  }
}

- (void)dealloc {
  RELEASE_(arbconst_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonKernelConstruction:withNSString:withGeogebraCommonKernelGeosCasEvaluableFunction:withGeogebraCommonKernelCommandsCommandsEnum:", "AlgoCasBaseSingleArgument", NULL, 0x1, NULL, NULL },
    { "applyCasCommandWithGeogebraCommonKernelStringTemplate:", "applyCasCommand", "V", 0x4, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "arbconst_", NULL, 0x2, "Lgeogebra.common.kernel.arithmetic.MyArbitraryConstant;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelCasAlgoCasBaseSingleArgument = { 2, "AlgoCasBaseSingleArgument", "geogebra.common.kernel.cas", NULL, 0x1, 2, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelCasAlgoCasBaseSingleArgument;
}

@end

void GeogebraCommonKernelCasAlgoCasBaseSingleArgument_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosCasEvaluableFunction_withGeogebraCommonKernelCommandsCommandsEnum_(GeogebraCommonKernelCasAlgoCasBaseSingleArgument *self, GeogebraCommonKernelConstruction *cons, NSString *label, id<GeogebraCommonKernelGeosCasEvaluableFunction> f, GeogebraCommonKernelCommandsCommandsEnum *cmd) {
  GeogebraCommonKernelAlgosAlgoCasBase_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosCasEvaluableFunction_withGeogebraCommonKernelCommandsCommandsEnum_(self, cons, label, f, cmd);
  GeogebraCommonKernelCasAlgoCasBaseSingleArgument_setAndConsume_arbconst_(self, new_GeogebraCommonKernelArithmeticMyArbitraryConstant_initWithGeogebraCommonKernelAlgosConstructionElement_(self));
}

GeogebraCommonKernelCasAlgoCasBaseSingleArgument *new_GeogebraCommonKernelCasAlgoCasBaseSingleArgument_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosCasEvaluableFunction_withGeogebraCommonKernelCommandsCommandsEnum_(GeogebraCommonKernelConstruction *cons, NSString *label, id<GeogebraCommonKernelGeosCasEvaluableFunction> f, GeogebraCommonKernelCommandsCommandsEnum *cmd) {
  GeogebraCommonKernelCasAlgoCasBaseSingleArgument *self = [GeogebraCommonKernelCasAlgoCasBaseSingleArgument alloc];
  GeogebraCommonKernelCasAlgoCasBaseSingleArgument_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosCasEvaluableFunction_withGeogebraCommonKernelCommandsCommandsEnum_(self, cons, label, f, cmd);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelCasAlgoCasBaseSingleArgument)
