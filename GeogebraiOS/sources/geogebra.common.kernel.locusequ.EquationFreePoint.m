//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/locusequ/EquationFreePoint.java
//


#include "J2ObjC_source.h"
#include "geogebra/common/kernel/geos/GeoPoint.h"
#include "geogebra/common/kernel/locusequ/EquationFreePoint.h"
#include "geogebra/common/kernel/locusequ/EquationPoint.h"
#include "geogebra/common/kernel/locusequ/arith/EquationExpression.h"
#include "geogebra/common/kernel/locusequ/arith/EquationNumericValue.h"

@interface GeogebraCommonKernelLocusequEquationFreePoint () {
 @public
  GeogebraCommonKernelGeosGeoPoint *p_;
}

@end

J2OBJC_FIELD_SETTER(GeogebraCommonKernelLocusequEquationFreePoint, p_, GeogebraCommonKernelGeosGeoPoint *)

@implementation GeogebraCommonKernelLocusequEquationFreePoint

- (instancetype)initWithGeogebraCommonKernelGeosGeoPoint:(GeogebraCommonKernelGeosGeoPoint *)p {
  GeogebraCommonKernelLocusequEquationFreePoint_initWithGeogebraCommonKernelGeosGeoPoint_(self, p);
  return self;
}

- (GeogebraCommonKernelGeosGeoPoint *)getPoint {
  return self->p_;
}

- (GeogebraCommonKernelLocusequArithEquationExpression *)getXExpression {
  return x_;
}

- (GeogebraCommonKernelLocusequArithEquationExpression *)getYExpression {
  return y_;
}

- (GeogebraCommonKernelLocusequArithEquationExpression *)getZExpression {
  return z_;
}

- (jboolean)isIndependent {
  return YES;
}

- (void)getIndexesFromWithGeogebraCommonKernelLocusequEquationPoint:(GeogebraCommonKernelLocusequEquationPoint *)newPoint {
}

- (void)fixXWithDouble:(jdouble)value {
  GeogebraCommonKernelLocusequEquationFreePoint_set_x_(self, GeogebraCommonKernelLocusequArithEquationNumericValue_fromWithDouble_(value));
}

- (void)fixYWithDouble:(jdouble)value {
  GeogebraCommonKernelLocusequEquationFreePoint_set_y_(self, GeogebraCommonKernelLocusequArithEquationNumericValue_fromWithDouble_(value));
}

- (void)dealloc {
  RELEASE_(x_);
  RELEASE_(y_);
  RELEASE_(z_);
  RELEASE_(p_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonKernelGeosGeoPoint:", "EquationFreePoint", NULL, 0x1, NULL, NULL },
    { "getPoint", NULL, "Lgeogebra.common.kernel.geos.GeoPoint;", 0x1, NULL, NULL },
    { "getXExpression", NULL, "Lgeogebra.common.kernel.locusequ.arith.EquationExpression;", 0x1, NULL, NULL },
    { "getYExpression", NULL, "Lgeogebra.common.kernel.locusequ.arith.EquationExpression;", 0x1, NULL, NULL },
    { "getZExpression", NULL, "Lgeogebra.common.kernel.locusequ.arith.EquationExpression;", 0x1, NULL, NULL },
    { "isIndependent", NULL, "Z", 0x1, NULL, NULL },
    { "getIndexesFromWithGeogebraCommonKernelLocusequEquationPoint:", "getIndexesFrom", "V", 0x1, NULL, NULL },
    { "fixXWithDouble:", "fixX", "V", 0x1, NULL, NULL },
    { "fixYWithDouble:", "fixY", "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "x_", NULL, 0x4, "Lgeogebra.common.kernel.locusequ.arith.EquationNumericValue;", NULL, NULL,  },
    { "y_", NULL, 0x4, "Lgeogebra.common.kernel.locusequ.arith.EquationNumericValue;", NULL, NULL,  },
    { "z_", NULL, 0x4, "Lgeogebra.common.kernel.locusequ.arith.EquationNumericValue;", NULL, NULL,  },
    { "p_", NULL, 0x2, "Lgeogebra.common.kernel.geos.GeoPoint;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelLocusequEquationFreePoint = { 2, "EquationFreePoint", "geogebra.common.kernel.locusequ", NULL, 0x1, 9, methods, 4, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelLocusequEquationFreePoint;
}

@end

void GeogebraCommonKernelLocusequEquationFreePoint_initWithGeogebraCommonKernelGeosGeoPoint_(GeogebraCommonKernelLocusequEquationFreePoint *self, GeogebraCommonKernelGeosGeoPoint *p) {
  GeogebraCommonKernelLocusequEquationPoint_init(self);
  GeogebraCommonKernelLocusequEquationFreePoint_set_p_(self, p);
  GeogebraCommonKernelLocusequEquationFreePoint_set_x_(self, GeogebraCommonKernelLocusequArithEquationNumericValue_fromWithDouble_([((GeogebraCommonKernelGeosGeoPoint *) nil_chk(self->p_)) getX]));
  GeogebraCommonKernelLocusequEquationFreePoint_set_y_(self, GeogebraCommonKernelLocusequArithEquationNumericValue_fromWithDouble_([self->p_ getY]));
  GeogebraCommonKernelLocusequEquationFreePoint_set_z_(self, GeogebraCommonKernelLocusequArithEquationNumericValue_fromWithDouble_([self->p_ getZ]));
}

GeogebraCommonKernelLocusequEquationFreePoint *new_GeogebraCommonKernelLocusequEquationFreePoint_initWithGeogebraCommonKernelGeosGeoPoint_(GeogebraCommonKernelGeosGeoPoint *p) {
  GeogebraCommonKernelLocusequEquationFreePoint *self = [GeogebraCommonKernelLocusequEquationFreePoint alloc];
  GeogebraCommonKernelLocusequEquationFreePoint_initWithGeogebraCommonKernelGeosGeoPoint_(self, p);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelLocusequEquationFreePoint)
