//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/advanced/AlgoClosestPointLines.java
//


#include "J2ObjC_source.h"
#include "geogebra/common/kernel/Construction.h"
#include "geogebra/common/kernel/advanced/AlgoClosestPointLines.h"
#include "geogebra/common/kernel/algos/AlgoIntersectLines.h"
#include "geogebra/common/kernel/commands/Commands.h"
#include "geogebra/common/kernel/geos/GeoLine.h"

@implementation GeogebraCommonKernelAdvancedAlgoClosestPointLines

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                                            withNSString:(NSString *)label
                     withGeogebraCommonKernelGeosGeoLine:(GeogebraCommonKernelGeosGeoLine *)g
                     withGeogebraCommonKernelGeosGeoLine:(GeogebraCommonKernelGeosGeoLine *)h {
  GeogebraCommonKernelAdvancedAlgoClosestPointLines_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoLine_withGeogebraCommonKernelGeosGeoLine_(self, cons, label, g, h);
  return self;
}

- (GeogebraCommonKernelCommandsCommandsEnum *)getClassName {
  return GeogebraCommonKernelCommandsCommandsEnum_get_ClosestPoint();
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonKernelConstruction:withNSString:withGeogebraCommonKernelGeosGeoLine:withGeogebraCommonKernelGeosGeoLine:", "AlgoClosestPointLines", NULL, 0x1, NULL, NULL },
    { "getClassName", NULL, "Lgeogebra.common.kernel.commands.Commands;", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelAdvancedAlgoClosestPointLines = { 2, "AlgoClosestPointLines", "geogebra.common.kernel.advanced", NULL, 0x1, 2, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelAdvancedAlgoClosestPointLines;
}

@end

void GeogebraCommonKernelAdvancedAlgoClosestPointLines_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoLine_withGeogebraCommonKernelGeosGeoLine_(GeogebraCommonKernelAdvancedAlgoClosestPointLines *self, GeogebraCommonKernelConstruction *cons, NSString *label, GeogebraCommonKernelGeosGeoLine *g, GeogebraCommonKernelGeosGeoLine *h) {
  GeogebraCommonKernelAlgosAlgoIntersectLines_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoLine_withGeogebraCommonKernelGeosGeoLine_(self, cons, label, g, h);
}

GeogebraCommonKernelAdvancedAlgoClosestPointLines *new_GeogebraCommonKernelAdvancedAlgoClosestPointLines_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoLine_withGeogebraCommonKernelGeosGeoLine_(GeogebraCommonKernelConstruction *cons, NSString *label, GeogebraCommonKernelGeosGeoLine *g, GeogebraCommonKernelGeosGeoLine *h) {
  GeogebraCommonKernelAdvancedAlgoClosestPointLines *self = [GeogebraCommonKernelAdvancedAlgoClosestPointLines alloc];
  GeogebraCommonKernelAdvancedAlgoClosestPointLines_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoLine_withGeogebraCommonKernelGeosGeoLine_(self, cons, label, g, h);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelAdvancedAlgoClosestPointLines)
