//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/main/MyParseError.java
//


#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "geogebra/common/main/Localization.h"
#include "geogebra/common/main/MyError.h"
#include "geogebra/common/main/MyParseError.h"

#define GeogebraCommonMainMyParseError_serialVersionUID 1LL

J2OBJC_STATIC_FIELD_GETTER(GeogebraCommonMainMyParseError, serialVersionUID, jlong)

@implementation GeogebraCommonMainMyParseError

- (instancetype)initWithGeogebraCommonMainLocalization:(GeogebraCommonMainLocalization *)app
                                          withNSString:(NSString *)errorName {
  GeogebraCommonMainMyParseError_initWithGeogebraCommonMainLocalization_withNSString_(self, app, errorName);
  return self;
}

- (instancetype)initWithGeogebraCommonMainLocalization:(GeogebraCommonMainLocalization *)app
                                     withNSStringArray:(IOSObjectArray *)strs {
  GeogebraCommonMainMyParseError_initWithGeogebraCommonMainLocalization_withNSStringArray_(self, app, strs);
  return self;
}

- (NSString *)getLocalizedMessage {
  return JreStrcat("$$$", [((GeogebraCommonMainLocalization *) nil_chk(l10n_)) getErrorWithNSString:@"InvalidInput"], @" :\n", [super getLocalizedMessage]);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonMainLocalization:withNSString:", "MyParseError", NULL, 0x1, NULL, NULL },
    { "initWithGeogebraCommonMainLocalization:withNSStringArray:", "MyParseError", NULL, 0x1, NULL, NULL },
    { "getLocalizedMessage", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID_", NULL, 0x1a, "J", NULL, NULL, .constantValue.asLong = GeogebraCommonMainMyParseError_serialVersionUID },
  };
  static const J2ObjcClassInfo _GeogebraCommonMainMyParseError = { 2, "MyParseError", "geogebra.common.main", NULL, 0x1, 3, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonMainMyParseError;
}

@end

void GeogebraCommonMainMyParseError_initWithGeogebraCommonMainLocalization_withNSString_(GeogebraCommonMainMyParseError *self, GeogebraCommonMainLocalization *app, NSString *errorName) {
  GeogebraCommonMainMyError_initWithGeogebraCommonMainLocalization_withNSString_(self, app, errorName);
}

GeogebraCommonMainMyParseError *new_GeogebraCommonMainMyParseError_initWithGeogebraCommonMainLocalization_withNSString_(GeogebraCommonMainLocalization *app, NSString *errorName) {
  GeogebraCommonMainMyParseError *self = [GeogebraCommonMainMyParseError alloc];
  GeogebraCommonMainMyParseError_initWithGeogebraCommonMainLocalization_withNSString_(self, app, errorName);
  return self;
}

void GeogebraCommonMainMyParseError_initWithGeogebraCommonMainLocalization_withNSStringArray_(GeogebraCommonMainMyParseError *self, GeogebraCommonMainLocalization *app, IOSObjectArray *strs) {
  GeogebraCommonMainMyError_initWithGeogebraCommonMainLocalization_withNSStringArray_(self, app, strs);
}

GeogebraCommonMainMyParseError *new_GeogebraCommonMainMyParseError_initWithGeogebraCommonMainLocalization_withNSStringArray_(GeogebraCommonMainLocalization *app, IOSObjectArray *strs) {
  GeogebraCommonMainMyParseError *self = [GeogebraCommonMainMyParseError alloc];
  GeogebraCommonMainMyParseError_initWithGeogebraCommonMainLocalization_withNSStringArray_(self, app, strs);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonMainMyParseError)
