//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/algos/AlgoDilate.java
//


#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "geogebra/common/euclidian/EuclidianConstants.h"
#include "geogebra/common/kernel/Construction.h"
#include "geogebra/common/kernel/Matrix/Coords.h"
#include "geogebra/common/kernel/StringTemplate.h"
#include "geogebra/common/kernel/algos/AlgoDilate.h"
#include "geogebra/common/kernel/algos/AlgoElement.h"
#include "geogebra/common/kernel/algos/AlgoTransformation.h"
#include "geogebra/common/kernel/algos/ConstructionElement.h"
#include "geogebra/common/kernel/arithmetic/NumberValue.h"
#include "geogebra/common/kernel/commands/Commands.h"
#include "geogebra/common/kernel/geos/Dilateable.h"
#include "geogebra/common/kernel/geos/GeoConicPart.h"
#include "geogebra/common/kernel/geos/GeoElement.h"
#include "geogebra/common/kernel/geos/GeoList.h"
#include "geogebra/common/kernel/geos/GeoPoint.h"
#include "geogebra/common/kernel/kernelND/GeoPointND.h"
#include "geogebra/common/main/Localization.h"

@interface GeogebraCommonKernelAlgosAlgoDilate () {
 @public
  id<GeogebraCommonKernelGeosDilateable> out_;
  id<GeogebraCommonKernelArithmeticNumberValue> r_;
  GeogebraCommonKernelGeosGeoElement *rgeo_;
}

@end

J2OBJC_FIELD_SETTER(GeogebraCommonKernelAlgosAlgoDilate, out_, id<GeogebraCommonKernelGeosDilateable>)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelAlgosAlgoDilate, r_, id<GeogebraCommonKernelArithmeticNumberValue>)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelAlgosAlgoDilate, rgeo_, GeogebraCommonKernelGeosGeoElement *)

__attribute__((unused)) static void GeogebraCommonKernelAlgosAlgoDilate_compute(GeogebraCommonKernelAlgosAlgoDilate *self);

@implementation GeogebraCommonKernelAlgosAlgoDilate

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                                            withNSString:(NSString *)label
                  withGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)A
           withGeogebraCommonKernelArithmeticNumberValue:(id<GeogebraCommonKernelArithmeticNumberValue>)r
              withGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)S {
  GeogebraCommonKernelAlgosAlgoDilate_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoElement_withGeogebraCommonKernelArithmeticNumberValue_withGeogebraCommonKernelKernelNDGeoPointND_(self, cons, label, A, r, S);
  return self;
}

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                  withGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)A
           withGeogebraCommonKernelArithmeticNumberValue:(id<GeogebraCommonKernelArithmeticNumberValue>)r
              withGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)S {
  GeogebraCommonKernelAlgosAlgoDilate_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoElement_withGeogebraCommonKernelArithmeticNumberValue_withGeogebraCommonKernelKernelNDGeoPointND_(self, cons, A, r, S);
  return self;
}

- (GeogebraCommonKernelCommandsCommandsEnum *)getClassName {
  return GeogebraCommonKernelCommandsCommandsEnum_get_Dilate();
}

- (jint)getRelatedModeID {
  return GeogebraCommonEuclidianEuclidianConstants_MODE_DILATE_FROM_POINT;
}

- (void)setInputOutput {
  GeogebraCommonKernelAlgosAlgoElement_setAndConsume_input_(self, [IOSObjectArray newArrayWithLength:S_ == nil ? 2 : 3 type:GeogebraCommonKernelGeosGeoElement_class_()]);
  IOSObjectArray_Set(input_, 0, inGeo_);
  IOSObjectArray_Set(input_, 1, rgeo_);
  if (S_ != nil) IOSObjectArray_Set(input_, 2, (GeogebraCommonKernelGeosGeoElement *) check_class_cast(S_, [GeogebraCommonKernelGeosGeoElement class]));
  [self setOutputLengthWithInt:1];
  [self setOutputWithInt:0 withGeogebraCommonKernelGeosGeoElement:outGeo_];
  [self setDependencies];
}

- (GeogebraCommonKernelGeosGeoElement *)getResult {
  return outGeo_;
}

- (void)setTransformedObjectWithGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)g
                            withGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)g2 {
  GeogebraCommonKernelAlgosAlgoDilate_set_inGeo_(self, g);
  GeogebraCommonKernelAlgosAlgoDilate_set_outGeo_(self, g2);
  if (!([outGeo_ isKindOfClass:[GeogebraCommonKernelGeosGeoList class]])) GeogebraCommonKernelAlgosAlgoDilate_set_out_(self, (id<GeogebraCommonKernelGeosDilateable>) check_protocol_cast(outGeo_, @protocol(GeogebraCommonKernelGeosDilateable)));
}

- (void)compute {
  GeogebraCommonKernelAlgosAlgoDilate_compute(self);
}

- (void)setOutGeo {
  [((GeogebraCommonKernelGeosGeoElement *) nil_chk(outGeo_)) setWithGeogebraCommonKernelGeosGeoElement:inGeo_];
}

- (NSString *)toStringWithGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl {
  NSString *sLabel = S_ == nil ? [((GeogebraCommonKernelGeosGeoPoint *) nil_chk([((GeogebraCommonKernelConstruction *) nil_chk(cons_)) getOrigin])) toValueStringWithGeogebraCommonKernelStringTemplate:tpl] : [S_ getLabelWithGeogebraCommonKernelStringTemplate:tpl];
  return [((GeogebraCommonMainLocalization *) nil_chk([self getLoc])) getPlainWithNSString:@"ADilatedByFactorBfromC" withNSString:[((GeogebraCommonKernelGeosGeoElement *) nil_chk(inGeo_)) getLabelWithGeogebraCommonKernelStringTemplate:tpl] withNSString:[((GeogebraCommonKernelGeosGeoElement *) nil_chk(rgeo_)) getLabelWithGeogebraCommonKernelStringTemplate:tpl] withNSString:sLabel];
}

- (GeogebraCommonKernelMatrixCoords *)getPointCoords {
  if (S_ == nil) {
    return GeogebraCommonKernelMatrixCoords_get_O_();
  }
  return [((id<GeogebraCommonKernelKernelNDGeoPointND>) nil_chk(S_)) getInhomCoords];
}

- (void)transformLimitedPathWithGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)a
                            withGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)b {
  if (!([a isKindOfClass:[GeogebraCommonKernelGeosGeoConicPart class]])) [super transformLimitedPathWithGeogebraCommonKernelGeosGeoElement:a withGeogebraCommonKernelGeosGeoElement:b];
  else [super transformLimitedConicWithGeogebraCommonKernelGeosGeoElement:a withGeogebraCommonKernelGeosGeoElement:b];
}

- (jdouble)getAreaScaleFactor {
  return [((id<GeogebraCommonKernelArithmeticNumberValue>) nil_chk(r_)) getDouble] * [r_ getDouble];
}

- (void)dealloc {
  RELEASE_(S_);
  RELEASE_(out_);
  RELEASE_(r_);
  RELEASE_(inGeo_);
  RELEASE_(outGeo_);
  RELEASE_(rgeo_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonKernelConstruction:withNSString:withGeogebraCommonKernelGeosGeoElement:withGeogebraCommonKernelArithmeticNumberValue:withGeogebraCommonKernelKernelNDGeoPointND:", "AlgoDilate", NULL, 0x0, NULL, NULL },
    { "initWithGeogebraCommonKernelConstruction:withGeogebraCommonKernelGeosGeoElement:withGeogebraCommonKernelArithmeticNumberValue:withGeogebraCommonKernelKernelNDGeoPointND:", "AlgoDilate", NULL, 0x1, NULL, NULL },
    { "getClassName", NULL, "Lgeogebra.common.kernel.commands.Commands;", 0x1, NULL, NULL },
    { "getRelatedModeID", NULL, "I", 0x1, NULL, NULL },
    { "setInputOutput", NULL, "V", 0x4, NULL, NULL },
    { "getResult", NULL, "Lgeogebra.common.kernel.geos.GeoElement;", 0x1, NULL, NULL },
    { "setTransformedObjectWithGeogebraCommonKernelGeosGeoElement:withGeogebraCommonKernelGeosGeoElement:", "setTransformedObject", "V", 0x4, NULL, NULL },
    { "compute", NULL, "V", 0x11, NULL, NULL },
    { "setOutGeo", NULL, "V", 0x4, NULL, NULL },
    { "toStringWithGeogebraCommonKernelStringTemplate:", "toString", "Ljava.lang.String;", 0x11, NULL, NULL },
    { "getPointCoords", NULL, "Lgeogebra.common.kernel.Matrix.Coords;", 0x4, NULL, NULL },
    { "transformLimitedPathWithGeogebraCommonKernelGeosGeoElement:withGeogebraCommonKernelGeosGeoElement:", "transformLimitedPath", "V", 0x4, NULL, NULL },
    { "getAreaScaleFactor", NULL, "D", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "S_", NULL, 0x4, "Lgeogebra.common.kernel.kernelND.GeoPointND;", NULL, NULL,  },
    { "out_", NULL, 0x2, "Lgeogebra.common.kernel.geos.Dilateable;", NULL, NULL,  },
    { "r_", NULL, 0x2, "Lgeogebra.common.kernel.arithmetic.NumberValue;", NULL, NULL,  },
    { "inGeo_", NULL, 0x4, "Lgeogebra.common.kernel.geos.GeoElement;", NULL, NULL,  },
    { "outGeo_", NULL, 0x4, "Lgeogebra.common.kernel.geos.GeoElement;", NULL, NULL,  },
    { "rgeo_", NULL, 0x2, "Lgeogebra.common.kernel.geos.GeoElement;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelAlgosAlgoDilate = { 2, "AlgoDilate", "geogebra.common.kernel.algos", NULL, 0x1, 13, methods, 6, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelAlgosAlgoDilate;
}

@end

void GeogebraCommonKernelAlgosAlgoDilate_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoElement_withGeogebraCommonKernelArithmeticNumberValue_withGeogebraCommonKernelKernelNDGeoPointND_(GeogebraCommonKernelAlgosAlgoDilate *self, GeogebraCommonKernelConstruction *cons, NSString *label, GeogebraCommonKernelGeosGeoElement *A, id<GeogebraCommonKernelArithmeticNumberValue> r, id<GeogebraCommonKernelKernelNDGeoPointND> S) {
  GeogebraCommonKernelAlgosAlgoDilate_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoElement_withGeogebraCommonKernelArithmeticNumberValue_withGeogebraCommonKernelKernelNDGeoPointND_(self, cons, A, r, S);
  [((GeogebraCommonKernelGeosGeoElement *) nil_chk(self->outGeo_)) setLabelWithNSString:label];
}

GeogebraCommonKernelAlgosAlgoDilate *new_GeogebraCommonKernelAlgosAlgoDilate_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoElement_withGeogebraCommonKernelArithmeticNumberValue_withGeogebraCommonKernelKernelNDGeoPointND_(GeogebraCommonKernelConstruction *cons, NSString *label, GeogebraCommonKernelGeosGeoElement *A, id<GeogebraCommonKernelArithmeticNumberValue> r, id<GeogebraCommonKernelKernelNDGeoPointND> S) {
  GeogebraCommonKernelAlgosAlgoDilate *self = [GeogebraCommonKernelAlgosAlgoDilate alloc];
  GeogebraCommonKernelAlgosAlgoDilate_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoElement_withGeogebraCommonKernelArithmeticNumberValue_withGeogebraCommonKernelKernelNDGeoPointND_(self, cons, label, A, r, S);
  return self;
}

void GeogebraCommonKernelAlgosAlgoDilate_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoElement_withGeogebraCommonKernelArithmeticNumberValue_withGeogebraCommonKernelKernelNDGeoPointND_(GeogebraCommonKernelAlgosAlgoDilate *self, GeogebraCommonKernelConstruction *cons, GeogebraCommonKernelGeosGeoElement *A, id<GeogebraCommonKernelArithmeticNumberValue> r, id<GeogebraCommonKernelKernelNDGeoPointND> S) {
  GeogebraCommonKernelAlgosAlgoTransformation_initWithGeogebraCommonKernelConstruction_(self, cons);
  GeogebraCommonKernelAlgosAlgoDilate_set_r_(self, r);
  GeogebraCommonKernelAlgosAlgoDilate_set_S_(self, S);
  GeogebraCommonKernelAlgosAlgoDilate_set_inGeo_(self, A);
  GeogebraCommonKernelAlgosAlgoDilate_set_rgeo_(self, [((id<GeogebraCommonKernelArithmeticNumberValue>) nil_chk(r)) toGeoElement]);
  GeogebraCommonKernelAlgosAlgoDilate_set_outGeo_(self, [self getResultTemplateWithGeogebraCommonKernelGeosGeoElement:self->inGeo_]);
  if ([GeogebraCommonKernelGeosDilateable_class_() isInstance:self->outGeo_]) GeogebraCommonKernelAlgosAlgoDilate_set_out_(self, (id<GeogebraCommonKernelGeosDilateable>) check_protocol_cast(self->outGeo_, @protocol(GeogebraCommonKernelGeosDilateable)));
  [self setInputOutput];
  GeogebraCommonKernelAlgosAlgoDilate_compute(self);
}

GeogebraCommonKernelAlgosAlgoDilate *new_GeogebraCommonKernelAlgosAlgoDilate_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoElement_withGeogebraCommonKernelArithmeticNumberValue_withGeogebraCommonKernelKernelNDGeoPointND_(GeogebraCommonKernelConstruction *cons, GeogebraCommonKernelGeosGeoElement *A, id<GeogebraCommonKernelArithmeticNumberValue> r, id<GeogebraCommonKernelKernelNDGeoPointND> S) {
  GeogebraCommonKernelAlgosAlgoDilate *self = [GeogebraCommonKernelAlgosAlgoDilate alloc];
  GeogebraCommonKernelAlgosAlgoDilate_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoElement_withGeogebraCommonKernelArithmeticNumberValue_withGeogebraCommonKernelKernelNDGeoPointND_(self, cons, A, r, S);
  return self;
}

void GeogebraCommonKernelAlgosAlgoDilate_compute(GeogebraCommonKernelAlgosAlgoDilate *self) {
  if ([((GeogebraCommonKernelGeosGeoElement *) nil_chk(self->inGeo_)) isGeoList]) {
    [self transformListWithGeogebraCommonKernelGeosGeoList:(GeogebraCommonKernelGeosGeoList *) check_class_cast(self->inGeo_, [GeogebraCommonKernelGeosGeoList class]) withGeogebraCommonKernelGeosGeoList:(GeogebraCommonKernelGeosGeoList *) check_class_cast(self->outGeo_, [GeogebraCommonKernelGeosGeoList class])];
    return;
  }
  [self setOutGeo];
  if (![((id<GeogebraCommonKernelGeosDilateable>) nil_chk(self->out_)) isDefined]) {
    return;
  }
  [self->out_ dilateWithGeogebraCommonKernelArithmeticNumberValue:self->r_ withGeogebraCommonKernelMatrixCoords:[self getPointCoords]];
  if ([self->inGeo_ isLimitedPath]) [self transformLimitedPathWithGeogebraCommonKernelGeosGeoElement:self->inGeo_ withGeogebraCommonKernelGeosGeoElement:self->outGeo_];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelAlgosAlgoDilate)
