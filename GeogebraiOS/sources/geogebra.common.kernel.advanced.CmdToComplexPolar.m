//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/advanced/CmdToComplexPolar.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "geogebra/common/kernel/CircularDefinitionException.h"
#include "geogebra/common/kernel/Construction.h"
#include "geogebra/common/kernel/Kernel.h"
#include "geogebra/common/kernel/advanced/AlgoToComplexPolar.h"
#include "geogebra/common/kernel/advanced/CmdToComplexPolar.h"
#include "geogebra/common/kernel/arithmetic/Command.h"
#include "geogebra/common/kernel/commands/CommandProcessor.h"
#include "geogebra/common/kernel/geos/GeoElement.h"
#include "geogebra/common/kernel/geos/GeoList.h"
#include "geogebra/common/kernel/geos/GeoPoint.h"
#include "geogebra/common/kernel/geos/GeoVector.h"
#include "geogebra/common/main/MyError.h"

@interface GeogebraCommonKernelAdvancedCmdToComplexPolar () {
 @public
  jint coordStyle_;
}

@end

@implementation GeogebraCommonKernelAdvancedCmdToComplexPolar

- (instancetype)initWithGeogebraCommonKernelKernel:(GeogebraCommonKernelKernel *)kernel
                                           withInt:(jint)coordStyle {
  GeogebraCommonKernelAdvancedCmdToComplexPolar_initWithGeogebraCommonKernelKernel_withInt_(self, kernel, coordStyle);
  return self;
}

- (IOSObjectArray *)processWithGeogebraCommonKernelArithmeticCommand:(GeogebraCommonKernelArithmeticCommand *)c {
  if ([((GeogebraCommonKernelArithmeticCommand *) nil_chk(c)) getArgumentNumber] != 1) @throw [self argNumErrWithGeogebraCommonMainApp:app_ withNSString:[c getName] withInt:[c getArgumentNumber]];
  IOSObjectArray *arg = [self resArgsWithGeogebraCommonKernelArithmeticCommand:c];
  GeogebraCommonKernelAdvancedAlgoToComplexPolar *algo = nil;
  if ([IOSObjectArray_Get(nil_chk(arg), 0) isKindOfClass:[GeogebraCommonKernelGeosGeoPoint class]]) algo = [new_GeogebraCommonKernelAdvancedAlgoToComplexPolar_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoPoint_withInt_(cons_, [c getLabel], (GeogebraCommonKernelGeosGeoPoint *) check_class_cast(IOSObjectArray_Get(arg, 0), [GeogebraCommonKernelGeosGeoPoint class]), coordStyle_) autorelease];
  if ([IOSObjectArray_Get(arg, 0) isKindOfClass:[GeogebraCommonKernelGeosGeoVector class]]) algo = [new_GeogebraCommonKernelAdvancedAlgoToComplexPolar_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoVector_withInt_(cons_, [c getLabel], (GeogebraCommonKernelGeosGeoVector *) check_class_cast(IOSObjectArray_Get(arg, 0), [GeogebraCommonKernelGeosGeoVector class]), coordStyle_) autorelease];
  if ([IOSObjectArray_Get(arg, 0) isKindOfClass:[GeogebraCommonKernelGeosGeoList class]]) algo = [new_GeogebraCommonKernelAdvancedAlgoToComplexPolar_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoList_withInt_(cons_, [c getLabel], (GeogebraCommonKernelGeosGeoList *) check_class_cast(IOSObjectArray_Get(arg, 0), [GeogebraCommonKernelGeosGeoList class]), coordStyle_) autorelease];
  return [IOSObjectArray arrayWithObjects:(id[]){ [((GeogebraCommonKernelAdvancedAlgoToComplexPolar *) nil_chk(algo)) getResult] } count:1 type:GeogebraCommonKernelGeosGeoElement_class_()];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonKernelKernel:withInt:", "CmdToComplexPolar", NULL, 0x1, NULL, NULL },
    { "processWithGeogebraCommonKernelArithmeticCommand:", "process", "[Lgeogebra.common.kernel.geos.GeoElement;", 0x1, "Lgeogebra.common.main.MyError;Lgeogebra.common.kernel.CircularDefinitionException;", NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "coordStyle_", NULL, 0x2, "I", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelAdvancedCmdToComplexPolar = { 2, "CmdToComplexPolar", "geogebra.common.kernel.advanced", NULL, 0x1, 2, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelAdvancedCmdToComplexPolar;
}

@end

void GeogebraCommonKernelAdvancedCmdToComplexPolar_initWithGeogebraCommonKernelKernel_withInt_(GeogebraCommonKernelAdvancedCmdToComplexPolar *self, GeogebraCommonKernelKernel *kernel, jint coordStyle) {
  GeogebraCommonKernelCommandsCommandProcessor_initWithGeogebraCommonKernelKernel_(self, kernel);
  self->coordStyle_ = coordStyle;
}

GeogebraCommonKernelAdvancedCmdToComplexPolar *new_GeogebraCommonKernelAdvancedCmdToComplexPolar_initWithGeogebraCommonKernelKernel_withInt_(GeogebraCommonKernelKernel *kernel, jint coordStyle) {
  GeogebraCommonKernelAdvancedCmdToComplexPolar *self = [GeogebraCommonKernelAdvancedCmdToComplexPolar alloc];
  GeogebraCommonKernelAdvancedCmdToComplexPolar_initWithGeogebraCommonKernelKernel_withInt_(self, kernel, coordStyle);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelAdvancedCmdToComplexPolar)
