//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/geogebra3D/kernel3D/algos/AlgoConicPartCircle3D.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "geogebra/common/euclidian/EuclidianConstants.h"
#include "geogebra/common/geogebra3D/kernel3D/algos/AlgoCircle3DCenterPointPoint.h"
#include "geogebra/common/geogebra3D/kernel3D/algos/AlgoConicPartCircle3D.h"
#include "geogebra/common/geogebra3D/kernel3D/geos/GeoConic3D.h"
#include "geogebra/common/geogebra3D/kernel3D/geos/GeoConicPart3D.h"
#include "geogebra/common/kernel/Construction.h"
#include "geogebra/common/kernel/Kernel.h"
#include "geogebra/common/kernel/LocusEquation.h"
#include "geogebra/common/kernel/Matrix/CoordMatrix4x4.h"
#include "geogebra/common/kernel/Matrix/CoordSys.h"
#include "geogebra/common/kernel/Matrix/Coords.h"
#include "geogebra/common/kernel/PathParameter.h"
#include "geogebra/common/kernel/algos/AlgoConicPart.h"
#include "geogebra/common/kernel/algos/AlgoElement.h"
#include "geogebra/common/kernel/algos/EquationElementInterface.h"
#include "geogebra/common/kernel/algos/EquationScopeInterface.h"
#include "geogebra/common/kernel/commands/Commands.h"
#include "geogebra/common/kernel/geos/GeoElement.h"
#include "geogebra/common/kernel/kernelND/GeoConicND.h"
#include "geogebra/common/kernel/kernelND/GeoConicNDConstants.h"
#include "geogebra/common/kernel/kernelND/GeoConicPartND.h"
#include "geogebra/common/kernel/kernelND/GeoDirectionND.h"
#include "geogebra/common/kernel/kernelND/GeoPointND.h"

@interface GeogebraCommonGeogebra3DKernel3DAlgosAlgoConicPartCircle3D () {
 @public
  id<GeogebraCommonKernelKernelNDGeoPointND> center_, startPoint_, endPoint_;
  GeogebraCommonKernelPathParameter *paramP_, *paramQ_;
  GeogebraCommonKernelMatrixCoords *p2d_;
}

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
              withGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)center
              withGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)startPoint
              withGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)endPoint
          withGeogebraCommonKernelKernelNDGeoDirectionND:(id<GeogebraCommonKernelKernelNDGeoDirectionND>)orientation
                                                 withInt:(jint)type;

- (void)setIncidence;

@end

J2OBJC_FIELD_SETTER(GeogebraCommonGeogebra3DKernel3DAlgosAlgoConicPartCircle3D, center_, id<GeogebraCommonKernelKernelNDGeoPointND>)
J2OBJC_FIELD_SETTER(GeogebraCommonGeogebra3DKernel3DAlgosAlgoConicPartCircle3D, startPoint_, id<GeogebraCommonKernelKernelNDGeoPointND>)
J2OBJC_FIELD_SETTER(GeogebraCommonGeogebra3DKernel3DAlgosAlgoConicPartCircle3D, endPoint_, id<GeogebraCommonKernelKernelNDGeoPointND>)
J2OBJC_FIELD_SETTER(GeogebraCommonGeogebra3DKernel3DAlgosAlgoConicPartCircle3D, paramP_, GeogebraCommonKernelPathParameter *)
J2OBJC_FIELD_SETTER(GeogebraCommonGeogebra3DKernel3DAlgosAlgoConicPartCircle3D, paramQ_, GeogebraCommonKernelPathParameter *)
J2OBJC_FIELD_SETTER(GeogebraCommonGeogebra3DKernel3DAlgosAlgoConicPartCircle3D, p2d_, GeogebraCommonKernelMatrixCoords *)

__attribute__((unused)) static void GeogebraCommonGeogebra3DKernel3DAlgosAlgoConicPartCircle3D_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoDirectionND_withInt_(GeogebraCommonGeogebra3DKernel3DAlgosAlgoConicPartCircle3D *self, GeogebraCommonKernelConstruction *cons, id<GeogebraCommonKernelKernelNDGeoPointND> center, id<GeogebraCommonKernelKernelNDGeoPointND> startPoint, id<GeogebraCommonKernelKernelNDGeoPointND> endPoint, id<GeogebraCommonKernelKernelNDGeoDirectionND> orientation, jint type);

__attribute__((unused)) static GeogebraCommonGeogebra3DKernel3DAlgosAlgoConicPartCircle3D *new_GeogebraCommonGeogebra3DKernel3DAlgosAlgoConicPartCircle3D_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoDirectionND_withInt_(GeogebraCommonKernelConstruction *cons, id<GeogebraCommonKernelKernelNDGeoPointND> center, id<GeogebraCommonKernelKernelNDGeoPointND> startPoint, id<GeogebraCommonKernelKernelNDGeoPointND> endPoint, id<GeogebraCommonKernelKernelNDGeoDirectionND> orientation, jint type) NS_RETURNS_RETAINED;

__attribute__((unused)) static void GeogebraCommonGeogebra3DKernel3DAlgosAlgoConicPartCircle3D_setIncidence(GeogebraCommonGeogebra3DKernel3DAlgosAlgoConicPartCircle3D *self);

__attribute__((unused)) static void GeogebraCommonGeogebra3DKernel3DAlgosAlgoConicPartCircle3D_compute(GeogebraCommonGeogebra3DKernel3DAlgosAlgoConicPartCircle3D *self);

@implementation GeogebraCommonGeogebra3DKernel3DAlgosAlgoConicPartCircle3D

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                                            withNSString:(NSString *)label
              withGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)center
              withGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)startPoint
              withGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)endPoint
                                                 withInt:(jint)type {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoConicPartCircle3D_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoPointND_withInt_(self, cons, label, center, startPoint, endPoint, type);
  return self;
}

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                                            withNSString:(NSString *)label
              withGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)center
              withGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)startPoint
              withGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)endPoint
          withGeogebraCommonKernelKernelNDGeoDirectionND:(id<GeogebraCommonKernelKernelNDGeoDirectionND>)orientation
                                                 withInt:(jint)type {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoConicPartCircle3D_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoDirectionND_withInt_(self, cons, label, center, startPoint, endPoint, orientation, type);
  return self;
}

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
              withGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)center
              withGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)startPoint
              withGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)endPoint
          withGeogebraCommonKernelKernelNDGeoDirectionND:(id<GeogebraCommonKernelKernelNDGeoDirectionND>)orientation
                                                 withInt:(jint)type {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoConicPartCircle3D_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoDirectionND_withInt_(self, cons, center, startPoint, endPoint, orientation, type);
  return self;
}

- (void)initCoords {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoConicPartCircle3D_setAndConsume_p2d_(self, new_GeogebraCommonKernelMatrixCoords_initWithInt_(4));
}

- (void)setOrientationWithGeogebraCommonKernelKernelNDGeoDirectionND:(id<GeogebraCommonKernelKernelNDGeoDirectionND>)orientation {
}

- (void)setIncidence {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoConicPartCircle3D_setIncidence(self);
}

- (id<GeogebraCommonKernelKernelNDGeoPointND>)getStartPoint {
  return startPoint_;
}

- (id<GeogebraCommonKernelKernelNDGeoPointND>)getEndPoint {
  return endPoint_;
}

- (id<GeogebraCommonKernelKernelNDGeoPointND>)getCenter {
  return center_;
}

- (GeogebraCommonKernelCommandsCommandsEnum *)getClassName {
  switch (type_) {
    case GeogebraCommonKernelKernelNDGeoConicNDConstants_CONIC_PART_ARC:
    return GeogebraCommonKernelCommandsCommandsEnum_get_CircleArc();
    default:
    return GeogebraCommonKernelCommandsCommandsEnum_get_CircleSector();
  }
}

- (jint)getRelatedModeID {
  switch (type_) {
    case GeogebraCommonKernelKernelNDGeoConicNDConstants_CONIC_PART_ARC:
    return GeogebraCommonEuclidianEuclidianConstants_MODE_CIRCLE_ARC_THREE_POINTS;
    default:
    return GeogebraCommonEuclidianEuclidianConstants_MODE_CIRCLE_SECTOR_THREE_POINTS;
  }
}

- (void)setInputOutput {
  [self setInput];
  [super setOutputLengthWithInt:1];
  [super setOutputWithInt:0 withGeogebraCommonKernelGeosGeoElement:conicPart_];
  [self setDependencies];
}

- (void)setInput {
  [self setInputWithInt:3];
}

- (void)setInputWithInt:(jint)n {
  GeogebraCommonKernelAlgosAlgoElement_setAndConsume_input_(self, [IOSObjectArray newArrayWithLength:n type:GeogebraCommonKernelGeosGeoElement_class_()]);
  IOSObjectArray_Set(input_, 0, (GeogebraCommonKernelGeosGeoElement *) check_class_cast(center_, [GeogebraCommonKernelGeosGeoElement class]));
  IOSObjectArray_Set(input_, 1, (GeogebraCommonKernelGeosGeoElement *) check_class_cast(startPoint_, [GeogebraCommonKernelGeosGeoElement class]));
  IOSObjectArray_Set(input_, 2, (GeogebraCommonKernelGeosGeoElement *) check_class_cast(endPoint_, [GeogebraCommonKernelGeosGeoElement class]));
}

- (void)semiCircleWithGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)center1
                  withGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)v1 {
  [((GeogebraCommonKernelKernelNDGeoConicND *) nil_chk(conicPart_)) setUndefined];
}

- (void)compute {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoConicPartCircle3D_compute(self);
}

- (void)setConicPartWithDouble:(jdouble)start
                    withDouble:(jdouble)end {
  [((GeogebraCommonKernelKernelNDGeoConicND *) nil_chk(conicPart_)) setWithGeogebraCommonKernelGeosGeoElement:conic_];
  [((id<GeogebraCommonKernelKernelNDGeoConicPartND>) check_protocol_cast(conicPart_, @protocol(GeogebraCommonKernelKernelNDGeoConicPartND))) setParametersWithDouble:start withDouble:end withBoolean:[self getPositiveOrientation]];
}

- (jboolean)getPositiveOrientation {
  return YES;
}

- (jboolean)isLocusEquable {
  return YES;
}

- (id<GeogebraCommonKernelAlgosEquationElementInterface>)buildEquationElementForGeoWithGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)geo
                                                                      withGeogebraCommonKernelAlgosEquationScopeInterface:(id<GeogebraCommonKernelAlgosEquationScopeInterface>)scope {
  return GeogebraCommonKernelLocusEquation_eqnCircleArcWithGeogebraCommonKernelGeosGeoElement_withGeogebraCommonKernelAlgosAlgoElement_withGeogebraCommonKernelAlgosEquationScopeInterface_(geo, self, scope);
}

- (GeogebraCommonGeogebra3DKernel3DGeosGeoConicPart3D *)getConicPart {
  return (GeogebraCommonGeogebra3DKernel3DGeosGeoConicPart3D *) check_class_cast([super getConicPart], [GeogebraCommonGeogebra3DKernel3DGeosGeoConicPart3D class]);
}

- (void)dealloc {
  RELEASE_(center_);
  RELEASE_(startPoint_);
  RELEASE_(endPoint_);
  RELEASE_(paramP_);
  RELEASE_(paramQ_);
  RELEASE_(p2d_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonKernelConstruction:withNSString:withGeogebraCommonKernelKernelNDGeoPointND:withGeogebraCommonKernelKernelNDGeoPointND:withGeogebraCommonKernelKernelNDGeoPointND:withInt:", "AlgoConicPartCircle3D", NULL, 0x1, NULL, NULL },
    { "initWithGeogebraCommonKernelConstruction:withNSString:withGeogebraCommonKernelKernelNDGeoPointND:withGeogebraCommonKernelKernelNDGeoPointND:withGeogebraCommonKernelKernelNDGeoPointND:withGeogebraCommonKernelKernelNDGeoDirectionND:withInt:", "AlgoConicPartCircle3D", NULL, 0x1, NULL, NULL },
    { "initWithGeogebraCommonKernelConstruction:withGeogebraCommonKernelKernelNDGeoPointND:withGeogebraCommonKernelKernelNDGeoPointND:withGeogebraCommonKernelKernelNDGeoPointND:withGeogebraCommonKernelKernelNDGeoDirectionND:withInt:", "AlgoConicPartCircle3D", NULL, 0x2, NULL, NULL },
    { "initCoords", NULL, "V", 0x4, NULL, NULL },
    { "setOrientationWithGeogebraCommonKernelKernelNDGeoDirectionND:", "setOrientation", "V", 0x4, NULL, NULL },
    { "setIncidence", NULL, "V", 0x2, NULL, NULL },
    { "getStartPoint", NULL, "Lgeogebra.common.kernel.kernelND.GeoPointND;", 0x1, NULL, NULL },
    { "getEndPoint", NULL, "Lgeogebra.common.kernel.kernelND.GeoPointND;", 0x1, NULL, NULL },
    { "getCenter", NULL, "Lgeogebra.common.kernel.kernelND.GeoPointND;", 0x1, NULL, NULL },
    { "getClassName", NULL, "Lgeogebra.common.kernel.commands.Commands;", 0x1, NULL, NULL },
    { "getRelatedModeID", NULL, "I", 0x1, NULL, NULL },
    { "setInputOutput", NULL, "V", 0x4, NULL, NULL },
    { "setInput", NULL, "V", 0x4, NULL, NULL },
    { "setInputWithInt:", "setInput", "V", 0x4, NULL, NULL },
    { "semiCircleWithGeogebraCommonKernelMatrixCoords:withGeogebraCommonKernelMatrixCoords:", "semiCircle", "V", 0x4, NULL, NULL },
    { "compute", NULL, "V", 0x11, NULL, NULL },
    { "setConicPartWithDouble:withDouble:", "setConicPart", "V", 0x4, NULL, NULL },
    { "getPositiveOrientation", NULL, "Z", 0x4, NULL, NULL },
    { "isLocusEquable", NULL, "Z", 0x1, NULL, NULL },
    { "buildEquationElementForGeoWithGeogebraCommonKernelGeosGeoElement:withGeogebraCommonKernelAlgosEquationScopeInterface:", "buildEquationElementForGeo", "Lgeogebra.common.kernel.algos.EquationElementInterface;", 0x1, NULL, NULL },
    { "getConicPart", NULL, "Lgeogebra.common.geogebra3D.kernel3D.geos.GeoConicPart3D;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "center_", NULL, 0x2, "Lgeogebra.common.kernel.kernelND.GeoPointND;", NULL, NULL,  },
    { "startPoint_", NULL, 0x2, "Lgeogebra.common.kernel.kernelND.GeoPointND;", NULL, NULL,  },
    { "endPoint_", NULL, 0x2, "Lgeogebra.common.kernel.kernelND.GeoPointND;", NULL, NULL,  },
    { "paramP_", NULL, 0x2, "Lgeogebra.common.kernel.PathParameter;", NULL, NULL,  },
    { "paramQ_", NULL, 0x2, "Lgeogebra.common.kernel.PathParameter;", NULL, NULL,  },
    { "p2d_", NULL, 0x2, "Lgeogebra.common.kernel.Matrix.Coords;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _GeogebraCommonGeogebra3DKernel3DAlgosAlgoConicPartCircle3D = { 2, "AlgoConicPartCircle3D", "geogebra.common.geogebra3D.kernel3D.algos", NULL, 0x1, 21, methods, 6, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonGeogebra3DKernel3DAlgosAlgoConicPartCircle3D;
}

@end

void GeogebraCommonGeogebra3DKernel3DAlgosAlgoConicPartCircle3D_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoPointND_withInt_(GeogebraCommonGeogebra3DKernel3DAlgosAlgoConicPartCircle3D *self, GeogebraCommonKernelConstruction *cons, NSString *label, id<GeogebraCommonKernelKernelNDGeoPointND> center, id<GeogebraCommonKernelKernelNDGeoPointND> startPoint, id<GeogebraCommonKernelKernelNDGeoPointND> endPoint, jint type) {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoConicPartCircle3D_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoDirectionND_withInt_(self, cons, label, center, startPoint, endPoint, nil, type);
}

GeogebraCommonGeogebra3DKernel3DAlgosAlgoConicPartCircle3D *new_GeogebraCommonGeogebra3DKernel3DAlgosAlgoConicPartCircle3D_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoPointND_withInt_(GeogebraCommonKernelConstruction *cons, NSString *label, id<GeogebraCommonKernelKernelNDGeoPointND> center, id<GeogebraCommonKernelKernelNDGeoPointND> startPoint, id<GeogebraCommonKernelKernelNDGeoPointND> endPoint, jint type) {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoConicPartCircle3D *self = [GeogebraCommonGeogebra3DKernel3DAlgosAlgoConicPartCircle3D alloc];
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoConicPartCircle3D_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoPointND_withInt_(self, cons, label, center, startPoint, endPoint, type);
  return self;
}

void GeogebraCommonGeogebra3DKernel3DAlgosAlgoConicPartCircle3D_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoDirectionND_withInt_(GeogebraCommonGeogebra3DKernel3DAlgosAlgoConicPartCircle3D *self, GeogebraCommonKernelConstruction *cons, NSString *label, id<GeogebraCommonKernelKernelNDGeoPointND> center, id<GeogebraCommonKernelKernelNDGeoPointND> startPoint, id<GeogebraCommonKernelKernelNDGeoPointND> endPoint, id<GeogebraCommonKernelKernelNDGeoDirectionND> orientation, jint type) {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoConicPartCircle3D_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoDirectionND_withInt_(self, cons, center, startPoint, endPoint, orientation, type);
  [((GeogebraCommonKernelKernelNDGeoConicND *) nil_chk(self->conicPart_)) setLabelWithNSString:label];
}

GeogebraCommonGeogebra3DKernel3DAlgosAlgoConicPartCircle3D *new_GeogebraCommonGeogebra3DKernel3DAlgosAlgoConicPartCircle3D_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoDirectionND_withInt_(GeogebraCommonKernelConstruction *cons, NSString *label, id<GeogebraCommonKernelKernelNDGeoPointND> center, id<GeogebraCommonKernelKernelNDGeoPointND> startPoint, id<GeogebraCommonKernelKernelNDGeoPointND> endPoint, id<GeogebraCommonKernelKernelNDGeoDirectionND> orientation, jint type) {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoConicPartCircle3D *self = [GeogebraCommonGeogebra3DKernel3DAlgosAlgoConicPartCircle3D alloc];
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoConicPartCircle3D_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoDirectionND_withInt_(self, cons, label, center, startPoint, endPoint, orientation, type);
  return self;
}

void GeogebraCommonGeogebra3DKernel3DAlgosAlgoConicPartCircle3D_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoDirectionND_withInt_(GeogebraCommonGeogebra3DKernel3DAlgosAlgoConicPartCircle3D *self, GeogebraCommonKernelConstruction *cons, id<GeogebraCommonKernelKernelNDGeoPointND> center, id<GeogebraCommonKernelKernelNDGeoPointND> startPoint, id<GeogebraCommonKernelKernelNDGeoPointND> endPoint, id<GeogebraCommonKernelKernelNDGeoDirectionND> orientation, jint type) {
  GeogebraCommonKernelAlgosAlgoConicPart_initWithGeogebraCommonKernelConstruction_withInt_(self, cons, type);
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoConicPartCircle3D_set_center_(self, center);
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoConicPartCircle3D_set_startPoint_(self, startPoint);
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoConicPartCircle3D_set_endPoint_(self, endPoint);
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoCircle3DCenterPointPoint *algo = [new_GeogebraCommonGeogebra3DKernel3DAlgosAlgoCircle3DCenterPointPoint_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoPointND_(cons, center, startPoint, endPoint) autorelease];
  [((GeogebraCommonKernelConstruction *) nil_chk(cons)) removeFromConstructionListWithGeogebraCommonKernelAlgosConstructionElement:algo];
  GeogebraCommonKernelAlgosAlgoConicPart_set_conic_(self, [algo getCircle]);
  [self setOrientationWithGeogebraCommonKernelKernelNDGeoDirectionND:orientation];
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoConicPartCircle3D_setAndConsume_paramP_(self, new_GeogebraCommonKernelPathParameter_init());
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoConicPartCircle3D_setAndConsume_paramQ_(self, new_GeogebraCommonKernelPathParameter_init());
  GeogebraCommonKernelAlgosAlgoConicPart_setAndConsume_conicPart_(self, new_GeogebraCommonGeogebra3DKernel3DGeosGeoConicPart3D_initWithGeogebraCommonKernelConstruction_withInt_(cons, type));
  [self->conicPart_ addPointOnConicWithGeogebraCommonKernelKernelNDGeoPointND:startPoint];
  [self setInputOutput];
  [self initCoords];
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoConicPartCircle3D_compute(self);
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoConicPartCircle3D_setIncidence(self);
}

GeogebraCommonGeogebra3DKernel3DAlgosAlgoConicPartCircle3D *new_GeogebraCommonGeogebra3DKernel3DAlgosAlgoConicPartCircle3D_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoDirectionND_withInt_(GeogebraCommonKernelConstruction *cons, id<GeogebraCommonKernelKernelNDGeoPointND> center, id<GeogebraCommonKernelKernelNDGeoPointND> startPoint, id<GeogebraCommonKernelKernelNDGeoPointND> endPoint, id<GeogebraCommonKernelKernelNDGeoDirectionND> orientation, jint type) {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoConicPartCircle3D *self = [GeogebraCommonGeogebra3DKernel3DAlgosAlgoConicPartCircle3D alloc];
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoConicPartCircle3D_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoDirectionND_withInt_(self, cons, center, startPoint, endPoint, orientation, type);
  return self;
}

void GeogebraCommonGeogebra3DKernel3DAlgosAlgoConicPartCircle3D_setIncidence(GeogebraCommonGeogebra3DKernel3DAlgosAlgoConicPartCircle3D *self) {
  [((id<GeogebraCommonKernelKernelNDGeoPointND>) nil_chk(self->startPoint_)) addIncidenceWithGeogebraCommonKernelGeosGeoElement:self->conicPart_ withBoolean:NO];
}

void GeogebraCommonGeogebra3DKernel3DAlgosAlgoConicPartCircle3D_compute(GeogebraCommonGeogebra3DKernel3DAlgosAlgoConicPartCircle3D *self) {
  GeogebraCommonKernelMatrixCoordSys *cs = [((GeogebraCommonKernelKernelNDGeoConicND *) nil_chk(self->conic_)) getCoordSys];
  if (![((GeogebraCommonKernelMatrixCoordSys *) nil_chk(cs)) isDefined]) {
    GeogebraCommonKernelMatrixCoords *centerCoords = [((id<GeogebraCommonKernelKernelNDGeoPointND>) nil_chk(self->center_)) getInhomCoordsInD3];
    GeogebraCommonKernelMatrixCoords *startCoords = [((id<GeogebraCommonKernelKernelNDGeoPointND>) nil_chk(self->startPoint_)) getInhomCoordsInD3];
    GeogebraCommonKernelMatrixCoords *v1 = [((GeogebraCommonKernelMatrixCoords *) nil_chk(startCoords)) subWithGeogebraCommonKernelMatrixCoords:centerCoords];
    GeogebraCommonKernelMatrixCoords *v2 = [((GeogebraCommonKernelMatrixCoords *) nil_chk([((id<GeogebraCommonKernelKernelNDGeoPointND>) nil_chk(self->endPoint_)) getInhomCoordsInD3])) subWithGeogebraCommonKernelMatrixCoords:centerCoords];
    if (GeogebraCommonKernelKernel_isGreaterWithDouble_withDouble_(0, [((GeogebraCommonKernelMatrixCoords *) nil_chk(v1)) dotproductWithGeogebraCommonKernelMatrixCoords:v2])) {
      [self semiCircleWithGeogebraCommonKernelMatrixCoords:centerCoords withGeogebraCommonKernelMatrixCoords:v1];
      return;
    }
    GeogebraCommonGeogebra3DKernel3DGeosGeoConic3D_setSinglePointWithGeogebraCommonGeogebra3DKernel3DGeosGeoConic3D_withGeogebraCommonKernelMatrixCoords_((GeogebraCommonGeogebra3DKernel3DGeosGeoConic3D *) check_class_cast(self->conicPart_, [GeogebraCommonGeogebra3DKernel3DGeosGeoConic3D class]), startCoords);
    [((GeogebraCommonGeogebra3DKernel3DGeosGeoConicPart3D *) nil_chk(((GeogebraCommonGeogebra3DKernel3DGeosGeoConicPart3D *) check_class_cast(self->conicPart_, [GeogebraCommonGeogebra3DKernel3DGeosGeoConicPart3D class])))) setParametersToSinglePoint];
    [((GeogebraCommonKernelKernelNDGeoConicND *) nil_chk(self->conicPart_)) setTypeWithInt:GeogebraCommonKernelKernelNDGeoConicNDConstants_CONIC_SINGLE_POINT];
    return;
  }
  [((GeogebraCommonKernelMatrixCoords *) nil_chk([((id<GeogebraCommonKernelKernelNDGeoPointND>) nil_chk(self->startPoint_)) getInhomCoordsInD3])) projectPlaneInPlaneCoordsWithGeogebraCommonKernelMatrixCoordMatrix:[cs getMatrixOrthonormal] withGeogebraCommonKernelMatrixCoords:self->p2d_];
  [((GeogebraCommonKernelMatrixCoords *) nil_chk(self->p2d_)) setZWithDouble:1];
  [self->conic_ pointChangedWithGeogebraCommonKernelMatrixCoords:self->p2d_ withGeogebraCommonKernelPathParameter:self->paramP_];
  [((GeogebraCommonKernelMatrixCoords *) nil_chk([((id<GeogebraCommonKernelKernelNDGeoPointND>) nil_chk(self->endPoint_)) getInhomCoordsInD3])) projectPlaneInPlaneCoordsWithGeogebraCommonKernelMatrixCoordMatrix:[cs getMatrixOrthonormal] withGeogebraCommonKernelMatrixCoords:self->p2d_];
  [self->p2d_ setZWithDouble:1];
  [self->conic_ pointChangedWithGeogebraCommonKernelMatrixCoords:self->p2d_ withGeogebraCommonKernelPathParameter:self->paramQ_];
  [self setConicPartWithDouble:((GeogebraCommonKernelPathParameter *) nil_chk(self->paramP_))->t_ withDouble:((GeogebraCommonKernelPathParameter *) nil_chk(self->paramQ_))->t_];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonGeogebra3DKernel3DAlgosAlgoConicPartCircle3D)
