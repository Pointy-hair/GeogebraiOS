//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/locusequ/elements/EquationHyperbolaFociLength.java
//


#include "J2ObjC_source.h"
#include "geogebra/common/kernel/algos/AlgoElement.h"
#include "geogebra/common/kernel/algos/AlgoHyperbolaFociLength.h"
#include "geogebra/common/kernel/arithmetic/NumberValue.h"
#include "geogebra/common/kernel/geos/GeoElement.h"
#include "geogebra/common/kernel/geos/GeoPoint.h"
#include "geogebra/common/kernel/kernelND/GeoPointND.h"
#include "geogebra/common/kernel/locusequ/EquationPoint.h"
#include "geogebra/common/kernel/locusequ/EquationScope.h"
#include "geogebra/common/kernel/locusequ/arith/EquationExpression.h"
#include "geogebra/common/kernel/locusequ/arith/EquationNumericValue.h"
#include "geogebra/common/kernel/locusequ/elements/EquationGenericConic.h"
#include "geogebra/common/kernel/locusequ/elements/EquationHyperbolaFociLength.h"

@implementation GeogebraCommonKernelLocusequElementsEquationHyperbolaFociLength

- (instancetype)initWithGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)conic
             withGeogebraCommonKernelLocusequEquationScope:(GeogebraCommonKernelLocusequEquationScope *)scope {
  GeogebraCommonKernelLocusequElementsEquationHyperbolaFociLength_initWithGeogebraCommonKernelGeosGeoElement_withGeogebraCommonKernelLocusequEquationScope_(self, conic, scope);
  return self;
}

- (void)computeMatrix {
  GeogebraCommonKernelAlgosAlgoHyperbolaFociLength *algo = (GeogebraCommonKernelAlgosAlgoHyperbolaFociLength *) check_class_cast([((GeogebraCommonKernelGeosGeoElement *) nil_chk([self getResult])) getParentAlgorithm], [GeogebraCommonKernelAlgosAlgoHyperbolaFociLength class]);
  GeogebraCommonKernelLocusequEquationPoint *focus1 = [((GeogebraCommonKernelLocusequEquationScope *) nil_chk([self getScope])) getPointWithGeogebraCommonKernelGeosGeoPoint:(GeogebraCommonKernelGeosGeoPoint *) check_class_cast([((GeogebraCommonKernelAlgosAlgoHyperbolaFociLength *) nil_chk(algo)) getFocus1], [GeogebraCommonKernelGeosGeoPoint class])];
  GeogebraCommonKernelLocusequEquationPoint *focus2 = [((GeogebraCommonKernelLocusequEquationScope *) nil_chk([self getScope])) getPointWithGeogebraCommonKernelGeosGeoPoint:(GeogebraCommonKernelGeosGeoPoint *) check_class_cast([algo getFocus2], [GeogebraCommonKernelGeosGeoPoint class])];
  GeogebraCommonKernelLocusequArithEquationExpression *length = GeogebraCommonKernelLocusequArithEquationNumericValue_fromWithDouble_([((id<GeogebraCommonKernelArithmeticNumberValue>) nil_chk([algo getLength])) getDouble]);
  [self setEllipseHyperbolaWithGeogebraCommonKernelLocusequEquationPoint:focus1 withGeogebraCommonKernelLocusequEquationPoint:focus2 withGeogebraCommonKernelLocusequArithEquationExpression:length];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonKernelGeosGeoElement:withGeogebraCommonKernelLocusequEquationScope:", "EquationHyperbolaFociLength", NULL, 0x1, NULL, NULL },
    { "computeMatrix", NULL, "V", 0x4, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelLocusequElementsEquationHyperbolaFociLength = { 2, "EquationHyperbolaFociLength", "geogebra.common.kernel.locusequ.elements", NULL, 0x1, 2, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelLocusequElementsEquationHyperbolaFociLength;
}

@end

void GeogebraCommonKernelLocusequElementsEquationHyperbolaFociLength_initWithGeogebraCommonKernelGeosGeoElement_withGeogebraCommonKernelLocusequEquationScope_(GeogebraCommonKernelLocusequElementsEquationHyperbolaFociLength *self, GeogebraCommonKernelGeosGeoElement *conic, GeogebraCommonKernelLocusequEquationScope *scope) {
  GeogebraCommonKernelLocusequElementsEquationGenericConic_initWithGeogebraCommonKernelGeosGeoElement_withGeogebraCommonKernelLocusequEquationScope_(self, conic, scope);
  [self computeMatrix];
}

GeogebraCommonKernelLocusequElementsEquationHyperbolaFociLength *new_GeogebraCommonKernelLocusequElementsEquationHyperbolaFociLength_initWithGeogebraCommonKernelGeosGeoElement_withGeogebraCommonKernelLocusequEquationScope_(GeogebraCommonKernelGeosGeoElement *conic, GeogebraCommonKernelLocusequEquationScope *scope) {
  GeogebraCommonKernelLocusequElementsEquationHyperbolaFociLength *self = [GeogebraCommonKernelLocusequElementsEquationHyperbolaFociLength alloc];
  GeogebraCommonKernelLocusequElementsEquationHyperbolaFociLength_initWithGeogebraCommonKernelGeosGeoElement_withGeogebraCommonKernelLocusequEquationScope_(self, conic, scope);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelLocusequElementsEquationHyperbolaFociLength)
