//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/geos/GeoVec2D.java
//


#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "geogebra/common/kernel/Kernel.h"
#include "geogebra/common/kernel/Matrix/Coords.h"
#include "geogebra/common/kernel/StringTemplate.h"
#include "geogebra/common/kernel/arithmetic/ExpressionNode.h"
#include "geogebra/common/kernel/arithmetic/ExpressionNodeConstants.h"
#include "geogebra/common/kernel/arithmetic/ExpressionValue.h"
#include "geogebra/common/kernel/arithmetic/ListValue.h"
#include "geogebra/common/kernel/arithmetic/MyDouble.h"
#include "geogebra/common/kernel/arithmetic/MyList.h"
#include "geogebra/common/kernel/arithmetic/NumberValue.h"
#include "geogebra/common/kernel/arithmetic/ValidExpression.h"
#include "geogebra/common/kernel/arithmetic/VectorNDValue.h"
#include "geogebra/common/kernel/geos/GeoLine.h"
#include "geogebra/common/kernel/geos/GeoPoint.h"
#include "geogebra/common/kernel/geos/GeoVec2D.h"
#include "geogebra/common/kernel/geos/GeoVec3D.h"
#include "geogebra/common/kernel/kernelND/GeoPointND.h"
#include "geogebra/common/kernel/kernelND/GeoVecInterface.h"
#include "geogebra/common/main/App.h"
#include "geogebra/common/util/MyMath.h"
#include "geogebra/common/util/Riemann.h"
#include "geogebra/common/util/Unicode.h"
#include "java/lang/Double.h"
#include "java/lang/Math.h"
#include "java/lang/StringBuilder.h"
#include "java/util/HashSet.h"
#include "org/apache/commons/math/complex/Complex.h"

@interface GeogebraCommonKernelGeosGeoVec2D () {
 @public
  jdouble x_;
  jdouble y_;
  jint mode_;
  GeogebraCommonKernelKernel *kernel_;
  JavaLangStringBuilder *sbToString_;
}

@end

J2OBJC_FIELD_SETTER(GeogebraCommonKernelGeosGeoVec2D, kernel_, GeogebraCommonKernelKernel *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelGeosGeoVec2D, sbToString_, JavaLangStringBuilder *)

__attribute__((unused)) static jdouble GeogebraCommonKernelGeosGeoVec2D_length(GeogebraCommonKernelGeosGeoVec2D *self);

__attribute__((unused)) static NSString *GeogebraCommonKernelGeosGeoVec2D_toStringWithGeogebraCommonKernelStringTemplate_(GeogebraCommonKernelGeosGeoVec2D *self, GeogebraCommonKernelStringTemplate *tpl);

__attribute__((unused)) static GeogebraCommonKernelGeosGeoVec2D *GeogebraCommonKernelGeosGeoVec2D_getVector(GeogebraCommonKernelGeosGeoVec2D *self);

__attribute__((unused)) static jint GeogebraCommonKernelGeosGeoVec2D_getMode(GeogebraCommonKernelGeosGeoVec2D *self);

__attribute__((unused)) static void GeogebraCommonKernelGeosGeoVec2D_setModeWithInt_(GeogebraCommonKernelGeosGeoVec2D *self, jint mode);

__attribute__((unused)) static NSString *GeogebraCommonKernelGeosGeoVec2D_toValueStringWithGeogebraCommonKernelStringTemplate_(GeogebraCommonKernelGeosGeoVec2D *self, GeogebraCommonKernelStringTemplate *tpl);

@implementation GeogebraCommonKernelGeosGeoVec2D

- (instancetype)initWithGeogebraCommonKernelKernel:(GeogebraCommonKernelKernel *)kernel {
  GeogebraCommonKernelGeosGeoVec2D_initWithGeogebraCommonKernelKernel_(self, kernel);
  return self;
}

- (instancetype)initWithGeogebraCommonKernelKernel:(GeogebraCommonKernelKernel *)kernel
                                        withDouble:(jdouble)x
                                        withDouble:(jdouble)y {
  GeogebraCommonKernelGeosGeoVec2D_initWithGeogebraCommonKernelKernel_withDouble_withDouble_(self, kernel, x, y);
  return self;
}

- (instancetype)initWithGeogebraCommonKernelKernel:(GeogebraCommonKernelKernel *)kernel
                                   withDoubleArray:(IOSDoubleArray *)a {
  GeogebraCommonKernelGeosGeoVec2D_initWithGeogebraCommonKernelKernel_withDoubleArray_(self, kernel, a);
  return self;
}

- (instancetype)initWithGeogebraCommonKernelGeosGeoVec2D:(GeogebraCommonKernelGeosGeoVec2D *)v {
  GeogebraCommonKernelGeosGeoVec2D_initWithGeogebraCommonKernelGeosGeoVec2D_(self, v);
  return self;
}

- (jboolean)isImaginaryUnit {
  return mode_ == GeogebraCommonKernelKernel_COORD_COMPLEX && x_ == 0 && y_ == 1;
}

- (id<GeogebraCommonKernelArithmeticExpressionValue>)deepCopyWithGeogebraCommonKernelKernel:(GeogebraCommonKernelKernel *)kernel2 {
  return [new_GeogebraCommonKernelGeosGeoVec2D_initWithGeogebraCommonKernelGeosGeoVec2D_(self) autorelease];
}

- (void)resolveVariables {
}

- (instancetype)initWithGeogebraCommonKernelKernel:(GeogebraCommonKernelKernel *)kernel
              withGeogebraCommonKernelGeosGeoPoint:(GeogebraCommonKernelGeosGeoPoint *)p
              withGeogebraCommonKernelGeosGeoPoint:(GeogebraCommonKernelGeosGeoPoint *)q {
  GeogebraCommonKernelGeosGeoVec2D_initWithGeogebraCommonKernelKernel_withGeogebraCommonKernelGeosGeoPoint_withGeogebraCommonKernelGeosGeoPoint_(self, kernel, p, q);
  return self;
}

- (void)setXWithDouble:(jdouble)x {
  self->x_ = x;
}

- (void)setYWithDouble:(jdouble)y {
  self->y_ = y;
}

- (void)setCoordsWithDouble:(jdouble)x
                 withDouble:(jdouble)y {
  self->x_ = x;
  self->y_ = y;
}

- (void)setCoordsWithDoubleArray:(IOSDoubleArray *)a {
  x_ = IOSDoubleArray_Get(nil_chk(a), 0);
  y_ = IOSDoubleArray_Get(a, 1);
}

- (void)setCoordsWithGeogebraCommonKernelGeosGeoVec2D:(GeogebraCommonKernelGeosGeoVec2D *)v {
  x_ = ((GeogebraCommonKernelGeosGeoVec2D *) nil_chk(v))->x_;
  y_ = v->y_;
}

- (void)setPolarCoordsWithDouble:(jdouble)r
                      withDouble:(jdouble)phi {
  x_ = r * JavaLangMath_cosWithDouble_(phi);
  y_ = r * JavaLangMath_sinWithDouble_(phi);
}

- (jdouble)getX {
  return x_;
}

- (jdouble)getY {
  return y_;
}

- (jdouble)getR {
  return GeogebraCommonUtilMyMath_lengthWithDouble_withDouble_(x_, y_);
}

- (jdouble)getPhi {
  return JavaLangMath_atan2WithDouble_withDouble_(y_, x_);
}

- (IOSDoubleArray *)getCoords {
  IOSDoubleArray *res = [IOSDoubleArray arrayWithDoubles:(jdouble[]){ x_, y_ } count:2];
  return res;
}

- (jdouble)length {
  return GeogebraCommonKernelGeosGeoVec2D_length(self);
}

- (void)makeUnitVector {
  jdouble len = GeogebraCommonKernelGeosGeoVec2D_length(self);
  x_ = x_ / len;
  y_ = y_ / len;
}

- (GeogebraCommonKernelGeosGeoVec2D *)getUnitVector {
  jdouble len = GeogebraCommonKernelGeosGeoVec2D_length(self);
  return [new_GeogebraCommonKernelGeosGeoVec2D_initWithGeogebraCommonKernelKernel_withDouble_withDouble_(kernel_, x_ / len, y_ / len) autorelease];
}

- (IOSDoubleArray *)getUnitCoords {
  jdouble len = GeogebraCommonKernelGeosGeoVec2D_length(self);
  IOSDoubleArray *res = [IOSDoubleArray arrayWithDoubles:(jdouble[]){ x_ / len, y_ / len } count:2];
  return res;
}

- (jdouble)innerWithGeogebraCommonKernelGeosGeoVec2D:(GeogebraCommonKernelGeosGeoVec2D *)v {
  return x_ * ((GeogebraCommonKernelGeosGeoVec2D *) nil_chk(v))->x_ + y_ * v->y_;
}

- (jboolean)isEqualWithGeogebraCommonKernelGeosGeoVec2D:(GeogebraCommonKernelGeosGeoVec2D *)v {
  return GeogebraCommonKernelKernel_isEqualWithDouble_withDouble_(x_, ((GeogebraCommonKernelGeosGeoVec2D *) nil_chk(v))->x_) && GeogebraCommonKernelKernel_isEqualWithDouble_withDouble_(y_, v->y_);
}

- (jboolean)linDepWithGeogebraCommonKernelGeosGeoVec2D:(GeogebraCommonKernelGeosGeoVec2D *)v {
  return GeogebraCommonKernelKernel_isZeroWithDouble_(GeogebraCommonKernelGeosGeoVec2D_detWithGeogebraCommonKernelGeosGeoVec2D_withGeogebraCommonKernelGeosGeoVec2D_(self, v));
}

+ (jdouble)detWithGeogebraCommonKernelGeosGeoVec2D:(GeogebraCommonKernelGeosGeoVec2D *)u
              withGeogebraCommonKernelGeosGeoVec2D:(GeogebraCommonKernelGeosGeoVec2D *)v {
  return GeogebraCommonKernelGeosGeoVec2D_detWithGeogebraCommonKernelGeosGeoVec2D_withGeogebraCommonKernelGeosGeoVec2D_(u, v);
}

- (void)translateWithGeogebraCommonKernelGeosGeoVec2D:(GeogebraCommonKernelGeosGeoVec2D *)v {
  x_ += ((GeogebraCommonKernelGeosGeoVec2D *) nil_chk(v))->x_;
  y_ += v->y_;
}

- (void)rotateWithDouble:(jdouble)phi {
  jdouble cos = JavaLangMath_cosWithDouble_(phi);
  jdouble sin = JavaLangMath_sinWithDouble_(phi);
  jdouble x0 = x_ * cos - y_ * sin;
  y_ = x_ * sin + y_ * cos;
  x_ = x0;
}

- (void)mirrorWithGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)Q {
  x_ = 2.0 * [((GeogebraCommonKernelMatrixCoords *) nil_chk(Q)) getX] - x_;
  y_ = 2.0 * [Q getY] - y_;
}

- (void)mirrorWithDouble:(jdouble)phi {
  jdouble cos = JavaLangMath_cosWithDouble_(phi);
  jdouble sin = JavaLangMath_sinWithDouble_(phi);
  jdouble x0 = x_ * cos + y_ * sin;
  y_ = x_ * sin - y_ * cos;
  x_ = x0;
}

- (GeogebraCommonKernelGeosGeoVec2D *)addWithGeogebraCommonKernelGeosGeoVec2D:(GeogebraCommonKernelGeosGeoVec2D *)a {
  GeogebraCommonKernelGeosGeoVec2D *res = [new_GeogebraCommonKernelGeosGeoVec2D_initWithGeogebraCommonKernelKernel_withDouble_withDouble_(kernel_, 0, 0) autorelease];
  GeogebraCommonKernelGeosGeoVec2D_addWithGeogebraCommonKernelGeosGeoVec2D_withGeogebraCommonKernelGeosGeoVec2D_withGeogebraCommonKernelGeosGeoVec2D_(self, a, res);
  return res;
}

+ (void)addWithGeogebraCommonKernelGeosGeoVec2D:(GeogebraCommonKernelGeosGeoVec2D *)a
           withGeogebraCommonKernelGeosGeoVec2D:(GeogebraCommonKernelGeosGeoVec2D *)b
           withGeogebraCommonKernelGeosGeoVec2D:(GeogebraCommonKernelGeosGeoVec2D *)c {
  GeogebraCommonKernelGeosGeoVec2D_addWithGeogebraCommonKernelGeosGeoVec2D_withGeogebraCommonKernelGeosGeoVec2D_withGeogebraCommonKernelGeosGeoVec2D_(a, b, c);
}

+ (void)addWithGeogebraCommonKernelGeosGeoVec2D:(GeogebraCommonKernelGeosGeoVec2D *)a
  withGeogebraCommonKernelArithmeticNumberValue:(id<GeogebraCommonKernelArithmeticNumberValue>)b
           withGeogebraCommonKernelGeosGeoVec2D:(GeogebraCommonKernelGeosGeoVec2D *)c {
  GeogebraCommonKernelGeosGeoVec2D_addWithGeogebraCommonKernelGeosGeoVec2D_withGeogebraCommonKernelArithmeticNumberValue_withGeogebraCommonKernelGeosGeoVec2D_(a, b, c);
}

+ (void)addWithGeogebraCommonKernelGeosGeoVec2D:(GeogebraCommonKernelGeosGeoVec2D *)a
    withGeogebraCommonKernelArithmeticListValue:(id<GeogebraCommonKernelArithmeticListValue>)b
           withGeogebraCommonKernelGeosGeoVec2D:(GeogebraCommonKernelGeosGeoVec2D *)c {
  GeogebraCommonKernelGeosGeoVec2D_addWithGeogebraCommonKernelGeosGeoVec2D_withGeogebraCommonKernelArithmeticListValue_withGeogebraCommonKernelGeosGeoVec2D_(a, b, c);
}

+ (void)subWithGeogebraCommonKernelGeosGeoVec2D:(GeogebraCommonKernelGeosGeoVec2D *)a
    withGeogebraCommonKernelArithmeticListValue:(id<GeogebraCommonKernelArithmeticListValue>)b
           withGeogebraCommonKernelGeosGeoVec2D:(GeogebraCommonKernelGeosGeoVec2D *)c
                                    withBoolean:(jboolean)reverse {
  GeogebraCommonKernelGeosGeoVec2D_subWithGeogebraCommonKernelGeosGeoVec2D_withGeogebraCommonKernelArithmeticListValue_withGeogebraCommonKernelGeosGeoVec2D_withBoolean_(a, b, c, reverse);
}

+ (void)subWithGeogebraCommonKernelArithmeticNumberValue:(id<GeogebraCommonKernelArithmeticNumberValue>)b
                    withGeogebraCommonKernelGeosGeoVec2D:(GeogebraCommonKernelGeosGeoVec2D *)a
                    withGeogebraCommonKernelGeosGeoVec2D:(GeogebraCommonKernelGeosGeoVec2D *)c {
  GeogebraCommonKernelGeosGeoVec2D_subWithGeogebraCommonKernelArithmeticNumberValue_withGeogebraCommonKernelGeosGeoVec2D_withGeogebraCommonKernelGeosGeoVec2D_(b, a, c);
}

+ (void)subWithGeogebraCommonKernelGeosGeoVec2D:(GeogebraCommonKernelGeosGeoVec2D *)a
  withGeogebraCommonKernelArithmeticNumberValue:(id<GeogebraCommonKernelArithmeticNumberValue>)b
           withGeogebraCommonKernelGeosGeoVec2D:(GeogebraCommonKernelGeosGeoVec2D *)c {
  GeogebraCommonKernelGeosGeoVec2D_subWithGeogebraCommonKernelGeosGeoVec2D_withGeogebraCommonKernelArithmeticNumberValue_withGeogebraCommonKernelGeosGeoVec2D_(a, b, c);
}

- (GeogebraCommonKernelGeosGeoVec2D *)subWithGeogebraCommonKernelGeosGeoVec2D:(GeogebraCommonKernelGeosGeoVec2D *)a {
  GeogebraCommonKernelGeosGeoVec2D *res = [new_GeogebraCommonKernelGeosGeoVec2D_initWithGeogebraCommonKernelKernel_withDouble_withDouble_(kernel_, 0, 0) autorelease];
  GeogebraCommonKernelGeosGeoVec2D_subWithGeogebraCommonKernelGeosGeoVec2D_withGeogebraCommonKernelGeosGeoVec2D_withGeogebraCommonKernelGeosGeoVec2D_(self, a, res);
  return res;
}

+ (void)subWithGeogebraCommonKernelGeosGeoVec2D:(GeogebraCommonKernelGeosGeoVec2D *)a
           withGeogebraCommonKernelGeosGeoVec2D:(GeogebraCommonKernelGeosGeoVec2D *)b
           withGeogebraCommonKernelGeosGeoVec2D:(GeogebraCommonKernelGeosGeoVec2D *)c {
  GeogebraCommonKernelGeosGeoVec2D_subWithGeogebraCommonKernelGeosGeoVec2D_withGeogebraCommonKernelGeosGeoVec2D_withGeogebraCommonKernelGeosGeoVec2D_(a, b, c);
}

- (void)multWithDouble:(jdouble)b {
  x_ = b * x_;
  y_ = b * y_;
}

+ (void)multWithGeogebraCommonKernelGeosGeoVec2D:(GeogebraCommonKernelGeosGeoVec2D *)a
                                      withDouble:(jdouble)b
            withGeogebraCommonKernelGeosGeoVec2D:(GeogebraCommonKernelGeosGeoVec2D *)c {
  GeogebraCommonKernelGeosGeoVec2D_multWithGeogebraCommonKernelGeosGeoVec2D_withDouble_withGeogebraCommonKernelGeosGeoVec2D_(a, b, c);
}

+ (void)complexDivideWithGeogebraCommonKernelGeosGeoVec2D:(GeogebraCommonKernelGeosGeoVec2D *)a
                     withGeogebraCommonKernelGeosGeoVec2D:(GeogebraCommonKernelGeosGeoVec2D *)b
                     withGeogebraCommonKernelGeosGeoVec2D:(GeogebraCommonKernelGeosGeoVec2D *)c {
  GeogebraCommonKernelGeosGeoVec2D_complexDivideWithGeogebraCommonKernelGeosGeoVec2D_withGeogebraCommonKernelGeosGeoVec2D_withGeogebraCommonKernelGeosGeoVec2D_(a, b, c);
}

+ (void)complexDivideWithGeogebraCommonKernelArithmeticNumberValue:(id<GeogebraCommonKernelArithmeticNumberValue>)a
                              withGeogebraCommonKernelGeosGeoVec2D:(GeogebraCommonKernelGeosGeoVec2D *)b
                              withGeogebraCommonKernelGeosGeoVec2D:(GeogebraCommonKernelGeosGeoVec2D *)c {
  GeogebraCommonKernelGeosGeoVec2D_complexDivideWithGeogebraCommonKernelArithmeticNumberValue_withGeogebraCommonKernelGeosGeoVec2D_withGeogebraCommonKernelGeosGeoVec2D_(a, b, c);
}

+ (void)complexMultiplyWithGeogebraCommonKernelGeosGeoVec2D:(GeogebraCommonKernelGeosGeoVec2D *)a
                       withGeogebraCommonKernelGeosGeoVec2D:(GeogebraCommonKernelGeosGeoVec2D *)b
                       withGeogebraCommonKernelGeosGeoVec2D:(GeogebraCommonKernelGeosGeoVec2D *)c {
  GeogebraCommonKernelGeosGeoVec2D_complexMultiplyWithGeogebraCommonKernelGeosGeoVec2D_withGeogebraCommonKernelGeosGeoVec2D_withGeogebraCommonKernelGeosGeoVec2D_(a, b, c);
}

+ (void)complexPowerWithGeogebraCommonKernelGeosGeoVec2D:(GeogebraCommonKernelGeosGeoVec2D *)a
           withGeogebraCommonKernelArithmeticNumberValue:(id<GeogebraCommonKernelArithmeticNumberValue>)b
                    withGeogebraCommonKernelGeosGeoVec2D:(GeogebraCommonKernelGeosGeoVec2D *)c {
  GeogebraCommonKernelGeosGeoVec2D_complexPowerWithGeogebraCommonKernelGeosGeoVec2D_withGeogebraCommonKernelArithmeticNumberValue_withGeogebraCommonKernelGeosGeoVec2D_(a, b, c);
}

+ (void)complexSqrtWithGeogebraCommonKernelGeosGeoVec2D:(GeogebraCommonKernelGeosGeoVec2D *)a
                   withGeogebraCommonKernelGeosGeoVec2D:(GeogebraCommonKernelGeosGeoVec2D *)c {
  GeogebraCommonKernelGeosGeoVec2D_complexSqrtWithGeogebraCommonKernelGeosGeoVec2D_withGeogebraCommonKernelGeosGeoVec2D_(a, c);
}

+ (void)complexSinWithGeogebraCommonKernelGeosGeoVec2D:(GeogebraCommonKernelGeosGeoVec2D *)a
                  withGeogebraCommonKernelGeosGeoVec2D:(GeogebraCommonKernelGeosGeoVec2D *)c {
  GeogebraCommonKernelGeosGeoVec2D_complexSinWithGeogebraCommonKernelGeosGeoVec2D_withGeogebraCommonKernelGeosGeoVec2D_(a, c);
}

+ (void)complexCosWithGeogebraCommonKernelGeosGeoVec2D:(GeogebraCommonKernelGeosGeoVec2D *)a
                  withGeogebraCommonKernelGeosGeoVec2D:(GeogebraCommonKernelGeosGeoVec2D *)c {
  GeogebraCommonKernelGeosGeoVec2D_complexCosWithGeogebraCommonKernelGeosGeoVec2D_withGeogebraCommonKernelGeosGeoVec2D_(a, c);
}

+ (void)complexTanWithGeogebraCommonKernelGeosGeoVec2D:(GeogebraCommonKernelGeosGeoVec2D *)a
                  withGeogebraCommonKernelGeosGeoVec2D:(GeogebraCommonKernelGeosGeoVec2D *)c {
  GeogebraCommonKernelGeosGeoVec2D_complexTanWithGeogebraCommonKernelGeosGeoVec2D_withGeogebraCommonKernelGeosGeoVec2D_(a, c);
}

+ (void)complexSinhWithGeogebraCommonKernelGeosGeoVec2D:(GeogebraCommonKernelGeosGeoVec2D *)a
                   withGeogebraCommonKernelGeosGeoVec2D:(GeogebraCommonKernelGeosGeoVec2D *)c {
  GeogebraCommonKernelGeosGeoVec2D_complexSinhWithGeogebraCommonKernelGeosGeoVec2D_withGeogebraCommonKernelGeosGeoVec2D_(a, c);
}

+ (void)complexCoshWithGeogebraCommonKernelGeosGeoVec2D:(GeogebraCommonKernelGeosGeoVec2D *)a
                   withGeogebraCommonKernelGeosGeoVec2D:(GeogebraCommonKernelGeosGeoVec2D *)c {
  GeogebraCommonKernelGeosGeoVec2D_complexCoshWithGeogebraCommonKernelGeosGeoVec2D_withGeogebraCommonKernelGeosGeoVec2D_(a, c);
}

+ (void)complexTanhWithGeogebraCommonKernelGeosGeoVec2D:(GeogebraCommonKernelGeosGeoVec2D *)a
                   withGeogebraCommonKernelGeosGeoVec2D:(GeogebraCommonKernelGeosGeoVec2D *)c {
  GeogebraCommonKernelGeosGeoVec2D_complexTanhWithGeogebraCommonKernelGeosGeoVec2D_withGeogebraCommonKernelGeosGeoVec2D_(a, c);
}

+ (void)complexSecWithGeogebraCommonKernelGeosGeoVec2D:(GeogebraCommonKernelGeosGeoVec2D *)a
                  withGeogebraCommonKernelGeosGeoVec2D:(GeogebraCommonKernelGeosGeoVec2D *)c {
  GeogebraCommonKernelGeosGeoVec2D_complexSecWithGeogebraCommonKernelGeosGeoVec2D_withGeogebraCommonKernelGeosGeoVec2D_(a, c);
}

+ (void)complexCscWithGeogebraCommonKernelGeosGeoVec2D:(GeogebraCommonKernelGeosGeoVec2D *)a
                  withGeogebraCommonKernelGeosGeoVec2D:(GeogebraCommonKernelGeosGeoVec2D *)c {
  GeogebraCommonKernelGeosGeoVec2D_complexCscWithGeogebraCommonKernelGeosGeoVec2D_withGeogebraCommonKernelGeosGeoVec2D_(a, c);
}

+ (void)complexCotWithGeogebraCommonKernelGeosGeoVec2D:(GeogebraCommonKernelGeosGeoVec2D *)a
                  withGeogebraCommonKernelGeosGeoVec2D:(GeogebraCommonKernelGeosGeoVec2D *)c {
  GeogebraCommonKernelGeosGeoVec2D_complexCotWithGeogebraCommonKernelGeosGeoVec2D_withGeogebraCommonKernelGeosGeoVec2D_(a, c);
}

+ (void)complexSechWithGeogebraCommonKernelGeosGeoVec2D:(GeogebraCommonKernelGeosGeoVec2D *)a
                   withGeogebraCommonKernelGeosGeoVec2D:(GeogebraCommonKernelGeosGeoVec2D *)c {
  GeogebraCommonKernelGeosGeoVec2D_complexSechWithGeogebraCommonKernelGeosGeoVec2D_withGeogebraCommonKernelGeosGeoVec2D_(a, c);
}

+ (void)complexCschWithGeogebraCommonKernelGeosGeoVec2D:(GeogebraCommonKernelGeosGeoVec2D *)a
                   withGeogebraCommonKernelGeosGeoVec2D:(GeogebraCommonKernelGeosGeoVec2D *)c {
  GeogebraCommonKernelGeosGeoVec2D_complexCschWithGeogebraCommonKernelGeosGeoVec2D_withGeogebraCommonKernelGeosGeoVec2D_(a, c);
}

+ (void)complexCothWithGeogebraCommonKernelGeosGeoVec2D:(GeogebraCommonKernelGeosGeoVec2D *)a
                   withGeogebraCommonKernelGeosGeoVec2D:(GeogebraCommonKernelGeosGeoVec2D *)c {
  GeogebraCommonKernelGeosGeoVec2D_complexCothWithGeogebraCommonKernelGeosGeoVec2D_withGeogebraCommonKernelGeosGeoVec2D_(a, c);
}

+ (void)complexZetaWithGeogebraCommonKernelGeosGeoVec2D:(GeogebraCommonKernelGeosGeoVec2D *)a
                   withGeogebraCommonKernelGeosGeoVec2D:(GeogebraCommonKernelGeosGeoVec2D *)c {
  GeogebraCommonKernelGeosGeoVec2D_complexZetaWithGeogebraCommonKernelGeosGeoVec2D_withGeogebraCommonKernelGeosGeoVec2D_(a, c);
}

+ (void)complexCbrtWithGeogebraCommonKernelGeosGeoVec2D:(GeogebraCommonKernelGeosGeoVec2D *)a
                   withGeogebraCommonKernelGeosGeoVec2D:(GeogebraCommonKernelGeosGeoVec2D *)c {
  GeogebraCommonKernelGeosGeoVec2D_complexCbrtWithGeogebraCommonKernelGeosGeoVec2D_withGeogebraCommonKernelGeosGeoVec2D_(a, c);
}

+ (void)complexConjugateWithGeogebraCommonKernelGeosGeoVec2D:(GeogebraCommonKernelGeosGeoVec2D *)a
                        withGeogebraCommonKernelGeosGeoVec2D:(GeogebraCommonKernelGeosGeoVec2D *)c {
  GeogebraCommonKernelGeosGeoVec2D_complexConjugateWithGeogebraCommonKernelGeosGeoVec2D_withGeogebraCommonKernelGeosGeoVec2D_(a, c);
}

+ (jdouble)argWithGeogebraCommonKernelGeosGeoVec2D:(GeogebraCommonKernelGeosGeoVec2D *)a {
  return GeogebraCommonKernelGeosGeoVec2D_argWithGeogebraCommonKernelGeosGeoVec2D_(a);
}

+ (void)complexPowerWithGeogebraCommonKernelArithmeticNumberValue:(id<GeogebraCommonKernelArithmeticNumberValue>)a
                             withGeogebraCommonKernelGeosGeoVec2D:(GeogebraCommonKernelGeosGeoVec2D *)b
                             withGeogebraCommonKernelGeosGeoVec2D:(GeogebraCommonKernelGeosGeoVec2D *)c {
  GeogebraCommonKernelGeosGeoVec2D_complexPowerWithGeogebraCommonKernelArithmeticNumberValue_withGeogebraCommonKernelGeosGeoVec2D_withGeogebraCommonKernelGeosGeoVec2D_(a, b, c);
}

+ (void)complexExpWithGeogebraCommonKernelGeosGeoVec2D:(GeogebraCommonKernelGeosGeoVec2D *)a
                  withGeogebraCommonKernelGeosGeoVec2D:(GeogebraCommonKernelGeosGeoVec2D *)c {
  GeogebraCommonKernelGeosGeoVec2D_complexExpWithGeogebraCommonKernelGeosGeoVec2D_withGeogebraCommonKernelGeosGeoVec2D_(a, c);
}

+ (void)complexLogWithGeogebraCommonKernelGeosGeoVec2D:(GeogebraCommonKernelGeosGeoVec2D *)a
                  withGeogebraCommonKernelGeosGeoVec2D:(GeogebraCommonKernelGeosGeoVec2D *)c {
  GeogebraCommonKernelGeosGeoVec2D_complexLogWithGeogebraCommonKernelGeosGeoVec2D_withGeogebraCommonKernelGeosGeoVec2D_(a, c);
}

+ (jdouble)complexAbsWithGeogebraCommonKernelGeosGeoVec2D:(GeogebraCommonKernelGeosGeoVec2D *)a {
  return GeogebraCommonKernelGeosGeoVec2D_complexAbsWithGeogebraCommonKernelGeosGeoVec2D_(a);
}

+ (void)complexPowerWithGeogebraCommonKernelGeosGeoVec2D:(GeogebraCommonKernelGeosGeoVec2D *)a
                    withGeogebraCommonKernelGeosGeoVec2D:(GeogebraCommonKernelGeosGeoVec2D *)b
                    withGeogebraCommonKernelGeosGeoVec2D:(GeogebraCommonKernelGeosGeoVec2D *)c {
  GeogebraCommonKernelGeosGeoVec2D_complexPowerWithGeogebraCommonKernelGeosGeoVec2D_withGeogebraCommonKernelGeosGeoVec2D_withGeogebraCommonKernelGeosGeoVec2D_(a, b, c);
}

+ (void)complexMultiplyWithGeogebraCommonKernelGeosGeoVec2D:(GeogebraCommonKernelGeosGeoVec2D *)a
              withGeogebraCommonKernelArithmeticNumberValue:(id<GeogebraCommonKernelArithmeticNumberValue>)b
                       withGeogebraCommonKernelGeosGeoVec2D:(GeogebraCommonKernelGeosGeoVec2D *)c {
  GeogebraCommonKernelGeosGeoVec2D_complexMultiplyWithGeogebraCommonKernelGeosGeoVec2D_withGeogebraCommonKernelArithmeticNumberValue_withGeogebraCommonKernelGeosGeoVec2D_(a, b, c);
}

+ (void)vectorProductWithGeogebraCommonKernelKernelNDGeoVecInterface:(id<GeogebraCommonKernelKernelNDGeoVecInterface>)a
                     withGeogebraCommonKernelKernelNDGeoVecInterface:(id<GeogebraCommonKernelKernelNDGeoVecInterface>)b
                          withGeogebraCommonKernelArithmeticMyDouble:(GeogebraCommonKernelArithmeticMyDouble *)c {
  GeogebraCommonKernelGeosGeoVec2D_vectorProductWithGeogebraCommonKernelKernelNDGeoVecInterface_withGeogebraCommonKernelKernelNDGeoVecInterface_withGeogebraCommonKernelArithmeticMyDouble_(a, b, c);
}

+ (void)innerWithGeogebraCommonKernelGeosGeoVec2D:(GeogebraCommonKernelGeosGeoVec2D *)a
             withGeogebraCommonKernelGeosGeoVec2D:(GeogebraCommonKernelGeosGeoVec2D *)b
       withGeogebraCommonKernelArithmeticMyDouble:(GeogebraCommonKernelArithmeticMyDouble *)c {
  GeogebraCommonKernelGeosGeoVec2D_innerWithGeogebraCommonKernelGeosGeoVec2D_withGeogebraCommonKernelGeosGeoVec2D_withGeogebraCommonKernelArithmeticMyDouble_(a, b, c);
}

+ (void)divWithGeogebraCommonKernelGeosGeoVec2D:(GeogebraCommonKernelGeosGeoVec2D *)a
                                     withDouble:(jdouble)b
           withGeogebraCommonKernelGeosGeoVec2D:(GeogebraCommonKernelGeosGeoVec2D *)c {
  GeogebraCommonKernelGeosGeoVec2D_divWithGeogebraCommonKernelGeosGeoVec2D_withDouble_withGeogebraCommonKernelGeosGeoVec2D_(a, b, c);
}

- (NSString *)toStringWithGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl {
  return GeogebraCommonKernelGeosGeoVec2D_toStringWithGeogebraCommonKernelStringTemplate_(self, tpl);
}

- (GeogebraCommonKernelGeosGeoVec2D *)getVector {
  return GeogebraCommonKernelGeosGeoVec2D_getVector(self);
}

- (jboolean)isConstant {
  return YES;
}

- (jboolean)isLeaf {
  return YES;
}

- (jint)getMode {
  return GeogebraCommonKernelGeosGeoVec2D_getMode(self);
}

- (id<GeogebraCommonKernelArithmeticExpressionValue>)evaluateWithGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl {
  return GeogebraCommonKernelGeosGeoVec2D_getVector(self);
}

- (JavaUtilHashSet *)getVariables {
  return nil;
}

- (void)setModeWithInt:(jint)mode {
  GeogebraCommonKernelGeosGeoVec2D_setModeWithInt_(self, mode);
}

- (NSString *)toValueStringWithGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl {
  return GeogebraCommonKernelGeosGeoVec2D_toValueStringWithGeogebraCommonKernelStringTemplate_(self, tpl);
}

- (NSString *)toLaTeXStringWithBoolean:(jboolean)symbolic
withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl {
  return GeogebraCommonKernelGeosGeoVec2D_toStringWithGeogebraCommonKernelStringTemplate_(self, tpl);
}

- (jboolean)isNumberValue {
  return NO;
}

- (jboolean)evaluatesToNonComplex2DVector {
  return self->mode_ != GeogebraCommonKernelKernel_COORD_COMPLEX;
}

- (jboolean)evaluatesToVectorNotPoint {
  return self->mode_ != GeogebraCommonKernelKernel_COORD_COMPLEX;
}

- (jboolean)containsWithGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)ev {
  return ev == self;
}

- (void)multiplyMatrixWithGeogebraCommonKernelArithmeticMyList:(GeogebraCommonKernelArithmeticMyList *)list {
  if ([((GeogebraCommonKernelArithmeticMyList *) nil_chk(list)) getMatrixCols] != 2 || [list getMatrixRows] != 2) return;
  jdouble a, b, c, d;
  a = [((id<GeogebraCommonKernelArithmeticExpressionValue>) nil_chk(GeogebraCommonKernelArithmeticMyList_getCellWithGeogebraCommonKernelArithmeticMyList_withInt_withInt_(list, 0, 0))) evaluateDouble];
  b = [((id<GeogebraCommonKernelArithmeticExpressionValue>) nil_chk(GeogebraCommonKernelArithmeticMyList_getCellWithGeogebraCommonKernelArithmeticMyList_withInt_withInt_(list, 1, 0))) evaluateDouble];
  c = [((id<GeogebraCommonKernelArithmeticExpressionValue>) nil_chk(GeogebraCommonKernelArithmeticMyList_getCellWithGeogebraCommonKernelArithmeticMyList_withInt_withInt_(list, 0, 1))) evaluateDouble];
  d = [((id<GeogebraCommonKernelArithmeticExpressionValue>) nil_chk(GeogebraCommonKernelArithmeticMyList_getCellWithGeogebraCommonKernelArithmeticMyList_withInt_withInt_(list, 1, 1))) evaluateDouble];
  [self matrixTransformWithDouble:a withDouble:b withDouble:c withDouble:d];
}

+ (void)multiplyMatrixWithGeogebraCommonKernelArithmeticMyList:(GeogebraCommonKernelArithmeticMyList *)list
               withGeogebraCommonKernelKernelNDGeoVecInterface:(id<GeogebraCommonKernelKernelNDGeoVecInterface>)v
                          withGeogebraCommonKernelGeosGeoVec2D:(GeogebraCommonKernelGeosGeoVec2D *)ret {
  GeogebraCommonKernelGeosGeoVec2D_multiplyMatrixWithGeogebraCommonKernelArithmeticMyList_withGeogebraCommonKernelKernelNDGeoVecInterface_withGeogebraCommonKernelGeosGeoVec2D_(list, v, ret);
}

- (void)multiplyMatrixLeftWithGeogebraCommonKernelArithmeticMyList:(GeogebraCommonKernelArithmeticMyList *)list {
  if ([((GeogebraCommonKernelArithmeticMyList *) nil_chk(list)) getMatrixCols] != 2 || [list getMatrixRows] != 2) return;
  jdouble a, b, c, d;
  a = [((id<GeogebraCommonKernelArithmeticExpressionValue>) nil_chk(GeogebraCommonKernelArithmeticMyList_getCellWithGeogebraCommonKernelArithmeticMyList_withInt_withInt_(list, 0, 0))) evaluateDouble];
  b = [((id<GeogebraCommonKernelArithmeticExpressionValue>) nil_chk(GeogebraCommonKernelArithmeticMyList_getCellWithGeogebraCommonKernelArithmeticMyList_withInt_withInt_(list, 1, 0))) evaluateDouble];
  c = [((id<GeogebraCommonKernelArithmeticExpressionValue>) nil_chk(GeogebraCommonKernelArithmeticMyList_getCellWithGeogebraCommonKernelArithmeticMyList_withInt_withInt_(list, 0, 1))) evaluateDouble];
  d = [((id<GeogebraCommonKernelArithmeticExpressionValue>) nil_chk(GeogebraCommonKernelArithmeticMyList_getCellWithGeogebraCommonKernelArithmeticMyList_withInt_withInt_(list, 1, 1))) evaluateDouble];
  [self matrixTransformWithDouble:a withDouble:c withDouble:b withDouble:d];
}

- (void)matrixTransformWithDouble:(jdouble)a
                       withDouble:(jdouble)b
                       withDouble:(jdouble)c
                       withDouble:(jdouble)d {
  JavaLangDouble *x1 = JavaLangDouble_valueOfWithDouble_(a * x_ + b * y_);
  JavaLangDouble *y1 = JavaLangDouble_valueOfWithDouble_(c * x_ + d * y_);
  x_ = [x1 doubleValue];
  y_ = [y1 doubleValue];
}

- (void)multiplyMatrixAffineWithGeogebraCommonKernelArithmeticMyList:(GeogebraCommonKernelArithmeticMyList *)list
                   withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rt {
  if ([((GeogebraCommonKernelArithmeticMyList *) nil_chk(list)) getMatrixCols] != 3 || [list getMatrixRows] != 3) return;
  jdouble a, b, c, d, e, f, g, h, i, z1, xx = x_, yy = y_, zz = 1;
  jboolean vector = NO;
  if (([rt isKindOfClass:[GeogebraCommonKernelGeosGeoPoint class]]) || ([rt isKindOfClass:[GeogebraCommonKernelGeosGeoLine class]])) {
    GeogebraCommonKernelGeosGeoVec3D *p = (GeogebraCommonKernelGeosGeoVec3D *) check_class_cast(rt, [GeogebraCommonKernelGeosGeoVec3D class]);
    xx = ((GeogebraCommonKernelGeosGeoVec3D *) nil_chk(p))->x_;
    yy = p->y_;
    zz = p->z_;
  }
  else if ([GeogebraCommonKernelArithmeticVectorNDValue_class_() isInstance:rt]) {
    id<GeogebraCommonKernelKernelNDGeoVecInterface> v = [((id<GeogebraCommonKernelArithmeticVectorNDValue>) nil_chk(((id<GeogebraCommonKernelArithmeticVectorNDValue>) check_protocol_cast(rt, @protocol(GeogebraCommonKernelArithmeticVectorNDValue))))) getVector];
    xx = [((id<GeogebraCommonKernelKernelNDGeoVecInterface>) nil_chk(v)) getX];
    yy = [v getY];
    zz = 0;
    vector = YES;
  }
  else if ([GeogebraCommonKernelKernelNDGeoPointND_class_() isInstance:rt]) {
    id<GeogebraCommonKernelKernelNDGeoPointND> p = (id<GeogebraCommonKernelKernelNDGeoPointND>) check_protocol_cast(rt, @protocol(GeogebraCommonKernelKernelNDGeoPointND));
    xx = [((id<GeogebraCommonKernelKernelNDGeoPointND>) nil_chk(p)) getInhomX];
    yy = [p getInhomY];
    zz = 1;
  }
  else GeogebraCommonMainApp_debugWithNSString_(@"error in GeoVec2D");
  a = [((id<GeogebraCommonKernelArithmeticExpressionValue>) nil_chk(GeogebraCommonKernelArithmeticMyList_getCellWithGeogebraCommonKernelArithmeticMyList_withInt_withInt_(list, 0, 0))) evaluateDouble];
  b = [((id<GeogebraCommonKernelArithmeticExpressionValue>) nil_chk(GeogebraCommonKernelArithmeticMyList_getCellWithGeogebraCommonKernelArithmeticMyList_withInt_withInt_(list, 1, 0))) evaluateDouble];
  c = [((id<GeogebraCommonKernelArithmeticExpressionValue>) nil_chk(GeogebraCommonKernelArithmeticMyList_getCellWithGeogebraCommonKernelArithmeticMyList_withInt_withInt_(list, 2, 0))) evaluateDouble];
  d = [((id<GeogebraCommonKernelArithmeticExpressionValue>) nil_chk(GeogebraCommonKernelArithmeticMyList_getCellWithGeogebraCommonKernelArithmeticMyList_withInt_withInt_(list, 0, 1))) evaluateDouble];
  e = [((id<GeogebraCommonKernelArithmeticExpressionValue>) nil_chk(GeogebraCommonKernelArithmeticMyList_getCellWithGeogebraCommonKernelArithmeticMyList_withInt_withInt_(list, 1, 1))) evaluateDouble];
  f = [((id<GeogebraCommonKernelArithmeticExpressionValue>) nil_chk(GeogebraCommonKernelArithmeticMyList_getCellWithGeogebraCommonKernelArithmeticMyList_withInt_withInt_(list, 2, 1))) evaluateDouble];
  g = [((id<GeogebraCommonKernelArithmeticExpressionValue>) nil_chk(GeogebraCommonKernelArithmeticMyList_getCellWithGeogebraCommonKernelArithmeticMyList_withInt_withInt_(list, 0, 2))) evaluateDouble];
  h = [((id<GeogebraCommonKernelArithmeticExpressionValue>) nil_chk(GeogebraCommonKernelArithmeticMyList_getCellWithGeogebraCommonKernelArithmeticMyList_withInt_withInt_(list, 1, 2))) evaluateDouble];
  i = [((id<GeogebraCommonKernelArithmeticExpressionValue>) nil_chk(GeogebraCommonKernelArithmeticMyList_getCellWithGeogebraCommonKernelArithmeticMyList_withInt_withInt_(list, 2, 2))) evaluateDouble];
  x_ = a * xx + b * yy + c * zz;
  y_ = d * xx + e * yy + f * zz;
  z1 = g * xx + h * yy + i * zz;
  if (!vector) {
    x_ = x_ / z1;
    y_ = y_ / z1;
  }
  else {
    if (!GeogebraCommonKernelKernel_isZeroWithDouble_(z1)) {
      x_ = JavaLangDouble_NaN;
      y_ = JavaLangDouble_NaN;
    }
  }
  return;
}

- (NSString *)toOutputValueStringWithGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl {
  return GeogebraCommonKernelGeosGeoVec2D_toValueStringWithGeogebraCommonKernelStringTemplate_(self, tpl);
}

- (void)matrixTransformWithDouble:(jdouble)a00
                       withDouble:(jdouble)a01
                       withDouble:(jdouble)a02
                       withDouble:(jdouble)a10
                       withDouble:(jdouble)a11
                       withDouble:(jdouble)a12
                       withDouble:(jdouble)a20
                       withDouble:(jdouble)a21
                       withDouble:(jdouble)a22 {
  jdouble xx = x_;
  jdouble yy = y_;
  jdouble zz = 1;
  jdouble x1 = a00 * xx + a01 * yy + a02 * zz;
  jdouble y1 = a10 * xx + a11 * yy + a12 * zz;
  jdouble z1 = a20 * xx + a21 * yy + a22 * zz;
  x_ = x1 / z1;
  y_ = y1 / z1;
  return;
}

- (GeogebraCommonKernelKernel *)getKernel {
  return kernel_;
}

- (jboolean)hasCoords {
  return YES;
}

- (jdouble)getZ {
  return 0;
}

- (GeogebraCommonKernelGeosGeoVec2D *)round {
  return [new_GeogebraCommonKernelGeosGeoVec2D_initWithGeogebraCommonKernelKernel_withDouble_withDouble_(kernel_, JavaLangMath_roundWithDouble_(x_), JavaLangMath_roundWithDouble_(y_)) autorelease];
}

- (GeogebraCommonKernelGeosGeoVec2D *)floor {
  return [new_GeogebraCommonKernelGeosGeoVec2D_initWithGeogebraCommonKernelKernel_withDouble_withDouble_(kernel_, JavaLangMath_floorWithDouble_(x_), JavaLangMath_floorWithDouble_(y_)) autorelease];
}

- (GeogebraCommonKernelGeosGeoVec2D *)ceil {
  return [new_GeogebraCommonKernelGeosGeoVec2D_initWithGeogebraCommonKernelKernel_withDouble_withDouble_(kernel_, JavaLangMath_ceilWithDouble_(x_), JavaLangMath_ceilWithDouble_(y_)) autorelease];
}

- (GeogebraCommonKernelArithmeticExpressionNode *)wrap {
  return [new_GeogebraCommonKernelArithmeticExpressionNode_initWithGeogebraCommonKernelKernel_withGeogebraCommonKernelArithmeticExpressionValue_(kernel_, self) autorelease];
}

- (void)dealloc {
  RELEASE_(kernel_);
  RELEASE_(sbToString_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonKernelKernel:", "GeoVec2D", NULL, 0x1, NULL, NULL },
    { "initWithGeogebraCommonKernelKernel:withDouble:withDouble:", "GeoVec2D", NULL, 0x1, NULL, NULL },
    { "initWithGeogebraCommonKernelKernel:withDoubleArray:", "GeoVec2D", NULL, 0x1, NULL, NULL },
    { "initWithGeogebraCommonKernelGeosGeoVec2D:", "GeoVec2D", NULL, 0x1, NULL, NULL },
    { "isImaginaryUnit", NULL, "Z", 0x1, NULL, NULL },
    { "deepCopyWithGeogebraCommonKernelKernel:", "deepCopy", "Lgeogebra.common.kernel.arithmetic.ExpressionValue;", 0x1, NULL, NULL },
    { "resolveVariables", NULL, "V", 0x1, NULL, NULL },
    { "initWithGeogebraCommonKernelKernel:withGeogebraCommonKernelGeosGeoPoint:withGeogebraCommonKernelGeosGeoPoint:", "GeoVec2D", NULL, 0x1, NULL, NULL },
    { "setXWithDouble:", "setX", "V", 0x1, NULL, NULL },
    { "setYWithDouble:", "setY", "V", 0x1, NULL, NULL },
    { "setCoordsWithDouble:withDouble:", "setCoords", "V", 0x1, NULL, NULL },
    { "setCoordsWithDoubleArray:", "setCoords", "V", 0x1, NULL, NULL },
    { "setCoordsWithGeogebraCommonKernelGeosGeoVec2D:", "setCoords", "V", 0x1, NULL, NULL },
    { "setPolarCoordsWithDouble:withDouble:", "setPolarCoords", "V", 0x1, NULL, NULL },
    { "getX", NULL, "D", 0x11, NULL, NULL },
    { "getY", NULL, "D", 0x11, NULL, NULL },
    { "getR", NULL, "D", 0x11, NULL, NULL },
    { "getPhi", NULL, "D", 0x11, NULL, NULL },
    { "getCoords", NULL, "[D", 0x11, NULL, NULL },
    { "length", NULL, "D", 0x11, NULL, NULL },
    { "makeUnitVector", NULL, "V", 0x11, NULL, NULL },
    { "getUnitVector", NULL, "Lgeogebra.common.kernel.geos.GeoVec2D;", 0x11, NULL, NULL },
    { "getUnitCoords", NULL, "[D", 0x11, NULL, NULL },
    { "innerWithGeogebraCommonKernelGeosGeoVec2D:", "inner", "D", 0x11, NULL, NULL },
    { "isEqualWithGeogebraCommonKernelGeosGeoVec2D:", "isEqual", "Z", 0x11, NULL, NULL },
    { "linDepWithGeogebraCommonKernelGeosGeoVec2D:", "linDep", "Z", 0x11, NULL, NULL },
    { "detWithGeogebraCommonKernelGeosGeoVec2D:withGeogebraCommonKernelGeosGeoVec2D:", "det", "D", 0x19, NULL, NULL },
    { "translateWithGeogebraCommonKernelGeosGeoVec2D:", "translate", "V", 0x11, NULL, NULL },
    { "rotateWithDouble:", "rotate", "V", 0x11, NULL, NULL },
    { "mirrorWithGeogebraCommonKernelMatrixCoords:", "mirror", "V", 0x11, NULL, NULL },
    { "mirrorWithDouble:", "mirror", "V", 0x11, NULL, NULL },
    { "addWithGeogebraCommonKernelGeosGeoVec2D:", "add", "Lgeogebra.common.kernel.geos.GeoVec2D;", 0x11, NULL, NULL },
    { "addWithGeogebraCommonKernelGeosGeoVec2D:withGeogebraCommonKernelGeosGeoVec2D:withGeogebraCommonKernelGeosGeoVec2D:", "add", "V", 0x19, NULL, NULL },
    { "addWithGeogebraCommonKernelGeosGeoVec2D:withGeogebraCommonKernelArithmeticNumberValue:withGeogebraCommonKernelGeosGeoVec2D:", "add", "V", 0x19, NULL, NULL },
    { "addWithGeogebraCommonKernelGeosGeoVec2D:withGeogebraCommonKernelArithmeticListValue:withGeogebraCommonKernelGeosGeoVec2D:", "add", "V", 0x19, NULL, NULL },
    { "subWithGeogebraCommonKernelGeosGeoVec2D:withGeogebraCommonKernelArithmeticListValue:withGeogebraCommonKernelGeosGeoVec2D:withBoolean:", "sub", "V", 0x19, NULL, NULL },
    { "subWithGeogebraCommonKernelArithmeticNumberValue:withGeogebraCommonKernelGeosGeoVec2D:withGeogebraCommonKernelGeosGeoVec2D:", "sub", "V", 0x19, NULL, NULL },
    { "subWithGeogebraCommonKernelGeosGeoVec2D:withGeogebraCommonKernelArithmeticNumberValue:withGeogebraCommonKernelGeosGeoVec2D:", "sub", "V", 0x19, NULL, NULL },
    { "subWithGeogebraCommonKernelGeosGeoVec2D:", "sub", "Lgeogebra.common.kernel.geos.GeoVec2D;", 0x11, NULL, NULL },
    { "subWithGeogebraCommonKernelGeosGeoVec2D:withGeogebraCommonKernelGeosGeoVec2D:withGeogebraCommonKernelGeosGeoVec2D:", "sub", "V", 0x19, NULL, NULL },
    { "multWithDouble:", "mult", "V", 0x11, NULL, NULL },
    { "multWithGeogebraCommonKernelGeosGeoVec2D:withDouble:withGeogebraCommonKernelGeosGeoVec2D:", "mult", "V", 0x19, NULL, NULL },
    { "complexDivideWithGeogebraCommonKernelGeosGeoVec2D:withGeogebraCommonKernelGeosGeoVec2D:withGeogebraCommonKernelGeosGeoVec2D:", "complexDivide", "V", 0x19, NULL, NULL },
    { "complexDivideWithGeogebraCommonKernelArithmeticNumberValue:withGeogebraCommonKernelGeosGeoVec2D:withGeogebraCommonKernelGeosGeoVec2D:", "complexDivide", "V", 0x19, NULL, NULL },
    { "complexMultiplyWithGeogebraCommonKernelGeosGeoVec2D:withGeogebraCommonKernelGeosGeoVec2D:withGeogebraCommonKernelGeosGeoVec2D:", "complexMultiply", "V", 0x19, NULL, NULL },
    { "complexPowerWithGeogebraCommonKernelGeosGeoVec2D:withGeogebraCommonKernelArithmeticNumberValue:withGeogebraCommonKernelGeosGeoVec2D:", "complexPower", "V", 0x19, NULL, NULL },
    { "complexSqrtWithGeogebraCommonKernelGeosGeoVec2D:withGeogebraCommonKernelGeosGeoVec2D:", "complexSqrt", "V", 0x19, NULL, NULL },
    { "complexSinWithGeogebraCommonKernelGeosGeoVec2D:withGeogebraCommonKernelGeosGeoVec2D:", "complexSin", "V", 0x19, NULL, NULL },
    { "complexCosWithGeogebraCommonKernelGeosGeoVec2D:withGeogebraCommonKernelGeosGeoVec2D:", "complexCos", "V", 0x19, NULL, NULL },
    { "complexTanWithGeogebraCommonKernelGeosGeoVec2D:withGeogebraCommonKernelGeosGeoVec2D:", "complexTan", "V", 0x19, NULL, NULL },
    { "complexSinhWithGeogebraCommonKernelGeosGeoVec2D:withGeogebraCommonKernelGeosGeoVec2D:", "complexSinh", "V", 0x19, NULL, NULL },
    { "complexCoshWithGeogebraCommonKernelGeosGeoVec2D:withGeogebraCommonKernelGeosGeoVec2D:", "complexCosh", "V", 0x19, NULL, NULL },
    { "complexTanhWithGeogebraCommonKernelGeosGeoVec2D:withGeogebraCommonKernelGeosGeoVec2D:", "complexTanh", "V", 0x19, NULL, NULL },
    { "complexSecWithGeogebraCommonKernelGeosGeoVec2D:withGeogebraCommonKernelGeosGeoVec2D:", "complexSec", "V", 0x19, NULL, NULL },
    { "complexCscWithGeogebraCommonKernelGeosGeoVec2D:withGeogebraCommonKernelGeosGeoVec2D:", "complexCsc", "V", 0x19, NULL, NULL },
    { "complexCotWithGeogebraCommonKernelGeosGeoVec2D:withGeogebraCommonKernelGeosGeoVec2D:", "complexCot", "V", 0x19, NULL, NULL },
    { "complexSechWithGeogebraCommonKernelGeosGeoVec2D:withGeogebraCommonKernelGeosGeoVec2D:", "complexSech", "V", 0x19, NULL, NULL },
    { "complexCschWithGeogebraCommonKernelGeosGeoVec2D:withGeogebraCommonKernelGeosGeoVec2D:", "complexCsch", "V", 0x19, NULL, NULL },
    { "complexCothWithGeogebraCommonKernelGeosGeoVec2D:withGeogebraCommonKernelGeosGeoVec2D:", "complexCoth", "V", 0x19, NULL, NULL },
    { "complexZetaWithGeogebraCommonKernelGeosGeoVec2D:withGeogebraCommonKernelGeosGeoVec2D:", "complexZeta", "V", 0x19, NULL, NULL },
    { "complexCbrtWithGeogebraCommonKernelGeosGeoVec2D:withGeogebraCommonKernelGeosGeoVec2D:", "complexCbrt", "V", 0x19, NULL, NULL },
    { "complexConjugateWithGeogebraCommonKernelGeosGeoVec2D:withGeogebraCommonKernelGeosGeoVec2D:", "complexConjugate", "V", 0x19, NULL, NULL },
    { "argWithGeogebraCommonKernelGeosGeoVec2D:", "arg", "D", 0x19, NULL, NULL },
    { "complexPowerWithGeogebraCommonKernelArithmeticNumberValue:withGeogebraCommonKernelGeosGeoVec2D:withGeogebraCommonKernelGeosGeoVec2D:", "complexPower", "V", 0x19, NULL, NULL },
    { "complexExpWithGeogebraCommonKernelGeosGeoVec2D:withGeogebraCommonKernelGeosGeoVec2D:", "complexExp", "V", 0x19, NULL, NULL },
    { "complexLogWithGeogebraCommonKernelGeosGeoVec2D:withGeogebraCommonKernelGeosGeoVec2D:", "complexLog", "V", 0x19, NULL, NULL },
    { "complexAbsWithGeogebraCommonKernelGeosGeoVec2D:", "complexAbs", "D", 0x19, NULL, NULL },
    { "complexPowerWithGeogebraCommonKernelGeosGeoVec2D:withGeogebraCommonKernelGeosGeoVec2D:withGeogebraCommonKernelGeosGeoVec2D:", "complexPower", "V", 0x19, NULL, NULL },
    { "complexMultiplyWithGeogebraCommonKernelGeosGeoVec2D:withGeogebraCommonKernelArithmeticNumberValue:withGeogebraCommonKernelGeosGeoVec2D:", "complexMultiply", "V", 0x19, NULL, NULL },
    { "vectorProductWithGeogebraCommonKernelKernelNDGeoVecInterface:withGeogebraCommonKernelKernelNDGeoVecInterface:withGeogebraCommonKernelArithmeticMyDouble:", "vectorProduct", "V", 0x19, NULL, NULL },
    { "innerWithGeogebraCommonKernelGeosGeoVec2D:withGeogebraCommonKernelGeosGeoVec2D:withGeogebraCommonKernelArithmeticMyDouble:", "inner", "V", 0x19, NULL, NULL },
    { "divWithGeogebraCommonKernelGeosGeoVec2D:withDouble:withGeogebraCommonKernelGeosGeoVec2D:", "div", "V", 0x19, NULL, NULL },
    { "toStringWithGeogebraCommonKernelStringTemplate:", "toString", "Ljava.lang.String;", 0x11, NULL, NULL },
    { "getVector", NULL, "Lgeogebra.common.kernel.geos.GeoVec2D;", 0x11, NULL, NULL },
    { "isConstant", NULL, "Z", 0x11, NULL, NULL },
    { "isLeaf", NULL, "Z", 0x11, NULL, NULL },
    { "getMode", NULL, "I", 0x11, NULL, NULL },
    { "evaluateWithGeogebraCommonKernelStringTemplate:", "evaluate", "Lgeogebra.common.kernel.arithmetic.ExpressionValue;", 0x11, NULL, NULL },
    { "getVariables", NULL, "Ljava.util.HashSet;", 0x11, NULL, NULL },
    { "setModeWithInt:", "setMode", "V", 0x11, NULL, NULL },
    { "toValueStringWithGeogebraCommonKernelStringTemplate:", "toValueString", "Ljava.lang.String;", 0x11, NULL, NULL },
    { "toLaTeXStringWithBoolean:withGeogebraCommonKernelStringTemplate:", "toLaTeXString", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "isNumberValue", NULL, "Z", 0x11, NULL, NULL },
    { "evaluatesToNonComplex2DVector", NULL, "Z", 0x11, NULL, NULL },
    { "evaluatesToVectorNotPoint", NULL, "Z", 0x11, NULL, NULL },
    { "containsWithGeogebraCommonKernelArithmeticExpressionValue:", "contains", "Z", 0x11, NULL, NULL },
    { "multiplyMatrixWithGeogebraCommonKernelArithmeticMyList:", "multiplyMatrix", "V", 0x1, NULL, NULL },
    { "multiplyMatrixWithGeogebraCommonKernelArithmeticMyList:withGeogebraCommonKernelKernelNDGeoVecInterface:withGeogebraCommonKernelGeosGeoVec2D:", "multiplyMatrix", "V", 0x9, NULL, NULL },
    { "multiplyMatrixLeftWithGeogebraCommonKernelArithmeticMyList:", "multiplyMatrixLeft", "V", 0x1, NULL, NULL },
    { "matrixTransformWithDouble:withDouble:withDouble:withDouble:", "matrixTransform", "V", 0x1, NULL, NULL },
    { "multiplyMatrixAffineWithGeogebraCommonKernelArithmeticMyList:withGeogebraCommonKernelArithmeticExpressionValue:", "multiplyMatrixAffine", "V", 0x1, NULL, NULL },
    { "toOutputValueStringWithGeogebraCommonKernelStringTemplate:", "toOutputValueString", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "matrixTransformWithDouble:withDouble:withDouble:withDouble:withDouble:withDouble:withDouble:withDouble:withDouble:", "matrixTransform", "V", 0x1, NULL, NULL },
    { "getKernel", NULL, "Lgeogebra.common.kernel.Kernel;", 0x1, NULL, NULL },
    { "hasCoords", NULL, "Z", 0x1, NULL, NULL },
    { "getZ", NULL, "D", 0x1, NULL, NULL },
    { "round", NULL, "Lgeogebra.common.kernel.geos.GeoVec2D;", 0x1, NULL, NULL },
    { "floor", NULL, "Lgeogebra.common.kernel.geos.GeoVec2D;", 0x1, NULL, NULL },
    { "ceil", NULL, "Lgeogebra.common.kernel.geos.GeoVec2D;", 0x1, NULL, NULL },
    { "wrap", NULL, "Lgeogebra.common.kernel.arithmetic.ExpressionNode;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "x_", NULL, 0x2, "D", NULL, NULL,  },
    { "y_", NULL, 0x2, "D", NULL, NULL,  },
    { "mode_", NULL, 0x2, "I", NULL, NULL,  },
    { "kernel_", NULL, 0x2, "Lgeogebra.common.kernel.Kernel;", NULL, NULL,  },
    { "sbToString_", NULL, 0x2, "Ljava.lang.StringBuilder;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelGeosGeoVec2D = { 2, "GeoVec2D", "geogebra.common.kernel.geos", NULL, 0x11, 100, methods, 5, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelGeosGeoVec2D;
}

@end

void GeogebraCommonKernelGeosGeoVec2D_initWithGeogebraCommonKernelKernel_(GeogebraCommonKernelGeosGeoVec2D *self, GeogebraCommonKernelKernel *kernel) {
  GeogebraCommonKernelArithmeticValidExpression_init(self);
  self->x_ = JavaLangDouble_NaN;
  self->y_ = JavaLangDouble_NaN;
  GeogebraCommonKernelGeosGeoVec2D_setAndConsume_sbToString_(self, new_JavaLangStringBuilder_initWithInt_(50));
  GeogebraCommonKernelGeosGeoVec2D_set_kernel_(self, kernel);
}

GeogebraCommonKernelGeosGeoVec2D *new_GeogebraCommonKernelGeosGeoVec2D_initWithGeogebraCommonKernelKernel_(GeogebraCommonKernelKernel *kernel) {
  GeogebraCommonKernelGeosGeoVec2D *self = [GeogebraCommonKernelGeosGeoVec2D alloc];
  GeogebraCommonKernelGeosGeoVec2D_initWithGeogebraCommonKernelKernel_(self, kernel);
  return self;
}

void GeogebraCommonKernelGeosGeoVec2D_initWithGeogebraCommonKernelKernel_withDouble_withDouble_(GeogebraCommonKernelGeosGeoVec2D *self, GeogebraCommonKernelKernel *kernel, jdouble x, jdouble y) {
  GeogebraCommonKernelGeosGeoVec2D_initWithGeogebraCommonKernelKernel_(self, kernel);
  self->x_ = x;
  self->y_ = y;
}

GeogebraCommonKernelGeosGeoVec2D *new_GeogebraCommonKernelGeosGeoVec2D_initWithGeogebraCommonKernelKernel_withDouble_withDouble_(GeogebraCommonKernelKernel *kernel, jdouble x, jdouble y) {
  GeogebraCommonKernelGeosGeoVec2D *self = [GeogebraCommonKernelGeosGeoVec2D alloc];
  GeogebraCommonKernelGeosGeoVec2D_initWithGeogebraCommonKernelKernel_withDouble_withDouble_(self, kernel, x, y);
  return self;
}

void GeogebraCommonKernelGeosGeoVec2D_initWithGeogebraCommonKernelKernel_withDoubleArray_(GeogebraCommonKernelGeosGeoVec2D *self, GeogebraCommonKernelKernel *kernel, IOSDoubleArray *a) {
  GeogebraCommonKernelGeosGeoVec2D_initWithGeogebraCommonKernelKernel_(self, kernel);
  self->x_ = IOSDoubleArray_Get(nil_chk(a), 0);
  self->y_ = IOSDoubleArray_Get(a, 1);
}

GeogebraCommonKernelGeosGeoVec2D *new_GeogebraCommonKernelGeosGeoVec2D_initWithGeogebraCommonKernelKernel_withDoubleArray_(GeogebraCommonKernelKernel *kernel, IOSDoubleArray *a) {
  GeogebraCommonKernelGeosGeoVec2D *self = [GeogebraCommonKernelGeosGeoVec2D alloc];
  GeogebraCommonKernelGeosGeoVec2D_initWithGeogebraCommonKernelKernel_withDoubleArray_(self, kernel, a);
  return self;
}

void GeogebraCommonKernelGeosGeoVec2D_initWithGeogebraCommonKernelGeosGeoVec2D_(GeogebraCommonKernelGeosGeoVec2D *self, GeogebraCommonKernelGeosGeoVec2D *v) {
  GeogebraCommonKernelGeosGeoVec2D_initWithGeogebraCommonKernelKernel_(self, ((GeogebraCommonKernelGeosGeoVec2D *) nil_chk(v))->kernel_);
  self->x_ = v->x_;
  self->y_ = v->y_;
  self->mode_ = v->mode_;
}

GeogebraCommonKernelGeosGeoVec2D *new_GeogebraCommonKernelGeosGeoVec2D_initWithGeogebraCommonKernelGeosGeoVec2D_(GeogebraCommonKernelGeosGeoVec2D *v) {
  GeogebraCommonKernelGeosGeoVec2D *self = [GeogebraCommonKernelGeosGeoVec2D alloc];
  GeogebraCommonKernelGeosGeoVec2D_initWithGeogebraCommonKernelGeosGeoVec2D_(self, v);
  return self;
}

void GeogebraCommonKernelGeosGeoVec2D_initWithGeogebraCommonKernelKernel_withGeogebraCommonKernelGeosGeoPoint_withGeogebraCommonKernelGeosGeoPoint_(GeogebraCommonKernelGeosGeoVec2D *self, GeogebraCommonKernelKernel *kernel, GeogebraCommonKernelGeosGeoPoint *p, GeogebraCommonKernelGeosGeoPoint *q) {
  GeogebraCommonKernelGeosGeoVec2D_initWithGeogebraCommonKernelKernel_(self, kernel);
  self->x_ = [((GeogebraCommonKernelGeosGeoPoint *) nil_chk(q)) getX] - [((GeogebraCommonKernelGeosGeoPoint *) nil_chk(p)) getX];
  self->y_ = [q getY] - [p getY];
}

GeogebraCommonKernelGeosGeoVec2D *new_GeogebraCommonKernelGeosGeoVec2D_initWithGeogebraCommonKernelKernel_withGeogebraCommonKernelGeosGeoPoint_withGeogebraCommonKernelGeosGeoPoint_(GeogebraCommonKernelKernel *kernel, GeogebraCommonKernelGeosGeoPoint *p, GeogebraCommonKernelGeosGeoPoint *q) {
  GeogebraCommonKernelGeosGeoVec2D *self = [GeogebraCommonKernelGeosGeoVec2D alloc];
  GeogebraCommonKernelGeosGeoVec2D_initWithGeogebraCommonKernelKernel_withGeogebraCommonKernelGeosGeoPoint_withGeogebraCommonKernelGeosGeoPoint_(self, kernel, p, q);
  return self;
}

jdouble GeogebraCommonKernelGeosGeoVec2D_length(GeogebraCommonKernelGeosGeoVec2D *self) {
  return GeogebraCommonUtilMyMath_lengthWithDouble_withDouble_(self->x_, self->y_);
}

jdouble GeogebraCommonKernelGeosGeoVec2D_detWithGeogebraCommonKernelGeosGeoVec2D_withGeogebraCommonKernelGeosGeoVec2D_(GeogebraCommonKernelGeosGeoVec2D *u, GeogebraCommonKernelGeosGeoVec2D *v) {
  GeogebraCommonKernelGeosGeoVec2D_initialize();
  return ((GeogebraCommonKernelGeosGeoVec2D *) nil_chk(u))->x_ * ((GeogebraCommonKernelGeosGeoVec2D *) nil_chk(v))->y_ - u->y_ * v->x_;
}

void GeogebraCommonKernelGeosGeoVec2D_addWithGeogebraCommonKernelGeosGeoVec2D_withGeogebraCommonKernelGeosGeoVec2D_withGeogebraCommonKernelGeosGeoVec2D_(GeogebraCommonKernelGeosGeoVec2D *a, GeogebraCommonKernelGeosGeoVec2D *b, GeogebraCommonKernelGeosGeoVec2D *c) {
  GeogebraCommonKernelGeosGeoVec2D_initialize();
  ((GeogebraCommonKernelGeosGeoVec2D *) nil_chk(c))->x_ = ((GeogebraCommonKernelGeosGeoVec2D *) nil_chk(a))->x_ + ((GeogebraCommonKernelGeosGeoVec2D *) nil_chk(b))->x_;
  c->y_ = a->y_ + b->y_;
  if (GeogebraCommonKernelGeosGeoVec2D_getMode(a) == GeogebraCommonKernelKernel_COORD_COMPLEX || GeogebraCommonKernelGeosGeoVec2D_getMode(b) == GeogebraCommonKernelKernel_COORD_COMPLEX) GeogebraCommonKernelGeosGeoVec2D_setModeWithInt_(c, GeogebraCommonKernelKernel_COORD_COMPLEX);
}

void GeogebraCommonKernelGeosGeoVec2D_addWithGeogebraCommonKernelGeosGeoVec2D_withGeogebraCommonKernelArithmeticNumberValue_withGeogebraCommonKernelGeosGeoVec2D_(GeogebraCommonKernelGeosGeoVec2D *a, id<GeogebraCommonKernelArithmeticNumberValue> b, GeogebraCommonKernelGeosGeoVec2D *c) {
  GeogebraCommonKernelGeosGeoVec2D_initialize();
  if (GeogebraCommonKernelGeosGeoVec2D_getMode(nil_chk(a)) == GeogebraCommonKernelKernel_COORD_COMPLEX) {
    ((GeogebraCommonKernelGeosGeoVec2D *) nil_chk(c))->x_ = a->x_ + [((id<GeogebraCommonKernelArithmeticNumberValue>) nil_chk(b)) getDouble];
    c->y_ = a->y_;
    GeogebraCommonKernelGeosGeoVec2D_setModeWithInt_(c, GeogebraCommonKernelKernel_COORD_COMPLEX);
  }
  else {
    ((GeogebraCommonKernelGeosGeoVec2D *) nil_chk(c))->x_ = a->x_ + [((id<GeogebraCommonKernelArithmeticNumberValue>) nil_chk(b)) getDouble];
    c->y_ = a->y_ + [b getDouble];
  }
}

void GeogebraCommonKernelGeosGeoVec2D_addWithGeogebraCommonKernelGeosGeoVec2D_withGeogebraCommonKernelArithmeticListValue_withGeogebraCommonKernelGeosGeoVec2D_(GeogebraCommonKernelGeosGeoVec2D *a, id<GeogebraCommonKernelArithmeticListValue> b, GeogebraCommonKernelGeosGeoVec2D *c) {
  GeogebraCommonKernelGeosGeoVec2D_initialize();
  GeogebraCommonKernelArithmeticMyList *list = [((id<GeogebraCommonKernelArithmeticListValue>) nil_chk(b)) getMyList];
  if ([((GeogebraCommonKernelArithmeticMyList *) nil_chk(list)) size] != 2) {
    ((GeogebraCommonKernelGeosGeoVec2D *) nil_chk(c))->x_ = JavaLangDouble_NaN;
    c->y_ = JavaLangDouble_NaN;
    return;
  }
  jdouble enX = [((id<GeogebraCommonKernelArithmeticExpressionValue>) nil_chk([list getListElementWithInt:0])) evaluateDouble];
  jdouble enY = [((id<GeogebraCommonKernelArithmeticExpressionValue>) nil_chk([list getListElementWithInt:1])) evaluateDouble];
  if (JavaLangDouble_isNaNWithDouble_(enX) || JavaLangDouble_isNaNWithDouble_(enY)) {
    ((GeogebraCommonKernelGeosGeoVec2D *) nil_chk(c))->x_ = JavaLangDouble_NaN;
    c->y_ = JavaLangDouble_NaN;
    return;
  }
  ((GeogebraCommonKernelGeosGeoVec2D *) nil_chk(c))->x_ = ((GeogebraCommonKernelGeosGeoVec2D *) nil_chk(a))->x_ + enX;
  c->y_ = a->y_ + enY;
}

void GeogebraCommonKernelGeosGeoVec2D_subWithGeogebraCommonKernelGeosGeoVec2D_withGeogebraCommonKernelArithmeticListValue_withGeogebraCommonKernelGeosGeoVec2D_withBoolean_(GeogebraCommonKernelGeosGeoVec2D *a, id<GeogebraCommonKernelArithmeticListValue> b, GeogebraCommonKernelGeosGeoVec2D *c, jboolean reverse) {
  GeogebraCommonKernelGeosGeoVec2D_initialize();
  GeogebraCommonKernelArithmeticMyList *list = [((id<GeogebraCommonKernelArithmeticListValue>) nil_chk(b)) getMyList];
  if ([((GeogebraCommonKernelArithmeticMyList *) nil_chk(list)) size] != 2) {
    ((GeogebraCommonKernelGeosGeoVec2D *) nil_chk(c))->x_ = JavaLangDouble_NaN;
    c->y_ = JavaLangDouble_NaN;
    return;
  }
  jdouble enX = [((id<GeogebraCommonKernelArithmeticExpressionValue>) nil_chk([list getListElementWithInt:0])) evaluateDouble];
  jdouble enY = [((id<GeogebraCommonKernelArithmeticExpressionValue>) nil_chk([list getListElementWithInt:1])) evaluateDouble];
  if (reverse) {
    ((GeogebraCommonKernelGeosGeoVec2D *) nil_chk(c))->x_ = ((GeogebraCommonKernelGeosGeoVec2D *) nil_chk(a))->x_ - enX;
    c->y_ = a->y_ - enY;
  }
  else {
    ((GeogebraCommonKernelGeosGeoVec2D *) nil_chk(c))->x_ = enX - ((GeogebraCommonKernelGeosGeoVec2D *) nil_chk(a))->x_;
    c->y_ = enY - a->y_;
  }
}

void GeogebraCommonKernelGeosGeoVec2D_subWithGeogebraCommonKernelArithmeticNumberValue_withGeogebraCommonKernelGeosGeoVec2D_withGeogebraCommonKernelGeosGeoVec2D_(id<GeogebraCommonKernelArithmeticNumberValue> b, GeogebraCommonKernelGeosGeoVec2D *a, GeogebraCommonKernelGeosGeoVec2D *c) {
  GeogebraCommonKernelGeosGeoVec2D_initialize();
  if (GeogebraCommonKernelGeosGeoVec2D_getMode(nil_chk(a)) == GeogebraCommonKernelKernel_COORD_COMPLEX) {
    ((GeogebraCommonKernelGeosGeoVec2D *) nil_chk(c))->x_ = [((id<GeogebraCommonKernelArithmeticNumberValue>) nil_chk(b)) getDouble] - a->x_;
    c->y_ = -a->y_;
    GeogebraCommonKernelGeosGeoVec2D_setModeWithInt_(c, GeogebraCommonKernelKernel_COORD_COMPLEX);
  }
  else {
    ((GeogebraCommonKernelGeosGeoVec2D *) nil_chk(c))->x_ = [((id<GeogebraCommonKernelArithmeticNumberValue>) nil_chk(b)) getDouble] - a->x_;
    c->y_ = [b getDouble] - a->y_;
  }
}

void GeogebraCommonKernelGeosGeoVec2D_subWithGeogebraCommonKernelGeosGeoVec2D_withGeogebraCommonKernelArithmeticNumberValue_withGeogebraCommonKernelGeosGeoVec2D_(GeogebraCommonKernelGeosGeoVec2D *a, id<GeogebraCommonKernelArithmeticNumberValue> b, GeogebraCommonKernelGeosGeoVec2D *c) {
  GeogebraCommonKernelGeosGeoVec2D_initialize();
  if (GeogebraCommonKernelGeosGeoVec2D_getMode(nil_chk(a)) == GeogebraCommonKernelKernel_COORD_COMPLEX) {
    ((GeogebraCommonKernelGeosGeoVec2D *) nil_chk(c))->x_ = a->x_ - [((id<GeogebraCommonKernelArithmeticNumberValue>) nil_chk(b)) getDouble];
    c->y_ = a->y_;
    GeogebraCommonKernelGeosGeoVec2D_setModeWithInt_(c, GeogebraCommonKernelKernel_COORD_COMPLEX);
  }
  else {
    ((GeogebraCommonKernelGeosGeoVec2D *) nil_chk(c))->x_ = a->x_ - [((id<GeogebraCommonKernelArithmeticNumberValue>) nil_chk(b)) getDouble];
    c->y_ = a->y_ - [b getDouble];
  }
}

void GeogebraCommonKernelGeosGeoVec2D_subWithGeogebraCommonKernelGeosGeoVec2D_withGeogebraCommonKernelGeosGeoVec2D_withGeogebraCommonKernelGeosGeoVec2D_(GeogebraCommonKernelGeosGeoVec2D *a, GeogebraCommonKernelGeosGeoVec2D *b, GeogebraCommonKernelGeosGeoVec2D *c) {
  GeogebraCommonKernelGeosGeoVec2D_initialize();
  ((GeogebraCommonKernelGeosGeoVec2D *) nil_chk(c))->x_ = ((GeogebraCommonKernelGeosGeoVec2D *) nil_chk(a))->x_ - ((GeogebraCommonKernelGeosGeoVec2D *) nil_chk(b))->x_;
  c->y_ = a->y_ - b->y_;
  if (GeogebraCommonKernelGeosGeoVec2D_getMode(a) == GeogebraCommonKernelKernel_COORD_COMPLEX || GeogebraCommonKernelGeosGeoVec2D_getMode(b) == GeogebraCommonKernelKernel_COORD_COMPLEX) GeogebraCommonKernelGeosGeoVec2D_setModeWithInt_(c, GeogebraCommonKernelKernel_COORD_COMPLEX);
}

void GeogebraCommonKernelGeosGeoVec2D_multWithGeogebraCommonKernelGeosGeoVec2D_withDouble_withGeogebraCommonKernelGeosGeoVec2D_(GeogebraCommonKernelGeosGeoVec2D *a, jdouble b, GeogebraCommonKernelGeosGeoVec2D *c) {
  GeogebraCommonKernelGeosGeoVec2D_initialize();
  ((GeogebraCommonKernelGeosGeoVec2D *) nil_chk(c))->x_ = ((GeogebraCommonKernelGeosGeoVec2D *) nil_chk(a))->x_ * b;
  c->y_ = a->y_ * b;
}

void GeogebraCommonKernelGeosGeoVec2D_complexDivideWithGeogebraCommonKernelGeosGeoVec2D_withGeogebraCommonKernelGeosGeoVec2D_withGeogebraCommonKernelGeosGeoVec2D_(GeogebraCommonKernelGeosGeoVec2D *a, GeogebraCommonKernelGeosGeoVec2D *b, GeogebraCommonKernelGeosGeoVec2D *c) {
  GeogebraCommonKernelGeosGeoVec2D_initialize();
  OrgApacheCommonsMathComplexComplex *out = [new_OrgApacheCommonsMathComplexComplex_initWithDouble_withDouble_(((GeogebraCommonKernelGeosGeoVec2D *) nil_chk(a))->x_, a->y_) autorelease];
  out = [out divideWithId:[new_OrgApacheCommonsMathComplexComplex_initWithDouble_withDouble_(((GeogebraCommonKernelGeosGeoVec2D *) nil_chk(b))->x_, b->y_) autorelease]];
  ((GeogebraCommonKernelGeosGeoVec2D *) nil_chk(c))->x_ = [((OrgApacheCommonsMathComplexComplex *) nil_chk(out)) getReal];
  c->y_ = [out getImaginary];
  GeogebraCommonKernelGeosGeoVec2D_setModeWithInt_(c, GeogebraCommonKernelKernel_COORD_COMPLEX);
}

void GeogebraCommonKernelGeosGeoVec2D_complexDivideWithGeogebraCommonKernelArithmeticNumberValue_withGeogebraCommonKernelGeosGeoVec2D_withGeogebraCommonKernelGeosGeoVec2D_(id<GeogebraCommonKernelArithmeticNumberValue> a, GeogebraCommonKernelGeosGeoVec2D *b, GeogebraCommonKernelGeosGeoVec2D *c) {
  GeogebraCommonKernelGeosGeoVec2D_initialize();
  OrgApacheCommonsMathComplexComplex *out = [new_OrgApacheCommonsMathComplexComplex_initWithDouble_withDouble_([((id<GeogebraCommonKernelArithmeticNumberValue>) nil_chk(a)) getDouble], 0) autorelease];
  out = [out divideWithId:[new_OrgApacheCommonsMathComplexComplex_initWithDouble_withDouble_(((GeogebraCommonKernelGeosGeoVec2D *) nil_chk(b))->x_, b->y_) autorelease]];
  ((GeogebraCommonKernelGeosGeoVec2D *) nil_chk(c))->x_ = [((OrgApacheCommonsMathComplexComplex *) nil_chk(out)) getReal];
  c->y_ = [out getImaginary];
  GeogebraCommonKernelGeosGeoVec2D_setModeWithInt_(c, GeogebraCommonKernelKernel_COORD_COMPLEX);
}

void GeogebraCommonKernelGeosGeoVec2D_complexMultiplyWithGeogebraCommonKernelGeosGeoVec2D_withGeogebraCommonKernelGeosGeoVec2D_withGeogebraCommonKernelGeosGeoVec2D_(GeogebraCommonKernelGeosGeoVec2D *a, GeogebraCommonKernelGeosGeoVec2D *b, GeogebraCommonKernelGeosGeoVec2D *c) {
  GeogebraCommonKernelGeosGeoVec2D_initialize();
  OrgApacheCommonsMathComplexComplex *out = [new_OrgApacheCommonsMathComplexComplex_initWithDouble_withDouble_(((GeogebraCommonKernelGeosGeoVec2D *) nil_chk(a))->x_, a->y_) autorelease];
  out = [out multiplyWithId:[new_OrgApacheCommonsMathComplexComplex_initWithDouble_withDouble_(((GeogebraCommonKernelGeosGeoVec2D *) nil_chk(b))->x_, b->y_) autorelease]];
  ((GeogebraCommonKernelGeosGeoVec2D *) nil_chk(c))->x_ = [((OrgApacheCommonsMathComplexComplex *) nil_chk(out)) getReal];
  c->y_ = [out getImaginary];
  GeogebraCommonKernelGeosGeoVec2D_setModeWithInt_(c, GeogebraCommonKernelKernel_COORD_COMPLEX);
}

void GeogebraCommonKernelGeosGeoVec2D_complexPowerWithGeogebraCommonKernelGeosGeoVec2D_withGeogebraCommonKernelArithmeticNumberValue_withGeogebraCommonKernelGeosGeoVec2D_(GeogebraCommonKernelGeosGeoVec2D *a, id<GeogebraCommonKernelArithmeticNumberValue> b, GeogebraCommonKernelGeosGeoVec2D *c) {
  GeogebraCommonKernelGeosGeoVec2D_initialize();
  OrgApacheCommonsMathComplexComplex *out = [new_OrgApacheCommonsMathComplexComplex_initWithDouble_withDouble_(((GeogebraCommonKernelGeosGeoVec2D *) nil_chk(a))->x_, a->y_) autorelease];
  out = [((OrgApacheCommonsMathComplexComplex *) nil_chk([((OrgApacheCommonsMathComplexComplex *) nil_chk([out log])) multiplyWithDouble:[((id<GeogebraCommonKernelArithmeticNumberValue>) nil_chk(b)) getDouble]])) exp];
  ((GeogebraCommonKernelGeosGeoVec2D *) nil_chk(c))->x_ = [((OrgApacheCommonsMathComplexComplex *) nil_chk(out)) getReal];
  c->y_ = [out getImaginary];
  GeogebraCommonKernelGeosGeoVec2D_setModeWithInt_(c, GeogebraCommonKernelKernel_COORD_COMPLEX);
}

void GeogebraCommonKernelGeosGeoVec2D_complexSqrtWithGeogebraCommonKernelGeosGeoVec2D_withGeogebraCommonKernelGeosGeoVec2D_(GeogebraCommonKernelGeosGeoVec2D *a, GeogebraCommonKernelGeosGeoVec2D *c) {
  GeogebraCommonKernelGeosGeoVec2D_initialize();
  OrgApacheCommonsMathComplexComplex *out = [new_OrgApacheCommonsMathComplexComplex_initWithDouble_withDouble_(((GeogebraCommonKernelGeosGeoVec2D *) nil_chk(a))->x_, a->y_) autorelease];
  out = [out sqrt];
  ((GeogebraCommonKernelGeosGeoVec2D *) nil_chk(c))->x_ = [((OrgApacheCommonsMathComplexComplex *) nil_chk(out)) getReal];
  c->y_ = [out getImaginary];
  GeogebraCommonKernelGeosGeoVec2D_setModeWithInt_(c, GeogebraCommonKernelKernel_COORD_COMPLEX);
}

void GeogebraCommonKernelGeosGeoVec2D_complexSinWithGeogebraCommonKernelGeosGeoVec2D_withGeogebraCommonKernelGeosGeoVec2D_(GeogebraCommonKernelGeosGeoVec2D *a, GeogebraCommonKernelGeosGeoVec2D *c) {
  GeogebraCommonKernelGeosGeoVec2D_initialize();
  OrgApacheCommonsMathComplexComplex *out = [new_OrgApacheCommonsMathComplexComplex_initWithDouble_withDouble_(((GeogebraCommonKernelGeosGeoVec2D *) nil_chk(a))->x_, a->y_) autorelease];
  out = [out sin];
  ((GeogebraCommonKernelGeosGeoVec2D *) nil_chk(c))->x_ = [((OrgApacheCommonsMathComplexComplex *) nil_chk(out)) getReal];
  c->y_ = [out getImaginary];
  GeogebraCommonKernelGeosGeoVec2D_setModeWithInt_(c, GeogebraCommonKernelKernel_COORD_COMPLEX);
}

void GeogebraCommonKernelGeosGeoVec2D_complexCosWithGeogebraCommonKernelGeosGeoVec2D_withGeogebraCommonKernelGeosGeoVec2D_(GeogebraCommonKernelGeosGeoVec2D *a, GeogebraCommonKernelGeosGeoVec2D *c) {
  GeogebraCommonKernelGeosGeoVec2D_initialize();
  OrgApacheCommonsMathComplexComplex *out = [new_OrgApacheCommonsMathComplexComplex_initWithDouble_withDouble_(((GeogebraCommonKernelGeosGeoVec2D *) nil_chk(a))->x_, a->y_) autorelease];
  out = [out cos];
  ((GeogebraCommonKernelGeosGeoVec2D *) nil_chk(c))->x_ = [((OrgApacheCommonsMathComplexComplex *) nil_chk(out)) getReal];
  c->y_ = [out getImaginary];
  GeogebraCommonKernelGeosGeoVec2D_setModeWithInt_(c, GeogebraCommonKernelKernel_COORD_COMPLEX);
}

void GeogebraCommonKernelGeosGeoVec2D_complexTanWithGeogebraCommonKernelGeosGeoVec2D_withGeogebraCommonKernelGeosGeoVec2D_(GeogebraCommonKernelGeosGeoVec2D *a, GeogebraCommonKernelGeosGeoVec2D *c) {
  GeogebraCommonKernelGeosGeoVec2D_initialize();
  OrgApacheCommonsMathComplexComplex *out = [new_OrgApacheCommonsMathComplexComplex_initWithDouble_withDouble_(((GeogebraCommonKernelGeosGeoVec2D *) nil_chk(a))->x_, a->y_) autorelease];
  out = [out tan];
  ((GeogebraCommonKernelGeosGeoVec2D *) nil_chk(c))->x_ = [((OrgApacheCommonsMathComplexComplex *) nil_chk(out)) getReal];
  c->y_ = [out getImaginary];
  GeogebraCommonKernelGeosGeoVec2D_setModeWithInt_(c, GeogebraCommonKernelKernel_COORD_COMPLEX);
}

void GeogebraCommonKernelGeosGeoVec2D_complexSinhWithGeogebraCommonKernelGeosGeoVec2D_withGeogebraCommonKernelGeosGeoVec2D_(GeogebraCommonKernelGeosGeoVec2D *a, GeogebraCommonKernelGeosGeoVec2D *c) {
  GeogebraCommonKernelGeosGeoVec2D_initialize();
  OrgApacheCommonsMathComplexComplex *out = [new_OrgApacheCommonsMathComplexComplex_initWithDouble_withDouble_(((GeogebraCommonKernelGeosGeoVec2D *) nil_chk(a))->x_, a->y_) autorelease];
  out = [out sinh];
  ((GeogebraCommonKernelGeosGeoVec2D *) nil_chk(c))->x_ = [((OrgApacheCommonsMathComplexComplex *) nil_chk(out)) getReal];
  c->y_ = [out getImaginary];
  GeogebraCommonKernelGeosGeoVec2D_setModeWithInt_(c, GeogebraCommonKernelKernel_COORD_COMPLEX);
}

void GeogebraCommonKernelGeosGeoVec2D_complexCoshWithGeogebraCommonKernelGeosGeoVec2D_withGeogebraCommonKernelGeosGeoVec2D_(GeogebraCommonKernelGeosGeoVec2D *a, GeogebraCommonKernelGeosGeoVec2D *c) {
  GeogebraCommonKernelGeosGeoVec2D_initialize();
  OrgApacheCommonsMathComplexComplex *out = [new_OrgApacheCommonsMathComplexComplex_initWithDouble_withDouble_(((GeogebraCommonKernelGeosGeoVec2D *) nil_chk(a))->x_, a->y_) autorelease];
  out = [out cosh];
  ((GeogebraCommonKernelGeosGeoVec2D *) nil_chk(c))->x_ = [((OrgApacheCommonsMathComplexComplex *) nil_chk(out)) getReal];
  c->y_ = [out getImaginary];
  GeogebraCommonKernelGeosGeoVec2D_setModeWithInt_(c, GeogebraCommonKernelKernel_COORD_COMPLEX);
}

void GeogebraCommonKernelGeosGeoVec2D_complexTanhWithGeogebraCommonKernelGeosGeoVec2D_withGeogebraCommonKernelGeosGeoVec2D_(GeogebraCommonKernelGeosGeoVec2D *a, GeogebraCommonKernelGeosGeoVec2D *c) {
  GeogebraCommonKernelGeosGeoVec2D_initialize();
  OrgApacheCommonsMathComplexComplex *out = [new_OrgApacheCommonsMathComplexComplex_initWithDouble_withDouble_(((GeogebraCommonKernelGeosGeoVec2D *) nil_chk(a))->x_, a->y_) autorelease];
  out = [out tanh];
  ((GeogebraCommonKernelGeosGeoVec2D *) nil_chk(c))->x_ = [((OrgApacheCommonsMathComplexComplex *) nil_chk(out)) getReal];
  c->y_ = [out getImaginary];
  GeogebraCommonKernelGeosGeoVec2D_setModeWithInt_(c, GeogebraCommonKernelKernel_COORD_COMPLEX);
}

void GeogebraCommonKernelGeosGeoVec2D_complexSecWithGeogebraCommonKernelGeosGeoVec2D_withGeogebraCommonKernelGeosGeoVec2D_(GeogebraCommonKernelGeosGeoVec2D *a, GeogebraCommonKernelGeosGeoVec2D *c) {
  GeogebraCommonKernelGeosGeoVec2D_initialize();
  OrgApacheCommonsMathComplexComplex *out = [new_OrgApacheCommonsMathComplexComplex_initWithDouble_withDouble_(((GeogebraCommonKernelGeosGeoVec2D *) nil_chk(a))->x_, a->y_) autorelease];
  out = [((OrgApacheCommonsMathComplexComplex *) nil_chk(OrgApacheCommonsMathComplexComplex_get_ONE_())) divideWithId:[out cos]];
  ((GeogebraCommonKernelGeosGeoVec2D *) nil_chk(c))->x_ = [((OrgApacheCommonsMathComplexComplex *) nil_chk(out)) getReal];
  c->y_ = [out getImaginary];
  GeogebraCommonKernelGeosGeoVec2D_setModeWithInt_(c, GeogebraCommonKernelKernel_COORD_COMPLEX);
}

void GeogebraCommonKernelGeosGeoVec2D_complexCscWithGeogebraCommonKernelGeosGeoVec2D_withGeogebraCommonKernelGeosGeoVec2D_(GeogebraCommonKernelGeosGeoVec2D *a, GeogebraCommonKernelGeosGeoVec2D *c) {
  GeogebraCommonKernelGeosGeoVec2D_initialize();
  OrgApacheCommonsMathComplexComplex *out = [new_OrgApacheCommonsMathComplexComplex_initWithDouble_withDouble_(((GeogebraCommonKernelGeosGeoVec2D *) nil_chk(a))->x_, a->y_) autorelease];
  out = [((OrgApacheCommonsMathComplexComplex *) nil_chk(OrgApacheCommonsMathComplexComplex_get_ONE_())) divideWithId:[out sin]];
  ((GeogebraCommonKernelGeosGeoVec2D *) nil_chk(c))->x_ = [((OrgApacheCommonsMathComplexComplex *) nil_chk(out)) getReal];
  c->y_ = [out getImaginary];
  GeogebraCommonKernelGeosGeoVec2D_setModeWithInt_(c, GeogebraCommonKernelKernel_COORD_COMPLEX);
}

void GeogebraCommonKernelGeosGeoVec2D_complexCotWithGeogebraCommonKernelGeosGeoVec2D_withGeogebraCommonKernelGeosGeoVec2D_(GeogebraCommonKernelGeosGeoVec2D *a, GeogebraCommonKernelGeosGeoVec2D *c) {
  GeogebraCommonKernelGeosGeoVec2D_initialize();
  OrgApacheCommonsMathComplexComplex *out = [new_OrgApacheCommonsMathComplexComplex_initWithDouble_withDouble_(((GeogebraCommonKernelGeosGeoVec2D *) nil_chk(a))->x_, a->y_) autorelease];
  out = [((OrgApacheCommonsMathComplexComplex *) nil_chk(OrgApacheCommonsMathComplexComplex_get_ONE_())) divideWithId:[out tan]];
  ((GeogebraCommonKernelGeosGeoVec2D *) nil_chk(c))->x_ = [((OrgApacheCommonsMathComplexComplex *) nil_chk(out)) getReal];
  c->y_ = [out getImaginary];
  GeogebraCommonKernelGeosGeoVec2D_setModeWithInt_(c, GeogebraCommonKernelKernel_COORD_COMPLEX);
}

void GeogebraCommonKernelGeosGeoVec2D_complexSechWithGeogebraCommonKernelGeosGeoVec2D_withGeogebraCommonKernelGeosGeoVec2D_(GeogebraCommonKernelGeosGeoVec2D *a, GeogebraCommonKernelGeosGeoVec2D *c) {
  GeogebraCommonKernelGeosGeoVec2D_initialize();
  OrgApacheCommonsMathComplexComplex *out = [new_OrgApacheCommonsMathComplexComplex_initWithDouble_withDouble_(((GeogebraCommonKernelGeosGeoVec2D *) nil_chk(a))->x_, a->y_) autorelease];
  out = [((OrgApacheCommonsMathComplexComplex *) nil_chk(OrgApacheCommonsMathComplexComplex_get_ONE_())) divideWithId:[out cosh]];
  ((GeogebraCommonKernelGeosGeoVec2D *) nil_chk(c))->x_ = [((OrgApacheCommonsMathComplexComplex *) nil_chk(out)) getReal];
  c->y_ = [out getImaginary];
  GeogebraCommonKernelGeosGeoVec2D_setModeWithInt_(c, GeogebraCommonKernelKernel_COORD_COMPLEX);
}

void GeogebraCommonKernelGeosGeoVec2D_complexCschWithGeogebraCommonKernelGeosGeoVec2D_withGeogebraCommonKernelGeosGeoVec2D_(GeogebraCommonKernelGeosGeoVec2D *a, GeogebraCommonKernelGeosGeoVec2D *c) {
  GeogebraCommonKernelGeosGeoVec2D_initialize();
  OrgApacheCommonsMathComplexComplex *out = [new_OrgApacheCommonsMathComplexComplex_initWithDouble_withDouble_(((GeogebraCommonKernelGeosGeoVec2D *) nil_chk(a))->x_, a->y_) autorelease];
  out = [((OrgApacheCommonsMathComplexComplex *) nil_chk(OrgApacheCommonsMathComplexComplex_get_ONE_())) divideWithId:[out sinh]];
  ((GeogebraCommonKernelGeosGeoVec2D *) nil_chk(c))->x_ = [((OrgApacheCommonsMathComplexComplex *) nil_chk(out)) getReal];
  c->y_ = [out getImaginary];
  GeogebraCommonKernelGeosGeoVec2D_setModeWithInt_(c, GeogebraCommonKernelKernel_COORD_COMPLEX);
}

void GeogebraCommonKernelGeosGeoVec2D_complexCothWithGeogebraCommonKernelGeosGeoVec2D_withGeogebraCommonKernelGeosGeoVec2D_(GeogebraCommonKernelGeosGeoVec2D *a, GeogebraCommonKernelGeosGeoVec2D *c) {
  GeogebraCommonKernelGeosGeoVec2D_initialize();
  OrgApacheCommonsMathComplexComplex *out = [new_OrgApacheCommonsMathComplexComplex_initWithDouble_withDouble_(((GeogebraCommonKernelGeosGeoVec2D *) nil_chk(a))->x_, a->y_) autorelease];
  out = [((OrgApacheCommonsMathComplexComplex *) nil_chk(OrgApacheCommonsMathComplexComplex_get_ONE_())) divideWithId:[out tanh]];
  ((GeogebraCommonKernelGeosGeoVec2D *) nil_chk(c))->x_ = [((OrgApacheCommonsMathComplexComplex *) nil_chk(out)) getReal];
  c->y_ = [out getImaginary];
  GeogebraCommonKernelGeosGeoVec2D_setModeWithInt_(c, GeogebraCommonKernelKernel_COORD_COMPLEX);
}

void GeogebraCommonKernelGeosGeoVec2D_complexZetaWithGeogebraCommonKernelGeosGeoVec2D_withGeogebraCommonKernelGeosGeoVec2D_(GeogebraCommonKernelGeosGeoVec2D *a, GeogebraCommonKernelGeosGeoVec2D *c) {
  GeogebraCommonKernelGeosGeoVec2D_initialize();
  IOSDoubleArray *s = [IOSDoubleArray arrayWithDoubles:(jdouble[]){ ((GeogebraCommonKernelGeosGeoVec2D *) nil_chk(a))->x_, a->y_ } count:2];
  s = GeogebraCommonUtilRiemann_zetaWithDoubleArray_(s);
  ((GeogebraCommonKernelGeosGeoVec2D *) nil_chk(c))->x_ = IOSDoubleArray_Get(nil_chk(s), 0);
  c->y_ = IOSDoubleArray_Get(s, 1);
  GeogebraCommonKernelGeosGeoVec2D_setModeWithInt_(c, GeogebraCommonKernelKernel_COORD_COMPLEX);
}

void GeogebraCommonKernelGeosGeoVec2D_complexCbrtWithGeogebraCommonKernelGeosGeoVec2D_withGeogebraCommonKernelGeosGeoVec2D_(GeogebraCommonKernelGeosGeoVec2D *a, GeogebraCommonKernelGeosGeoVec2D *c) {
  GeogebraCommonKernelGeosGeoVec2D_initialize();
  OrgApacheCommonsMathComplexComplex *out = [new_OrgApacheCommonsMathComplexComplex_initWithDouble_withDouble_(((GeogebraCommonKernelGeosGeoVec2D *) nil_chk(a))->x_, a->y_) autorelease];
  out = [out powWithOrgApacheCommonsMathComplexComplex:[new_OrgApacheCommonsMathComplexComplex_initWithDouble_withDouble_(1 / 3.0, 0) autorelease]];
  ((GeogebraCommonKernelGeosGeoVec2D *) nil_chk(c))->x_ = [((OrgApacheCommonsMathComplexComplex *) nil_chk(out)) getReal];
  c->y_ = [out getImaginary];
  GeogebraCommonKernelGeosGeoVec2D_setModeWithInt_(c, GeogebraCommonKernelKernel_COORD_COMPLEX);
}

void GeogebraCommonKernelGeosGeoVec2D_complexConjugateWithGeogebraCommonKernelGeosGeoVec2D_withGeogebraCommonKernelGeosGeoVec2D_(GeogebraCommonKernelGeosGeoVec2D *a, GeogebraCommonKernelGeosGeoVec2D *c) {
  GeogebraCommonKernelGeosGeoVec2D_initialize();
  OrgApacheCommonsMathComplexComplex *out = [new_OrgApacheCommonsMathComplexComplex_initWithDouble_withDouble_(((GeogebraCommonKernelGeosGeoVec2D *) nil_chk(a))->x_, a->y_) autorelease];
  out = [out conjugate];
  ((GeogebraCommonKernelGeosGeoVec2D *) nil_chk(c))->x_ = [((OrgApacheCommonsMathComplexComplex *) nil_chk(out)) getReal];
  c->y_ = [out getImaginary];
  GeogebraCommonKernelGeosGeoVec2D_setModeWithInt_(c, GeogebraCommonKernelKernel_COORD_COMPLEX);
}

jdouble GeogebraCommonKernelGeosGeoVec2D_argWithGeogebraCommonKernelGeosGeoVec2D_(GeogebraCommonKernelGeosGeoVec2D *a) {
  GeogebraCommonKernelGeosGeoVec2D_initialize();
  return JavaLangMath_atan2WithDouble_withDouble_(((GeogebraCommonKernelGeosGeoVec2D *) nil_chk(a))->y_, a->x_);
}

void GeogebraCommonKernelGeosGeoVec2D_complexPowerWithGeogebraCommonKernelArithmeticNumberValue_withGeogebraCommonKernelGeosGeoVec2D_withGeogebraCommonKernelGeosGeoVec2D_(id<GeogebraCommonKernelArithmeticNumberValue> a, GeogebraCommonKernelGeosGeoVec2D *b, GeogebraCommonKernelGeosGeoVec2D *c) {
  GeogebraCommonKernelGeosGeoVec2D_initialize();
  OrgApacheCommonsMathComplexComplex *out = [new_OrgApacheCommonsMathComplexComplex_initWithDouble_withDouble_([((id<GeogebraCommonKernelArithmeticNumberValue>) nil_chk(a)) getDouble], 0) autorelease];
  out = [out powWithOrgApacheCommonsMathComplexComplex:[new_OrgApacheCommonsMathComplexComplex_initWithDouble_withDouble_(((GeogebraCommonKernelGeosGeoVec2D *) nil_chk(b))->x_, b->y_) autorelease]];
  ((GeogebraCommonKernelGeosGeoVec2D *) nil_chk(c))->x_ = [((OrgApacheCommonsMathComplexComplex *) nil_chk(out)) getReal];
  c->y_ = [out getImaginary];
  GeogebraCommonKernelGeosGeoVec2D_setModeWithInt_(c, GeogebraCommonKernelKernel_COORD_COMPLEX);
}

void GeogebraCommonKernelGeosGeoVec2D_complexExpWithGeogebraCommonKernelGeosGeoVec2D_withGeogebraCommonKernelGeosGeoVec2D_(GeogebraCommonKernelGeosGeoVec2D *a, GeogebraCommonKernelGeosGeoVec2D *c) {
  GeogebraCommonKernelGeosGeoVec2D_initialize();
  OrgApacheCommonsMathComplexComplex *out = [new_OrgApacheCommonsMathComplexComplex_initWithDouble_withDouble_(((GeogebraCommonKernelGeosGeoVec2D *) nil_chk(a))->x_, a->y_) autorelease];
  out = [out exp];
  ((GeogebraCommonKernelGeosGeoVec2D *) nil_chk(c))->x_ = [((OrgApacheCommonsMathComplexComplex *) nil_chk(out)) getReal];
  c->y_ = [out getImaginary];
  GeogebraCommonKernelGeosGeoVec2D_setModeWithInt_(c, GeogebraCommonKernelKernel_COORD_COMPLEX);
}

void GeogebraCommonKernelGeosGeoVec2D_complexLogWithGeogebraCommonKernelGeosGeoVec2D_withGeogebraCommonKernelGeosGeoVec2D_(GeogebraCommonKernelGeosGeoVec2D *a, GeogebraCommonKernelGeosGeoVec2D *c) {
  GeogebraCommonKernelGeosGeoVec2D_initialize();
  OrgApacheCommonsMathComplexComplex *out = [new_OrgApacheCommonsMathComplexComplex_initWithDouble_withDouble_(((GeogebraCommonKernelGeosGeoVec2D *) nil_chk(a))->x_, a->y_) autorelease];
  out = [out log];
  ((GeogebraCommonKernelGeosGeoVec2D *) nil_chk(c))->x_ = [((OrgApacheCommonsMathComplexComplex *) nil_chk(out)) getReal];
  c->y_ = [out getImaginary];
  GeogebraCommonKernelGeosGeoVec2D_setModeWithInt_(c, GeogebraCommonKernelKernel_COORD_COMPLEX);
}

jdouble GeogebraCommonKernelGeosGeoVec2D_complexAbsWithGeogebraCommonKernelGeosGeoVec2D_(GeogebraCommonKernelGeosGeoVec2D *a) {
  GeogebraCommonKernelGeosGeoVec2D_initialize();
  OrgApacheCommonsMathComplexComplex *out = [new_OrgApacheCommonsMathComplexComplex_initWithDouble_withDouble_(((GeogebraCommonKernelGeosGeoVec2D *) nil_chk(a))->x_, a->y_) autorelease];
  return [out abs];
}

void GeogebraCommonKernelGeosGeoVec2D_complexPowerWithGeogebraCommonKernelGeosGeoVec2D_withGeogebraCommonKernelGeosGeoVec2D_withGeogebraCommonKernelGeosGeoVec2D_(GeogebraCommonKernelGeosGeoVec2D *a, GeogebraCommonKernelGeosGeoVec2D *b, GeogebraCommonKernelGeosGeoVec2D *c) {
  GeogebraCommonKernelGeosGeoVec2D_initialize();
  OrgApacheCommonsMathComplexComplex *out = [new_OrgApacheCommonsMathComplexComplex_initWithDouble_withDouble_(((GeogebraCommonKernelGeosGeoVec2D *) nil_chk(a))->x_, a->y_) autorelease];
  out = [out powWithOrgApacheCommonsMathComplexComplex:[new_OrgApacheCommonsMathComplexComplex_initWithDouble_withDouble_(((GeogebraCommonKernelGeosGeoVec2D *) nil_chk(b))->x_, b->y_) autorelease]];
  ((GeogebraCommonKernelGeosGeoVec2D *) nil_chk(c))->x_ = [((OrgApacheCommonsMathComplexComplex *) nil_chk(out)) getReal];
  c->y_ = [out getImaginary];
  GeogebraCommonKernelGeosGeoVec2D_setModeWithInt_(c, GeogebraCommonKernelKernel_COORD_COMPLEX);
}

void GeogebraCommonKernelGeosGeoVec2D_complexMultiplyWithGeogebraCommonKernelGeosGeoVec2D_withGeogebraCommonKernelArithmeticNumberValue_withGeogebraCommonKernelGeosGeoVec2D_(GeogebraCommonKernelGeosGeoVec2D *a, id<GeogebraCommonKernelArithmeticNumberValue> b, GeogebraCommonKernelGeosGeoVec2D *c) {
  GeogebraCommonKernelGeosGeoVec2D_initialize();
  OrgApacheCommonsMathComplexComplex *out = [new_OrgApacheCommonsMathComplexComplex_initWithDouble_withDouble_(((GeogebraCommonKernelGeosGeoVec2D *) nil_chk(a))->x_, a->y_) autorelease];
  out = [out multiplyWithId:[new_OrgApacheCommonsMathComplexComplex_initWithDouble_withDouble_([((id<GeogebraCommonKernelArithmeticNumberValue>) nil_chk(b)) getDouble], 0) autorelease]];
  ((GeogebraCommonKernelGeosGeoVec2D *) nil_chk(c))->x_ = [((OrgApacheCommonsMathComplexComplex *) nil_chk(out)) getReal];
  c->y_ = [out getImaginary];
  GeogebraCommonKernelGeosGeoVec2D_setModeWithInt_(c, GeogebraCommonKernelKernel_COORD_COMPLEX);
}

void GeogebraCommonKernelGeosGeoVec2D_vectorProductWithGeogebraCommonKernelKernelNDGeoVecInterface_withGeogebraCommonKernelKernelNDGeoVecInterface_withGeogebraCommonKernelArithmeticMyDouble_(id<GeogebraCommonKernelKernelNDGeoVecInterface> a, id<GeogebraCommonKernelKernelNDGeoVecInterface> b, GeogebraCommonKernelArithmeticMyDouble *c) {
  GeogebraCommonKernelGeosGeoVec2D_initialize();
  [((GeogebraCommonKernelArithmeticMyDouble *) nil_chk(c)) setWithDouble:[((id<GeogebraCommonKernelKernelNDGeoVecInterface>) nil_chk(a)) getX] * [((id<GeogebraCommonKernelKernelNDGeoVecInterface>) nil_chk(b)) getY] - [a getY] * [b getX]];
}

void GeogebraCommonKernelGeosGeoVec2D_innerWithGeogebraCommonKernelGeosGeoVec2D_withGeogebraCommonKernelGeosGeoVec2D_withGeogebraCommonKernelArithmeticMyDouble_(GeogebraCommonKernelGeosGeoVec2D *a, GeogebraCommonKernelGeosGeoVec2D *b, GeogebraCommonKernelArithmeticMyDouble *c) {
  GeogebraCommonKernelGeosGeoVec2D_initialize();
  [((GeogebraCommonKernelArithmeticMyDouble *) nil_chk(c)) setWithDouble:((GeogebraCommonKernelGeosGeoVec2D *) nil_chk(a))->x_ * ((GeogebraCommonKernelGeosGeoVec2D *) nil_chk(b))->x_ + a->y_ * b->y_];
}

void GeogebraCommonKernelGeosGeoVec2D_divWithGeogebraCommonKernelGeosGeoVec2D_withDouble_withGeogebraCommonKernelGeosGeoVec2D_(GeogebraCommonKernelGeosGeoVec2D *a, jdouble b, GeogebraCommonKernelGeosGeoVec2D *c) {
  GeogebraCommonKernelGeosGeoVec2D_initialize();
  ((GeogebraCommonKernelGeosGeoVec2D *) nil_chk(c))->x_ = ((GeogebraCommonKernelGeosGeoVec2D *) nil_chk(a))->x_ / b;
  c->y_ = a->y_ / b;
}

NSString *GeogebraCommonKernelGeosGeoVec2D_toStringWithGeogebraCommonKernelStringTemplate_(GeogebraCommonKernelGeosGeoVec2D *self, GeogebraCommonKernelStringTemplate *tpl) {
  if ([self isImaginaryUnit]) {
    switch ([[((GeogebraCommonKernelStringTemplate *) nil_chk(tpl)) getStringType] ordinal]) {
      case GeogebraCommonKernelArithmeticExpressionNodeConstants_StringType_GIAC:
      return @"i";
      default:
      return GeogebraCommonUtilUnicode_get_IMAGINARY_();
    }
  }
  else if (self->mode_ == GeogebraCommonKernelKernel_COORD_COMPLEX) {
    [((JavaLangStringBuilder *) nil_chk(self->sbToString_)) setLengthWithInt:0];
    [self->sbToString_ appendWithNSString:[((GeogebraCommonKernelStringTemplate *) nil_chk(tpl)) leftBracket]];
    [self->sbToString_ appendWithNSString:[((GeogebraCommonKernelKernel *) nil_chk(self->kernel_)) formatWithDouble:self->x_ withGeogebraCommonKernelStringTemplate:tpl]];
    [self->sbToString_ appendWithNSString:@" "];
    [self->kernel_ formatSignedCoefficientWithDouble:self->y_ withJavaLangStringBuilder:self->sbToString_ withGeogebraCommonKernelStringTemplate:tpl];
    [self->sbToString_ appendWithNSString:GeogebraCommonUtilUnicode_get_IMAGINARY_()];
    [self->sbToString_ appendWithNSString:[tpl rightBracket]];
    return [self->sbToString_ description];
  }
  [((JavaLangStringBuilder *) nil_chk(self->sbToString_)) setLengthWithInt:0];
  if ([((GeogebraCommonKernelArithmeticExpressionNodeConstants_StringTypeEnum *) nil_chk([((GeogebraCommonKernelStringTemplate *) nil_chk(tpl)) getStringType])) isEqual:GeogebraCommonKernelArithmeticExpressionNodeConstants_StringTypeEnum_get_GIAC()]) {
    [self->sbToString_ appendWithNSString:@"point"];
  }
  [self->sbToString_ appendWithChar:'('];
  [self->sbToString_ appendWithNSString:[((GeogebraCommonKernelKernel *) nil_chk(self->kernel_)) formatWithDouble:self->x_ withGeogebraCommonKernelStringTemplate:tpl]];
  [self->sbToString_ appendWithNSString:@", "];
  [self->sbToString_ appendWithNSString:[self->kernel_ formatWithDouble:self->y_ withGeogebraCommonKernelStringTemplate:tpl]];
  [self->sbToString_ appendWithChar:')'];
  return [self->sbToString_ description];
}

GeogebraCommonKernelGeosGeoVec2D *GeogebraCommonKernelGeosGeoVec2D_getVector(GeogebraCommonKernelGeosGeoVec2D *self) {
  return [new_GeogebraCommonKernelGeosGeoVec2D_initWithGeogebraCommonKernelGeosGeoVec2D_(self) autorelease];
}

jint GeogebraCommonKernelGeosGeoVec2D_getMode(GeogebraCommonKernelGeosGeoVec2D *self) {
  return self->mode_;
}

void GeogebraCommonKernelGeosGeoVec2D_setModeWithInt_(GeogebraCommonKernelGeosGeoVec2D *self, jint mode) {
  self->mode_ = mode;
}

NSString *GeogebraCommonKernelGeosGeoVec2D_toValueStringWithGeogebraCommonKernelStringTemplate_(GeogebraCommonKernelGeosGeoVec2D *self, GeogebraCommonKernelStringTemplate *tpl) {
  return GeogebraCommonKernelGeosGeoVec2D_toStringWithGeogebraCommonKernelStringTemplate_(self, tpl);
}

void GeogebraCommonKernelGeosGeoVec2D_multiplyMatrixWithGeogebraCommonKernelArithmeticMyList_withGeogebraCommonKernelKernelNDGeoVecInterface_withGeogebraCommonKernelGeosGeoVec2D_(GeogebraCommonKernelArithmeticMyList *list, id<GeogebraCommonKernelKernelNDGeoVecInterface> v, GeogebraCommonKernelGeosGeoVec2D *ret) {
  GeogebraCommonKernelGeosGeoVec2D_initialize();
  jdouble a, b, c, d;
  a = [((id<GeogebraCommonKernelArithmeticExpressionValue>) nil_chk(GeogebraCommonKernelArithmeticMyList_getCellWithGeogebraCommonKernelArithmeticMyList_withInt_withInt_(list, 0, 0))) evaluateDouble];
  b = [((id<GeogebraCommonKernelArithmeticExpressionValue>) nil_chk(GeogebraCommonKernelArithmeticMyList_getCellWithGeogebraCommonKernelArithmeticMyList_withInt_withInt_(list, 1, 0))) evaluateDouble];
  c = [((id<GeogebraCommonKernelArithmeticExpressionValue>) nil_chk(GeogebraCommonKernelArithmeticMyList_getCellWithGeogebraCommonKernelArithmeticMyList_withInt_withInt_(list, 0, 1))) evaluateDouble];
  d = [((id<GeogebraCommonKernelArithmeticExpressionValue>) nil_chk(GeogebraCommonKernelArithmeticMyList_getCellWithGeogebraCommonKernelArithmeticMyList_withInt_withInt_(list, 1, 1))) evaluateDouble];
  JavaLangDouble *x1 = JavaLangDouble_valueOfWithDouble_(a * [((id<GeogebraCommonKernelKernelNDGeoVecInterface>) nil_chk(v)) getX] + b * [v getY]);
  JavaLangDouble *y1 = JavaLangDouble_valueOfWithDouble_(c * [v getX] + d * [v getY]);
  ((GeogebraCommonKernelGeosGeoVec2D *) nil_chk(ret))->x_ = [x1 doubleValue];
  ret->y_ = [y1 doubleValue];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelGeosGeoVec2D)
