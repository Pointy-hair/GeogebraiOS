//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/geogebra3D/kernel3D/commands/CmdTangent3D.java
//


#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "geogebra/common/geogebra3D/kernel3D/commands/CmdTangent3D.h"
#include "geogebra/common/kernel/Kernel.h"
#include "geogebra/common/kernel/Manager3DInterface.h"
#include "geogebra/common/kernel/commands/CmdTangent.h"
#include "geogebra/common/kernel/geos/GeoElement.h"
#include "geogebra/common/kernel/kernelND/GeoConicND.h"
#include "geogebra/common/kernel/kernelND/GeoCurveCartesianND.h"
#include "geogebra/common/kernel/kernelND/GeoLineND.h"
#include "geogebra/common/kernel/kernelND/GeoPointND.h"

@implementation GeogebraCommonGeogebra3DKernel3DCommandsCmdTangent3D

- (instancetype)initWithGeogebraCommonKernelKernel:(GeogebraCommonKernelKernel *)kernel {
  GeogebraCommonGeogebra3DKernel3DCommandsCmdTangent3D_initWithGeogebraCommonKernelKernel_(self, kernel);
  return self;
}

- (IOSObjectArray *)tangentWithNSStringArray:(IOSObjectArray *)labels
  withGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)a
  withGeogebraCommonKernelKernelNDGeoConicND:(GeogebraCommonKernelKernelNDGeoConicND *)c {
  return [((id<GeogebraCommonKernelManager3DInterface>) nil_chk([((GeogebraCommonKernelKernel *) nil_chk(kernelA_)) getManager3D])) Tangent3DWithNSStringArray:labels withGeogebraCommonKernelKernelNDGeoPointND:a withGeogebraCommonKernelKernelNDGeoConicND:c];
}

- (IOSObjectArray *)tangentWithNSStringArray:(IOSObjectArray *)labels
   withGeogebraCommonKernelKernelNDGeoLineND:(id<GeogebraCommonKernelKernelNDGeoLineND>)l
  withGeogebraCommonKernelKernelNDGeoConicND:(GeogebraCommonKernelKernelNDGeoConicND *)c {
  return [((id<GeogebraCommonKernelManager3DInterface>) nil_chk([((GeogebraCommonKernelKernel *) nil_chk(kernelA_)) getManager3D])) Tangent3DWithNSStringArray:labels withGeogebraCommonKernelKernelNDGeoLineND:l withGeogebraCommonKernelKernelNDGeoConicND:c];
}

- (IOSObjectArray *)tangentWithNSStringArray:(IOSObjectArray *)labels
  withGeogebraCommonKernelKernelNDGeoConicND:(GeogebraCommonKernelKernelNDGeoConicND *)c1
  withGeogebraCommonKernelKernelNDGeoConicND:(GeogebraCommonKernelKernelNDGeoConicND *)c2 {
  return [((id<GeogebraCommonKernelManager3DInterface>) nil_chk([((GeogebraCommonKernelKernel *) nil_chk(kernelA_)) getManager3D])) CommonTangents3DWithNSStringArray:labels withGeogebraCommonKernelKernelNDGeoConicND:c1 withGeogebraCommonKernelKernelNDGeoConicND:c2];
}

- (GeogebraCommonKernelGeosGeoElement *)tangentToCurveWithNSString:(NSString *)label
                        withGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)point
               withGeogebraCommonKernelKernelNDGeoCurveCartesianND:(GeogebraCommonKernelKernelNDGeoCurveCartesianND *)curve {
  return [((id<GeogebraCommonKernelManager3DInterface>) nil_chk([((GeogebraCommonKernelKernel *) nil_chk(kernelA_)) getManager3D])) Tangent3DWithNSString:label withGeogebraCommonKernelKernelNDGeoPointND:point withGeogebraCommonKernelKernelNDGeoCurveCartesianND:curve];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonKernelKernel:", "CmdTangent3D", NULL, 0x1, NULL, NULL },
    { "tangentWithNSStringArray:withGeogebraCommonKernelKernelNDGeoPointND:withGeogebraCommonKernelKernelNDGeoConicND:", "tangent", "[Lgeogebra.common.kernel.geos.GeoElement;", 0x4, NULL, NULL },
    { "tangentWithNSStringArray:withGeogebraCommonKernelKernelNDGeoLineND:withGeogebraCommonKernelKernelNDGeoConicND:", "tangent", "[Lgeogebra.common.kernel.geos.GeoElement;", 0x4, NULL, NULL },
    { "tangentWithNSStringArray:withGeogebraCommonKernelKernelNDGeoConicND:withGeogebraCommonKernelKernelNDGeoConicND:", "tangent", "[Lgeogebra.common.kernel.geos.GeoElement;", 0x4, NULL, NULL },
    { "tangentToCurveWithNSString:withGeogebraCommonKernelKernelNDGeoPointND:withGeogebraCommonKernelKernelNDGeoCurveCartesianND:", "tangentToCurve", "Lgeogebra.common.kernel.geos.GeoElement;", 0x4, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonGeogebra3DKernel3DCommandsCmdTangent3D = { 2, "CmdTangent3D", "geogebra.common.geogebra3D.kernel3D.commands", NULL, 0x1, 5, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonGeogebra3DKernel3DCommandsCmdTangent3D;
}

@end

void GeogebraCommonGeogebra3DKernel3DCommandsCmdTangent3D_initWithGeogebraCommonKernelKernel_(GeogebraCommonGeogebra3DKernel3DCommandsCmdTangent3D *self, GeogebraCommonKernelKernel *kernel) {
  GeogebraCommonKernelCommandsCmdTangent_initWithGeogebraCommonKernelKernel_(self, kernel);
}

GeogebraCommonGeogebra3DKernel3DCommandsCmdTangent3D *new_GeogebraCommonGeogebra3DKernel3DCommandsCmdTangent3D_initWithGeogebraCommonKernelKernel_(GeogebraCommonKernelKernel *kernel) {
  GeogebraCommonGeogebra3DKernel3DCommandsCmdTangent3D *self = [GeogebraCommonGeogebra3DKernel3DCommandsCmdTangent3D alloc];
  GeogebraCommonGeogebra3DKernel3DCommandsCmdTangent3D_initWithGeogebraCommonKernelKernel_(self, kernel);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonGeogebra3DKernel3DCommandsCmdTangent3D)
