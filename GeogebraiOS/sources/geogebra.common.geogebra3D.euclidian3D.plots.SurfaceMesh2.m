//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/geogebra3D/euclidian3D/plots/SurfaceMesh2.java
//


#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "geogebra/common/geogebra3D/euclidian3D/plots/DynamicMesh2.h"
#include "geogebra/common/geogebra3D/euclidian3D/plots/DynamicMeshElement2.h"
#include "geogebra/common/geogebra3D/euclidian3D/plots/DynamicMeshTriList2.h"
#include "geogebra/common/geogebra3D/euclidian3D/plots/FastBucketPQ.h"
#include "geogebra/common/geogebra3D/euclidian3D/plots/Octree.h"
#include "geogebra/common/geogebra3D/euclidian3D/plots/SurfaceDiamond2.h"
#include "geogebra/common/geogebra3D/euclidian3D/plots/SurfaceMesh2.h"
#include "geogebra/common/geogebra3D/euclidian3D/plots/SurfaceSplitBucketAssigner2.h"
#include "geogebra/common/geogebra3D/euclidian3D/plots/SurfaceTriList2.h"
#include "geogebra/common/geogebra3D/euclidian3D/plots/TriangleOctree.h"
#include "geogebra/common/geogebra3D/euclidian3D/plots/java/nio/FloatBuffer.h"
#include "geogebra/common/kernel/geos/GeoElement.h"
#include "geogebra/common/kernel/kernelND/SurfaceEvaluable.h"
#include "java/io/PrintStream.h"
#include "java/lang/Exception.h"
#include "java/lang/Math.h"
#include "java/lang/RuntimeException.h"
#include "java/lang/System.h"

#define GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceMesh2_maxLevel 20

@interface GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceMesh2 () {
 @public
  GeogebraCommonGeogebra3DEuclidian3DPlotsOctree *octree_;
  jdouble maxErrorCoeff_;
  id<GeogebraCommonKernelKernelNDSurfaceEvaluable> function_;
  GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2 *root_;
  jdouble desiredMaxError_;
}

- (void)initMeshWithDouble:(jdouble)xMin
                withDouble:(jdouble)xMax
                withDouble:(jdouble)yMin
                withDouble:(jdouble)yMax OBJC_METHOD_FAMILY_NONE;

@end

J2OBJC_FIELD_SETTER(GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceMesh2, octree_, GeogebraCommonGeogebra3DEuclidian3DPlotsOctree *)
J2OBJC_FIELD_SETTER(GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceMesh2, function_, id<GeogebraCommonKernelKernelNDSurfaceEvaluable>)
J2OBJC_FIELD_SETTER(GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceMesh2, root_, GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2 *)

J2OBJC_STATIC_FIELD_GETTER(GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceMesh2, maxLevel, jint)

__attribute__((unused)) static void GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceMesh2_initMeshWithDouble_withDouble_withDouble_withDouble_(GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceMesh2 *self, jdouble xMin, jdouble xMax, jdouble yMin, jdouble yMax);

@implementation GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceMesh2

- (instancetype)initWithGeogebraCommonKernelKernelNDSurfaceEvaluable:(id<GeogebraCommonKernelKernelNDSurfaceEvaluable>)function
                                                     withDoubleArray:(IOSDoubleArray *)cullingBox
                                                     withDoubleArray:(IOSDoubleArray *)domain {
  GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceMesh2_initWithGeogebraCommonKernelKernelNDSurfaceEvaluable_withDoubleArray_withDoubleArray_(self, function, cullingBox, domain);
  return self;
}

- (NSString *)getDebugInfoWithLong:(jlong)time {
  return JreStrcat("@$J$I$F$F", function_, @":\tupdate time: ", time, @"ms\t triangles: ", [((id<GeogebraCommonGeogebra3DEuclidian3DPlotsDynamicMeshTriList2>) nil_chk(drawList_)) getTriAmt], @"\t max error: ", (jfloat) [((GeogebraCommonGeogebra3DEuclidian3DPlotsDynamicMeshElement2 *) nil_chk([((GeogebraCommonGeogebra3DEuclidian3DPlotsFastBucketPQ *) nil_chk(splitQueue_)) peek])) getError], @"\t error threshold: ", (jfloat) desiredMaxError_);
}

- (jint)getVisibleChunks {
  return [((id<GeogebraCommonGeogebra3DEuclidian3DPlotsDynamicMeshTriList2>) nil_chk(drawList_)) getChunkAmt];
}

- (id<GeogebraCommonKernelKernelNDSurfaceEvaluable>)getFunction {
  return function_;
}

- (void)initMeshWithDouble:(jdouble)xMin
                withDouble:(jdouble)xMax
                withDouble:(jdouble)yMin
                withDouble:(jdouble)yMax {
  GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceMesh2_initMeshWithDouble_withDouble_withDouble_withDouble_(self, xMin, xMax, yMin, yMax);
}

- (void)setCullingBoxWithDoubleArray:(IOSDoubleArray *)bb {
  GeogebraCommonGeogebra3DEuclidian3DPlotsDynamicMesh2_set_cullingBox_(self, bb);
  jdouble maxWidth, wx, wy, wz;
  wx = IOSDoubleArray_Get(nil_chk(bb), 1) - IOSDoubleArray_Get(bb, 0);
  wy = IOSDoubleArray_Get(bb, 5) - IOSDoubleArray_Get(bb, 4);
  wz = IOSDoubleArray_Get(bb, 3) - IOSDoubleArray_Get(bb, 2);
  maxWidth = wx > wy ? (wx > wz ? wx : wz) : (wy > wz ? wy : wz);
  if ([((GeogebraCommonKernelGeosGeoElement *) nil_chk(((GeogebraCommonKernelGeosGeoElement *) check_class_cast(function_, [GeogebraCommonKernelGeosGeoElement class])))) hasLevelOfDetail]) [self setLevelOfDetailWithDouble:[((id<GeogebraCommonKernelKernelNDSurfaceEvaluable>) nil_chk(function_)) getLevelOfDetail] == GeogebraCommonKernelKernelNDSurfaceEvaluable_LevelOfDetailEnum_get_SPEED() ? 5 : 8];
  desiredMaxError_ = maxErrorCoeff_ * maxWidth;
  noUpdate_ = NO;
}

- (void)setLevelOfDetailWithDouble:(jdouble)l {
  if (l < 0) @throw [new_JavaLangRuntimeException_init() autorelease];
  levelOfDetail_ = l;
  maxErrorCoeff_ = 1 / (JavaLangMath_powWithDouble_withDouble_(10, 1.7 + l * 0.4));
}

- (jdouble)getLevelOfDetail {
  return levelOfDetail_;
}

- (GeogebraCommonGeogebra3DEuclidian3DPlotsDynamicMesh2_SideEnum *)tooCoarse {
  if ([((GeogebraCommonGeogebra3DEuclidian3DPlotsFastBucketPQ *) nil_chk(splitQueue_)) peek] != nil && [((GeogebraCommonGeogebra3DEuclidian3DPlotsDynamicMeshElement2 *) nil_chk([splitQueue_ peek])) getError] > desiredMaxError_) return GeogebraCommonGeogebra3DEuclidian3DPlotsDynamicMesh2_SideEnum_get_SPLIT();
  else if ([((GeogebraCommonGeogebra3DEuclidian3DPlotsFastBucketPQ *) nil_chk(mergeQueue_)) peek] != nil && [((GeogebraCommonGeogebra3DEuclidian3DPlotsDynamicMeshElement2 *) nil_chk([mergeQueue_ peek])) getError] < desiredMaxError_) return GeogebraCommonGeogebra3DEuclidian3DPlotsDynamicMesh2_SideEnum_get_MERGE();
  return GeogebraCommonGeogebra3DEuclidian3DPlotsDynamicMesh2_SideEnum_get_NONE();
}

- (void)updateCullingInfo {
  [((GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2 *) nil_chk(root_)) updateCullInfo];
  if ([root_ childCreatedWithInt:0]) [((GeogebraCommonGeogebra3DEuclidian3DPlotsDynamicMeshElement2 *) nil_chk([root_ getChildWithInt:0])) updateCullInfo];
  if ([root_ childCreatedWithInt:1]) [((GeogebraCommonGeogebra3DEuclidian3DPlotsDynamicMeshElement2 *) nil_chk([root_ getChildWithInt:1])) updateCullInfo];
  if ([root_ childCreatedWithInt:2]) [((GeogebraCommonGeogebra3DEuclidian3DPlotsDynamicMeshElement2 *) nil_chk([root_ getChildWithInt:2])) updateCullInfo];
  if ([root_ childCreatedWithInt:3]) [((GeogebraCommonGeogebra3DEuclidian3DPlotsDynamicMeshElement2 *) nil_chk([root_ getChildWithInt:3])) updateCullInfo];
}

- (GeogebraCommonGeogebra3DEuclidian3DPlotsOctree *)getObjectOctree {
  if (octree_ == nil) {
    GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceMesh2_setAndConsume_octree_(self, new_GeogebraCommonGeogebra3DEuclidian3DPlotsTriangleOctree_init());
    jint n = [((id<GeogebraCommonGeogebra3DEuclidian3DPlotsDynamicMeshTriList2>) nil_chk(drawList_)) getTriAmt];
    GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioFloatBuffer *buf = [drawList_ getTriangleBuffer];
    IOSFloatArray *temp = [IOSFloatArray arrayWithLength:9];
    for (jint i = 0; i < n; i++) {
      [((GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioFloatBuffer *) nil_chk(buf)) getWithFloatArray:temp];
      @try {
        [octree_ insertTriangleWithFloatArray:temp];
      }
      @catch (JavaLangException *e) {
        [((JavaIoPrintStream *) nil_chk(JavaLangSystem_get_err_())) printlnWithId:e];
        return nil;
      }
    }
  }
  return octree_;
}

- (GeogebraCommonGeogebra3DEuclidian3DPlotsOctree *)getVisibleTriangleOctree {
  return [self getObjectOctree];
}

- (void)dealloc {
  RELEASE_(octree_);
  RELEASE_(function_);
  RELEASE_(root_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonKernelKernelNDSurfaceEvaluable:withDoubleArray:withDoubleArray:", "SurfaceMesh2", NULL, 0x1, NULL, NULL },
    { "getDebugInfoWithLong:", "getDebugInfo", "Ljava.lang.String;", 0x4, NULL, NULL },
    { "getVisibleChunks", NULL, "I", 0x1, NULL, NULL },
    { "getFunction", NULL, "Lgeogebra.common.kernel.kernelND.SurfaceEvaluable;", 0x1, NULL, NULL },
    { "initMeshWithDouble:withDouble:withDouble:withDouble:", "initMesh", "V", 0x2, NULL, NULL },
    { "setCullingBoxWithDoubleArray:", "setCullingBox", "V", 0x1, NULL, NULL },
    { "setLevelOfDetailWithDouble:", "setLevelOfDetail", "V", 0x1, NULL, NULL },
    { "getLevelOfDetail", NULL, "D", 0x1, NULL, NULL },
    { "tooCoarse", NULL, "Lgeogebra.common.geogebra3D.euclidian3D.plots.DynamicMesh2$Side;", 0x4, NULL, NULL },
    { "updateCullingInfo", NULL, "V", 0x4, NULL, NULL },
    { "getObjectOctree", NULL, "Lgeogebra.common.geogebra3D.euclidian3D.plots.Octree;", 0x1, NULL, NULL },
    { "getVisibleTriangleOctree", NULL, "Lgeogebra.common.geogebra3D.euclidian3D.plots.Octree;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "octree_", NULL, 0x2, "Lgeogebra.common.geogebra3D.euclidian3D.plots.Octree;", NULL, NULL,  },
    { "maxErrorCoeff_", NULL, 0x2, "D", NULL, NULL,  },
    { "normalDelta_", NULL, 0x19, "D", NULL, NULL, .constantValue.asDouble = GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceMesh2_normalDelta },
    { "undefErrorConst_", NULL, 0x19, "D", NULL, NULL, .constantValue.asDouble = GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceMesh2_undefErrorConst },
    { "levelOfDetail_", NULL, 0x1, "D", NULL, NULL,  },
    { "maxLevel_", NULL, 0x1a, "I", NULL, NULL, .constantValue.asInt = GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceMesh2_maxLevel },
    { "function_", NULL, 0x2, "Lgeogebra.common.kernel.kernelND.SurfaceEvaluable;", NULL, NULL,  },
    { "root_", NULL, 0x2, "Lgeogebra.common.geogebra3D.euclidian3D.plots.SurfaceDiamond2;", NULL, NULL,  },
    { "desiredMaxError_", NULL, 0x2, "D", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceMesh2 = { 2, "SurfaceMesh2", "geogebra.common.geogebra3D.euclidian3D.plots", NULL, 0x1, 12, methods, 9, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceMesh2;
}

@end

void GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceMesh2_initWithGeogebraCommonKernelKernelNDSurfaceEvaluable_withDoubleArray_withDoubleArray_(GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceMesh2 *self, id<GeogebraCommonKernelKernelNDSurfaceEvaluable> function, IOSDoubleArray *cullingBox, IOSDoubleArray *domain) {
  GeogebraCommonGeogebra3DEuclidian3DPlotsDynamicMesh2_initWithGeogebraCommonGeogebra3DEuclidian3DPlotsFastBucketPQ_withGeogebraCommonGeogebra3DEuclidian3DPlotsFastBucketPQ_withGeogebraCommonGeogebra3DEuclidian3DPlotsDynamicMeshTriList2_withInt_withInt_withInt_(self, [new_GeogebraCommonGeogebra3DEuclidian3DPlotsFastBucketPQ_initWithGeogebraCommonGeogebra3DEuclidian3DPlotsBucketAssigner_withBoolean_([new_GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceSplitBucketAssigner2_init() autorelease], YES) autorelease], [new_GeogebraCommonGeogebra3DEuclidian3DPlotsFastBucketPQ_initWithGeogebraCommonGeogebra3DEuclidian3DPlotsBucketAssigner_withBoolean_([new_GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceSplitBucketAssigner2_init() autorelease], NO) autorelease], [new_GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceTriList2_initWithInt_withInt_(100, 0) autorelease], 2, 4, GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceMesh2_maxLevel);
  self->maxErrorCoeff_ = 1e-2;
  self->levelOfDetail_ = 0.1;
  GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceMesh2_set_function_(self, function);
  [self setLevelOfDetailWithDouble:5];
  [self setCullingBoxWithDoubleArray:cullingBox];
  GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceMesh2_initMeshWithDouble_withDouble_withDouble_withDouble_(self, IOSDoubleArray_Get(nil_chk(domain), 0), IOSDoubleArray_Get(domain, 1), IOSDoubleArray_Get(domain, 2), IOSDoubleArray_Get(domain, 3));
  [((GeogebraCommonGeogebra3DEuclidian3DPlotsFastBucketPQ *) nil_chk(self->splitQueue_)) addWithGeogebraCommonGeogebra3DEuclidian3DPlotsDynamicMeshElement2:self->root_];
  [((id<GeogebraCommonGeogebra3DEuclidian3DPlotsDynamicMeshTriList2>) nil_chk(self->drawList_)) addWithGeogebraCommonGeogebra3DEuclidian3DPlotsDynamicMeshElement2:self->root_];
  for (jint i = 0; i < 100; i++) [self splitWithGeogebraCommonGeogebra3DEuclidian3DPlotsDynamicMeshElement2:[self->splitQueue_ forcePoll]];
}

GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceMesh2 *new_GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceMesh2_initWithGeogebraCommonKernelKernelNDSurfaceEvaluable_withDoubleArray_withDoubleArray_(id<GeogebraCommonKernelKernelNDSurfaceEvaluable> function, IOSDoubleArray *cullingBox, IOSDoubleArray *domain) {
  GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceMesh2 *self = [GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceMesh2 alloc];
  GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceMesh2_initWithGeogebraCommonKernelKernelNDSurfaceEvaluable_withDoubleArray_withDoubleArray_(self, function, cullingBox, domain);
  return self;
}

void GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceMesh2_initMeshWithDouble_withDouble_withDouble_withDouble_(GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceMesh2 *self, jdouble xMin, jdouble xMax, jdouble yMin, jdouble yMax) {
  jint di, ix, jx;
  jdouble x, y;
  GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2 *t;
  IOSObjectArray *base0 = [IOSObjectArray arrayWithDimensions:2 lengths:(jint[]){ 4, 4 } type:GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2_class_()];
  IOSObjectArray *base1 = [IOSObjectArray arrayWithDimensions:2 lengths:(jint[]){ 4, 4 } type:GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2_class_()];
  jdouble dx = (xMax - xMin);
  jdouble dy = (yMax - yMin);
  for (jint i = 0; i < 4; i++) for (jint j = 0; j < 4; j++) {
    x = xMin + (i - 0.5) * dx;
    y = yMin + (j - 0.5) * dy;
    IOSObjectArray_SetAndConsume(nil_chk(IOSObjectArray_Get(base0, j)), i, new_GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2_initWithGeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceMesh2_withInt_withDouble_withDouble_withBoolean_withInt_(self, 0, x, y, !(i == 1 && j == 1), self->currentVersion_));
    x = xMin + (i - 1) * dx;
    y = yMin + (j - 1) * dy;
    IOSObjectArray_Set(nil_chk(IOSObjectArray_Get(base1, j)), i, t = [new_GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2_initWithGeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceMesh2_withInt_withDouble_withDouble_withBoolean_withInt_(self, ((i ^ j) & 1) != 0 ? -1 : -2, x, y, NO, self->currentVersion_) autorelease]);
    [t setSplitWithBoolean:YES];
  }
  for (jint i = 0; i < 4; i++) for (jint j = 0; j < 4; j++) {
    t = IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(base0, j)), i);
    di = ((i ^ j) & 1) != 0 ? 1 : -1;
    ix = (RShift32((2 * i + 1 - di), 1)) % 4;
    jx = (RShift32(2 * j, 1)) % 4;
    IOSObjectArray_Set(nil_chk(((GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2 *) nil_chk(t))->parents_), 0, IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(base1, jx)), ix));
    ix = (RShift32((2 * i + 1 + di), 1)) % 4;
    jx = (RShift32(2 * (j + 1), 1)) % 4;
    IOSObjectArray_Set(t->parents_, 1, IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(base1, jx)), ix));
    ix = (RShift32(2 * i, 1)) % 4;
    jx = (RShift32((2 * j + 1 + di), 1)) % 4;
    IOSObjectArray_Set(nil_chk(t->ancestors_), 0, IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(base1, jx)), ix));
    ix = (RShift32((2 * (i + 1)), 1)) % 4;
    jx = (RShift32((2 * j + 1 - di), 1)) % 4;
    IOSObjectArray_Set(t->ancestors_, 1, IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(base1, jx)), ix));
    ix = (di < 0 ? 0 : 3);
    [((GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2 *) nil_chk(((GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2 *) check_class_cast(IOSObjectArray_Get(t->parents_, 0), [GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2 class])))) setChildWithInt:ix withGeogebraCommonGeogebra3DEuclidian3DPlotsDynamicMeshElement2:t];
    *IOSIntArray_GetRef(nil_chk(t->indices_), 0) = ix;
    ix = (di < 0 ? 2 : 1);
    [((GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2 *) nil_chk(((GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2 *) check_class_cast(IOSObjectArray_Get(t->parents_, 1), [GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2 class])))) setChildWithInt:ix withGeogebraCommonGeogebra3DEuclidian3DPlotsDynamicMeshElement2:t];
    *IOSIntArray_GetRef(t->indices_, 1) = ix;
  }
  for (jint i = 0; i < 4; i++) for (jint j = 0; j < 4; j++) {
    t = IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(base1, j)), i);
    IOSObjectArray_Set(nil_chk(((GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2 *) nil_chk(t))->ancestors_), 1, IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(base1, (j + 3) % 4)), i));
    IOSObjectArray_Set(t->ancestors_, 0, IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(base1, (j + 1) % 4)), i));
    IOSObjectArray_Set(nil_chk(t->parents_), 0, IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(base1, j)), (i + 3) % 4));
    IOSObjectArray_Set(t->parents_, 1, IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(base1, j)), (i + 1) % 4));
  }
  GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceMesh2_set_root_(self, IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(base0, 1)), 1));
  [self->root_ calcMainVertexWithDouble:IOSDoubleArray_Get(nil_chk(((GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2 *) nil_chk(self->root_))->params_), 0) withDouble:IOSDoubleArray_Get(self->root_->params_, 1)];
  [self->root_ setBoundingBox];
  [self->root_ setArea];
  [self->root_ generateError];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceMesh2)
