//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/edu/uci/ics/jung/algorithms/generators/random/MixedRandomGraphGenerator.java
//


#include "J2ObjC_source.h"
#include "edu/uci/ics/jung/algorithms/generators/random/BarabasiAlbertGenerator.h"
#include "edu/uci/ics/jung/algorithms/generators/random/MixedRandomGraphGenerator.h"
#include "edu/uci/ics/jung/graph/Graph.h"
#include "edu/uci/ics/jung/graph/util/EdgeType.h"
#include "edu/uci/ics/jung/graph/util/Pair.h"
#include "java/lang/Double.h"
#include "java/lang/Math.h"
#include "java/util/Collection.h"
#include "java/util/Map.h"
#include "java/util/Set.h"
#include "org/apache/commons/collections15/Factory.h"

@implementation EduUciIcsJungAlgorithmsGeneratorsRandomMixedRandomGraphGenerator

+ (id<EduUciIcsJungGraphGraph>)generateMixedRandomGraphWithOrgApacheCommonsCollections15Factory:(id<OrgApacheCommonsCollections15Factory>)graphFactory
                                                       withOrgApacheCommonsCollections15Factory:(id<OrgApacheCommonsCollections15Factory>)vertexFactory
                                                       withOrgApacheCommonsCollections15Factory:(id<OrgApacheCommonsCollections15Factory>)edgeFactory
                                                                                withJavaUtilMap:(id<JavaUtilMap>)edge_weight
                                                                                        withInt:(jint)num_vertices
                                                                                withJavaUtilSet:(id<JavaUtilSet>)seedVertices {
  return EduUciIcsJungAlgorithmsGeneratorsRandomMixedRandomGraphGenerator_generateMixedRandomGraphWithOrgApacheCommonsCollections15Factory_withOrgApacheCommonsCollections15Factory_withOrgApacheCommonsCollections15Factory_withJavaUtilMap_withInt_withJavaUtilSet_(graphFactory, vertexFactory, edgeFactory, edge_weight, num_vertices, seedVertices);
}

+ (id<EduUciIcsJungGraphGraph>)generateMixedRandomGraphWithOrgApacheCommonsCollections15Factory:(id<OrgApacheCommonsCollections15Factory>)graphFactory
                                                       withOrgApacheCommonsCollections15Factory:(id<OrgApacheCommonsCollections15Factory>)vertexFactory
                                                       withOrgApacheCommonsCollections15Factory:(id<OrgApacheCommonsCollections15Factory>)edgeFactory
                                                                                withJavaUtilMap:(id<JavaUtilMap>)edge_weights
                                                                                        withInt:(jint)num_vertices
                                                                                    withBoolean:(jboolean)parallel
                                                                                withJavaUtilSet:(id<JavaUtilSet>)seedVertices {
  return EduUciIcsJungAlgorithmsGeneratorsRandomMixedRandomGraphGenerator_generateMixedRandomGraphWithOrgApacheCommonsCollections15Factory_withOrgApacheCommonsCollections15Factory_withOrgApacheCommonsCollections15Factory_withJavaUtilMap_withInt_withBoolean_withJavaUtilSet_(graphFactory, vertexFactory, edgeFactory, edge_weights, num_vertices, parallel, seedVertices);
}

- (instancetype)init {
  EduUciIcsJungAlgorithmsGeneratorsRandomMixedRandomGraphGenerator_init(self);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "generateMixedRandomGraphWithOrgApacheCommonsCollections15Factory:withOrgApacheCommonsCollections15Factory:withOrgApacheCommonsCollections15Factory:withJavaUtilMap:withInt:withJavaUtilSet:", "generateMixedRandomGraph", "Ledu.uci.ics.jung.graph.Graph;", 0x9, NULL, "<V:Ljava/lang/Object;E:Ljava/lang/Object;>(Lorg/apache/commons/collections15/Factory<Ledu/uci/ics/jung/graph/Graph<TV;TE;>;>;Lorg/apache/commons/collections15/Factory<TV;>;Lorg/apache/commons/collections15/Factory<TE;>;Ljava/util/Map<TE;Ljava/lang/Number;>;ILjava/util/Set<TV;>;)Ledu/uci/ics/jung/graph/Graph<TV;TE;>;" },
    { "generateMixedRandomGraphWithOrgApacheCommonsCollections15Factory:withOrgApacheCommonsCollections15Factory:withOrgApacheCommonsCollections15Factory:withJavaUtilMap:withInt:withBoolean:withJavaUtilSet:", "generateMixedRandomGraph", "Ledu.uci.ics.jung.graph.Graph;", 0x9, NULL, "<V:Ljava/lang/Object;E:Ljava/lang/Object;>(Lorg/apache/commons/collections15/Factory<Ledu/uci/ics/jung/graph/Graph<TV;TE;>;>;Lorg/apache/commons/collections15/Factory<TV;>;Lorg/apache/commons/collections15/Factory<TE;>;Ljava/util/Map<TE;Ljava/lang/Number;>;IZLjava/util/Set<TV;>;)Ledu/uci/ics/jung/graph/Graph<TV;TE;>;" },
    { "init", NULL, NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _EduUciIcsJungAlgorithmsGeneratorsRandomMixedRandomGraphGenerator = { 2, "MixedRandomGraphGenerator", "edu.uci.ics.jung.algorithms.generators.random", NULL, 0x1, 3, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_EduUciIcsJungAlgorithmsGeneratorsRandomMixedRandomGraphGenerator;
}

@end

id<EduUciIcsJungGraphGraph> EduUciIcsJungAlgorithmsGeneratorsRandomMixedRandomGraphGenerator_generateMixedRandomGraphWithOrgApacheCommonsCollections15Factory_withOrgApacheCommonsCollections15Factory_withOrgApacheCommonsCollections15Factory_withJavaUtilMap_withInt_withJavaUtilSet_(id<OrgApacheCommonsCollections15Factory> graphFactory, id<OrgApacheCommonsCollections15Factory> vertexFactory, id<OrgApacheCommonsCollections15Factory> edgeFactory, id<JavaUtilMap> edge_weight, jint num_vertices, id<JavaUtilSet> seedVertices) {
  EduUciIcsJungAlgorithmsGeneratorsRandomMixedRandomGraphGenerator_initialize();
  return EduUciIcsJungAlgorithmsGeneratorsRandomMixedRandomGraphGenerator_generateMixedRandomGraphWithOrgApacheCommonsCollections15Factory_withOrgApacheCommonsCollections15Factory_withOrgApacheCommonsCollections15Factory_withJavaUtilMap_withInt_withBoolean_withJavaUtilSet_(graphFactory, vertexFactory, edgeFactory, edge_weight, num_vertices, YES, seedVertices);
}

id<EduUciIcsJungGraphGraph> EduUciIcsJungAlgorithmsGeneratorsRandomMixedRandomGraphGenerator_generateMixedRandomGraphWithOrgApacheCommonsCollections15Factory_withOrgApacheCommonsCollections15Factory_withOrgApacheCommonsCollections15Factory_withJavaUtilMap_withInt_withBoolean_withJavaUtilSet_(id<OrgApacheCommonsCollections15Factory> graphFactory, id<OrgApacheCommonsCollections15Factory> vertexFactory, id<OrgApacheCommonsCollections15Factory> edgeFactory, id<JavaUtilMap> edge_weights, jint num_vertices, jboolean parallel, id<JavaUtilSet> seedVertices) {
  EduUciIcsJungAlgorithmsGeneratorsRandomMixedRandomGraphGenerator_initialize();
  jint seed = J2ObjCFpToInt((JavaLangMath_random() * 10000));
  EduUciIcsJungAlgorithmsGeneratorsRandomBarabasiAlbertGenerator *bag = [new_EduUciIcsJungAlgorithmsGeneratorsRandomBarabasiAlbertGenerator_initWithOrgApacheCommonsCollections15Factory_withOrgApacheCommonsCollections15Factory_withOrgApacheCommonsCollections15Factory_withInt_withInt_withInt_withJavaUtilSet_(graphFactory, vertexFactory, edgeFactory, 4, 3, seed, seedVertices) autorelease];
  [bag evolveGraphWithInt:num_vertices - 4];
  id<EduUciIcsJungGraphGraph> ug = [bag create];
  id<EduUciIcsJungGraphGraph> g = [((id<OrgApacheCommonsCollections15Factory>) nil_chk(graphFactory)) create];
  for (id __strong v in nil_chk([((id<EduUciIcsJungGraphGraph>) nil_chk(ug)) getVertices])) {
    [((id<EduUciIcsJungGraphGraph>) nil_chk(g)) addVertexWithId:v];
  }
  for (id __strong e in nil_chk([ug getEdges])) {
    id v1 = [((EduUciIcsJungGraphUtilPair *) nil_chk([ug getEndpointsWithId:e])) getFirst];
    id v2 = [((EduUciIcsJungGraphUtilPair *) nil_chk([ug getEndpointsWithId:e])) getSecond];
    id me = [((id<OrgApacheCommonsCollections15Factory>) nil_chk(edgeFactory)) create];
    [((id<EduUciIcsJungGraphGraph>) nil_chk(g)) addEdgeWithId:me withId:v1 withId:v2 withEduUciIcsJungGraphUtilEdgeTypeEnum:JavaLangMath_random() < .5 ? EduUciIcsJungGraphUtilEdgeTypeEnum_get_DIRECTED() : EduUciIcsJungGraphUtilEdgeTypeEnum_get_UNDIRECTED()];
    [((id<JavaUtilMap>) nil_chk(edge_weights)) putWithId:me withId:JavaLangDouble_valueOfWithDouble_(JavaLangMath_random())];
  }
  return g;
}

void EduUciIcsJungAlgorithmsGeneratorsRandomMixedRandomGraphGenerator_init(EduUciIcsJungAlgorithmsGeneratorsRandomMixedRandomGraphGenerator *self) {
  NSObject_init(self);
}

EduUciIcsJungAlgorithmsGeneratorsRandomMixedRandomGraphGenerator *new_EduUciIcsJungAlgorithmsGeneratorsRandomMixedRandomGraphGenerator_init() {
  EduUciIcsJungAlgorithmsGeneratorsRandomMixedRandomGraphGenerator *self = [EduUciIcsJungAlgorithmsGeneratorsRandomMixedRandomGraphGenerator alloc];
  EduUciIcsJungAlgorithmsGeneratorsRandomMixedRandomGraphGenerator_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduUciIcsJungAlgorithmsGeneratorsRandomMixedRandomGraphGenerator)
