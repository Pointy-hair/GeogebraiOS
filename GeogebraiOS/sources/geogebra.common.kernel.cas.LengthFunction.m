//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/cas/LengthFunction.java
//


#include "J2ObjC_source.h"
#include "geogebra/common/kernel/cas/LengthFunction.h"
#include "geogebra/common/kernel/geos/GeoFunction.h"
#include "java/lang/Math.h"

@interface GeogebraCommonKernelCasLengthFunction () {
 @public
  GeogebraCommonKernelGeosGeoFunction *f1_;
}

@end

J2OBJC_FIELD_SETTER(GeogebraCommonKernelCasLengthFunction, f1_, GeogebraCommonKernelGeosGeoFunction *)

@implementation GeogebraCommonKernelCasLengthFunction

- (instancetype)initWithGeogebraCommonKernelGeosGeoFunction:(GeogebraCommonKernelGeosGeoFunction *)f1 {
  GeogebraCommonKernelCasLengthFunction_initWithGeogebraCommonKernelGeosGeoFunction_(self, f1);
  return self;
}

- (jdouble)evaluateWithDouble:(jdouble)t {
  jdouble p = [((GeogebraCommonKernelGeosGeoFunction *) nil_chk(f1_)) evaluateWithDouble:t];
  return JavaLangMath_sqrtWithDouble_(1 + p * p);
}

- (void)dealloc {
  RELEASE_(f1_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonKernelGeosGeoFunction:", "LengthFunction", NULL, 0x1, NULL, NULL },
    { "evaluateWithDouble:", "evaluate", "D", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "f1_", NULL, 0x12, "Lgeogebra.common.kernel.geos.GeoFunction;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelCasLengthFunction = { 2, "LengthFunction", "geogebra.common.kernel.cas", NULL, 0x0, 2, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelCasLengthFunction;
}

@end

void GeogebraCommonKernelCasLengthFunction_initWithGeogebraCommonKernelGeosGeoFunction_(GeogebraCommonKernelCasLengthFunction *self, GeogebraCommonKernelGeosGeoFunction *f1) {
  NSObject_init(self);
  GeogebraCommonKernelCasLengthFunction_set_f1_(self, f1);
}

GeogebraCommonKernelCasLengthFunction *new_GeogebraCommonKernelCasLengthFunction_initWithGeogebraCommonKernelGeosGeoFunction_(GeogebraCommonKernelGeosGeoFunction *f1) {
  GeogebraCommonKernelCasLengthFunction *self = [GeogebraCommonKernelCasLengthFunction alloc];
  GeogebraCommonKernelCasLengthFunction_initWithGeogebraCommonKernelGeosGeoFunction_(self, f1);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelCasLengthFunction)
