//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/org/apache/commons/collections15/iterators/ArrayIterator.java
//


#include "J2ObjC_source.h"
#include "java/lang/ArrayIndexOutOfBoundsException.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/UnsupportedOperationException.h"
#include "java/lang/reflect/Array.h"
#include "java/util/NoSuchElementException.h"
#include "org/apache/commons/collections15/iterators/ArrayIterator.h"

@implementation OrgApacheCommonsCollections15IteratorsArrayIterator

- (instancetype)init {
  OrgApacheCommonsCollections15IteratorsArrayIterator_init(self);
  return self;
}

- (instancetype)initWithId:(id)array {
  OrgApacheCommonsCollections15IteratorsArrayIterator_initWithId_(self, array);
  return self;
}

- (instancetype)initWithId:(id)array
                   withInt:(jint)startIndex {
  OrgApacheCommonsCollections15IteratorsArrayIterator_initWithId_withInt_(self, array, startIndex);
  return self;
}

- (instancetype)initWithId:(id)array
                   withInt:(jint)startIndex
                   withInt:(jint)endIndex {
  OrgApacheCommonsCollections15IteratorsArrayIterator_initWithId_withInt_withInt_(self, array, startIndex, endIndex);
  return self;
}

- (void)checkBoundWithInt:(jint)bound
             withNSString:(NSString *)type {
  if (bound > self->endIndex_) {
    @throw [new_JavaLangArrayIndexOutOfBoundsException_initWithNSString_(JreStrcat("$$$", @"Attempt to make an ArrayIterator that ", type, @"s beyond the end of the array. ")) autorelease];
  }
  if (bound < 0) {
    @throw [new_JavaLangArrayIndexOutOfBoundsException_initWithNSString_(JreStrcat("$$$", @"Attempt to make an ArrayIterator that ", type, @"s before the start of the array. ")) autorelease];
  }
}

- (jboolean)hasNext {
  return (index_ < endIndex_);
}

- (id)next {
  if ([self hasNext] == NO) {
    @throw [new_JavaUtilNoSuchElementException_init() autorelease];
  }
  return (id) JavaLangReflectArray_getWithId_withInt_(array_, index_++);
}

- (void)remove {
  @throw [new_JavaLangUnsupportedOperationException_initWithNSString_(@"remove() method is not supported") autorelease];
}

- (id)getArray {
  return array_;
}

- (void)setArrayWithId:(id)array {
  self->endIndex_ = JavaLangReflectArray_getLengthWithId_(array);
  self->startIndex_ = 0;
  OrgApacheCommonsCollections15IteratorsArrayIterator_set_array_(self, array);
  self->index_ = 0;
}

- (void)reset {
  self->index_ = self->startIndex_;
}

- (void)dealloc {
  RELEASE_(array_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "ArrayIterator", NULL, 0x1, NULL, NULL },
    { "initWithId:", "ArrayIterator", NULL, 0x1, NULL, NULL },
    { "initWithId:withInt:", "ArrayIterator", NULL, 0x1, NULL, NULL },
    { "initWithId:withInt:withInt:", "ArrayIterator", NULL, 0x1, NULL, NULL },
    { "checkBoundWithInt:withNSString:", "checkBound", "V", 0x4, NULL, NULL },
    { "hasNext", NULL, "Z", 0x1, NULL, NULL },
    { "next", NULL, "TE;", 0x1, NULL, "()TE;" },
    { "remove", NULL, "V", 0x1, NULL, NULL },
    { "getArray", NULL, "Ljava.lang.Object;", 0x1, NULL, NULL },
    { "setArrayWithId:", "setArray", "V", 0x1, NULL, NULL },
    { "reset", NULL, "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "array_", NULL, 0x4, "Ljava.lang.Object;", NULL, NULL,  },
    { "startIndex_", NULL, 0x4, "I", NULL, NULL,  },
    { "endIndex_", NULL, 0x4, "I", NULL, NULL,  },
    { "index_", NULL, 0x4, "I", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgApacheCommonsCollections15IteratorsArrayIterator = { 2, "ArrayIterator", "org.apache.commons.collections15.iterators", NULL, 0x1, 11, methods, 4, fields, 0, NULL, 0, NULL, NULL, "<E:Ljava/lang/Object;>Ljava/lang/Object;Lorg/apache/commons/collections15/ResettableIterator<TE;>;" };
  return &_OrgApacheCommonsCollections15IteratorsArrayIterator;
}

@end

void OrgApacheCommonsCollections15IteratorsArrayIterator_init(OrgApacheCommonsCollections15IteratorsArrayIterator *self) {
  NSObject_init(self);
  self->startIndex_ = 0;
  self->endIndex_ = 0;
  self->index_ = 0;
}

OrgApacheCommonsCollections15IteratorsArrayIterator *new_OrgApacheCommonsCollections15IteratorsArrayIterator_init() {
  OrgApacheCommonsCollections15IteratorsArrayIterator *self = [OrgApacheCommonsCollections15IteratorsArrayIterator alloc];
  OrgApacheCommonsCollections15IteratorsArrayIterator_init(self);
  return self;
}

void OrgApacheCommonsCollections15IteratorsArrayIterator_initWithId_(OrgApacheCommonsCollections15IteratorsArrayIterator *self, id array) {
  NSObject_init(self);
  self->startIndex_ = 0;
  self->endIndex_ = 0;
  self->index_ = 0;
  [self setArrayWithId:array];
}

OrgApacheCommonsCollections15IteratorsArrayIterator *new_OrgApacheCommonsCollections15IteratorsArrayIterator_initWithId_(id array) {
  OrgApacheCommonsCollections15IteratorsArrayIterator *self = [OrgApacheCommonsCollections15IteratorsArrayIterator alloc];
  OrgApacheCommonsCollections15IteratorsArrayIterator_initWithId_(self, array);
  return self;
}

void OrgApacheCommonsCollections15IteratorsArrayIterator_initWithId_withInt_(OrgApacheCommonsCollections15IteratorsArrayIterator *self, id array, jint startIndex) {
  NSObject_init(self);
  self->startIndex_ = 0;
  self->endIndex_ = 0;
  self->index_ = 0;
  [self setArrayWithId:array];
  [self checkBoundWithInt:startIndex withNSString:@"start"];
  self->startIndex_ = startIndex;
  self->index_ = startIndex;
}

OrgApacheCommonsCollections15IteratorsArrayIterator *new_OrgApacheCommonsCollections15IteratorsArrayIterator_initWithId_withInt_(id array, jint startIndex) {
  OrgApacheCommonsCollections15IteratorsArrayIterator *self = [OrgApacheCommonsCollections15IteratorsArrayIterator alloc];
  OrgApacheCommonsCollections15IteratorsArrayIterator_initWithId_withInt_(self, array, startIndex);
  return self;
}

void OrgApacheCommonsCollections15IteratorsArrayIterator_initWithId_withInt_withInt_(OrgApacheCommonsCollections15IteratorsArrayIterator *self, id array, jint startIndex, jint endIndex) {
  NSObject_init(self);
  self->startIndex_ = 0;
  self->endIndex_ = 0;
  self->index_ = 0;
  [self setArrayWithId:array];
  [self checkBoundWithInt:startIndex withNSString:@"start"];
  [self checkBoundWithInt:endIndex withNSString:@"end"];
  if (endIndex < startIndex) {
    @throw [new_JavaLangIllegalArgumentException_initWithNSString_(@"End index must not be less than start index.") autorelease];
  }
  self->startIndex_ = startIndex;
  self->endIndex_ = endIndex;
  self->index_ = startIndex;
}

OrgApacheCommonsCollections15IteratorsArrayIterator *new_OrgApacheCommonsCollections15IteratorsArrayIterator_initWithId_withInt_withInt_(id array, jint startIndex, jint endIndex) {
  OrgApacheCommonsCollections15IteratorsArrayIterator *self = [OrgApacheCommonsCollections15IteratorsArrayIterator alloc];
  OrgApacheCommonsCollections15IteratorsArrayIterator_initWithId_withInt_withInt_(self, array, startIndex, endIndex);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheCommonsCollections15IteratorsArrayIterator)
