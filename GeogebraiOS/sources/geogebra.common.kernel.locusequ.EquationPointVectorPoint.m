//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/locusequ/EquationPointVectorPoint.java
//


#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "geogebra/common/kernel/geos/GeoPoint.h"
#include "geogebra/common/kernel/locusequ/EquationPoint.h"
#include "geogebra/common/kernel/locusequ/EquationPointVectorPoint.h"
#include "geogebra/common/kernel/locusequ/SymbolicVector.h"
#include "geogebra/common/kernel/locusequ/arith/EquationArithHelper.h"
#include "geogebra/common/kernel/locusequ/arith/EquationExpression.h"

@interface GeogebraCommonKernelLocusequEquationPointVectorPoint () {
 @public
  GeogebraCommonKernelLocusequSymbolicVector *vector_;
  GeogebraCommonKernelLocusequEquationPoint *point_;
  jboolean independent_;
}

@end

J2OBJC_FIELD_SETTER(GeogebraCommonKernelLocusequEquationPointVectorPoint, vector_, GeogebraCommonKernelLocusequSymbolicVector *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelLocusequEquationPointVectorPoint, point_, GeogebraCommonKernelLocusequEquationPoint *)

@implementation GeogebraCommonKernelLocusequEquationPointVectorPoint

- (instancetype)initWithGeogebraCommonKernelLocusequSymbolicVector:(GeogebraCommonKernelLocusequSymbolicVector *)vector
                     withGeogebraCommonKernelLocusequEquationPoint:(GeogebraCommonKernelLocusequEquationPoint *)point {
  GeogebraCommonKernelLocusequEquationPointVectorPoint_initWithGeogebraCommonKernelLocusequSymbolicVector_withGeogebraCommonKernelLocusequEquationPoint_(self, vector, point);
  return self;
}

- (GeogebraCommonKernelLocusequArithEquationExpression *)getXExpression {
  return xExpr_;
}

- (GeogebraCommonKernelLocusequArithEquationExpression *)getYExpression {
  return yExpr_;
}

- (GeogebraCommonKernelLocusequArithEquationExpression *)getZExpression {
  return zExpr_;
}

- (jboolean)isIndependent {
  return self->independent_;
}

- (GeogebraCommonKernelGeosGeoPoint *)getPoint {
  return [((GeogebraCommonKernelLocusequEquationPoint *) nil_chk(self->point_)) getPoint];
}

- (void)getIndexesFromWithGeogebraCommonKernelLocusequEquationPoint:(GeogebraCommonKernelLocusequEquationPoint *)newPoint {
}

- (void)fixXWithDouble:(jdouble)value {
}

- (void)fixYWithDouble:(jdouble)value {
}

- (void)dealloc {
  RELEASE_(vector_);
  RELEASE_(point_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonKernelLocusequSymbolicVector:withGeogebraCommonKernelLocusequEquationPoint:", "EquationPointVectorPoint", NULL, 0x1, NULL, NULL },
    { "getXExpression", NULL, "Lgeogebra.common.kernel.locusequ.arith.EquationExpression;", 0x1, NULL, NULL },
    { "getYExpression", NULL, "Lgeogebra.common.kernel.locusequ.arith.EquationExpression;", 0x1, NULL, NULL },
    { "getZExpression", NULL, "Lgeogebra.common.kernel.locusequ.arith.EquationExpression;", 0x1, NULL, NULL },
    { "isIndependent", NULL, "Z", 0x1, NULL, NULL },
    { "getPoint", NULL, "Lgeogebra.common.kernel.geos.GeoPoint;", 0x1, NULL, NULL },
    { "getIndexesFromWithGeogebraCommonKernelLocusequEquationPoint:", "getIndexesFrom", "V", 0x1, NULL, NULL },
    { "fixXWithDouble:", "fixX", "V", 0x1, NULL, NULL },
    { "fixYWithDouble:", "fixY", "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "vector_", NULL, 0x2, "Lgeogebra.common.kernel.locusequ.SymbolicVector;", NULL, NULL,  },
    { "point_", NULL, 0x2, "Lgeogebra.common.kernel.locusequ.EquationPoint;", NULL, NULL,  },
    { "independent_", NULL, 0x2, "Z", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelLocusequEquationPointVectorPoint = { 2, "EquationPointVectorPoint", "geogebra.common.kernel.locusequ", NULL, 0x1, 9, methods, 3, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelLocusequEquationPointVectorPoint;
}

@end

void GeogebraCommonKernelLocusequEquationPointVectorPoint_initWithGeogebraCommonKernelLocusequSymbolicVector_withGeogebraCommonKernelLocusequEquationPoint_(GeogebraCommonKernelLocusequEquationPointVectorPoint *self, GeogebraCommonKernelLocusequSymbolicVector *vector, GeogebraCommonKernelLocusequEquationPoint *point) {
  GeogebraCommonKernelLocusequEquationPoint_init(self);
  GeogebraCommonKernelLocusequEquationPointVectorPoint_set_vector_(self, vector);
  GeogebraCommonKernelLocusequEquationPointVectorPoint_set_point_(self, point);
  self->independent_ = ([((GeogebraCommonKernelLocusequSymbolicVector *) nil_chk(self->vector_)) isIndependent] && [((GeogebraCommonKernelLocusequEquationPoint *) nil_chk(self->point_)) isIndependent]);
  GeogebraCommonKernelLocusequEquationPoint_set_xExpr_(self, GeogebraCommonKernelLocusequArithEquationArithHelper_sumWithGeogebraCommonKernelLocusequArithEquationExpressionArray_([IOSObjectArray arrayWithObjects:(id[]){ [((GeogebraCommonKernelLocusequEquationPoint *) nil_chk(point)) getXExpression], [((GeogebraCommonKernelLocusequSymbolicVector *) nil_chk(vector)) getX] } count:2 type:GeogebraCommonKernelLocusequArithEquationExpression_class_()]));
  GeogebraCommonKernelLocusequEquationPoint_set_yExpr_(self, GeogebraCommonKernelLocusequArithEquationArithHelper_sumWithGeogebraCommonKernelLocusequArithEquationExpressionArray_([IOSObjectArray arrayWithObjects:(id[]){ [point getYExpression], [vector getY] } count:2 type:GeogebraCommonKernelLocusequArithEquationExpression_class_()]));
  GeogebraCommonKernelLocusequEquationPoint_set_zExpr_(self, GeogebraCommonKernelLocusequArithEquationArithHelper_sumWithGeogebraCommonKernelLocusequArithEquationExpressionArray_([IOSObjectArray arrayWithObjects:(id[]){ [point getZExpression], [vector getZ] } count:2 type:GeogebraCommonKernelLocusequArithEquationExpression_class_()]));
}

GeogebraCommonKernelLocusequEquationPointVectorPoint *new_GeogebraCommonKernelLocusequEquationPointVectorPoint_initWithGeogebraCommonKernelLocusequSymbolicVector_withGeogebraCommonKernelLocusequEquationPoint_(GeogebraCommonKernelLocusequSymbolicVector *vector, GeogebraCommonKernelLocusequEquationPoint *point) {
  GeogebraCommonKernelLocusequEquationPointVectorPoint *self = [GeogebraCommonKernelLocusequEquationPointVectorPoint alloc];
  GeogebraCommonKernelLocusequEquationPointVectorPoint_initWithGeogebraCommonKernelLocusequSymbolicVector_withGeogebraCommonKernelLocusequEquationPoint_(self, vector, point);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelLocusequEquationPointVectorPoint)
