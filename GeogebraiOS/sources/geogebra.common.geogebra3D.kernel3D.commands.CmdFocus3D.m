//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/geogebra3D/kernel3D/commands/CmdFocus3D.java
//


#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "geogebra/common/geogebra3D/kernel3D/algos/AlgoFocus3D.h"
#include "geogebra/common/geogebra3D/kernel3D/commands/CmdFocus3D.h"
#include "geogebra/common/kernel/Construction.h"
#include "geogebra/common/kernel/Kernel.h"
#include "geogebra/common/kernel/algos/AlgoFocus.h"
#include "geogebra/common/kernel/commands/CmdFocus.h"
#include "geogebra/common/kernel/kernelND/GeoConicND.h"

@implementation GeogebraCommonGeogebra3DKernel3DCommandsCmdFocus3D

- (instancetype)initWithGeogebraCommonKernelKernel:(GeogebraCommonKernelKernel *)kernel {
  GeogebraCommonGeogebra3DKernel3DCommandsCmdFocus3D_initWithGeogebraCommonKernelKernel_(self, kernel);
  return self;
}

- (GeogebraCommonKernelAlgosAlgoFocus *)newAlgoFocusWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                                                                       withNSStringArray:(IOSObjectArray *)labels
                                              withGeogebraCommonKernelKernelNDGeoConicND:(GeogebraCommonKernelKernelNDGeoConicND *)c {
  if ([((GeogebraCommonKernelKernelNDGeoConicND *) nil_chk(c)) isGeoElement3D]) {
    return [new_GeogebraCommonGeogebra3DKernel3DAlgosAlgoFocus3D_initWithGeogebraCommonKernelConstruction_withNSStringArray_withGeogebraCommonKernelKernelNDGeoConicND_(cons, labels, c) autorelease];
  }
  return [super newAlgoFocusWithGeogebraCommonKernelConstruction:cons withNSStringArray:labels withGeogebraCommonKernelKernelNDGeoConicND:c];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonKernelKernel:", "CmdFocus3D", NULL, 0x1, NULL, NULL },
    { "newAlgoFocusWithGeogebraCommonKernelConstruction:withNSStringArray:withGeogebraCommonKernelKernelNDGeoConicND:", "newAlgoFocus", "Lgeogebra.common.kernel.algos.AlgoFocus;", 0x4, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonGeogebra3DKernel3DCommandsCmdFocus3D = { 2, "CmdFocus3D", "geogebra.common.geogebra3D.kernel3D.commands", NULL, 0x1, 2, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonGeogebra3DKernel3DCommandsCmdFocus3D;
}

@end

void GeogebraCommonGeogebra3DKernel3DCommandsCmdFocus3D_initWithGeogebraCommonKernelKernel_(GeogebraCommonGeogebra3DKernel3DCommandsCmdFocus3D *self, GeogebraCommonKernelKernel *kernel) {
  GeogebraCommonKernelCommandsCmdFocus_initWithGeogebraCommonKernelKernel_(self, kernel);
}

GeogebraCommonGeogebra3DKernel3DCommandsCmdFocus3D *new_GeogebraCommonGeogebra3DKernel3DCommandsCmdFocus3D_initWithGeogebraCommonKernelKernel_(GeogebraCommonKernelKernel *kernel) {
  GeogebraCommonGeogebra3DKernel3DCommandsCmdFocus3D *self = [GeogebraCommonGeogebra3DKernel3DCommandsCmdFocus3D alloc];
  GeogebraCommonGeogebra3DKernel3DCommandsCmdFocus3D_initWithGeogebraCommonKernelKernel_(self, kernel);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonGeogebra3DKernel3DCommandsCmdFocus3D)
