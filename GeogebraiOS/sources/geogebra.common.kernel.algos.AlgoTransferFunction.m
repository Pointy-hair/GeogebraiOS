//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/algos/AlgoTransferFunction.java
//


#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "geogebra/common/kernel/Construction.h"
#include "geogebra/common/kernel/algos/AlgoElement.h"
#include "geogebra/common/kernel/algos/AlgoTransferFunction.h"
#include "geogebra/common/kernel/algos/GetCommand.h"
#include "geogebra/common/kernel/commands/Commands.h"
#include "geogebra/common/kernel/geos/GeoElement.h"
#include "geogebra/common/kernel/geos/GeoFunction.h"
#include "geogebra/common/kernel/geos/GeoList.h"
#include "geogebra/common/kernel/geos/GeoNumberValue.h"
#include "geogebra/common/kernel/geos/GeoTransferFunction.h"

@interface GeogebraCommonKernelAlgosAlgoTransferFunction () {
 @public
  GeogebraCommonKernelGeosGeoTransferFunction *gcf_;
  id<GeogebraCommonKernelGeosGeoNumberValue> omegaStart_;
  GeogebraCommonKernelGeosGeoList *num_;
  GeogebraCommonKernelGeosGeoList *den_;
  GeogebraCommonKernelGeosGeoFunction *function_;
}

@end

J2OBJC_FIELD_SETTER(GeogebraCommonKernelAlgosAlgoTransferFunction, gcf_, GeogebraCommonKernelGeosGeoTransferFunction *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelAlgosAlgoTransferFunction, omegaStart_, id<GeogebraCommonKernelGeosGeoNumberValue>)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelAlgosAlgoTransferFunction, num_, GeogebraCommonKernelGeosGeoList *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelAlgosAlgoTransferFunction, den_, GeogebraCommonKernelGeosGeoList *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelAlgosAlgoTransferFunction, function_, GeogebraCommonKernelGeosGeoFunction *)

@implementation GeogebraCommonKernelAlgosAlgoTransferFunction

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)c
                                            withNSString:(NSString *)label
                     withGeogebraCommonKernelGeosGeoList:(GeogebraCommonKernelGeosGeoList *)num
                     withGeogebraCommonKernelGeosGeoList:(GeogebraCommonKernelGeosGeoList *)den
              withGeogebraCommonKernelGeosGeoNumberValue:(id<GeogebraCommonKernelGeosGeoNumberValue>)omegaStart {
  GeogebraCommonKernelAlgosAlgoTransferFunction_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoNumberValue_(self, c, label, num, den, omegaStart);
  return self;
}

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)c
                                            withNSString:(NSString *)label
                     withGeogebraCommonKernelGeosGeoList:(GeogebraCommonKernelGeosGeoList *)num
                     withGeogebraCommonKernelGeosGeoList:(GeogebraCommonKernelGeosGeoList *)den {
  GeogebraCommonKernelAlgosAlgoTransferFunction_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoList_(self, c, label, num, den);
  return self;
}

- (void)setInputOutput {
  [self setOnlyOutputWithGeogebraCommonKernelGeosToGeoElement:gcf_];
  if (omegaStart_ != nil) {
    GeogebraCommonKernelAlgosAlgoElement_setAndConsume_input_(self, [IOSObjectArray newArrayWithLength:3 type:GeogebraCommonKernelGeosGeoElement_class_()]);
    IOSObjectArray_Set(input_, 2, [omegaStart_ toGeoElement]);
  }
  else {
    GeogebraCommonKernelAlgosAlgoElement_setAndConsume_input_(self, [IOSObjectArray newArrayWithLength:2 type:GeogebraCommonKernelGeosGeoElement_class_()]);
  }
  IOSObjectArray_Set(nil_chk(input_), 0, num_);
  IOSObjectArray_Set(input_, 1, den_);
  [self setDependencies];
}

- (GeogebraCommonKernelGeosGeoElement *)getResult {
  return [self getOutputWithInt:0];
}

- (void)compute {
  if ([((GeogebraCommonKernelGeosGeoTransferFunction *) nil_chk(gcf_)) isDefined]) {
    [gcf_ evaluate];
  }
}

- (id<GeogebraCommonKernelAlgosGetCommand>)getClassName {
  return GeogebraCommonKernelCommandsCommandsEnum_get_Nyquist();
}

- (void)dealloc {
  RELEASE_(gcf_);
  RELEASE_(omegaStart_);
  RELEASE_(num_);
  RELEASE_(den_);
  RELEASE_(function_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonKernelConstruction:withNSString:withGeogebraCommonKernelGeosGeoList:withGeogebraCommonKernelGeosGeoList:withGeogebraCommonKernelGeosGeoNumberValue:", "AlgoTransferFunction", NULL, 0x1, NULL, NULL },
    { "initWithGeogebraCommonKernelConstruction:withNSString:withGeogebraCommonKernelGeosGeoList:withGeogebraCommonKernelGeosGeoList:", "AlgoTransferFunction", NULL, 0x1, NULL, NULL },
    { "setInputOutput", NULL, "V", 0x4, NULL, NULL },
    { "getResult", NULL, "Lgeogebra.common.kernel.geos.GeoElement;", 0x1, NULL, NULL },
    { "compute", NULL, "V", 0x1, NULL, NULL },
    { "getClassName", NULL, "Lgeogebra.common.kernel.algos.GetCommand;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "gcf_", NULL, 0x2, "Lgeogebra.common.kernel.geos.GeoTransferFunction;", NULL, NULL,  },
    { "omegaStart_", NULL, 0x2, "Lgeogebra.common.kernel.geos.GeoNumberValue;", NULL, NULL,  },
    { "num_", NULL, 0x2, "Lgeogebra.common.kernel.geos.GeoList;", NULL, NULL,  },
    { "den_", NULL, 0x2, "Lgeogebra.common.kernel.geos.GeoList;", NULL, NULL,  },
    { "function_", NULL, 0x2, "Lgeogebra.common.kernel.geos.GeoFunction;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelAlgosAlgoTransferFunction = { 2, "AlgoTransferFunction", "geogebra.common.kernel.algos", NULL, 0x1, 6, methods, 5, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelAlgosAlgoTransferFunction;
}

@end

void GeogebraCommonKernelAlgosAlgoTransferFunction_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoNumberValue_(GeogebraCommonKernelAlgosAlgoTransferFunction *self, GeogebraCommonKernelConstruction *c, NSString *label, GeogebraCommonKernelGeosGeoList *num, GeogebraCommonKernelGeosGeoList *den, id<GeogebraCommonKernelGeosGeoNumberValue> omegaStart) {
  GeogebraCommonKernelAlgosAlgoElement_initWithGeogebraCommonKernelConstruction_(self, c);
  GeogebraCommonKernelAlgosAlgoTransferFunction_set_omegaStart_(self, omegaStart);
  GeogebraCommonKernelAlgosAlgoTransferFunction_setAndConsume_gcf_(self, new_GeogebraCommonKernelGeosGeoTransferFunction_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoList_withInt_(c, label, num, den, J2ObjCFpToInt([((id<GeogebraCommonKernelGeosGeoNumberValue>) nil_chk(self->omegaStart_)) getDouble])));
  GeogebraCommonKernelAlgosAlgoTransferFunction_set_function_(self, [self->gcf_ getGeoFunction]);
  GeogebraCommonKernelAlgosAlgoTransferFunction_set_num_(self, num);
  GeogebraCommonKernelAlgosAlgoTransferFunction_set_den_(self, den);
  [self setInputOutput];
  [self compute];
  [self->gcf_ setLabelWithNSString:label];
}

GeogebraCommonKernelAlgosAlgoTransferFunction *new_GeogebraCommonKernelAlgosAlgoTransferFunction_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoNumberValue_(GeogebraCommonKernelConstruction *c, NSString *label, GeogebraCommonKernelGeosGeoList *num, GeogebraCommonKernelGeosGeoList *den, id<GeogebraCommonKernelGeosGeoNumberValue> omegaStart) {
  GeogebraCommonKernelAlgosAlgoTransferFunction *self = [GeogebraCommonKernelAlgosAlgoTransferFunction alloc];
  GeogebraCommonKernelAlgosAlgoTransferFunction_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoNumberValue_(self, c, label, num, den, omegaStart);
  return self;
}

void GeogebraCommonKernelAlgosAlgoTransferFunction_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoList_(GeogebraCommonKernelAlgosAlgoTransferFunction *self, GeogebraCommonKernelConstruction *c, NSString *label, GeogebraCommonKernelGeosGeoList *num, GeogebraCommonKernelGeosGeoList *den) {
  GeogebraCommonKernelAlgosAlgoElement_initWithGeogebraCommonKernelConstruction_(self, c);
  GeogebraCommonKernelAlgosAlgoTransferFunction_setAndConsume_gcf_(self, new_GeogebraCommonKernelGeosGeoTransferFunction_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoList_withInt_(c, label, num, den, 10));
  GeogebraCommonKernelAlgosAlgoTransferFunction_set_function_(self, [self->gcf_ getGeoFunction]);
  GeogebraCommonKernelAlgosAlgoTransferFunction_set_num_(self, num);
  GeogebraCommonKernelAlgosAlgoTransferFunction_set_den_(self, den);
  [self setInputOutput];
  [self compute];
  [self->gcf_ setLabelWithNSString:label];
}

GeogebraCommonKernelAlgosAlgoTransferFunction *new_GeogebraCommonKernelAlgosAlgoTransferFunction_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoList_(GeogebraCommonKernelConstruction *c, NSString *label, GeogebraCommonKernelGeosGeoList *num, GeogebraCommonKernelGeosGeoList *den) {
  GeogebraCommonKernelAlgosAlgoTransferFunction *self = [GeogebraCommonKernelAlgosAlgoTransferFunction alloc];
  GeogebraCommonKernelAlgosAlgoTransferFunction_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoList_(self, c, label, num, den);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelAlgosAlgoTransferFunction)
