//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/CircularDefinitionException.java
//


#include "J2ObjC_source.h"
#include "geogebra/common/kernel/CircularDefinitionException.h"
#include "java/lang/Exception.h"

#define GeogebraCommonKernelCircularDefinitionException_serialVersionUID -1012964850092798314LL

J2OBJC_STATIC_FIELD_GETTER(GeogebraCommonKernelCircularDefinitionException, serialVersionUID, jlong)

@implementation GeogebraCommonKernelCircularDefinitionException

- (instancetype)init {
  GeogebraCommonKernelCircularDefinitionException_init(self);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "CircularDefinitionException", NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID_", NULL, 0x1a, "J", NULL, NULL, .constantValue.asLong = GeogebraCommonKernelCircularDefinitionException_serialVersionUID },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelCircularDefinitionException = { 2, "CircularDefinitionException", "geogebra.common.kernel", NULL, 0x1, 1, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelCircularDefinitionException;
}

@end

void GeogebraCommonKernelCircularDefinitionException_init(GeogebraCommonKernelCircularDefinitionException *self) {
  JavaLangException_initWithNSString_(self, @"CircularDefinition");
}

GeogebraCommonKernelCircularDefinitionException *new_GeogebraCommonKernelCircularDefinitionException_init() {
  GeogebraCommonKernelCircularDefinitionException *self = [GeogebraCommonKernelCircularDefinitionException alloc];
  GeogebraCommonKernelCircularDefinitionException_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelCircularDefinitionException)
