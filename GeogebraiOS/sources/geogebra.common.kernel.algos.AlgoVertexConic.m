//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/algos/AlgoVertexConic.java
//


#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "geogebra/common/kernel/Construction.h"
#include "geogebra/common/kernel/StringTemplate.h"
#include "geogebra/common/kernel/algos/AlgoElement.h"
#include "geogebra/common/kernel/algos/AlgoVertexConic.h"
#include "geogebra/common/kernel/algos/ConstructionElement.h"
#include "geogebra/common/kernel/commands/Commands.h"
#include "geogebra/common/kernel/geos/GeoElement.h"
#include "geogebra/common/kernel/geos/GeoPoint.h"
#include "geogebra/common/kernel/geos/GeoVec2D.h"
#include "geogebra/common/kernel/kernelND/GeoConicND.h"
#include "geogebra/common/kernel/kernelND/GeoConicNDConstants.h"
#include "geogebra/common/kernel/kernelND/GeoPointND.h"
#include "geogebra/common/main/Localization.h"

@interface GeogebraCommonKernelAlgosAlgoVertexConic () {
 @public
  jdouble temp1_, temp2_;
  GeogebraCommonKernelGeosGeoVec2D *b_;
  IOSObjectArray *eigenvec_;
}

@end

J2OBJC_FIELD_SETTER(GeogebraCommonKernelAlgosAlgoVertexConic, b_, GeogebraCommonKernelGeosGeoVec2D *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelAlgosAlgoVertexConic, eigenvec_, IOSObjectArray *)

__attribute__((unused)) static void GeogebraCommonKernelAlgosAlgoVertexConic_compute(GeogebraCommonKernelAlgosAlgoVertexConic *self);

@implementation GeogebraCommonKernelAlgosAlgoVertexConic

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                                            withNSString:(NSString *)label
              withGeogebraCommonKernelKernelNDGeoConicND:(GeogebraCommonKernelKernelNDGeoConicND *)c {
  GeogebraCommonKernelAlgosAlgoVertexConic_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelKernelNDGeoConicND_(self, cons, label, c);
  return self;
}

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                                       withNSStringArray:(IOSObjectArray *)labels
              withGeogebraCommonKernelKernelNDGeoConicND:(GeogebraCommonKernelKernelNDGeoConicND *)c {
  GeogebraCommonKernelAlgosAlgoVertexConic_initWithGeogebraCommonKernelConstruction_withNSStringArray_withGeogebraCommonKernelKernelNDGeoConicND_(self, cons, labels, c);
  return self;
}

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
              withGeogebraCommonKernelKernelNDGeoConicND:(GeogebraCommonKernelKernelNDGeoConicND *)c {
  GeogebraCommonKernelAlgosAlgoVertexConic_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelKernelNDGeoConicND_(self, cons, c);
  return self;
}

- (void)createVertexWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons {
  GeogebraCommonKernelAlgosAlgoVertexConic_setAndConsume_vertex_(self, [IOSObjectArray newArrayWithLength:4 type:GeogebraCommonKernelGeosGeoPoint_class_()]);
  for (jint i = 0; i < vertex_->size_; i++) {
    IOSObjectArray_SetAndConsume(vertex_, i, new_GeogebraCommonKernelGeosGeoPoint_initWithGeogebraCommonKernelConstruction_(cons));
  }
}

- (GeogebraCommonKernelCommandsCommandsEnum *)getClassName {
  return GeogebraCommonKernelCommandsCommandsEnum_get_Vertex();
}

- (void)setInputOutput {
  GeogebraCommonKernelAlgosAlgoElement_setAndConsume_input_(self, [IOSObjectArray newArrayWithLength:1 type:GeogebraCommonKernelGeosGeoElement_class_()]);
  IOSObjectArray_Set(input_, 0, c_);
  [super setOutputWithGeogebraCommonKernelGeosGeoElementArray:(IOSObjectArray *) check_class_cast(vertex_, [IOSObjectArray class])];
  [self setDependencies];
}

- (GeogebraCommonKernelKernelNDGeoConicND *)getConic {
  return c_;
}

- (IOSObjectArray *)getVertex {
  return vertex_;
}

- (void)setCoordsWithInt:(jint)i
              withDouble:(jdouble)x
              withDouble:(jdouble)y {
  [((id<GeogebraCommonKernelKernelNDGeoPointND>) nil_chk(IOSObjectArray_Get(nil_chk(vertex_), i))) setCoordsWithDouble:x withDouble:y withDouble:1.0];
}

- (void)compute {
  GeogebraCommonKernelAlgosAlgoVertexConic_compute(self);
}

- (NSString *)toStringWithGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl {
  return [((GeogebraCommonMainLocalization *) nil_chk([self getLoc])) getPlainWithNSString:@"VertexOfA" withNSString:[((GeogebraCommonKernelKernelNDGeoConicND *) nil_chk(c_)) getLabelWithGeogebraCommonKernelStringTemplate:tpl]];
}

- (void)dealloc {
  RELEASE_(c_);
  RELEASE_(vertex_);
  RELEASE_(b_);
  RELEASE_(eigenvec_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonKernelConstruction:withNSString:withGeogebraCommonKernelKernelNDGeoConicND:", "AlgoVertexConic", NULL, 0x0, NULL, NULL },
    { "initWithGeogebraCommonKernelConstruction:withNSStringArray:withGeogebraCommonKernelKernelNDGeoConicND:", "AlgoVertexConic", NULL, 0x1, NULL, NULL },
    { "initWithGeogebraCommonKernelConstruction:withGeogebraCommonKernelKernelNDGeoConicND:", "AlgoVertexConic", NULL, 0x1, NULL, NULL },
    { "createVertexWithGeogebraCommonKernelConstruction:", "createVertex", "V", 0x4, NULL, NULL },
    { "getClassName", NULL, "Lgeogebra.common.kernel.commands.Commands;", 0x1, NULL, NULL },
    { "setInputOutput", NULL, "V", 0x1, NULL, NULL },
    { "getConic", NULL, "Lgeogebra.common.kernel.kernelND.GeoConicND;", 0x0, NULL, NULL },
    { "getVertex", NULL, "[Lgeogebra.common.kernel.kernelND.GeoPointND;", 0x1, NULL, NULL },
    { "setCoordsWithInt:withDouble:withDouble:", "setCoords", "V", 0x4, NULL, NULL },
    { "compute", NULL, "V", 0x11, NULL, NULL },
    { "toStringWithGeogebraCommonKernelStringTemplate:", "toString", "Ljava.lang.String;", 0x11, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "c_", NULL, 0x4, "Lgeogebra.common.kernel.kernelND.GeoConicND;", NULL, NULL,  },
    { "vertex_", NULL, 0x4, "[Lgeogebra.common.kernel.kernelND.GeoPointND;", NULL, NULL,  },
    { "temp1_", NULL, 0x82, "D", NULL, NULL,  },
    { "temp2_", NULL, 0x82, "D", NULL, NULL,  },
    { "b_", NULL, 0x2, "Lgeogebra.common.kernel.geos.GeoVec2D;", NULL, NULL,  },
    { "eigenvec_", NULL, 0x2, "[Lgeogebra.common.kernel.geos.GeoVec2D;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelAlgosAlgoVertexConic = { 2, "AlgoVertexConic", "geogebra.common.kernel.algos", NULL, 0x1, 11, methods, 6, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelAlgosAlgoVertexConic;
}

@end

void GeogebraCommonKernelAlgosAlgoVertexConic_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelKernelNDGeoConicND_(GeogebraCommonKernelAlgosAlgoVertexConic *self, GeogebraCommonKernelConstruction *cons, NSString *label, GeogebraCommonKernelKernelNDGeoConicND *c) {
  GeogebraCommonKernelAlgosAlgoVertexConic_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelKernelNDGeoConicND_(self, cons, c);
  GeogebraCommonKernelGeosGeoElement_setLabelsWithNSString_withGeogebraCommonKernelGeosGeoElementArray_(label, (IOSObjectArray *) check_class_cast(self->vertex_, [IOSObjectArray class]));
}

GeogebraCommonKernelAlgosAlgoVertexConic *new_GeogebraCommonKernelAlgosAlgoVertexConic_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelKernelNDGeoConicND_(GeogebraCommonKernelConstruction *cons, NSString *label, GeogebraCommonKernelKernelNDGeoConicND *c) {
  GeogebraCommonKernelAlgosAlgoVertexConic *self = [GeogebraCommonKernelAlgosAlgoVertexConic alloc];
  GeogebraCommonKernelAlgosAlgoVertexConic_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelKernelNDGeoConicND_(self, cons, label, c);
  return self;
}

void GeogebraCommonKernelAlgosAlgoVertexConic_initWithGeogebraCommonKernelConstruction_withNSStringArray_withGeogebraCommonKernelKernelNDGeoConicND_(GeogebraCommonKernelAlgosAlgoVertexConic *self, GeogebraCommonKernelConstruction *cons, IOSObjectArray *labels, GeogebraCommonKernelKernelNDGeoConicND *c) {
  GeogebraCommonKernelAlgosAlgoVertexConic_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelKernelNDGeoConicND_(self, cons, c);
  GeogebraCommonKernelGeosGeoElement_setLabelsWithNSStringArray_withGeogebraCommonKernelGeosGeoElementArray_(labels, (IOSObjectArray *) check_class_cast(self->vertex_, [IOSObjectArray class]));
}

GeogebraCommonKernelAlgosAlgoVertexConic *new_GeogebraCommonKernelAlgosAlgoVertexConic_initWithGeogebraCommonKernelConstruction_withNSStringArray_withGeogebraCommonKernelKernelNDGeoConicND_(GeogebraCommonKernelConstruction *cons, IOSObjectArray *labels, GeogebraCommonKernelKernelNDGeoConicND *c) {
  GeogebraCommonKernelAlgosAlgoVertexConic *self = [GeogebraCommonKernelAlgosAlgoVertexConic alloc];
  GeogebraCommonKernelAlgosAlgoVertexConic_initWithGeogebraCommonKernelConstruction_withNSStringArray_withGeogebraCommonKernelKernelNDGeoConicND_(self, cons, labels, c);
  return self;
}

void GeogebraCommonKernelAlgosAlgoVertexConic_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelKernelNDGeoConicND_(GeogebraCommonKernelAlgosAlgoVertexConic *self, GeogebraCommonKernelConstruction *cons, GeogebraCommonKernelKernelNDGeoConicND *c) {
  GeogebraCommonKernelAlgosAlgoElement_initWithGeogebraCommonKernelConstruction_(self, cons);
  GeogebraCommonKernelAlgosAlgoVertexConic_set_c_(self, c);
  [self createVertexWithGeogebraCommonKernelConstruction:cons];
  for (jint i = 1; i < ((IOSObjectArray *) nil_chk(self->vertex_))->size_; i++) {
    [((id<GeogebraCommonKernelKernelNDGeoPointND>) nil_chk(IOSObjectArray_Get(self->vertex_, i))) showUndefinedInAlgebraViewWithBoolean:NO];
  }
  [self setInputOutput];
  GeogebraCommonKernelAlgosAlgoVertexConic_set_b_(self, ((GeogebraCommonKernelKernelNDGeoConicND *) nil_chk(c))->b_);
  GeogebraCommonKernelAlgosAlgoVertexConic_set_eigenvec_(self, c->eigenvec_);
  GeogebraCommonKernelAlgosAlgoVertexConic_compute(self);
}

GeogebraCommonKernelAlgosAlgoVertexConic *new_GeogebraCommonKernelAlgosAlgoVertexConic_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelKernelNDGeoConicND_(GeogebraCommonKernelConstruction *cons, GeogebraCommonKernelKernelNDGeoConicND *c) {
  GeogebraCommonKernelAlgosAlgoVertexConic *self = [GeogebraCommonKernelAlgosAlgoVertexConic alloc];
  GeogebraCommonKernelAlgosAlgoVertexConic_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelKernelNDGeoConicND_(self, cons, c);
  return self;
}

void GeogebraCommonKernelAlgosAlgoVertexConic_compute(GeogebraCommonKernelAlgosAlgoVertexConic *self) {
  switch (((GeogebraCommonKernelKernelNDGeoConicND *) nil_chk(self->c_))->type_) {
    case GeogebraCommonKernelKernelNDGeoConicNDConstants_CONIC_CIRCLE:
    case GeogebraCommonKernelKernelNDGeoConicNDConstants_CONIC_ELLIPSE:
    self->temp1_ = IOSDoubleArray_Get(nil_chk(self->c_->halfAxes_), 0) * [((GeogebraCommonKernelGeosGeoVec2D *) nil_chk(IOSObjectArray_Get(nil_chk(self->eigenvec_), 0))) getX];
    self->temp2_ = IOSDoubleArray_Get(self->c_->halfAxes_, 0) * [((GeogebraCommonKernelGeosGeoVec2D *) nil_chk(IOSObjectArray_Get(self->eigenvec_, 0))) getY];
    [self setCoordsWithInt:0 withDouble:[((GeogebraCommonKernelGeosGeoVec2D *) nil_chk(self->b_)) getX] - self->temp1_ withDouble:[self->b_ getY] - self->temp2_];
    [self setCoordsWithInt:1 withDouble:[self->b_ getX] + self->temp1_ withDouble:[self->b_ getY] + self->temp2_];
    self->temp1_ = IOSDoubleArray_Get(self->c_->halfAxes_, 1) * [((GeogebraCommonKernelGeosGeoVec2D *) nil_chk(IOSObjectArray_Get(self->eigenvec_, 1))) getX];
    self->temp2_ = IOSDoubleArray_Get(self->c_->halfAxes_, 1) * [((GeogebraCommonKernelGeosGeoVec2D *) nil_chk(IOSObjectArray_Get(self->eigenvec_, 1))) getY];
    [self setCoordsWithInt:2 withDouble:[self->b_ getX] - self->temp1_ withDouble:[self->b_ getY] - self->temp2_];
    [self setCoordsWithInt:3 withDouble:[self->b_ getX] + self->temp1_ withDouble:[self->b_ getY] + self->temp2_];
    break;
    case GeogebraCommonKernelKernelNDGeoConicNDConstants_CONIC_HYPERBOLA:
    self->temp1_ = IOSDoubleArray_Get(nil_chk(self->c_->halfAxes_), 0) * [((GeogebraCommonKernelGeosGeoVec2D *) nil_chk(IOSObjectArray_Get(nil_chk(self->eigenvec_), 0))) getX];
    self->temp2_ = IOSDoubleArray_Get(self->c_->halfAxes_, 0) * [((GeogebraCommonKernelGeosGeoVec2D *) nil_chk(IOSObjectArray_Get(self->eigenvec_, 0))) getY];
    [self setCoordsWithInt:0 withDouble:[((GeogebraCommonKernelGeosGeoVec2D *) nil_chk(self->b_)) getX] - self->temp1_ withDouble:[self->b_ getY] - self->temp2_];
    [self setCoordsWithInt:1 withDouble:[self->b_ getX] + self->temp1_ withDouble:[self->b_ getY] + self->temp2_];
    [((id<GeogebraCommonKernelKernelNDGeoPointND>) nil_chk(IOSObjectArray_Get(nil_chk(self->vertex_), 2))) setUndefined];
    [((id<GeogebraCommonKernelKernelNDGeoPointND>) nil_chk(IOSObjectArray_Get(self->vertex_, 3))) setUndefined];
    break;
    case GeogebraCommonKernelKernelNDGeoConicNDConstants_CONIC_PARABOLA:
    case GeogebraCommonKernelKernelNDGeoConicNDConstants_CONIC_PARALLEL_LINES:
    case GeogebraCommonKernelKernelNDGeoConicNDConstants_CONIC_DOUBLE_LINE:
    [self setCoordsWithInt:0 withDouble:[((GeogebraCommonKernelGeosGeoVec2D *) nil_chk(self->b_)) getX] withDouble:[self->b_ getY]];
    [((id<GeogebraCommonKernelKernelNDGeoPointND>) nil_chk(IOSObjectArray_Get(nil_chk(self->vertex_), 1))) setUndefined];
    [((id<GeogebraCommonKernelKernelNDGeoPointND>) nil_chk(IOSObjectArray_Get(self->vertex_, 2))) setUndefined];
    [((id<GeogebraCommonKernelKernelNDGeoPointND>) nil_chk(IOSObjectArray_Get(self->vertex_, 3))) setUndefined];
    break;
    default:
    [((id<GeogebraCommonKernelKernelNDGeoPointND>) nil_chk(IOSObjectArray_Get(nil_chk(self->vertex_), 0))) setUndefined];
    [((id<GeogebraCommonKernelKernelNDGeoPointND>) nil_chk(IOSObjectArray_Get(self->vertex_, 1))) setUndefined];
    [((id<GeogebraCommonKernelKernelNDGeoPointND>) nil_chk(IOSObjectArray_Get(self->vertex_, 2))) setUndefined];
    [((id<GeogebraCommonKernelKernelNDGeoPointND>) nil_chk(IOSObjectArray_Get(self->vertex_, 3))) setUndefined];
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelAlgosAlgoVertexConic)
