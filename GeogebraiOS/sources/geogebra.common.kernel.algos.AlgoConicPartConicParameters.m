//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/algos/AlgoConicPartConicParameters.java
//


#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "geogebra/common/kernel/Construction.h"
#include "geogebra/common/kernel/algos/AlgoConicPart.h"
#include "geogebra/common/kernel/algos/AlgoConicPartConicParameters.h"
#include "geogebra/common/kernel/algos/AlgoElement.h"
#include "geogebra/common/kernel/arithmetic/NumberValue.h"
#include "geogebra/common/kernel/geos/GeoConicPart.h"
#include "geogebra/common/kernel/geos/GeoElement.h"
#include "geogebra/common/kernel/kernelND/GeoConicND.h"

@implementation GeogebraCommonKernelAlgosAlgoConicPartConicParameters

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                                            withNSString:(NSString *)label
              withGeogebraCommonKernelKernelNDGeoConicND:(GeogebraCommonKernelKernelNDGeoConicND *)circle
           withGeogebraCommonKernelArithmeticNumberValue:(id<GeogebraCommonKernelArithmeticNumberValue>)startParameter
           withGeogebraCommonKernelArithmeticNumberValue:(id<GeogebraCommonKernelArithmeticNumberValue>)endParameter
                                                 withInt:(jint)type {
  GeogebraCommonKernelAlgosAlgoConicPartConicParameters_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelKernelNDGeoConicND_withGeogebraCommonKernelArithmeticNumberValue_withGeogebraCommonKernelArithmeticNumberValue_withInt_(self, cons, label, circle, startParameter, endParameter, type);
  return self;
}

- (GeogebraCommonKernelKernelNDGeoConicND *)newGeoConicPartWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                                                                                        withInt:(jint)type {
  return [new_GeogebraCommonKernelGeosGeoConicPart_initWithGeogebraCommonKernelConstruction_withInt_(cons, type) autorelease];
}

- (void)setInputOutput {
  GeogebraCommonKernelAlgosAlgoElement_setAndConsume_input_(self, [IOSObjectArray newArrayWithLength:3 type:GeogebraCommonKernelGeosGeoElement_class_()]);
  IOSObjectArray_Set(input_, 0, conic_);
  IOSObjectArray_Set(input_, 1, [((id<GeogebraCommonKernelArithmeticNumberValue>) nil_chk(startParam_)) toGeoElement]);
  IOSObjectArray_Set(input_, 2, [((id<GeogebraCommonKernelArithmeticNumberValue>) nil_chk(endParam_)) toGeoElement]);
  [super setOutputLengthWithInt:1];
  [super setOutputWithInt:0 withGeogebraCommonKernelGeosGeoElement:conicPart_];
  [self setDependencies];
}

- (GeogebraCommonKernelKernelNDGeoConicND *)getConicPart {
  return [super getConicPart];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonKernelConstruction:withNSString:withGeogebraCommonKernelKernelNDGeoConicND:withGeogebraCommonKernelArithmeticNumberValue:withGeogebraCommonKernelArithmeticNumberValue:withInt:", "AlgoConicPartConicParameters", NULL, 0x1, NULL, NULL },
    { "newGeoConicPartWithGeogebraCommonKernelConstruction:withInt:", "newGeoConicPart", "Lgeogebra.common.kernel.kernelND.GeoConicND;", 0x4, NULL, NULL },
    { "setInputOutput", NULL, "V", 0x4, NULL, NULL },
    { "getConicPart", NULL, "Lgeogebra.common.kernel.kernelND.GeoConicND;", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelAlgosAlgoConicPartConicParameters = { 2, "AlgoConicPartConicParameters", "geogebra.common.kernel.algos", NULL, 0x1, 4, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelAlgosAlgoConicPartConicParameters;
}

@end

void GeogebraCommonKernelAlgosAlgoConicPartConicParameters_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelKernelNDGeoConicND_withGeogebraCommonKernelArithmeticNumberValue_withGeogebraCommonKernelArithmeticNumberValue_withInt_(GeogebraCommonKernelAlgosAlgoConicPartConicParameters *self, GeogebraCommonKernelConstruction *cons, NSString *label, GeogebraCommonKernelKernelNDGeoConicND *circle, id<GeogebraCommonKernelArithmeticNumberValue> startParameter, id<GeogebraCommonKernelArithmeticNumberValue> endParameter, jint type) {
  GeogebraCommonKernelAlgosAlgoConicPart_initWithGeogebraCommonKernelConstruction_withInt_(self, cons, type);
  GeogebraCommonKernelAlgosAlgoConicPart_set_conic_(self, circle);
  GeogebraCommonKernelAlgosAlgoConicPart_set_startParam_(self, startParameter);
  GeogebraCommonKernelAlgosAlgoConicPart_set_endParam_(self, endParameter);
  GeogebraCommonKernelAlgosAlgoConicPart_set_conicPart_(self, [self newGeoConicPartWithGeogebraCommonKernelConstruction:cons withInt:type]);
  [self setInputOutput];
  [self compute];
  [((GeogebraCommonKernelKernelNDGeoConicND *) nil_chk(self->conicPart_)) setLabelWithNSString:label];
}

GeogebraCommonKernelAlgosAlgoConicPartConicParameters *new_GeogebraCommonKernelAlgosAlgoConicPartConicParameters_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelKernelNDGeoConicND_withGeogebraCommonKernelArithmeticNumberValue_withGeogebraCommonKernelArithmeticNumberValue_withInt_(GeogebraCommonKernelConstruction *cons, NSString *label, GeogebraCommonKernelKernelNDGeoConicND *circle, id<GeogebraCommonKernelArithmeticNumberValue> startParameter, id<GeogebraCommonKernelArithmeticNumberValue> endParameter, jint type) {
  GeogebraCommonKernelAlgosAlgoConicPartConicParameters *self = [GeogebraCommonKernelAlgosAlgoConicPartConicParameters alloc];
  GeogebraCommonKernelAlgosAlgoConicPartConicParameters_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelKernelNDGeoConicND_withGeogebraCommonKernelArithmeticNumberValue_withGeogebraCommonKernelArithmeticNumberValue_withInt_(self, cons, label, circle, startParameter, endParameter, type);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelAlgosAlgoConicPartConicParameters)
