//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/move/ggtapi/models/MaterialFilter.java
//


#include "J2ObjC_source.h"
#include "geogebra/common/move/ggtapi/models/Material.h"
#include "geogebra/common/move/ggtapi/models/MaterialFilter.h"
#include "geogebra/common/util/StringUtil.h"

@interface GeogebraCommonMoveGgtapiModelsMaterialFilter_$1 : GeogebraCommonMoveGgtapiModelsMaterialFilter

- (jboolean)checkWithGeogebraCommonMoveGgtapiModelsMaterial:(GeogebraCommonMoveGgtapiModelsMaterial *)m;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonMoveGgtapiModelsMaterialFilter_$1)

__attribute__((unused)) static void GeogebraCommonMoveGgtapiModelsMaterialFilter_$1_init(GeogebraCommonMoveGgtapiModelsMaterialFilter_$1 *self);

__attribute__((unused)) static GeogebraCommonMoveGgtapiModelsMaterialFilter_$1 *new_GeogebraCommonMoveGgtapiModelsMaterialFilter_$1_init() NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonMoveGgtapiModelsMaterialFilter_$1)

@interface GeogebraCommonMoveGgtapiModelsMaterialFilter_$2 : GeogebraCommonMoveGgtapiModelsMaterialFilter {
 @public
  NSString *val$query_;
}

- (jboolean)checkWithGeogebraCommonMoveGgtapiModelsMaterial:(GeogebraCommonMoveGgtapiModelsMaterial *)m;

- (instancetype)initWithNSString:(NSString *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonMoveGgtapiModelsMaterialFilter_$2)

J2OBJC_FIELD_SETTER(GeogebraCommonMoveGgtapiModelsMaterialFilter_$2, val$query_, NSString *)

__attribute__((unused)) static void GeogebraCommonMoveGgtapiModelsMaterialFilter_$2_initWithNSString_(GeogebraCommonMoveGgtapiModelsMaterialFilter_$2 *self, NSString *capture$0);

__attribute__((unused)) static GeogebraCommonMoveGgtapiModelsMaterialFilter_$2 *new_GeogebraCommonMoveGgtapiModelsMaterialFilter_$2_initWithNSString_(NSString *capture$0) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonMoveGgtapiModelsMaterialFilter_$2)

@implementation GeogebraCommonMoveGgtapiModelsMaterialFilter

- (jboolean)checkWithGeogebraCommonMoveGgtapiModelsMaterial:(GeogebraCommonMoveGgtapiModelsMaterial *)m {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

+ (GeogebraCommonMoveGgtapiModelsMaterialFilter *)getUniversalFilter {
  return GeogebraCommonMoveGgtapiModelsMaterialFilter_getUniversalFilter();
}

+ (GeogebraCommonMoveGgtapiModelsMaterialFilter *)getSearchFilterWithNSString:(NSString *)query {
  return GeogebraCommonMoveGgtapiModelsMaterialFilter_getSearchFilterWithNSString_(query);
}

- (instancetype)init {
  GeogebraCommonMoveGgtapiModelsMaterialFilter_init(self);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "checkWithGeogebraCommonMoveGgtapiModelsMaterial:", "check", "Z", 0x401, NULL, NULL },
    { "getUniversalFilter", NULL, "Lgeogebra.common.move.ggtapi.models.MaterialFilter;", 0x9, NULL, NULL },
    { "getSearchFilterWithNSString:", "getSearchFilter", "Lgeogebra.common.move.ggtapi.models.MaterialFilter;", 0x9, NULL, NULL },
    { "init", NULL, NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonMoveGgtapiModelsMaterialFilter = { 2, "MaterialFilter", "geogebra.common.move.ggtapi.models", NULL, 0x401, 4, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonMoveGgtapiModelsMaterialFilter;
}

@end

GeogebraCommonMoveGgtapiModelsMaterialFilter *GeogebraCommonMoveGgtapiModelsMaterialFilter_getUniversalFilter() {
  GeogebraCommonMoveGgtapiModelsMaterialFilter_initialize();
  return [new_GeogebraCommonMoveGgtapiModelsMaterialFilter_$1_init() autorelease];
}

GeogebraCommonMoveGgtapiModelsMaterialFilter *GeogebraCommonMoveGgtapiModelsMaterialFilter_getSearchFilterWithNSString_(NSString *query) {
  GeogebraCommonMoveGgtapiModelsMaterialFilter_initialize();
  return [new_GeogebraCommonMoveGgtapiModelsMaterialFilter_$2_initWithNSString_(query) autorelease];
}

void GeogebraCommonMoveGgtapiModelsMaterialFilter_init(GeogebraCommonMoveGgtapiModelsMaterialFilter *self) {
  NSObject_init(self);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonMoveGgtapiModelsMaterialFilter)

@implementation GeogebraCommonMoveGgtapiModelsMaterialFilter_$1

- (jboolean)checkWithGeogebraCommonMoveGgtapiModelsMaterial:(GeogebraCommonMoveGgtapiModelsMaterial *)m {
  return YES;
}

- (instancetype)init {
  GeogebraCommonMoveGgtapiModelsMaterialFilter_$1_init(self);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "checkWithGeogebraCommonMoveGgtapiModelsMaterial:", "check", "Z", 0x1, NULL, NULL },
    { "init", "", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjCEnclosingMethodInfo enclosing_method = { "GeogebraCommonMoveGgtapiModelsMaterialFilter", "getUniversalFilter" };
  static const J2ObjcClassInfo _GeogebraCommonMoveGgtapiModelsMaterialFilter_$1 = { 2, "", "geogebra.common.move.ggtapi.models", "MaterialFilter", 0x8008, 2, methods, 0, NULL, 0, NULL, 0, NULL, &enclosing_method, NULL };
  return &_GeogebraCommonMoveGgtapiModelsMaterialFilter_$1;
}

@end

void GeogebraCommonMoveGgtapiModelsMaterialFilter_$1_init(GeogebraCommonMoveGgtapiModelsMaterialFilter_$1 *self) {
  GeogebraCommonMoveGgtapiModelsMaterialFilter_init(self);
}

GeogebraCommonMoveGgtapiModelsMaterialFilter_$1 *new_GeogebraCommonMoveGgtapiModelsMaterialFilter_$1_init() {
  GeogebraCommonMoveGgtapiModelsMaterialFilter_$1 *self = [GeogebraCommonMoveGgtapiModelsMaterialFilter_$1 alloc];
  GeogebraCommonMoveGgtapiModelsMaterialFilter_$1_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonMoveGgtapiModelsMaterialFilter_$1)

@implementation GeogebraCommonMoveGgtapiModelsMaterialFilter_$2

- (jboolean)checkWithGeogebraCommonMoveGgtapiModelsMaterial:(GeogebraCommonMoveGgtapiModelsMaterial *)m {
  jboolean ret = NO;
  if ([((GeogebraCommonMoveGgtapiModelsMaterial *) nil_chk(m)) getTitle] != nil) {
    ret |= [((NSString *) nil_chk(GeogebraCommonUtilStringUtil_toLowerCaseWithNSString_([m getTitle]))) contains:GeogebraCommonUtilStringUtil_toLowerCaseWithNSString_(val$query_)];
  }
  if ([m getDescription] != nil) {
    ret |= [((NSString *) nil_chk(GeogebraCommonUtilStringUtil_toLowerCaseWithNSString_([m getDescription]))) contains:GeogebraCommonUtilStringUtil_toLowerCaseWithNSString_(val$query_)];
  }
  return ret;
}

- (instancetype)initWithNSString:(NSString *)capture$0 {
  GeogebraCommonMoveGgtapiModelsMaterialFilter_$2_initWithNSString_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$query_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "checkWithGeogebraCommonMoveGgtapiModelsMaterial:", "check", "Z", 0x1, NULL, NULL },
    { "initWithNSString:", "", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "val$query_", NULL, 0x1012, "Ljava.lang.String;", NULL, NULL,  },
  };
  static const J2ObjCEnclosingMethodInfo enclosing_method = { "GeogebraCommonMoveGgtapiModelsMaterialFilter", "getSearchFilterWithNSString:" };
  static const J2ObjcClassInfo _GeogebraCommonMoveGgtapiModelsMaterialFilter_$2 = { 2, "", "geogebra.common.move.ggtapi.models", "MaterialFilter", 0x8008, 2, methods, 1, fields, 0, NULL, 0, NULL, &enclosing_method, NULL };
  return &_GeogebraCommonMoveGgtapiModelsMaterialFilter_$2;
}

@end

void GeogebraCommonMoveGgtapiModelsMaterialFilter_$2_initWithNSString_(GeogebraCommonMoveGgtapiModelsMaterialFilter_$2 *self, NSString *capture$0) {
  GeogebraCommonMoveGgtapiModelsMaterialFilter_$2_set_val$query_(self, capture$0);
  GeogebraCommonMoveGgtapiModelsMaterialFilter_init(self);
}

GeogebraCommonMoveGgtapiModelsMaterialFilter_$2 *new_GeogebraCommonMoveGgtapiModelsMaterialFilter_$2_initWithNSString_(NSString *capture$0) {
  GeogebraCommonMoveGgtapiModelsMaterialFilter_$2 *self = [GeogebraCommonMoveGgtapiModelsMaterialFilter_$2 alloc];
  GeogebraCommonMoveGgtapiModelsMaterialFilter_$2_initWithNSString_(self, capture$0);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonMoveGgtapiModelsMaterialFilter_$2)
