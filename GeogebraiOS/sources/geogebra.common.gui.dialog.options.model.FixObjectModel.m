//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/gui/dialog/options/model/FixObjectModel.java
//


#include "J2ObjC_source.h"
#include "geogebra/common/gui/dialog/options/model/BooleanOptionModel.h"
#include "geogebra/common/gui/dialog/options/model/FixObjectModel.h"
#include "geogebra/common/gui/dialog/options/model/OptionsModel.h"
#include "geogebra/common/kernel/geos/GeoElement.h"

#define GeogebraCommonGuiDialogOptionsModelFixObjectModel_serialVersionUID 1LL

J2OBJC_STATIC_FIELD_GETTER(GeogebraCommonGuiDialogOptionsModelFixObjectModel, serialVersionUID, jlong)

@implementation GeogebraCommonGuiDialogOptionsModelFixObjectModel

- (instancetype)initWithGeogebraCommonGuiDialogOptionsModelBooleanOptionModel_IBooleanOptionListener:(id<GeogebraCommonGuiDialogOptionsModelBooleanOptionModel_IBooleanOptionListener>)listener {
  GeogebraCommonGuiDialogOptionsModelFixObjectModel_initWithGeogebraCommonGuiDialogOptionsModelBooleanOptionModel_IBooleanOptionListener_(self, listener);
  return self;
}

- (void)applyWithInt:(jint)index
         withBoolean:(jboolean)value {
  GeogebraCommonKernelGeosGeoElement *geo = [self getGeoAtWithInt:index];
  [((GeogebraCommonKernelGeosGeoElement *) nil_chk(geo)) setFixedWithBoolean:value];
  [geo updateRepaint];
}

- (jboolean)isValidAtWithInt:(jint)index {
  return [((GeogebraCommonKernelGeosGeoElement *) nil_chk([self getGeoAtWithInt:index])) isFixable];
}

- (jboolean)getValueAtWithInt:(jint)index {
  return [((GeogebraCommonKernelGeosGeoElement *) nil_chk([self getGeoAtWithInt:index])) isFixed];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonGuiDialogOptionsModelBooleanOptionModel_IBooleanOptionListener:", "FixObjectModel", NULL, 0x1, NULL, NULL },
    { "applyWithInt:withBoolean:", "apply", "V", 0x1, NULL, NULL },
    { "isValidAtWithInt:", "isValidAt", "Z", 0x1, NULL, NULL },
    { "getValueAtWithInt:", "getValueAt", "Z", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID_", NULL, 0x1a, "J", NULL, NULL, .constantValue.asLong = GeogebraCommonGuiDialogOptionsModelFixObjectModel_serialVersionUID },
  };
  static const J2ObjcClassInfo _GeogebraCommonGuiDialogOptionsModelFixObjectModel = { 2, "FixObjectModel", "geogebra.common.gui.dialog.options.model", NULL, 0x1, 4, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonGuiDialogOptionsModelFixObjectModel;
}

@end

void GeogebraCommonGuiDialogOptionsModelFixObjectModel_initWithGeogebraCommonGuiDialogOptionsModelBooleanOptionModel_IBooleanOptionListener_(GeogebraCommonGuiDialogOptionsModelFixObjectModel *self, id<GeogebraCommonGuiDialogOptionsModelBooleanOptionModel_IBooleanOptionListener> listener) {
  GeogebraCommonGuiDialogOptionsModelBooleanOptionModel_initWithGeogebraCommonGuiDialogOptionsModelBooleanOptionModel_IBooleanOptionListener_(self, listener);
}

GeogebraCommonGuiDialogOptionsModelFixObjectModel *new_GeogebraCommonGuiDialogOptionsModelFixObjectModel_initWithGeogebraCommonGuiDialogOptionsModelBooleanOptionModel_IBooleanOptionListener_(id<GeogebraCommonGuiDialogOptionsModelBooleanOptionModel_IBooleanOptionListener> listener) {
  GeogebraCommonGuiDialogOptionsModelFixObjectModel *self = [GeogebraCommonGuiDialogOptionsModelFixObjectModel alloc];
  GeogebraCommonGuiDialogOptionsModelFixObjectModel_initWithGeogebraCommonGuiDialogOptionsModelBooleanOptionModel_IBooleanOptionListener_(self, listener);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonGuiDialogOptionsModelFixObjectModel)
