//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/euclidian/DrawableList.java
//


#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "geogebra/common/awt/GGraphics2D.h"
#include "geogebra/common/euclidian/Drawable.h"
#include "geogebra/common/euclidian/DrawableList.h"
#include "geogebra/common/kernel/geos/GeoElement.h"

@interface GeogebraCommonEuclidianDrawableList () {
 @public
  GeogebraCommonEuclidianDrawableList_Link *tail_;
  jint size__;
}

@end

J2OBJC_FIELD_SETTER(GeogebraCommonEuclidianDrawableList, tail_, GeogebraCommonEuclidianDrawableList_Link *)

__attribute__((unused)) static void GeogebraCommonEuclidianDrawableList_addWithGeogebraCommonEuclidianDrawable_(GeogebraCommonEuclidianDrawableList *self, GeogebraCommonEuclidianDrawable *d);

__attribute__((unused)) static jboolean GeogebraCommonEuclidianDrawableList_containsWithGeogebraCommonEuclidianDrawable_(GeogebraCommonEuclidianDrawableList *self, GeogebraCommonEuclidianDrawable *d);

@interface GeogebraCommonEuclidianDrawableList_Link () {
 @public
  GeogebraCommonEuclidianDrawable *d_;
  GeogebraCommonEuclidianDrawableList_Link *next_;
}

- (instancetype)initWithGeogebraCommonEuclidianDrawableList:(GeogebraCommonEuclidianDrawableList *)outer$
                        withGeogebraCommonEuclidianDrawable:(GeogebraCommonEuclidianDrawable *)a
               withGeogebraCommonEuclidianDrawableList_Link:(GeogebraCommonEuclidianDrawableList_Link *)n;

@end

J2OBJC_FIELD_SETTER(GeogebraCommonEuclidianDrawableList_Link, d_, GeogebraCommonEuclidianDrawable *)
J2OBJC_FIELD_SETTER(GeogebraCommonEuclidianDrawableList_Link, next_, GeogebraCommonEuclidianDrawableList_Link *)

__attribute__((unused)) static void GeogebraCommonEuclidianDrawableList_Link_initWithGeogebraCommonEuclidianDrawableList_withGeogebraCommonEuclidianDrawable_withGeogebraCommonEuclidianDrawableList_Link_(GeogebraCommonEuclidianDrawableList_Link *self, GeogebraCommonEuclidianDrawableList *outer$, GeogebraCommonEuclidianDrawable *a, GeogebraCommonEuclidianDrawableList_Link *n);

__attribute__((unused)) static GeogebraCommonEuclidianDrawableList_Link *new_GeogebraCommonEuclidianDrawableList_Link_initWithGeogebraCommonEuclidianDrawableList_withGeogebraCommonEuclidianDrawable_withGeogebraCommonEuclidianDrawableList_Link_(GeogebraCommonEuclidianDrawableList *outer$, GeogebraCommonEuclidianDrawable *a, GeogebraCommonEuclidianDrawableList_Link *n) NS_RETURNS_RETAINED;

@interface GeogebraCommonEuclidianDrawableList_DrawableIterator () {
 @public
  GeogebraCommonEuclidianDrawableList *this$0_;
  GeogebraCommonEuclidianDrawableList_Link *it_;
}

@end

J2OBJC_FIELD_SETTER(GeogebraCommonEuclidianDrawableList_DrawableIterator, this$0_, GeogebraCommonEuclidianDrawableList *)
J2OBJC_FIELD_SETTER(GeogebraCommonEuclidianDrawableList_DrawableIterator, it_, GeogebraCommonEuclidianDrawableList_Link *)

__attribute__((unused)) static void GeogebraCommonEuclidianDrawableList_DrawableIterator_reset(GeogebraCommonEuclidianDrawableList_DrawableIterator *self);

@implementation GeogebraCommonEuclidianDrawableList

- (instancetype)init {
  GeogebraCommonEuclidianDrawableList_init(self);
  return self;
}

- (jint)size {
  return size__;
}

- (void)addWithGeogebraCommonEuclidianDrawable:(GeogebraCommonEuclidianDrawable *)d {
  GeogebraCommonEuclidianDrawableList_addWithGeogebraCommonEuclidianDrawable_(self, d);
}

- (void)addUniqueWithGeogebraCommonEuclidianDrawable:(GeogebraCommonEuclidianDrawable *)d {
  if (!GeogebraCommonEuclidianDrawableList_containsWithGeogebraCommonEuclidianDrawable_(self, d)) GeogebraCommonEuclidianDrawableList_addWithGeogebraCommonEuclidianDrawable_(self, d);
}

- (jboolean)containsWithGeogebraCommonEuclidianDrawable:(GeogebraCommonEuclidianDrawable *)d {
  return GeogebraCommonEuclidianDrawableList_containsWithGeogebraCommonEuclidianDrawable_(self, d);
}

- (void)removeWithGeogebraCommonEuclidianDrawable:(GeogebraCommonEuclidianDrawable *)d {
  GeogebraCommonEuclidianDrawableList_Link *prev = nil;
  GeogebraCommonEuclidianDrawableList_Link *cur = head_;
  while (cur != nil) {
    if (((GeogebraCommonEuclidianDrawableList_Link *) nil_chk(cur))->d_ == d) {
      if (prev == nil) {
        GeogebraCommonEuclidianDrawableList_set_head_(self, cur->next_);
        if (head_ == nil) GeogebraCommonEuclidianDrawableList_set_tail_(self, nil);
      }
      else {
        GeogebraCommonEuclidianDrawableList_Link_set_next_(prev, cur->next_);
        if (prev->next_ == nil) GeogebraCommonEuclidianDrawableList_set_tail_(self, prev);
      }
      size__--;
      return;
    }
    prev = cur;
    cur = cur->next_;
  }
}

- (void)drawAllWithGeogebraCommonAwtGGraphics2D:(id<GeogebraCommonAwtGGraphics2D>)g2 {
  GeogebraCommonEuclidianDrawableList_Link *cur = head_;
  while (cur != nil) {
    if ([((GeogebraCommonKernelGeosGeoElement *) nil_chk([((GeogebraCommonEuclidianDrawable *) nil_chk(((GeogebraCommonEuclidianDrawableList_Link *) nil_chk(cur))->d_)) getGeoElement])) isDefined]) {
      if ([cur->d_ needsUpdate]) {
        [cur->d_ setNeedsUpdateWithBoolean:NO];
        [cur->d_ update];
      }
      [cur->d_ drawWithGeogebraCommonAwtGGraphics2D:g2];
    }
    cur = cur->next_;
  }
}

- (void)updateAll {
  GeogebraCommonEuclidianDrawableList_Link *cur = head_;
  while (cur != nil) {
    [((GeogebraCommonEuclidianDrawable *) nil_chk(((GeogebraCommonEuclidianDrawableList_Link *) nil_chk(cur))->d_)) update];
    [cur->d_ resetHatch];
    cur = cur->next_;
  }
}

- (void)updateFontSizeAll {
  GeogebraCommonEuclidianDrawableList_Link *cur = head_;
  while (cur != nil) {
    [((GeogebraCommonEuclidianDrawable *) nil_chk(((GeogebraCommonEuclidianDrawableList_Link *) nil_chk(cur))->d_)) updateFontSize];
    cur = cur->next_;
  }
}

- (void)clear {
  GeogebraCommonEuclidianDrawableList_set_head_(self, nil);
  GeogebraCommonEuclidianDrawableList_set_tail_(self, nil);
  size__ = 0;
}

- (GeogebraCommonEuclidianDrawableList_DrawableIterator *)getIterator {
  return [new_GeogebraCommonEuclidianDrawableList_DrawableIterator_initWithGeogebraCommonEuclidianDrawableList_(self) autorelease];
}

- (void)dealloc {
  RELEASE_(head_);
  RELEASE_(tail_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "DrawableList", NULL, 0x1, NULL, NULL },
    { "size", NULL, "I", 0x11, NULL, NULL },
    { "addWithGeogebraCommonEuclidianDrawable:", "add", "V", 0x11, NULL, NULL },
    { "addUniqueWithGeogebraCommonEuclidianDrawable:", "addUnique", "V", 0x11, NULL, NULL },
    { "containsWithGeogebraCommonEuclidianDrawable:", "contains", "Z", 0x11, NULL, NULL },
    { "removeWithGeogebraCommonEuclidianDrawable:", "remove", "V", 0x11, NULL, NULL },
    { "drawAllWithGeogebraCommonAwtGGraphics2D:", "drawAll", "V", 0x11, NULL, NULL },
    { "updateAll", NULL, "V", 0x11, NULL, NULL },
    { "updateFontSizeAll", NULL, "V", 0x11, NULL, NULL },
    { "clear", NULL, "V", 0x1, NULL, NULL },
    { "getIterator", NULL, "Lgeogebra.common.euclidian.DrawableList$DrawableIterator;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "head_", NULL, 0x0, "Lgeogebra.common.euclidian.DrawableList$Link;", NULL, NULL,  },
    { "tail_", NULL, 0x2, "Lgeogebra.common.euclidian.DrawableList$Link;", NULL, NULL,  },
    { "size__", "size", 0x2, "I", NULL, NULL,  },
  };
  static const char *inner_classes[] = {"Lgeogebra.common.euclidian.DrawableList$Link;", "Lgeogebra.common.euclidian.DrawableList$DrawableIterator;"};
  static const J2ObjcClassInfo _GeogebraCommonEuclidianDrawableList = { 2, "DrawableList", "geogebra.common.euclidian", NULL, 0x1, 11, methods, 3, fields, 0, NULL, 2, inner_classes, NULL, NULL };
  return &_GeogebraCommonEuclidianDrawableList;
}

@end

void GeogebraCommonEuclidianDrawableList_init(GeogebraCommonEuclidianDrawableList *self) {
  NSObject_init(self);
  self->size__ = 0;
}

GeogebraCommonEuclidianDrawableList *new_GeogebraCommonEuclidianDrawableList_init() {
  GeogebraCommonEuclidianDrawableList *self = [GeogebraCommonEuclidianDrawableList alloc];
  GeogebraCommonEuclidianDrawableList_init(self);
  return self;
}

void GeogebraCommonEuclidianDrawableList_addWithGeogebraCommonEuclidianDrawable_(GeogebraCommonEuclidianDrawableList *self, GeogebraCommonEuclidianDrawable *d) {
  if (d == nil) return;
  if (self->head_ == nil) {
    GeogebraCommonEuclidianDrawableList_setAndConsume_head_(self, new_GeogebraCommonEuclidianDrawableList_Link_initWithGeogebraCommonEuclidianDrawableList_withGeogebraCommonEuclidianDrawable_withGeogebraCommonEuclidianDrawableList_Link_(self, d, nil));
    GeogebraCommonEuclidianDrawableList_set_tail_(self, self->head_);
  }
  else {
    GeogebraCommonKernelGeosGeoElement *priority = [((GeogebraCommonEuclidianDrawable *) nil_chk(d)) getGeoElement];
    GeogebraCommonEuclidianDrawableList_Link *cur = self->head_;
    GeogebraCommonEuclidianDrawableList_Link *last = self->head_;
    while (([((GeogebraCommonKernelGeosGeoElement *) nil_chk([((GeogebraCommonEuclidianDrawable *) nil_chk(cur->d_)) getGeoElement])) drawBeforeWithGeogebraCommonKernelGeosGeoElement:priority withBoolean:NO]) && ![cur isEqual:self->tail_]) {
      last = cur;
      cur = cur->next_;
    }
    if ([((GeogebraCommonEuclidianDrawableList_Link *) nil_chk(cur)) isEqual:self->head_]) {
      if ([((GeogebraCommonKernelGeosGeoElement *) nil_chk([cur->d_ getGeoElement])) drawBeforeWithGeogebraCommonKernelGeosGeoElement:priority withBoolean:NO]) {
        GeogebraCommonEuclidianDrawableList_Link *temp = [new_GeogebraCommonEuclidianDrawableList_Link_initWithGeogebraCommonEuclidianDrawableList_withGeogebraCommonEuclidianDrawable_withGeogebraCommonEuclidianDrawableList_Link_(self, d, nil) autorelease];
        GeogebraCommonEuclidianDrawableList_Link_set_next_(nil_chk(self->tail_), temp);
        GeogebraCommonEuclidianDrawableList_set_tail_(self, temp);
      }
      else {
        GeogebraCommonEuclidianDrawableList_Link *temp2 = self->head_;
        GeogebraCommonEuclidianDrawableList_setAndConsume_head_(self, new_GeogebraCommonEuclidianDrawableList_Link_initWithGeogebraCommonEuclidianDrawableList_withGeogebraCommonEuclidianDrawable_withGeogebraCommonEuclidianDrawableList_Link_(self, d, nil));
        GeogebraCommonEuclidianDrawableList_Link_set_next_(self->head_, temp2);
      }
    }
    else if ([cur isEqual:self->tail_]) {
      if (([((GeogebraCommonKernelGeosGeoElement *) nil_chk([cur->d_ getGeoElement])) drawBeforeWithGeogebraCommonKernelGeosGeoElement:priority withBoolean:NO])) {
        GeogebraCommonEuclidianDrawableList_Link *temp = [new_GeogebraCommonEuclidianDrawableList_Link_initWithGeogebraCommonEuclidianDrawableList_withGeogebraCommonEuclidianDrawable_withGeogebraCommonEuclidianDrawableList_Link_(self, d, nil) autorelease];
        GeogebraCommonEuclidianDrawableList_Link_set_next_(nil_chk(self->tail_), temp);
        GeogebraCommonEuclidianDrawableList_set_tail_(self, temp);
      }
      else {
        GeogebraCommonEuclidianDrawableList_Link *temp = [new_GeogebraCommonEuclidianDrawableList_Link_initWithGeogebraCommonEuclidianDrawableList_withGeogebraCommonEuclidianDrawable_withGeogebraCommonEuclidianDrawableList_Link_(self, d, nil) autorelease];
        GeogebraCommonEuclidianDrawableList_Link_set_next_(temp, last->next_);
        GeogebraCommonEuclidianDrawableList_Link_set_next_(last, temp);
      }
    }
    else {
      GeogebraCommonEuclidianDrawableList_Link *temp = [new_GeogebraCommonEuclidianDrawableList_Link_initWithGeogebraCommonEuclidianDrawableList_withGeogebraCommonEuclidianDrawable_withGeogebraCommonEuclidianDrawableList_Link_(self, d, nil) autorelease];
      GeogebraCommonEuclidianDrawableList_Link_set_next_(temp, last->next_);
      GeogebraCommonEuclidianDrawableList_Link_set_next_(last, temp);
    }
  }
  self->size__++;
}

jboolean GeogebraCommonEuclidianDrawableList_containsWithGeogebraCommonEuclidianDrawable_(GeogebraCommonEuclidianDrawableList *self, GeogebraCommonEuclidianDrawable *d) {
  GeogebraCommonEuclidianDrawableList_Link *cur = self->head_;
  while (cur != nil) {
    if (((GeogebraCommonEuclidianDrawableList_Link *) nil_chk(cur))->d_ == d) return YES;
    cur = cur->next_;
  }
  return NO;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonEuclidianDrawableList)

@implementation GeogebraCommonEuclidianDrawableList_Link

- (instancetype)initWithGeogebraCommonEuclidianDrawableList:(GeogebraCommonEuclidianDrawableList *)outer$
                        withGeogebraCommonEuclidianDrawable:(GeogebraCommonEuclidianDrawable *)a
               withGeogebraCommonEuclidianDrawableList_Link:(GeogebraCommonEuclidianDrawableList_Link *)n {
  GeogebraCommonEuclidianDrawableList_Link_initWithGeogebraCommonEuclidianDrawableList_withGeogebraCommonEuclidianDrawable_withGeogebraCommonEuclidianDrawableList_Link_(self, outer$, a, n);
  return self;
}

- (void)dealloc {
  RELEASE_(d_);
  RELEASE_(next_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonEuclidianDrawableList:withGeogebraCommonEuclidianDrawable:withGeogebraCommonEuclidianDrawableList_Link:", "Link", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "d_", NULL, 0x0, "Lgeogebra.common.euclidian.Drawable;", NULL, NULL,  },
    { "next_", NULL, 0x0, "Lgeogebra.common.euclidian.DrawableList$Link;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _GeogebraCommonEuclidianDrawableList_Link = { 2, "Link", "geogebra.common.euclidian", "DrawableList", 0x2, 1, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonEuclidianDrawableList_Link;
}

@end

void GeogebraCommonEuclidianDrawableList_Link_initWithGeogebraCommonEuclidianDrawableList_withGeogebraCommonEuclidianDrawable_withGeogebraCommonEuclidianDrawableList_Link_(GeogebraCommonEuclidianDrawableList_Link *self, GeogebraCommonEuclidianDrawableList *outer$, GeogebraCommonEuclidianDrawable *a, GeogebraCommonEuclidianDrawableList_Link *n) {
  NSObject_init(self);
  GeogebraCommonEuclidianDrawableList_Link_set_d_(self, a);
  GeogebraCommonEuclidianDrawableList_Link_set_next_(self, n);
}

GeogebraCommonEuclidianDrawableList_Link *new_GeogebraCommonEuclidianDrawableList_Link_initWithGeogebraCommonEuclidianDrawableList_withGeogebraCommonEuclidianDrawable_withGeogebraCommonEuclidianDrawableList_Link_(GeogebraCommonEuclidianDrawableList *outer$, GeogebraCommonEuclidianDrawable *a, GeogebraCommonEuclidianDrawableList_Link *n) {
  GeogebraCommonEuclidianDrawableList_Link *self = [GeogebraCommonEuclidianDrawableList_Link alloc];
  GeogebraCommonEuclidianDrawableList_Link_initWithGeogebraCommonEuclidianDrawableList_withGeogebraCommonEuclidianDrawable_withGeogebraCommonEuclidianDrawableList_Link_(self, outer$, a, n);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonEuclidianDrawableList_Link)

@implementation GeogebraCommonEuclidianDrawableList_DrawableIterator

- (instancetype)initWithGeogebraCommonEuclidianDrawableList:(GeogebraCommonEuclidianDrawableList *)outer$ {
  GeogebraCommonEuclidianDrawableList_DrawableIterator_initWithGeogebraCommonEuclidianDrawableList_(self, outer$);
  return self;
}

- (GeogebraCommonEuclidianDrawable *)next {
  GeogebraCommonEuclidianDrawable *ret = ((GeogebraCommonEuclidianDrawableList_Link *) nil_chk(it_))->d_;
  GeogebraCommonEuclidianDrawableList_DrawableIterator_set_it_(self, it_->next_);
  return ret;
}

- (jboolean)hasNext {
  return (it_ != nil);
}

- (void)reset {
  GeogebraCommonEuclidianDrawableList_DrawableIterator_reset(self);
}

- (void)remove {
}

- (void)dealloc {
  RELEASE_(this$0_);
  RELEASE_(it_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonEuclidianDrawableList:", "DrawableIterator", NULL, 0x0, NULL, NULL },
    { "next", NULL, "Lgeogebra.common.euclidian.Drawable;", 0x11, NULL, NULL },
    { "hasNext", NULL, "Z", 0x11, NULL, NULL },
    { "reset", NULL, "V", 0x11, NULL, NULL },
    { "remove", NULL, "V", 0x11, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lgeogebra.common.euclidian.DrawableList;", NULL, NULL,  },
    { "it_", NULL, 0x2, "Lgeogebra.common.euclidian.DrawableList$Link;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _GeogebraCommonEuclidianDrawableList_DrawableIterator = { 2, "DrawableIterator", "geogebra.common.euclidian", "DrawableList", 0x1, 5, methods, 2, fields, 0, NULL, 0, NULL, NULL, "Ljava/lang/Object;Ljava/util/Iterator<Lgeogebra/common/euclidian/Drawable;>;" };
  return &_GeogebraCommonEuclidianDrawableList_DrawableIterator;
}

@end

void GeogebraCommonEuclidianDrawableList_DrawableIterator_initWithGeogebraCommonEuclidianDrawableList_(GeogebraCommonEuclidianDrawableList_DrawableIterator *self, GeogebraCommonEuclidianDrawableList *outer$) {
  GeogebraCommonEuclidianDrawableList_DrawableIterator_set_this$0_(self, outer$);
  NSObject_init(self);
  GeogebraCommonEuclidianDrawableList_DrawableIterator_reset(self);
}

GeogebraCommonEuclidianDrawableList_DrawableIterator *new_GeogebraCommonEuclidianDrawableList_DrawableIterator_initWithGeogebraCommonEuclidianDrawableList_(GeogebraCommonEuclidianDrawableList *outer$) {
  GeogebraCommonEuclidianDrawableList_DrawableIterator *self = [GeogebraCommonEuclidianDrawableList_DrawableIterator alloc];
  GeogebraCommonEuclidianDrawableList_DrawableIterator_initWithGeogebraCommonEuclidianDrawableList_(self, outer$);
  return self;
}

void GeogebraCommonEuclidianDrawableList_DrawableIterator_reset(GeogebraCommonEuclidianDrawableList_DrawableIterator *self) {
  GeogebraCommonEuclidianDrawableList_DrawableIterator_set_it_(self, self->this$0_->head_);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonEuclidianDrawableList_DrawableIterator)
