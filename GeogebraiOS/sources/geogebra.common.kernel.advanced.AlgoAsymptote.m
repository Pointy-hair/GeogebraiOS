//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/advanced/AlgoAsymptote.java
//


#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "geogebra/common/kernel/Construction.h"
#include "geogebra/common/kernel/StringTemplate.h"
#include "geogebra/common/kernel/advanced/AlgoAsymptote.h"
#include "geogebra/common/kernel/algos/AlgoElement.h"
#include "geogebra/common/kernel/algos/ConstructionElement.h"
#include "geogebra/common/kernel/commands/Commands.h"
#include "geogebra/common/kernel/geos/GeoConic.h"
#include "geogebra/common/kernel/geos/GeoElement.h"
#include "geogebra/common/kernel/geos/GeoLine.h"
#include "geogebra/common/kernel/geos/GeoPoint.h"
#include "geogebra/common/kernel/geos/GeoVec2D.h"
#include "geogebra/common/kernel/kernelND/GeoConicNDConstants.h"
#include "geogebra/common/main/Localization.h"

@interface GeogebraCommonKernelAdvancedAlgoAsymptote () {
 @public
  GeogebraCommonKernelGeosGeoConic *c_;
  IOSObjectArray *asymptotes_;
  IOSObjectArray *eigenvec_;
  IOSDoubleArray *halfAxes_;
  GeogebraCommonKernelGeosGeoVec2D *b_;
  GeogebraCommonKernelGeosGeoPoint *P_;
}

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                    withGeogebraCommonKernelGeosGeoConic:(GeogebraCommonKernelGeosGeoConic *)c;

@end

J2OBJC_FIELD_SETTER(GeogebraCommonKernelAdvancedAlgoAsymptote, c_, GeogebraCommonKernelGeosGeoConic *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelAdvancedAlgoAsymptote, asymptotes_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelAdvancedAlgoAsymptote, eigenvec_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelAdvancedAlgoAsymptote, halfAxes_, IOSDoubleArray *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelAdvancedAlgoAsymptote, b_, GeogebraCommonKernelGeosGeoVec2D *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelAdvancedAlgoAsymptote, P_, GeogebraCommonKernelGeosGeoPoint *)

__attribute__((unused)) static void GeogebraCommonKernelAdvancedAlgoAsymptote_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoConic_(GeogebraCommonKernelAdvancedAlgoAsymptote *self, GeogebraCommonKernelConstruction *cons, GeogebraCommonKernelGeosGeoConic *c);

__attribute__((unused)) static GeogebraCommonKernelAdvancedAlgoAsymptote *new_GeogebraCommonKernelAdvancedAlgoAsymptote_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoConic_(GeogebraCommonKernelConstruction *cons, GeogebraCommonKernelGeosGeoConic *c) NS_RETURNS_RETAINED;

__attribute__((unused)) static void GeogebraCommonKernelAdvancedAlgoAsymptote_compute(GeogebraCommonKernelAdvancedAlgoAsymptote *self);

@implementation GeogebraCommonKernelAdvancedAlgoAsymptote

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                                            withNSString:(NSString *)label
                    withGeogebraCommonKernelGeosGeoConic:(GeogebraCommonKernelGeosGeoConic *)c {
  GeogebraCommonKernelAdvancedAlgoAsymptote_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoConic_(self, cons, label, c);
  return self;
}

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                                       withNSStringArray:(IOSObjectArray *)labels
                    withGeogebraCommonKernelGeosGeoConic:(GeogebraCommonKernelGeosGeoConic *)c {
  GeogebraCommonKernelAdvancedAlgoAsymptote_initWithGeogebraCommonKernelConstruction_withNSStringArray_withGeogebraCommonKernelGeosGeoConic_(self, cons, labels, c);
  return self;
}

- (GeogebraCommonKernelCommandsCommandsEnum *)getClassName {
  return GeogebraCommonKernelCommandsCommandsEnum_get_Asymptote();
}

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                    withGeogebraCommonKernelGeosGeoConic:(GeogebraCommonKernelGeosGeoConic *)c {
  GeogebraCommonKernelAdvancedAlgoAsymptote_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoConic_(self, cons, c);
  return self;
}

- (void)setInputOutput {
  GeogebraCommonKernelAlgosAlgoElement_setAndConsume_input_(self, [IOSObjectArray newArrayWithLength:1 type:GeogebraCommonKernelGeosGeoElement_class_()]);
  IOSObjectArray_Set(input_, 0, c_);
  [super setOutputWithGeogebraCommonKernelGeosGeoElementArray:asymptotes_];
  [self setDependencies];
}

- (IOSObjectArray *)getAsymptotes {
  return asymptotes_;
}

- (GeogebraCommonKernelGeosGeoConic *)getConic {
  return c_;
}

- (void)compute {
  GeogebraCommonKernelAdvancedAlgoAsymptote_compute(self);
}

- (NSString *)toStringWithGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl {
  return [((GeogebraCommonMainLocalization *) nil_chk([self getLoc])) getPlainWithNSString:@"AsymptoteToA" withNSString:[((GeogebraCommonKernelGeosGeoConic *) nil_chk(c_)) getLabelWithGeogebraCommonKernelStringTemplate:tpl]];
}

- (void)dealloc {
  RELEASE_(c_);
  RELEASE_(asymptotes_);
  RELEASE_(eigenvec_);
  RELEASE_(halfAxes_);
  RELEASE_(b_);
  RELEASE_(P_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonKernelConstruction:withNSString:withGeogebraCommonKernelGeosGeoConic:", "AlgoAsymptote", NULL, 0x0, NULL, NULL },
    { "initWithGeogebraCommonKernelConstruction:withNSStringArray:withGeogebraCommonKernelGeosGeoConic:", "AlgoAsymptote", NULL, 0x1, NULL, NULL },
    { "getClassName", NULL, "Lgeogebra.common.kernel.commands.Commands;", 0x1, NULL, NULL },
    { "initWithGeogebraCommonKernelConstruction:withGeogebraCommonKernelGeosGeoConic:", "AlgoAsymptote", NULL, 0x2, NULL, NULL },
    { "setInputOutput", NULL, "V", 0x1, NULL, NULL },
    { "getAsymptotes", NULL, "[Lgeogebra.common.kernel.geos.GeoLine;", 0x1, NULL, NULL },
    { "getConic", NULL, "Lgeogebra.common.kernel.geos.GeoConic;", 0x0, NULL, NULL },
    { "compute", NULL, "V", 0x11, NULL, NULL },
    { "toStringWithGeogebraCommonKernelStringTemplate:", "toString", "Ljava.lang.String;", 0x11, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "c_", NULL, 0x2, "Lgeogebra.common.kernel.geos.GeoConic;", NULL, NULL,  },
    { "asymptotes_", NULL, 0x2, "[Lgeogebra.common.kernel.geos.GeoLine;", NULL, NULL,  },
    { "eigenvec_", NULL, 0x2, "[Lgeogebra.common.kernel.geos.GeoVec2D;", NULL, NULL,  },
    { "halfAxes_", NULL, 0x2, "[D", NULL, NULL,  },
    { "b_", NULL, 0x2, "Lgeogebra.common.kernel.geos.GeoVec2D;", NULL, NULL,  },
    { "P_", NULL, 0x2, "Lgeogebra.common.kernel.geos.GeoPoint;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelAdvancedAlgoAsymptote = { 2, "AlgoAsymptote", "geogebra.common.kernel.advanced", NULL, 0x1, 9, methods, 6, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelAdvancedAlgoAsymptote;
}

@end

void GeogebraCommonKernelAdvancedAlgoAsymptote_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoConic_(GeogebraCommonKernelAdvancedAlgoAsymptote *self, GeogebraCommonKernelConstruction *cons, NSString *label, GeogebraCommonKernelGeosGeoConic *c) {
  GeogebraCommonKernelAdvancedAlgoAsymptote_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoConic_(self, cons, c);
  GeogebraCommonKernelGeosGeoElement_setLabelsWithNSString_withGeogebraCommonKernelGeosGeoElementArray_(label, self->asymptotes_);
}

GeogebraCommonKernelAdvancedAlgoAsymptote *new_GeogebraCommonKernelAdvancedAlgoAsymptote_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoConic_(GeogebraCommonKernelConstruction *cons, NSString *label, GeogebraCommonKernelGeosGeoConic *c) {
  GeogebraCommonKernelAdvancedAlgoAsymptote *self = [GeogebraCommonKernelAdvancedAlgoAsymptote alloc];
  GeogebraCommonKernelAdvancedAlgoAsymptote_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoConic_(self, cons, label, c);
  return self;
}

void GeogebraCommonKernelAdvancedAlgoAsymptote_initWithGeogebraCommonKernelConstruction_withNSStringArray_withGeogebraCommonKernelGeosGeoConic_(GeogebraCommonKernelAdvancedAlgoAsymptote *self, GeogebraCommonKernelConstruction *cons, IOSObjectArray *labels, GeogebraCommonKernelGeosGeoConic *c) {
  GeogebraCommonKernelAdvancedAlgoAsymptote_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoConic_(self, cons, c);
  GeogebraCommonKernelGeosGeoElement_setLabelsWithNSStringArray_withGeogebraCommonKernelGeosGeoElementArray_(labels, self->asymptotes_);
}

GeogebraCommonKernelAdvancedAlgoAsymptote *new_GeogebraCommonKernelAdvancedAlgoAsymptote_initWithGeogebraCommonKernelConstruction_withNSStringArray_withGeogebraCommonKernelGeosGeoConic_(GeogebraCommonKernelConstruction *cons, IOSObjectArray *labels, GeogebraCommonKernelGeosGeoConic *c) {
  GeogebraCommonKernelAdvancedAlgoAsymptote *self = [GeogebraCommonKernelAdvancedAlgoAsymptote alloc];
  GeogebraCommonKernelAdvancedAlgoAsymptote_initWithGeogebraCommonKernelConstruction_withNSStringArray_withGeogebraCommonKernelGeosGeoConic_(self, cons, labels, c);
  return self;
}

void GeogebraCommonKernelAdvancedAlgoAsymptote_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoConic_(GeogebraCommonKernelAdvancedAlgoAsymptote *self, GeogebraCommonKernelConstruction *cons, GeogebraCommonKernelGeosGeoConic *c) {
  GeogebraCommonKernelAlgosAlgoElement_initWithGeogebraCommonKernelConstruction_(self, cons);
  GeogebraCommonKernelAdvancedAlgoAsymptote_set_c_(self, c);
  GeogebraCommonKernelAdvancedAlgoAsymptote_set_eigenvec_(self, ((GeogebraCommonKernelGeosGeoConic *) nil_chk(c))->eigenvec_);
  GeogebraCommonKernelAdvancedAlgoAsymptote_set_halfAxes_(self, c->halfAxes_);
  GeogebraCommonKernelAdvancedAlgoAsymptote_set_b_(self, c->b_);
  GeogebraCommonKernelAdvancedAlgoAsymptote_setAndConsume_asymptotes_(self, [IOSObjectArray newArrayWithLength:2 type:GeogebraCommonKernelGeosGeoLine_class_()]);
  IOSObjectArray_SetAndConsume(self->asymptotes_, 0, new_GeogebraCommonKernelGeosGeoLine_initWithGeogebraCommonKernelConstruction_(cons));
  IOSObjectArray_SetAndConsume(self->asymptotes_, 1, new_GeogebraCommonKernelGeosGeoLine_initWithGeogebraCommonKernelConstruction_(cons));
  GeogebraCommonKernelAdvancedAlgoAsymptote_setAndConsume_P_(self, new_GeogebraCommonKernelGeosGeoPoint_initWithGeogebraCommonKernelConstruction_(cons));
  [((GeogebraCommonKernelGeosGeoLine *) nil_chk(IOSObjectArray_Get(self->asymptotes_, 0))) setStartPointWithGeogebraCommonKernelGeosGeoPoint:self->P_];
  [((GeogebraCommonKernelGeosGeoLine *) nil_chk(IOSObjectArray_Get(self->asymptotes_, 1))) setStartPointWithGeogebraCommonKernelGeosGeoPoint:self->P_];
  [self setInputOutput];
  GeogebraCommonKernelAdvancedAlgoAsymptote_compute(self);
}

GeogebraCommonKernelAdvancedAlgoAsymptote *new_GeogebraCommonKernelAdvancedAlgoAsymptote_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoConic_(GeogebraCommonKernelConstruction *cons, GeogebraCommonKernelGeosGeoConic *c) {
  GeogebraCommonKernelAdvancedAlgoAsymptote *self = [GeogebraCommonKernelAdvancedAlgoAsymptote alloc];
  GeogebraCommonKernelAdvancedAlgoAsymptote_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoConic_(self, cons, c);
  return self;
}

void GeogebraCommonKernelAdvancedAlgoAsymptote_compute(GeogebraCommonKernelAdvancedAlgoAsymptote *self) {
  {
    jdouble vec2x;
    jdouble vec2y;
    jdouble vec1x;
    jdouble vec1y;
    switch (((GeogebraCommonKernelGeosGeoConic *) nil_chk(self->c_))->type_) {
      case GeogebraCommonKernelKernelNDGeoConicNDConstants_CONIC_HYPERBOLA:
      vec2x = IOSDoubleArray_Get(nil_chk(self->halfAxes_), 1) * [((GeogebraCommonKernelGeosGeoVec2D *) nil_chk(IOSObjectArray_Get(nil_chk(self->eigenvec_), 1))) getX];
      vec2y = IOSDoubleArray_Get(self->halfAxes_, 1) * [((GeogebraCommonKernelGeosGeoVec2D *) nil_chk(IOSObjectArray_Get(self->eigenvec_, 1))) getY];
      vec1x = IOSDoubleArray_Get(self->halfAxes_, 0) * [((GeogebraCommonKernelGeosGeoVec2D *) nil_chk(IOSObjectArray_Get(self->eigenvec_, 0))) getX];
      vec1y = IOSDoubleArray_Get(self->halfAxes_, 0) * [((GeogebraCommonKernelGeosGeoVec2D *) nil_chk(IOSObjectArray_Get(self->eigenvec_, 0))) getY];
      ((GeogebraCommonKernelGeosGeoLine *) nil_chk(IOSObjectArray_Get(nil_chk(self->asymptotes_), 0)))->x_ = -(vec2y + vec1y);
      ((GeogebraCommonKernelGeosGeoLine *) nil_chk(IOSObjectArray_Get(self->asymptotes_, 0)))->y_ = vec2x + vec1x;
      ((GeogebraCommonKernelGeosGeoLine *) nil_chk(IOSObjectArray_Get(self->asymptotes_, 0)))->z_ = -(((GeogebraCommonKernelGeosGeoLine *) nil_chk(IOSObjectArray_Get(self->asymptotes_, 0)))->x_ * [((GeogebraCommonKernelGeosGeoVec2D *) nil_chk(self->b_)) getX] + ((GeogebraCommonKernelGeosGeoLine *) nil_chk(IOSObjectArray_Get(self->asymptotes_, 0)))->y_ * [self->b_ getY]);
      ((GeogebraCommonKernelGeosGeoLine *) nil_chk(IOSObjectArray_Get(self->asymptotes_, 1)))->x_ = -(vec2y - vec1y);
      ((GeogebraCommonKernelGeosGeoLine *) nil_chk(IOSObjectArray_Get(self->asymptotes_, 1)))->y_ = vec2x - vec1x;
      ((GeogebraCommonKernelGeosGeoLine *) nil_chk(IOSObjectArray_Get(self->asymptotes_, 1)))->z_ = -(((GeogebraCommonKernelGeosGeoLine *) nil_chk(IOSObjectArray_Get(self->asymptotes_, 1)))->x_ * [self->b_ getX] + ((GeogebraCommonKernelGeosGeoLine *) nil_chk(IOSObjectArray_Get(self->asymptotes_, 1)))->y_ * [self->b_ getY]);
      [((GeogebraCommonKernelGeosGeoPoint *) nil_chk(self->P_)) setCoordsWithDouble:[self->b_ getX] withDouble:[self->b_ getY] withDouble:1.0];
      break;
      default:
      [((GeogebraCommonKernelGeosGeoLine *) nil_chk(IOSObjectArray_Get(nil_chk(self->asymptotes_), 0))) setUndefined];
      [((GeogebraCommonKernelGeosGeoLine *) nil_chk(IOSObjectArray_Get(self->asymptotes_, 1))) setUndefined];
    }
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelAdvancedAlgoAsymptote)
