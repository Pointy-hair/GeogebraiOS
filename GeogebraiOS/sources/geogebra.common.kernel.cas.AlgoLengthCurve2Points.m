//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/cas/AlgoLengthCurve2Points.java
//


#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "geogebra/common/kernel/Construction.h"
#include "geogebra/common/kernel/algos/AlgoElement.h"
#include "geogebra/common/kernel/cas/AlgoDerivative.h"
#include "geogebra/common/kernel/cas/AlgoIntegralDefinite.h"
#include "geogebra/common/kernel/cas/AlgoLengthCurve2Points.h"
#include "geogebra/common/kernel/cas/AlgoUsingTempCASalgo.h"
#include "geogebra/common/kernel/cas/LengthCurve.h"
#include "geogebra/common/kernel/commands/Commands.h"
#include "geogebra/common/kernel/geos/GeoCurveCartesian.h"
#include "geogebra/common/kernel/geos/GeoElement.h"
#include "geogebra/common/kernel/geos/GeoNumeric.h"
#include "geogebra/common/kernel/geos/GeoPoint.h"
#include "geogebra/common/kernel/roots/RealRootFunction.h"
#include "java/lang/Math.h"

@interface GeogebraCommonKernelCasAlgoLengthCurve2Points () {
 @public
  GeogebraCommonKernelGeosGeoPoint *A_, *B_;
  GeogebraCommonKernelGeosGeoCurveCartesian *c_;
  GeogebraCommonKernelGeosGeoCurveCartesian *derivative_;
  GeogebraCommonKernelGeosGeoNumeric *length_;
  id<GeogebraCommonKernelRootsRealRootFunction> lengthCurve_;
}

@end

J2OBJC_FIELD_SETTER(GeogebraCommonKernelCasAlgoLengthCurve2Points, A_, GeogebraCommonKernelGeosGeoPoint *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelCasAlgoLengthCurve2Points, B_, GeogebraCommonKernelGeosGeoPoint *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelCasAlgoLengthCurve2Points, c_, GeogebraCommonKernelGeosGeoCurveCartesian *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelCasAlgoLengthCurve2Points, derivative_, GeogebraCommonKernelGeosGeoCurveCartesian *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelCasAlgoLengthCurve2Points, length_, GeogebraCommonKernelGeosGeoNumeric *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelCasAlgoLengthCurve2Points, lengthCurve_, id<GeogebraCommonKernelRootsRealRootFunction>)

__attribute__((unused)) static void GeogebraCommonKernelCasAlgoLengthCurve2Points_compute(GeogebraCommonKernelCasAlgoLengthCurve2Points *self);

@implementation GeogebraCommonKernelCasAlgoLengthCurve2Points

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                                            withNSString:(NSString *)label
           withGeogebraCommonKernelGeosGeoCurveCartesian:(GeogebraCommonKernelGeosGeoCurveCartesian *)c
                    withGeogebraCommonKernelGeosGeoPoint:(GeogebraCommonKernelGeosGeoPoint *)A
                    withGeogebraCommonKernelGeosGeoPoint:(GeogebraCommonKernelGeosGeoPoint *)B {
  GeogebraCommonKernelCasAlgoLengthCurve2Points_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoCurveCartesian_withGeogebraCommonKernelGeosGeoPoint_withGeogebraCommonKernelGeosGeoPoint_(self, cons, label, c, A, B);
  return self;
}

- (GeogebraCommonKernelCommandsCommandsEnum *)getClassName {
  return GeogebraCommonKernelCommandsCommandsEnum_get_Length();
}

- (void)setInputOutput {
  GeogebraCommonKernelAlgosAlgoElement_setAndConsume_input_(self, [IOSObjectArray newArrayWithLength:3 type:GeogebraCommonKernelGeosGeoElement_class_()]);
  IOSObjectArray_Set(input_, 0, c_);
  IOSObjectArray_Set(input_, 1, A_);
  IOSObjectArray_Set(input_, 2, B_);
  [self setOutputLengthWithInt:1];
  [self setOutputWithInt:0 withGeogebraCommonKernelGeosGeoElement:length_];
  [self setDependencies];
}

- (GeogebraCommonKernelGeosGeoNumeric *)getLength {
  return length_;
}

- (void)compute {
  GeogebraCommonKernelCasAlgoLengthCurve2Points_compute(self);
}

- (void)refreshCASResults {
  GeogebraCommonKernelCasAlgoUsingTempCASalgo_setAndConsume_algoCAS_(self, new_GeogebraCommonKernelCasAlgoDerivative_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosCasEvaluableFunction_(cons_, c_));
  GeogebraCommonKernelCasAlgoLengthCurve2Points_set_derivative_(self, (GeogebraCommonKernelGeosGeoCurveCartesian *) check_class_cast([((GeogebraCommonKernelCasAlgoDerivative *) check_class_cast(algoCAS_, [GeogebraCommonKernelCasAlgoDerivative class])) getResult], [GeogebraCommonKernelGeosGeoCurveCartesian class]));
  [((GeogebraCommonKernelConstruction *) nil_chk(cons_)) removeFromConstructionListWithGeogebraCommonKernelAlgosConstructionElement:algoCAS_];
  GeogebraCommonKernelCasAlgoLengthCurve2Points_setAndConsume_lengthCurve_(self, new_GeogebraCommonKernelCasLengthCurve_initWithGeogebraCommonKernelGeosGeoCurveCartesian_(derivative_));
}

- (void)dealloc {
  RELEASE_(A_);
  RELEASE_(B_);
  RELEASE_(c_);
  RELEASE_(derivative_);
  RELEASE_(length_);
  RELEASE_(lengthCurve_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonKernelConstruction:withNSString:withGeogebraCommonKernelGeosGeoCurveCartesian:withGeogebraCommonKernelGeosGeoPoint:withGeogebraCommonKernelGeosGeoPoint:", "AlgoLengthCurve2Points", NULL, 0x1, NULL, NULL },
    { "getClassName", NULL, "Lgeogebra.common.kernel.commands.Commands;", 0x1, NULL, NULL },
    { "setInputOutput", NULL, "V", 0x4, NULL, NULL },
    { "getLength", NULL, "Lgeogebra.common.kernel.geos.GeoNumeric;", 0x1, NULL, NULL },
    { "compute", NULL, "V", 0x11, NULL, NULL },
    { "refreshCASResults", NULL, "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "A_", NULL, 0x2, "Lgeogebra.common.kernel.geos.GeoPoint;", NULL, NULL,  },
    { "B_", NULL, 0x2, "Lgeogebra.common.kernel.geos.GeoPoint;", NULL, NULL,  },
    { "c_", NULL, 0x2, "Lgeogebra.common.kernel.geos.GeoCurveCartesian;", NULL, NULL,  },
    { "derivative_", NULL, 0x2, "Lgeogebra.common.kernel.geos.GeoCurveCartesian;", NULL, NULL,  },
    { "length_", NULL, 0x2, "Lgeogebra.common.kernel.geos.GeoNumeric;", NULL, NULL,  },
    { "lengthCurve_", NULL, 0x2, "Lgeogebra.common.kernel.roots.RealRootFunction;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelCasAlgoLengthCurve2Points = { 2, "AlgoLengthCurve2Points", "geogebra.common.kernel.cas", NULL, 0x1, 6, methods, 6, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelCasAlgoLengthCurve2Points;
}

@end

void GeogebraCommonKernelCasAlgoLengthCurve2Points_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoCurveCartesian_withGeogebraCommonKernelGeosGeoPoint_withGeogebraCommonKernelGeosGeoPoint_(GeogebraCommonKernelCasAlgoLengthCurve2Points *self, GeogebraCommonKernelConstruction *cons, NSString *label, GeogebraCommonKernelGeosGeoCurveCartesian *c, GeogebraCommonKernelGeosGeoPoint *A, GeogebraCommonKernelGeosGeoPoint *B) {
  GeogebraCommonKernelCasAlgoUsingTempCASalgo_initWithGeogebraCommonKernelConstruction_(self, cons);
  GeogebraCommonKernelCasAlgoLengthCurve2Points_set_A_(self, A);
  GeogebraCommonKernelCasAlgoLengthCurve2Points_set_B_(self, B);
  GeogebraCommonKernelCasAlgoLengthCurve2Points_set_c_(self, c);
  GeogebraCommonKernelCasAlgoLengthCurve2Points_setAndConsume_length_(self, new_GeogebraCommonKernelGeosGeoNumeric_initWithGeogebraCommonKernelConstruction_(cons));
  [self refreshCASResults];
  [self setInputOutput];
  GeogebraCommonKernelCasAlgoLengthCurve2Points_compute(self);
  [self->length_ setLabelWithNSString:label];
}

GeogebraCommonKernelCasAlgoLengthCurve2Points *new_GeogebraCommonKernelCasAlgoLengthCurve2Points_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoCurveCartesian_withGeogebraCommonKernelGeosGeoPoint_withGeogebraCommonKernelGeosGeoPoint_(GeogebraCommonKernelConstruction *cons, NSString *label, GeogebraCommonKernelGeosGeoCurveCartesian *c, GeogebraCommonKernelGeosGeoPoint *A, GeogebraCommonKernelGeosGeoPoint *B) {
  GeogebraCommonKernelCasAlgoLengthCurve2Points *self = [GeogebraCommonKernelCasAlgoLengthCurve2Points alloc];
  GeogebraCommonKernelCasAlgoLengthCurve2Points_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoCurveCartesian_withGeogebraCommonKernelGeosGeoPoint_withGeogebraCommonKernelGeosGeoPoint_(self, cons, label, c, A, B);
  return self;
}

void GeogebraCommonKernelCasAlgoLengthCurve2Points_compute(GeogebraCommonKernelCasAlgoLengthCurve2Points *self) {
  if (![((GeogebraCommonKernelGeosGeoCurveCartesian *) nil_chk(self->derivative_)) isDefined]) {
    [((GeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->length_)) setUndefined];
    return;
  }
  jdouble a = [self->c_ getClosestParameterWithGeogebraCommonKernelKernelNDGeoPointND:self->A_ withDouble:[((GeogebraCommonKernelGeosGeoCurveCartesian *) nil_chk(self->c_)) getMinParameter]];
  jdouble b = [self->c_ getClosestParameterWithGeogebraCommonKernelKernelNDGeoPointND:self->B_ withDouble:[self->c_ getMinParameter]];
  jdouble lenVal = JavaLangMath_absWithDouble_(GeogebraCommonKernelCasAlgoIntegralDefinite_numericIntegrationWithGeogebraCommonKernelRootsRealRootFunction_withDouble_withDouble_(self->lengthCurve_, a, b));
  [((GeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->length_)) setValueWithDouble:lenVal];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelCasAlgoLengthCurve2Points)
