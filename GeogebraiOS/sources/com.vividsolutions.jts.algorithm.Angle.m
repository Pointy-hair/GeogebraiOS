//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/com/vividsolutions/jts/algorithm/Angle.java
//


#include "J2ObjC_source.h"
#include "com/vividsolutions/jts/algorithm/Angle.h"
#include "com/vividsolutions/jts/algorithm/CGAlgorithms.h"
#include "com/vividsolutions/jts/geom/Coordinate.h"
#include "java/lang/Math.h"

@implementation ComVividsolutionsJtsAlgorithmAngle

+ (jdouble)toDegreesWithDouble:(jdouble)radians {
  return ComVividsolutionsJtsAlgorithmAngle_toDegreesWithDouble_(radians);
}

+ (jdouble)toRadiansWithDouble:(jdouble)angleDegrees {
  return ComVividsolutionsJtsAlgorithmAngle_toRadiansWithDouble_(angleDegrees);
}

+ (jdouble)angleWithComVividsolutionsJtsGeomCoordinate:(ComVividsolutionsJtsGeomCoordinate *)p0
                withComVividsolutionsJtsGeomCoordinate:(ComVividsolutionsJtsGeomCoordinate *)p1 {
  return ComVividsolutionsJtsAlgorithmAngle_angleWithComVividsolutionsJtsGeomCoordinate_withComVividsolutionsJtsGeomCoordinate_(p0, p1);
}

+ (jdouble)angleWithComVividsolutionsJtsGeomCoordinate:(ComVividsolutionsJtsGeomCoordinate *)p {
  return ComVividsolutionsJtsAlgorithmAngle_angleWithComVividsolutionsJtsGeomCoordinate_(p);
}

+ (jboolean)isAcuteWithComVividsolutionsJtsGeomCoordinate:(ComVividsolutionsJtsGeomCoordinate *)p0
                   withComVividsolutionsJtsGeomCoordinate:(ComVividsolutionsJtsGeomCoordinate *)p1
                   withComVividsolutionsJtsGeomCoordinate:(ComVividsolutionsJtsGeomCoordinate *)p2 {
  return ComVividsolutionsJtsAlgorithmAngle_isAcuteWithComVividsolutionsJtsGeomCoordinate_withComVividsolutionsJtsGeomCoordinate_withComVividsolutionsJtsGeomCoordinate_(p0, p1, p2);
}

+ (jboolean)isObtuseWithComVividsolutionsJtsGeomCoordinate:(ComVividsolutionsJtsGeomCoordinate *)p0
                    withComVividsolutionsJtsGeomCoordinate:(ComVividsolutionsJtsGeomCoordinate *)p1
                    withComVividsolutionsJtsGeomCoordinate:(ComVividsolutionsJtsGeomCoordinate *)p2 {
  return ComVividsolutionsJtsAlgorithmAngle_isObtuseWithComVividsolutionsJtsGeomCoordinate_withComVividsolutionsJtsGeomCoordinate_withComVividsolutionsJtsGeomCoordinate_(p0, p1, p2);
}

+ (jdouble)angleBetweenWithComVividsolutionsJtsGeomCoordinate:(ComVividsolutionsJtsGeomCoordinate *)tip1
                       withComVividsolutionsJtsGeomCoordinate:(ComVividsolutionsJtsGeomCoordinate *)tail
                       withComVividsolutionsJtsGeomCoordinate:(ComVividsolutionsJtsGeomCoordinate *)tip2 {
  return ComVividsolutionsJtsAlgorithmAngle_angleBetweenWithComVividsolutionsJtsGeomCoordinate_withComVividsolutionsJtsGeomCoordinate_withComVividsolutionsJtsGeomCoordinate_(tip1, tail, tip2);
}

+ (jdouble)angleBetweenOrientedWithComVividsolutionsJtsGeomCoordinate:(ComVividsolutionsJtsGeomCoordinate *)tip1
                               withComVividsolutionsJtsGeomCoordinate:(ComVividsolutionsJtsGeomCoordinate *)tail
                               withComVividsolutionsJtsGeomCoordinate:(ComVividsolutionsJtsGeomCoordinate *)tip2 {
  return ComVividsolutionsJtsAlgorithmAngle_angleBetweenOrientedWithComVividsolutionsJtsGeomCoordinate_withComVividsolutionsJtsGeomCoordinate_withComVividsolutionsJtsGeomCoordinate_(tip1, tail, tip2);
}

+ (jdouble)interiorAngleWithComVividsolutionsJtsGeomCoordinate:(ComVividsolutionsJtsGeomCoordinate *)p0
                        withComVividsolutionsJtsGeomCoordinate:(ComVividsolutionsJtsGeomCoordinate *)p1
                        withComVividsolutionsJtsGeomCoordinate:(ComVividsolutionsJtsGeomCoordinate *)p2 {
  return ComVividsolutionsJtsAlgorithmAngle_interiorAngleWithComVividsolutionsJtsGeomCoordinate_withComVividsolutionsJtsGeomCoordinate_withComVividsolutionsJtsGeomCoordinate_(p0, p1, p2);
}

+ (jint)getTurnWithDouble:(jdouble)ang1
               withDouble:(jdouble)ang2 {
  return ComVividsolutionsJtsAlgorithmAngle_getTurnWithDouble_withDouble_(ang1, ang2);
}

+ (jdouble)normalizeWithDouble:(jdouble)angle {
  return ComVividsolutionsJtsAlgorithmAngle_normalizeWithDouble_(angle);
}

+ (jdouble)normalizePositiveWithDouble:(jdouble)angle {
  return ComVividsolutionsJtsAlgorithmAngle_normalizePositiveWithDouble_(angle);
}

+ (jdouble)diffWithDouble:(jdouble)ang1
               withDouble:(jdouble)ang2 {
  return ComVividsolutionsJtsAlgorithmAngle_diffWithDouble_withDouble_(ang1, ang2);
}

- (instancetype)init {
  ComVividsolutionsJtsAlgorithmAngle_init(self);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "toDegreesWithDouble:", "toDegrees", "D", 0x9, NULL, NULL },
    { "toRadiansWithDouble:", "toRadians", "D", 0x9, NULL, NULL },
    { "angleWithComVividsolutionsJtsGeomCoordinate:withComVividsolutionsJtsGeomCoordinate:", "angle", "D", 0x9, NULL, NULL },
    { "angleWithComVividsolutionsJtsGeomCoordinate:", "angle", "D", 0x9, NULL, NULL },
    { "isAcuteWithComVividsolutionsJtsGeomCoordinate:withComVividsolutionsJtsGeomCoordinate:withComVividsolutionsJtsGeomCoordinate:", "isAcute", "Z", 0x9, NULL, NULL },
    { "isObtuseWithComVividsolutionsJtsGeomCoordinate:withComVividsolutionsJtsGeomCoordinate:withComVividsolutionsJtsGeomCoordinate:", "isObtuse", "Z", 0x9, NULL, NULL },
    { "angleBetweenWithComVividsolutionsJtsGeomCoordinate:withComVividsolutionsJtsGeomCoordinate:withComVividsolutionsJtsGeomCoordinate:", "angleBetween", "D", 0x9, NULL, NULL },
    { "angleBetweenOrientedWithComVividsolutionsJtsGeomCoordinate:withComVividsolutionsJtsGeomCoordinate:withComVividsolutionsJtsGeomCoordinate:", "angleBetweenOriented", "D", 0x9, NULL, NULL },
    { "interiorAngleWithComVividsolutionsJtsGeomCoordinate:withComVividsolutionsJtsGeomCoordinate:withComVividsolutionsJtsGeomCoordinate:", "interiorAngle", "D", 0x9, NULL, NULL },
    { "getTurnWithDouble:withDouble:", "getTurn", "I", 0x9, NULL, NULL },
    { "normalizeWithDouble:", "normalize", "D", 0x9, NULL, NULL },
    { "normalizePositiveWithDouble:", "normalizePositive", "D", 0x9, NULL, NULL },
    { "diffWithDouble:withDouble:", "diff", "D", 0x9, NULL, NULL },
    { "init", NULL, NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "PI_TIMES_2_", NULL, 0x19, "D", NULL, NULL, .constantValue.asDouble = ComVividsolutionsJtsAlgorithmAngle_PI_TIMES_2 },
    { "PI_OVER_2_", NULL, 0x19, "D", NULL, NULL, .constantValue.asDouble = ComVividsolutionsJtsAlgorithmAngle_PI_OVER_2 },
    { "PI_OVER_4_", NULL, 0x19, "D", NULL, NULL, .constantValue.asDouble = ComVividsolutionsJtsAlgorithmAngle_PI_OVER_4 },
    { "COUNTERCLOCKWISE_", NULL, 0x19, "I", NULL, NULL, .constantValue.asInt = ComVividsolutionsJtsAlgorithmAngle_COUNTERCLOCKWISE },
    { "CLOCKWISE_", NULL, 0x19, "I", NULL, NULL, .constantValue.asInt = ComVividsolutionsJtsAlgorithmAngle_CLOCKWISE },
    { "NONE_", NULL, 0x19, "I", NULL, NULL, .constantValue.asInt = ComVividsolutionsJtsAlgorithmAngle_NONE },
  };
  static const J2ObjcClassInfo _ComVividsolutionsJtsAlgorithmAngle = { 2, "Angle", "com.vividsolutions.jts.algorithm", NULL, 0x1, 14, methods, 6, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ComVividsolutionsJtsAlgorithmAngle;
}

@end

jdouble ComVividsolutionsJtsAlgorithmAngle_toDegreesWithDouble_(jdouble radians) {
  ComVividsolutionsJtsAlgorithmAngle_initialize();
  return (radians * 180) / (JavaLangMath_PI);
}

jdouble ComVividsolutionsJtsAlgorithmAngle_toRadiansWithDouble_(jdouble angleDegrees) {
  ComVividsolutionsJtsAlgorithmAngle_initialize();
  return (angleDegrees * JavaLangMath_PI) / 180.0;
}

jdouble ComVividsolutionsJtsAlgorithmAngle_angleWithComVividsolutionsJtsGeomCoordinate_withComVividsolutionsJtsGeomCoordinate_(ComVividsolutionsJtsGeomCoordinate *p0, ComVividsolutionsJtsGeomCoordinate *p1) {
  ComVividsolutionsJtsAlgorithmAngle_initialize();
  jdouble dx = ((ComVividsolutionsJtsGeomCoordinate *) nil_chk(p1))->x_ - ((ComVividsolutionsJtsGeomCoordinate *) nil_chk(p0))->x_;
  jdouble dy = p1->y_ - p0->y_;
  return JavaLangMath_atan2WithDouble_withDouble_(dy, dx);
}

jdouble ComVividsolutionsJtsAlgorithmAngle_angleWithComVividsolutionsJtsGeomCoordinate_(ComVividsolutionsJtsGeomCoordinate *p) {
  ComVividsolutionsJtsAlgorithmAngle_initialize();
  return JavaLangMath_atan2WithDouble_withDouble_(((ComVividsolutionsJtsGeomCoordinate *) nil_chk(p))->y_, p->x_);
}

jboolean ComVividsolutionsJtsAlgorithmAngle_isAcuteWithComVividsolutionsJtsGeomCoordinate_withComVividsolutionsJtsGeomCoordinate_withComVividsolutionsJtsGeomCoordinate_(ComVividsolutionsJtsGeomCoordinate *p0, ComVividsolutionsJtsGeomCoordinate *p1, ComVividsolutionsJtsGeomCoordinate *p2) {
  ComVividsolutionsJtsAlgorithmAngle_initialize();
  jdouble dx0 = ((ComVividsolutionsJtsGeomCoordinate *) nil_chk(p0))->x_ - ((ComVividsolutionsJtsGeomCoordinate *) nil_chk(p1))->x_;
  jdouble dy0 = p0->y_ - p1->y_;
  jdouble dx1 = ((ComVividsolutionsJtsGeomCoordinate *) nil_chk(p2))->x_ - p1->x_;
  jdouble dy1 = p2->y_ - p1->y_;
  jdouble dotprod = dx0 * dx1 + dy0 * dy1;
  return dotprod > 0;
}

jboolean ComVividsolutionsJtsAlgorithmAngle_isObtuseWithComVividsolutionsJtsGeomCoordinate_withComVividsolutionsJtsGeomCoordinate_withComVividsolutionsJtsGeomCoordinate_(ComVividsolutionsJtsGeomCoordinate *p0, ComVividsolutionsJtsGeomCoordinate *p1, ComVividsolutionsJtsGeomCoordinate *p2) {
  ComVividsolutionsJtsAlgorithmAngle_initialize();
  jdouble dx0 = ((ComVividsolutionsJtsGeomCoordinate *) nil_chk(p0))->x_ - ((ComVividsolutionsJtsGeomCoordinate *) nil_chk(p1))->x_;
  jdouble dy0 = p0->y_ - p1->y_;
  jdouble dx1 = ((ComVividsolutionsJtsGeomCoordinate *) nil_chk(p2))->x_ - p1->x_;
  jdouble dy1 = p2->y_ - p1->y_;
  jdouble dotprod = dx0 * dx1 + dy0 * dy1;
  return dotprod < 0;
}

jdouble ComVividsolutionsJtsAlgorithmAngle_angleBetweenWithComVividsolutionsJtsGeomCoordinate_withComVividsolutionsJtsGeomCoordinate_withComVividsolutionsJtsGeomCoordinate_(ComVividsolutionsJtsGeomCoordinate *tip1, ComVividsolutionsJtsGeomCoordinate *tail, ComVividsolutionsJtsGeomCoordinate *tip2) {
  ComVividsolutionsJtsAlgorithmAngle_initialize();
  jdouble a1 = ComVividsolutionsJtsAlgorithmAngle_angleWithComVividsolutionsJtsGeomCoordinate_withComVividsolutionsJtsGeomCoordinate_(tail, tip1);
  jdouble a2 = ComVividsolutionsJtsAlgorithmAngle_angleWithComVividsolutionsJtsGeomCoordinate_withComVividsolutionsJtsGeomCoordinate_(tail, tip2);
  return ComVividsolutionsJtsAlgorithmAngle_diffWithDouble_withDouble_(a1, a2);
}

jdouble ComVividsolutionsJtsAlgorithmAngle_angleBetweenOrientedWithComVividsolutionsJtsGeomCoordinate_withComVividsolutionsJtsGeomCoordinate_withComVividsolutionsJtsGeomCoordinate_(ComVividsolutionsJtsGeomCoordinate *tip1, ComVividsolutionsJtsGeomCoordinate *tail, ComVividsolutionsJtsGeomCoordinate *tip2) {
  ComVividsolutionsJtsAlgorithmAngle_initialize();
  jdouble a1 = ComVividsolutionsJtsAlgorithmAngle_angleWithComVividsolutionsJtsGeomCoordinate_withComVividsolutionsJtsGeomCoordinate_(tail, tip1);
  jdouble a2 = ComVividsolutionsJtsAlgorithmAngle_angleWithComVividsolutionsJtsGeomCoordinate_withComVividsolutionsJtsGeomCoordinate_(tail, tip2);
  jdouble angDel = a2 - a1;
  if (angDel <= -JavaLangMath_PI) return angDel + ComVividsolutionsJtsAlgorithmAngle_PI_TIMES_2;
  if (angDel > JavaLangMath_PI) return angDel - ComVividsolutionsJtsAlgorithmAngle_PI_TIMES_2;
  return angDel;
}

jdouble ComVividsolutionsJtsAlgorithmAngle_interiorAngleWithComVividsolutionsJtsGeomCoordinate_withComVividsolutionsJtsGeomCoordinate_withComVividsolutionsJtsGeomCoordinate_(ComVividsolutionsJtsGeomCoordinate *p0, ComVividsolutionsJtsGeomCoordinate *p1, ComVividsolutionsJtsGeomCoordinate *p2) {
  ComVividsolutionsJtsAlgorithmAngle_initialize();
  jdouble anglePrev = ComVividsolutionsJtsAlgorithmAngle_angleWithComVividsolutionsJtsGeomCoordinate_withComVividsolutionsJtsGeomCoordinate_(p1, p0);
  jdouble angleNext = ComVividsolutionsJtsAlgorithmAngle_angleWithComVividsolutionsJtsGeomCoordinate_withComVividsolutionsJtsGeomCoordinate_(p1, p2);
  return JavaLangMath_absWithDouble_(angleNext - anglePrev);
}

jint ComVividsolutionsJtsAlgorithmAngle_getTurnWithDouble_withDouble_(jdouble ang1, jdouble ang2) {
  ComVividsolutionsJtsAlgorithmAngle_initialize();
  jdouble crossproduct = JavaLangMath_sinWithDouble_(ang2 - ang1);
  if (crossproduct > 0) {
    return ComVividsolutionsJtsAlgorithmAngle_COUNTERCLOCKWISE;
  }
  if (crossproduct < 0) {
    return ComVividsolutionsJtsAlgorithmAngle_CLOCKWISE;
  }
  return ComVividsolutionsJtsAlgorithmAngle_NONE;
}

jdouble ComVividsolutionsJtsAlgorithmAngle_normalizeWithDouble_(jdouble angle) {
  ComVividsolutionsJtsAlgorithmAngle_initialize();
  while (angle > JavaLangMath_PI) angle -= ComVividsolutionsJtsAlgorithmAngle_PI_TIMES_2;
  while (angle < -JavaLangMath_PI) angle += ComVividsolutionsJtsAlgorithmAngle_PI_TIMES_2;
  return angle;
}

jdouble ComVividsolutionsJtsAlgorithmAngle_normalizePositiveWithDouble_(jdouble angle) {
  ComVividsolutionsJtsAlgorithmAngle_initialize();
  while (angle < 0.0) angle += ComVividsolutionsJtsAlgorithmAngle_PI_TIMES_2;
  return angle;
}

jdouble ComVividsolutionsJtsAlgorithmAngle_diffWithDouble_withDouble_(jdouble ang1, jdouble ang2) {
  ComVividsolutionsJtsAlgorithmAngle_initialize();
  jdouble delAngle;
  if (ang1 < ang2) {
    delAngle = ang2 - ang1;
  }
  else {
    delAngle = ang1 - ang2;
  }
  if (delAngle > JavaLangMath_PI) {
    delAngle = (2 * JavaLangMath_PI) - delAngle;
  }
  return delAngle;
}

void ComVividsolutionsJtsAlgorithmAngle_init(ComVividsolutionsJtsAlgorithmAngle *self) {
  NSObject_init(self);
}

ComVividsolutionsJtsAlgorithmAngle *new_ComVividsolutionsJtsAlgorithmAngle_init() {
  ComVividsolutionsJtsAlgorithmAngle *self = [ComVividsolutionsJtsAlgorithmAngle alloc];
  ComVividsolutionsJtsAlgorithmAngle_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComVividsolutionsJtsAlgorithmAngle)
