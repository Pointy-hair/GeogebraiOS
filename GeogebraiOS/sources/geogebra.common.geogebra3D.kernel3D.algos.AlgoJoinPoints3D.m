//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/geogebra3D/kernel3D/algos/AlgoJoinPoints3D.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "geogebra/common/geogebra3D/kernel3D/algos/AlgoElement3D.h"
#include "geogebra/common/geogebra3D/kernel3D/algos/AlgoJoinPoints3D.h"
#include "geogebra/common/geogebra3D/kernel3D/geos/GeoCoordSys1D.h"
#include "geogebra/common/geogebra3D/kernel3D/geos/GeoLine3D.h"
#include "geogebra/common/geogebra3D/kernel3D/geos/GeoRay3D.h"
#include "geogebra/common/geogebra3D/kernel3D/geos/GeoSegment3D.h"
#include "geogebra/common/kernel/Construction.h"
#include "geogebra/common/kernel/StringTemplate.h"
#include "geogebra/common/kernel/algos/AlgoElement.h"
#include "geogebra/common/kernel/algos/ConstructionElement.h"
#include "geogebra/common/kernel/commands/Commands.h"
#include "geogebra/common/kernel/geos/GeoElement.h"
#include "geogebra/common/kernel/kernelND/GeoPointND.h"
#include "geogebra/common/main/Localization.h"
#include "geogebra/common/plugin/GeoClass.h"
#include "java/lang/StringBuilder.h"

@interface GeogebraCommonGeogebra3DKernel3DAlgosAlgoJoinPoints3D () {
 @public
  id<GeogebraCommonKernelKernelNDGeoPointND> P_;
  id<GeogebraCommonKernelKernelNDGeoPointND> Q_;
  GeogebraCommonKernelGeosGeoElement *poly_;
}

@end

J2OBJC_FIELD_SETTER(GeogebraCommonGeogebra3DKernel3DAlgosAlgoJoinPoints3D, P_, id<GeogebraCommonKernelKernelNDGeoPointND>)
J2OBJC_FIELD_SETTER(GeogebraCommonGeogebra3DKernel3DAlgosAlgoJoinPoints3D, Q_, id<GeogebraCommonKernelKernelNDGeoPointND>)
J2OBJC_FIELD_SETTER(GeogebraCommonGeogebra3DKernel3DAlgosAlgoJoinPoints3D, poly_, GeogebraCommonKernelGeosGeoElement *)

@implementation GeogebraCommonGeogebra3DKernel3DAlgosAlgoJoinPoints3D

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                                            withNSString:(NSString *)label
              withGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)P
              withGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)Q
                    withGeogebraCommonPluginGeoClassEnum:(GeogebraCommonPluginGeoClassEnum *)geoClassType {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoJoinPoints3D_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonPluginGeoClassEnum_(self, cons, label, P, Q, geoClassType);
  return self;
}

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                                            withNSString:(NSString *)label
              withGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)P
              withGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)Q
                  withGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)poly
                    withGeogebraCommonPluginGeoClassEnum:(GeogebraCommonPluginGeoClassEnum *)geoClassType {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoJoinPoints3D_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelGeosGeoElement_withGeogebraCommonPluginGeoClassEnum_(self, cons, label, P, Q, poly, geoClassType);
  return self;
}

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
              withGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)P
              withGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)Q
                  withGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)poly
                    withGeogebraCommonPluginGeoClassEnum:(GeogebraCommonPluginGeoClassEnum *)geoClassType {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoJoinPoints3D_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelGeosGeoElement_withGeogebraCommonPluginGeoClassEnum_(self, cons, P, Q, poly, geoClassType);
  return self;
}

- (void)setInputOutput {
  if (poly_ == nil) {
    [self setInputOutputWithGeogebraCommonKernelGeosGeoElementArray:[IOSObjectArray arrayWithObjects:(id[]){ (GeogebraCommonKernelGeosGeoElement *) check_class_cast(P_, [GeogebraCommonKernelGeosGeoElement class]), (GeogebraCommonKernelGeosGeoElement *) check_class_cast(Q_, [GeogebraCommonKernelGeosGeoElement class]) } count:2 type:GeogebraCommonKernelGeosGeoElement_class_()] withGeogebraCommonKernelGeosGeoElementArray:[IOSObjectArray arrayWithObjects:(id[]){ cs_ } count:1 type:GeogebraCommonKernelGeosGeoElement_class_()]];
  }
  else {
    [self setInputOutputWithGeogebraCommonKernelGeosGeoElementArray:[IOSObjectArray arrayWithObjects:(id[]){ (GeogebraCommonKernelGeosGeoElement *) check_class_cast(P_, [GeogebraCommonKernelGeosGeoElement class]), (GeogebraCommonKernelGeosGeoElement *) check_class_cast(Q_, [GeogebraCommonKernelGeosGeoElement class]), poly_ } count:3 type:GeogebraCommonKernelGeosGeoElement_class_()] withGeogebraCommonKernelGeosGeoElementArray:[IOSObjectArray arrayWithObjects:(id[]){ (GeogebraCommonKernelGeosGeoElement *) check_class_cast(P_, [GeogebraCommonKernelGeosGeoElement class]), (GeogebraCommonKernelGeosGeoElement *) check_class_cast(Q_, [GeogebraCommonKernelGeosGeoElement class]) } count:2 type:GeogebraCommonKernelGeosGeoElement_class_()] withGeogebraCommonKernelGeosGeoElementArray:[IOSObjectArray arrayWithObjects:(id[]){ cs_ } count:1 type:GeogebraCommonKernelGeosGeoElement_class_()]];
  }
}

- (id<GeogebraCommonKernelKernelNDGeoPointND>)getP {
  return P_;
}

- (id<GeogebraCommonKernelKernelNDGeoPointND>)getQ {
  return Q_;
}

- (GeogebraCommonGeogebra3DKernel3DGeosGeoCoordSys1D *)getCS {
  return cs_;
}

- (void)compute {
  if (poly_ != nil) {
    if (![poly_ isDefined]) [((GeogebraCommonGeogebra3DKernel3DGeosGeoCoordSys1D *) nil_chk(cs_)) setUndefined];
  }
  if (([((GeogebraCommonKernelGeosGeoElement *) nil_chk(((GeogebraCommonKernelGeosGeoElement *) check_class_cast(P_, [GeogebraCommonKernelGeosGeoElement class])))) isDefined] || [((id<GeogebraCommonKernelKernelNDGeoPointND>) nil_chk(P_)) isInfinite]) && ([((GeogebraCommonKernelGeosGeoElement *) nil_chk(((GeogebraCommonKernelGeosGeoElement *) check_class_cast(Q_, [GeogebraCommonKernelGeosGeoElement class])))) isDefined] || [((id<GeogebraCommonKernelKernelNDGeoPointND>) nil_chk(Q_)) isInfinite])) {
    [((GeogebraCommonGeogebra3DKernel3DGeosGeoCoordSys1D *) nil_chk(cs_)) setCoordWithGeogebraCommonKernelKernelNDGeoPointND:P_ withGeogebraCommonKernelKernelNDGeoPointND:Q_];
  }
  else {
    [((GeogebraCommonGeogebra3DKernel3DGeosGeoCoordSys1D *) nil_chk(cs_)) setUndefined];
  }
}

- (void)remove {
  if (removed_) return;
  [super remove];
  if (poly_ != nil) {
    [poly_ remove];
  }
}

- (void)modifyInputPointsWithGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)A
                         withGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)B {
  if ((P_ == A && Q_ == B) || (Q_ == A && P_ == B)) return;
  for (jint i = 0; i < ((IOSObjectArray *) nil_chk(input_))->size_; i++) [((GeogebraCommonKernelGeosGeoElement *) nil_chk(IOSObjectArray_Get(input_, i))) removeAlgorithmWithGeogebraCommonKernelAlgosAlgoElement:self];
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoJoinPoints3D_set_P_(self, A);
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoJoinPoints3D_set_Q_(self, B);
  [((GeogebraCommonGeogebra3DKernel3DGeosGeoCoordSys1D *) nil_chk(cs_)) setCoordWithGeogebraCommonKernelKernelNDGeoPointND:P_ withGeogebraCommonKernelKernelNDGeoPointND:Q_];
  [self setInputOutput];
  [self compute];
}

- (void)modifyInputPolyAndPointsWithGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)p
                            withGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)A
                            withGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)B {
  if ((p == poly_ && (P_ == A && Q_ == B)) || (Q_ == A && P_ == B)) return;
  for (jint i = 0; i < ((IOSObjectArray *) nil_chk(input_))->size_; i++) [((GeogebraCommonKernelGeosGeoElement *) nil_chk(IOSObjectArray_Get(input_, i))) removeAlgorithmWithGeogebraCommonKernelAlgosAlgoElement:self];
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoJoinPoints3D_set_poly_(self, p);
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoJoinPoints3D_set_P_(self, A);
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoJoinPoints3D_set_Q_(self, B);
  [((GeogebraCommonGeogebra3DKernel3DGeosGeoCoordSys1D *) nil_chk(cs_)) setCoordWithGeogebraCommonKernelKernelNDGeoPointND:P_ withGeogebraCommonKernelKernelNDGeoPointND:Q_];
  [self setInputOutput];
  [self compute];
}

- (GeogebraCommonKernelCommandsCommandsEnum *)getClassName {
  switch ([geoClassType_ ordinal]) {
    case GeogebraCommonPluginGeoClass_SEGMENT3D:
    return GeogebraCommonKernelCommandsCommandsEnum_get_Segment();
    case GeogebraCommonPluginGeoClass_LINE3D:
    return GeogebraCommonKernelCommandsCommandsEnum_get_Line();
    case GeogebraCommonPluginGeoClass_RAY3D:
    return GeogebraCommonKernelCommandsCommandsEnum_get_Ray();
  }
  return nil;
}

- (NSString *)toStringWithGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl {
  JavaLangStringBuilder *sb = [new_JavaLangStringBuilder_init() autorelease];
  switch ([geoClassType_ ordinal]) {
    case GeogebraCommonPluginGeoClass_SEGMENT3D:
    if (poly_ != nil) [sb appendWithNSString:[((GeogebraCommonMainLocalization *) nil_chk([self getLoc])) getPlainWithNSString:@"SegmentABofC" withNSString:[((id<GeogebraCommonKernelKernelNDGeoPointND>) nil_chk(P_)) getLabelWithGeogebraCommonKernelStringTemplate:tpl] withNSString:[((id<GeogebraCommonKernelKernelNDGeoPointND>) nil_chk(Q_)) getLabelWithGeogebraCommonKernelStringTemplate:tpl] withNSString:[poly_ getNameDescription]]];
    else [sb appendWithNSString:[((GeogebraCommonMainLocalization *) nil_chk([self getLoc])) getPlainWithNSString:@"SegmentAB" withNSString:[((GeogebraCommonKernelGeosGeoElement *) nil_chk(((GeogebraCommonKernelGeosGeoElement *) check_class_cast(P_, [GeogebraCommonKernelGeosGeoElement class])))) getLabelWithGeogebraCommonKernelStringTemplate:tpl] withNSString:[((GeogebraCommonKernelGeosGeoElement *) nil_chk(((GeogebraCommonKernelGeosGeoElement *) check_class_cast(Q_, [GeogebraCommonKernelGeosGeoElement class])))) getLabelWithGeogebraCommonKernelStringTemplate:tpl]]];
    break;
    case GeogebraCommonPluginGeoClass_LINE3D:
    [sb appendWithNSString:[((GeogebraCommonMainLocalization *) nil_chk([self getLoc])) getPlainWithNSString:@"LineThroughAB" withNSString:[((GeogebraCommonKernelGeosGeoElement *) nil_chk(((GeogebraCommonKernelGeosGeoElement *) check_class_cast(P_, [GeogebraCommonKernelGeosGeoElement class])))) getLabelWithGeogebraCommonKernelStringTemplate:tpl] withNSString:[((GeogebraCommonKernelGeosGeoElement *) nil_chk(((GeogebraCommonKernelGeosGeoElement *) check_class_cast(Q_, [GeogebraCommonKernelGeosGeoElement class])))) getLabelWithGeogebraCommonKernelStringTemplate:tpl]]];
    break;
    case GeogebraCommonPluginGeoClass_RAY3D:
    [sb appendWithNSString:[((GeogebraCommonMainLocalization *) nil_chk([self getLoc])) getPlainWithNSString:@"RayThroughAB" withNSString:[((GeogebraCommonKernelGeosGeoElement *) nil_chk(((GeogebraCommonKernelGeosGeoElement *) check_class_cast(P_, [GeogebraCommonKernelGeosGeoElement class])))) getLabelWithGeogebraCommonKernelStringTemplate:tpl] withNSString:[((GeogebraCommonKernelGeosGeoElement *) nil_chk(((GeogebraCommonKernelGeosGeoElement *) check_class_cast(Q_, [GeogebraCommonKernelGeosGeoElement class])))) getLabelWithGeogebraCommonKernelStringTemplate:tpl]]];
    break;
  }
  return [sb description];
}

- (GeogebraCommonKernelGeosGeoElement *)getPoly {
  return poly_;
}

- (void)dealloc {
  RELEASE_(P_);
  RELEASE_(Q_);
  RELEASE_(poly_);
  RELEASE_(cs_);
  RELEASE_(geoClassType_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonKernelConstruction:withNSString:withGeogebraCommonKernelKernelNDGeoPointND:withGeogebraCommonKernelKernelNDGeoPointND:withGeogebraCommonPluginGeoClassEnum:", "AlgoJoinPoints3D", NULL, 0x1, NULL, NULL },
    { "initWithGeogebraCommonKernelConstruction:withNSString:withGeogebraCommonKernelKernelNDGeoPointND:withGeogebraCommonKernelKernelNDGeoPointND:withGeogebraCommonKernelGeosGeoElement:withGeogebraCommonPluginGeoClassEnum:", "AlgoJoinPoints3D", NULL, 0x0, NULL, NULL },
    { "initWithGeogebraCommonKernelConstruction:withGeogebraCommonKernelKernelNDGeoPointND:withGeogebraCommonKernelKernelNDGeoPointND:withGeogebraCommonKernelGeosGeoElement:withGeogebraCommonPluginGeoClassEnum:", "AlgoJoinPoints3D", NULL, 0x1, NULL, NULL },
    { "setInputOutput", NULL, "V", 0x4, NULL, NULL },
    { "getP", NULL, "Lgeogebra.common.kernel.kernelND.GeoPointND;", 0x1, NULL, NULL },
    { "getQ", NULL, "Lgeogebra.common.kernel.kernelND.GeoPointND;", 0x1, NULL, NULL },
    { "getCS", NULL, "Lgeogebra.common.geogebra3D.kernel3D.geos.GeoCoordSys1D;", 0x1, NULL, NULL },
    { "compute", NULL, "V", 0x1, NULL, NULL },
    { "remove", NULL, "V", 0x1, NULL, NULL },
    { "modifyInputPointsWithGeogebraCommonKernelKernelNDGeoPointND:withGeogebraCommonKernelKernelNDGeoPointND:", "modifyInputPoints", "V", 0x1, NULL, NULL },
    { "modifyInputPolyAndPointsWithGeogebraCommonKernelGeosGeoElement:withGeogebraCommonKernelKernelNDGeoPointND:withGeogebraCommonKernelKernelNDGeoPointND:", "modifyInputPolyAndPoints", "V", 0x1, NULL, NULL },
    { "getClassName", NULL, "Lgeogebra.common.kernel.commands.Commands;", 0x1, NULL, NULL },
    { "toStringWithGeogebraCommonKernelStringTemplate:", "toString", "Ljava.lang.String;", 0x11, NULL, NULL },
    { "getPoly", NULL, "Lgeogebra.common.kernel.geos.GeoElement;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "P_", NULL, 0x2, "Lgeogebra.common.kernel.kernelND.GeoPointND;", NULL, NULL,  },
    { "Q_", NULL, 0x2, "Lgeogebra.common.kernel.kernelND.GeoPointND;", NULL, NULL,  },
    { "poly_", NULL, 0x2, "Lgeogebra.common.kernel.geos.GeoElement;", NULL, NULL,  },
    { "cs_", NULL, 0x4, "Lgeogebra.common.geogebra3D.kernel3D.geos.GeoCoordSys1D;", NULL, NULL,  },
    { "geoClassType_", NULL, 0x4, "Lgeogebra.common.plugin.GeoClass;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _GeogebraCommonGeogebra3DKernel3DAlgosAlgoJoinPoints3D = { 2, "AlgoJoinPoints3D", "geogebra.common.geogebra3D.kernel3D.algos", NULL, 0x1, 14, methods, 5, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonGeogebra3DKernel3DAlgosAlgoJoinPoints3D;
}

@end

void GeogebraCommonGeogebra3DKernel3DAlgosAlgoJoinPoints3D_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonPluginGeoClassEnum_(GeogebraCommonGeogebra3DKernel3DAlgosAlgoJoinPoints3D *self, GeogebraCommonKernelConstruction *cons, NSString *label, id<GeogebraCommonKernelKernelNDGeoPointND> P, id<GeogebraCommonKernelKernelNDGeoPointND> Q, GeogebraCommonPluginGeoClassEnum *geoClassType) {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoJoinPoints3D_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelGeosGeoElement_withGeogebraCommonPluginGeoClassEnum_(self, cons, label, P, Q, nil, geoClassType);
}

GeogebraCommonGeogebra3DKernel3DAlgosAlgoJoinPoints3D *new_GeogebraCommonGeogebra3DKernel3DAlgosAlgoJoinPoints3D_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonPluginGeoClassEnum_(GeogebraCommonKernelConstruction *cons, NSString *label, id<GeogebraCommonKernelKernelNDGeoPointND> P, id<GeogebraCommonKernelKernelNDGeoPointND> Q, GeogebraCommonPluginGeoClassEnum *geoClassType) {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoJoinPoints3D *self = [GeogebraCommonGeogebra3DKernel3DAlgosAlgoJoinPoints3D alloc];
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoJoinPoints3D_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonPluginGeoClassEnum_(self, cons, label, P, Q, geoClassType);
  return self;
}

void GeogebraCommonGeogebra3DKernel3DAlgosAlgoJoinPoints3D_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelGeosGeoElement_withGeogebraCommonPluginGeoClassEnum_(GeogebraCommonGeogebra3DKernel3DAlgosAlgoJoinPoints3D *self, GeogebraCommonKernelConstruction *cons, NSString *label, id<GeogebraCommonKernelKernelNDGeoPointND> P, id<GeogebraCommonKernelKernelNDGeoPointND> Q, GeogebraCommonKernelGeosGeoElement *poly, GeogebraCommonPluginGeoClassEnum *geoClassType) {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoJoinPoints3D_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelGeosGeoElement_withGeogebraCommonPluginGeoClassEnum_(self, cons, P, Q, poly, geoClassType);
  [((GeogebraCommonGeogebra3DKernel3DGeosGeoCoordSys1D *) nil_chk(self->cs_)) setLabelWithNSString:label];
}

GeogebraCommonGeogebra3DKernel3DAlgosAlgoJoinPoints3D *new_GeogebraCommonGeogebra3DKernel3DAlgosAlgoJoinPoints3D_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelGeosGeoElement_withGeogebraCommonPluginGeoClassEnum_(GeogebraCommonKernelConstruction *cons, NSString *label, id<GeogebraCommonKernelKernelNDGeoPointND> P, id<GeogebraCommonKernelKernelNDGeoPointND> Q, GeogebraCommonKernelGeosGeoElement *poly, GeogebraCommonPluginGeoClassEnum *geoClassType) {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoJoinPoints3D *self = [GeogebraCommonGeogebra3DKernel3DAlgosAlgoJoinPoints3D alloc];
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoJoinPoints3D_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelGeosGeoElement_withGeogebraCommonPluginGeoClassEnum_(self, cons, label, P, Q, poly, geoClassType);
  return self;
}

void GeogebraCommonGeogebra3DKernel3DAlgosAlgoJoinPoints3D_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelGeosGeoElement_withGeogebraCommonPluginGeoClassEnum_(GeogebraCommonGeogebra3DKernel3DAlgosAlgoJoinPoints3D *self, GeogebraCommonKernelConstruction *cons, id<GeogebraCommonKernelKernelNDGeoPointND> P, id<GeogebraCommonKernelKernelNDGeoPointND> Q, GeogebraCommonKernelGeosGeoElement *poly, GeogebraCommonPluginGeoClassEnum *geoClassType) {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoElement3D_initWithGeogebraCommonKernelConstruction_(self, cons);
  if (poly != nil) [self setUpdateAfterAlgoWithGeogebraCommonKernelAlgosAlgoElement:[poly getParentAlgorithm]];
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoJoinPoints3D_set_P_(self, P);
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoJoinPoints3D_set_Q_(self, Q);
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoJoinPoints3D_set_poly_(self, poly);
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoJoinPoints3D_set_geoClassType_(self, geoClassType);
  switch ([geoClassType ordinal]) {
    case GeogebraCommonPluginGeoClass_SEGMENT3D:
    GeogebraCommonGeogebra3DKernel3DAlgosAlgoJoinPoints3D_setAndConsume_cs_(self, new_GeogebraCommonGeogebra3DKernel3DGeosGeoSegment3D_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoPointND_(cons, P, Q));
    if (poly != nil) {
      [((GeogebraCommonGeogebra3DKernel3DGeosGeoSegment3D *) check_class_cast(self->cs_, [GeogebraCommonGeogebra3DKernel3DGeosGeoSegment3D class])) setFromMetaWithGeogebraCommonKernelGeosGeoElement:poly];
    }
    break;
    case GeogebraCommonPluginGeoClass_LINE3D:
    GeogebraCommonGeogebra3DKernel3DAlgosAlgoJoinPoints3D_setAndConsume_cs_(self, new_GeogebraCommonGeogebra3DKernel3DGeosGeoLine3D_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoPointND_(cons, P, Q));
    break;
    case GeogebraCommonPluginGeoClass_RAY3D:
    GeogebraCommonGeogebra3DKernel3DAlgosAlgoJoinPoints3D_setAndConsume_cs_(self, new_GeogebraCommonGeogebra3DKernel3DGeosGeoRay3D_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoPointND_(cons, P, Q));
    break;
    default:
    GeogebraCommonGeogebra3DKernel3DAlgosAlgoJoinPoints3D_set_cs_(self, nil);
  }
  [self setInputOutput];
  [self compute];
}

GeogebraCommonGeogebra3DKernel3DAlgosAlgoJoinPoints3D *new_GeogebraCommonGeogebra3DKernel3DAlgosAlgoJoinPoints3D_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelGeosGeoElement_withGeogebraCommonPluginGeoClassEnum_(GeogebraCommonKernelConstruction *cons, id<GeogebraCommonKernelKernelNDGeoPointND> P, id<GeogebraCommonKernelKernelNDGeoPointND> Q, GeogebraCommonKernelGeosGeoElement *poly, GeogebraCommonPluginGeoClassEnum *geoClassType) {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoJoinPoints3D *self = [GeogebraCommonGeogebra3DKernel3DAlgosAlgoJoinPoints3D alloc];
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoJoinPoints3D_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelGeosGeoElement_withGeogebraCommonPluginGeoClassEnum_(self, cons, P, Q, poly, geoClassType);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonGeogebra3DKernel3DAlgosAlgoJoinPoints3D)
