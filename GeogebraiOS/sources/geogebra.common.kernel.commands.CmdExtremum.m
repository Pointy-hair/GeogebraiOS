//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/commands/CmdExtremum.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "geogebra/common/kernel/Construction.h"
#include "geogebra/common/kernel/Kernel.h"
#include "geogebra/common/kernel/algos/AlgoExtremumMulti.h"
#include "geogebra/common/kernel/algos/AlgoExtremumPolynomial.h"
#include "geogebra/common/kernel/algos/AlgoExtremumPolynomialInterval.h"
#include "geogebra/common/kernel/arithmetic/Command.h"
#include "geogebra/common/kernel/arithmetic/ExpressionNode.h"
#include "geogebra/common/kernel/commands/CmdExtremum.h"
#include "geogebra/common/kernel/commands/CommandProcessor.h"
#include "geogebra/common/kernel/geos/GeoElement.h"
#include "geogebra/common/kernel/geos/GeoFunction.h"
#include "geogebra/common/kernel/geos/GeoFunctionable.h"
#include "geogebra/common/kernel/geos/GeoNumberValue.h"
#include "geogebra/common/main/MyError.h"
#include "geogebra/common/plugin/Operation.h"

@interface GeogebraCommonKernelCommandsCmdExtremum ()

- (IOSObjectArray *)ExtremumWithGeogebraCommonKernelArithmeticCommand:(GeogebraCommonKernelArithmeticCommand *)c
                              withGeogebraCommonKernelGeosGeoFunction:(GeogebraCommonKernelGeosGeoFunction *)f;

@end

__attribute__((unused)) static IOSObjectArray *GeogebraCommonKernelCommandsCmdExtremum_ExtremumWithGeogebraCommonKernelArithmeticCommand_withGeogebraCommonKernelGeosGeoFunction_(GeogebraCommonKernelCommandsCmdExtremum *self, GeogebraCommonKernelArithmeticCommand *c, GeogebraCommonKernelGeosGeoFunction *f);

@implementation GeogebraCommonKernelCommandsCmdExtremum

- (instancetype)initWithGeogebraCommonKernelKernel:(GeogebraCommonKernelKernel *)kernel {
  GeogebraCommonKernelCommandsCmdExtremum_initWithGeogebraCommonKernelKernel_(self, kernel);
  return self;
}

- (IOSObjectArray *)processWithGeogebraCommonKernelArithmeticCommand:(GeogebraCommonKernelArithmeticCommand *)c {
  jint n = [((GeogebraCommonKernelArithmeticCommand *) nil_chk(c)) getArgumentNumber];
  IOSBooleanArray *ok = [IOSBooleanArray arrayWithLength:n];
  IOSObjectArray *arg;
  switch (n) {
    case 1:
    arg = [self resArgsWithGeogebraCommonKernelArithmeticCommand:c];
    *IOSBooleanArray_GetRef(ok, 0) = [((GeogebraCommonKernelGeosGeoElement *) nil_chk(IOSObjectArray_Get(nil_chk(arg), 0))) isGeoFunctionable];
    if (IOSBooleanArray_Get(ok, 0)) return GeogebraCommonKernelCommandsCmdExtremum_ExtremumWithGeogebraCommonKernelArithmeticCommand_withGeogebraCommonKernelGeosGeoFunction_(self, c, [((id<GeogebraCommonKernelGeosGeoFunctionable>) nil_chk(((id<GeogebraCommonKernelGeosGeoFunctionable>) check_protocol_cast(IOSObjectArray_Get(arg, 0), @protocol(GeogebraCommonKernelGeosGeoFunctionable))))) getGeoFunction]);
    @throw [self argErrWithGeogebraCommonMainApp:app_ withNSString:[c getName] withGeogebraCommonKernelArithmeticExpressionValue:IOSObjectArray_Get(arg, 0)];
    case 3:
    arg = [self resArgsWithGeogebraCommonKernelArithmeticCommand:c];
    if ((*IOSBooleanArray_GetRef(ok, 0) = ([((GeogebraCommonKernelGeosGeoElement *) nil_chk(IOSObjectArray_Get(nil_chk(arg), 0))) isGeoFunctionable])) && (*IOSBooleanArray_GetRef(ok, 1) = ([GeogebraCommonKernelGeosGeoNumberValue_class_() isInstance:IOSObjectArray_Get(arg, 1)])) && (*IOSBooleanArray_GetRef(ok, 2) = ([GeogebraCommonKernelGeosGeoNumberValue_class_() isInstance:IOSObjectArray_Get(arg, 2)]))) {
      GeogebraCommonKernelAlgosAlgoExtremumMulti *algo = [new_GeogebraCommonKernelAlgosAlgoExtremumMulti_initWithGeogebraCommonKernelConstruction_withNSStringArray_withGeogebraCommonKernelGeosGeoFunction_withGeogebraCommonKernelArithmeticNumberValue_withGeogebraCommonKernelArithmeticNumberValue_(cons_, [c getLabels], [((id<GeogebraCommonKernelGeosGeoFunctionable>) nil_chk(((id<GeogebraCommonKernelGeosGeoFunctionable>) check_protocol_cast(IOSObjectArray_Get(arg, 0), @protocol(GeogebraCommonKernelGeosGeoFunctionable))))) getGeoFunction], (id<GeogebraCommonKernelGeosGeoNumberValue>) check_protocol_cast(IOSObjectArray_Get(arg, 1), @protocol(GeogebraCommonKernelGeosGeoNumberValue)), (id<GeogebraCommonKernelGeosGeoNumberValue>) check_protocol_cast(IOSObjectArray_Get(arg, 2), @protocol(GeogebraCommonKernelGeosGeoNumberValue))) autorelease];
      return [algo getExtremumPoints];
    }
    @throw [self argErrWithGeogebraCommonMainApp:app_ withNSString:[c getName] withGeogebraCommonKernelArithmeticExpressionValue:GeogebraCommonKernelCommandsCommandProcessor_getBadArgWithBooleanArray_withGeogebraCommonKernelGeosGeoElementArray_(ok, arg)];
    default:
    @throw [self argNumErrWithGeogebraCommonMainApp:app_ withNSString:[c getName] withInt:n];
  }
}

- (IOSObjectArray *)ExtremumWithGeogebraCommonKernelArithmeticCommand:(GeogebraCommonKernelArithmeticCommand *)c
                              withGeogebraCommonKernelGeosGeoFunction:(GeogebraCommonKernelGeosGeoFunction *)f {
  return GeogebraCommonKernelCommandsCmdExtremum_ExtremumWithGeogebraCommonKernelArithmeticCommand_withGeogebraCommonKernelGeosGeoFunction_(self, c, f);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonKernelKernel:", "CmdExtremum", NULL, 0x1, NULL, NULL },
    { "processWithGeogebraCommonKernelArithmeticCommand:", "process", "[Lgeogebra.common.kernel.geos.GeoElement;", 0x11, "Lgeogebra.common.main.MyError;", NULL },
    { "ExtremumWithGeogebraCommonKernelArithmeticCommand:withGeogebraCommonKernelGeosGeoFunction:", "Extremum", "[Lgeogebra.common.kernel.geos.GeoPoint;", 0x12, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelCommandsCmdExtremum = { 2, "CmdExtremum", "geogebra.common.kernel.commands", NULL, 0x1, 3, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelCommandsCmdExtremum;
}

@end

void GeogebraCommonKernelCommandsCmdExtremum_initWithGeogebraCommonKernelKernel_(GeogebraCommonKernelCommandsCmdExtremum *self, GeogebraCommonKernelKernel *kernel) {
  GeogebraCommonKernelCommandsCommandProcessor_initWithGeogebraCommonKernelKernel_(self, kernel);
}

GeogebraCommonKernelCommandsCmdExtremum *new_GeogebraCommonKernelCommandsCmdExtremum_initWithGeogebraCommonKernelKernel_(GeogebraCommonKernelKernel *kernel) {
  GeogebraCommonKernelCommandsCmdExtremum *self = [GeogebraCommonKernelCommandsCmdExtremum alloc];
  GeogebraCommonKernelCommandsCmdExtremum_initWithGeogebraCommonKernelKernel_(self, kernel);
  return self;
}

IOSObjectArray *GeogebraCommonKernelCommandsCmdExtremum_ExtremumWithGeogebraCommonKernelArithmeticCommand_withGeogebraCommonKernelGeosGeoFunction_(GeogebraCommonKernelCommandsCmdExtremum *self, GeogebraCommonKernelArithmeticCommand *c, GeogebraCommonKernelGeosGeoFunction *f) {
  GeogebraCommonKernelArithmeticExpressionNode *exp = [((GeogebraCommonKernelGeosGeoFunction *) nil_chk(f)) getFunctionExpression];
  if ([((GeogebraCommonPluginOperationEnum *) nil_chk([((GeogebraCommonKernelArithmeticExpressionNode *) nil_chk(exp)) getOperation])) isEqual:GeogebraCommonPluginOperationEnum_get_IF()]) {
    GeogebraCommonKernelAlgosAlgoExtremumPolynomialInterval *algo = [new_GeogebraCommonKernelAlgosAlgoExtremumPolynomialInterval_initWithGeogebraCommonKernelConstruction_withNSStringArray_withGeogebraCommonKernelGeosGeoFunction_(self->cons_, [((GeogebraCommonKernelArithmeticCommand *) nil_chk(c)) getLabels], f) autorelease];
    IOSObjectArray *g = [algo getRootPoints];
    return g;
  }
  if (![((GeogebraCommonKernelConstruction *) nil_chk([((GeogebraCommonKernelKernel *) nil_chk(self->kernelA_)) getConstruction])) isFileLoading] && [f isDefined] && ![f isPolynomialFunctionWithBoolean:YES]) return nil;
  GeogebraCommonKernelAlgosAlgoExtremumPolynomial *algo = [new_GeogebraCommonKernelAlgosAlgoExtremumPolynomial_initWithGeogebraCommonKernelConstruction_withNSStringArray_withGeogebraCommonKernelGeosGeoFunction_(self->cons_, [((GeogebraCommonKernelArithmeticCommand *) nil_chk(c)) getLabels], f) autorelease];
  IOSObjectArray *g = [algo getRootPoints];
  return g;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelCommandsCmdExtremum)
