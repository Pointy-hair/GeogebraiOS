//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/geogebra3D/euclidian3D/plots/Octree.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "geogebra/common/geogebra3D/euclidian3D/plots/Collision.h"
#include "geogebra/common/geogebra3D/euclidian3D/plots/Octree.h"
#include "java/lang/Exception.h"
#include "java/util/LinkedList.h"

J2OBJC_INITIALIZED_DEFN(GeogebraCommonGeogebra3DEuclidian3DPlotsOctree)

IOSFloatArray *GeogebraCommonGeogebra3DEuclidian3DPlotsOctree_DEFAULT_DIMENSIONS_;

@implementation GeogebraCommonGeogebra3DEuclidian3DPlotsOctree

- (instancetype)initWithGeogebraCommonGeogebra3DEuclidian3DPlotsOctreeNode:(GeogebraCommonGeogebra3DEuclidian3DPlotsOctreeNode *)root {
  GeogebraCommonGeogebra3DEuclidian3DPlotsOctree_initWithGeogebraCommonGeogebra3DEuclidian3DPlotsOctreeNode_(self, root);
  return self;
}

- (void)insertTriangleWithFloatArray:(IOSFloatArray *)tri {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)insertSegmentWithFloatArray:(IOSFloatArray *)seg {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (JavaUtilLinkedList *)triIntersectWithFloatArray:(IOSFloatArray *)tri {
  IOSFloatArray *bb = GeogebraCommonGeogebra3DEuclidian3DPlotsCollision_triangleBoundingBoxWithFloatArray_(tri);
  return [((GeogebraCommonGeogebra3DEuclidian3DPlotsOctreeNode *) nil_chk(root_)) triIntersectWithFloatArray:bb withFloatArray:tri withInt:1];
}

- (IOSFloatArray *)rayFirstIntersectWithFloatArray:(IOSFloatArray *)r1
                                    withFloatArray:(IOSFloatArray *)r2 {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (JavaUtilLinkedList *)segmentIntersectWithFloatArray:(IOSFloatArray *)p0
                                        withFloatArray:(IOSFloatArray *)p1 {
  IOSFloatArray *bb = GeogebraCommonGeogebra3DEuclidian3DPlotsCollision_segmentBoundingBoxWithFloatArray_withFloatArray_(p0, p1);
  return [((GeogebraCommonGeogebra3DEuclidian3DPlotsOctreeNode *) nil_chk(root_)) segmentIntersectWithFloatArray:p0 withFloatArray:p1 withFloatArray:bb withInt:1];
}

- (void)dealloc {
  RELEASE_(root_);
  [super dealloc];
}

+ (void)initialize {
  if (self == [GeogebraCommonGeogebra3DEuclidian3DPlotsOctree class]) {
    JreStrongAssignAndConsume(&GeogebraCommonGeogebra3DEuclidian3DPlotsOctree_DEFAULT_DIMENSIONS_, nil, [IOSFloatArray newArrayWithFloats:(jfloat[]){ -1e5f, 1e5f, -1e5f, 1e5f, -1e5f, 1e5f } count:6]);
    J2OBJC_SET_INITIALIZED(GeogebraCommonGeogebra3DEuclidian3DPlotsOctree)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonGeogebra3DEuclidian3DPlotsOctreeNode:", "Octree", NULL, 0x1, NULL, NULL },
    { "insertTriangleWithFloatArray:", "insertTriangle", "V", 0x401, "Ljava.lang.Exception;", NULL },
    { "insertSegmentWithFloatArray:", "insertSegment", "V", 0x401, "Ljava.lang.Exception;", NULL },
    { "triIntersectWithFloatArray:", "triIntersect", "Ljava.util.LinkedList;", 0x1, NULL, NULL },
    { "rayFirstIntersectWithFloatArray:withFloatArray:", "rayFirstIntersect", "[F", 0x401, "Ljava.lang.Exception;", NULL },
    { "segmentIntersectWithFloatArray:withFloatArray:", "segmentIntersect", "Ljava.util.LinkedList;", 0x1, "Ljava.lang.Exception;", NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "MAX_LEVEL_", NULL, 0x18, "S", NULL, NULL, .constantValue.asShort = GeogebraCommonGeogebra3DEuclidian3DPlotsOctree_MAX_LEVEL },
    { "MAX_TRI_TRI_COUNT_", NULL, 0x18, "S", NULL, NULL, .constantValue.asShort = GeogebraCommonGeogebra3DEuclidian3DPlotsOctree_MAX_TRI_TRI_COUNT },
    { "MAX_RAY_TRI_COUNT_", NULL, 0x18, "S", NULL, NULL, .constantValue.asShort = GeogebraCommonGeogebra3DEuclidian3DPlotsOctree_MAX_RAY_TRI_COUNT },
    { "DEFAULT_DIMENSIONS_", NULL, 0x18, "[F", &GeogebraCommonGeogebra3DEuclidian3DPlotsOctree_DEFAULT_DIMENSIONS_, NULL,  },
    { "root_", NULL, 0x14, "Lgeogebra.common.geogebra3D.euclidian3D.plots.OctreeNode;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _GeogebraCommonGeogebra3DEuclidian3DPlotsOctree = { 2, "Octree", "geogebra.common.geogebra3D.euclidian3D.plots", NULL, 0x401, 6, methods, 5, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonGeogebra3DEuclidian3DPlotsOctree;
}

@end

void GeogebraCommonGeogebra3DEuclidian3DPlotsOctree_initWithGeogebraCommonGeogebra3DEuclidian3DPlotsOctreeNode_(GeogebraCommonGeogebra3DEuclidian3DPlotsOctree *self, GeogebraCommonGeogebra3DEuclidian3DPlotsOctreeNode *root) {
  NSObject_init(self);
  GeogebraCommonGeogebra3DEuclidian3DPlotsOctree_set_root_(self, root);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonGeogebra3DEuclidian3DPlotsOctree)

@implementation GeogebraCommonGeogebra3DEuclidian3DPlotsOctreeNode

- (instancetype)initWithFloatArray:(IOSFloatArray *)bounds {
  GeogebraCommonGeogebra3DEuclidian3DPlotsOctreeNode_initWithFloatArray_(self, bounds);
  return self;
}

- (IOSFloatArray *)firstRayIntersectWithFloatArray:(IOSFloatArray *)entryPt
                                    withFloatArray:(IOSFloatArray *)exitPt
                                    withFloatArray:(IOSFloatArray *)tangent
                                           withInt:(jint)level {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (JavaUtilLinkedList *)triIntersectWithFloatArray:(IOSFloatArray *)boundingBox
                                    withFloatArray:(IOSFloatArray *)tri
                                           withInt:(jint)level {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (JavaUtilLinkedList *)segmentIntersectWithFloatArray:(IOSFloatArray *)boundingBox
                                        withFloatArray:(IOSFloatArray *)p0
                                        withFloatArray:(IOSFloatArray *)p1
                                               withInt:(jint)level {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (void)insertWithFloatArray:(IOSFloatArray *)boundingBox
              withFloatArray:(IOSFloatArray *)object
                     withInt:(jint)i {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)dealloc {
  RELEASE_(bnds_);
  RELEASE_(cntr_);
  RELEASE_(children_);
  RELEASE_(objects_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithFloatArray:", "OctreeNode", NULL, 0x1, NULL, NULL },
    { "firstRayIntersectWithFloatArray:withFloatArray:withFloatArray:withInt:", "firstRayIntersect", "[F", 0x400, NULL, NULL },
    { "triIntersectWithFloatArray:withFloatArray:withInt:", "triIntersect", "Ljava.util.LinkedList;", 0x400, NULL, NULL },
    { "segmentIntersectWithFloatArray:withFloatArray:withFloatArray:withInt:", "segmentIntersect", "Ljava.util.LinkedList;", 0x400, NULL, NULL },
    { "insertWithFloatArray:withFloatArray:withInt:", "insert", "V", 0x400, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "bnds_", NULL, 0x14, "[F", NULL, NULL,  },
    { "cntr_", NULL, 0x14, "[F", NULL, NULL,  },
    { "children_", NULL, 0x4, "[Lgeogebra.common.geogebra3D.euclidian3D.plots.OctreeNode;", NULL, NULL,  },
    { "objects_", NULL, 0x4, "Ljava.util.LinkedList;", NULL, "Ljava/util/LinkedList<L[F;>;",  },
  };
  static const J2ObjcClassInfo _GeogebraCommonGeogebra3DEuclidian3DPlotsOctreeNode = { 2, "OctreeNode", "geogebra.common.geogebra3D.euclidian3D.plots", NULL, 0x400, 5, methods, 4, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonGeogebra3DEuclidian3DPlotsOctreeNode;
}

@end

void GeogebraCommonGeogebra3DEuclidian3DPlotsOctreeNode_initWithFloatArray_(GeogebraCommonGeogebra3DEuclidian3DPlotsOctreeNode *self, IOSFloatArray *bounds) {
  NSObject_init(self);
  GeogebraCommonGeogebra3DEuclidian3DPlotsOctreeNode_set_bnds_(self, bounds);
  GeogebraCommonGeogebra3DEuclidian3DPlotsOctreeNode_setAndConsume_cntr_(self, [IOSFloatArray newArrayWithFloats:(jfloat[]){ 0.5f * (IOSFloatArray_Get(nil_chk(bounds), 0) + IOSFloatArray_Get(bounds, 1)), 0.5f * (IOSFloatArray_Get(bounds, 2) + IOSFloatArray_Get(bounds, 3)), 0.5f * (IOSFloatArray_Get(bounds, 4) + IOSFloatArray_Get(bounds, 5)) } count:3]);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonGeogebra3DEuclidian3DPlotsOctreeNode)
