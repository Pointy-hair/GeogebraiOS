//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/com/vividsolutions/jts/simplify/DouglasPeuckerSimplifier.java
//


#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "com/vividsolutions/jts/geom/CoordinateSequence.h"
#include "com/vividsolutions/jts/geom/CoordinateSequenceFactory.h"
#include "com/vividsolutions/jts/geom/Geometry.h"
#include "com/vividsolutions/jts/geom/GeometryFactory.h"
#include "com/vividsolutions/jts/geom/LinearRing.h"
#include "com/vividsolutions/jts/geom/MultiPolygon.h"
#include "com/vividsolutions/jts/geom/Polygon.h"
#include "com/vividsolutions/jts/geom/util/GeometryTransformer.h"
#include "com/vividsolutions/jts/simplify/DouglasPeuckerLineSimplifier.h"
#include "com/vividsolutions/jts/simplify/DouglasPeuckerSimplifier.h"
#include "java/lang/IllegalArgumentException.h"

@interface ComVividsolutionsJtsSimplifyDouglasPeuckerSimplifier () {
 @public
  ComVividsolutionsJtsGeomGeometry *inputGeom_;
  jdouble distanceTolerance_;
  jboolean isEnsureValidTopology_;
}

@end

J2OBJC_FIELD_SETTER(ComVividsolutionsJtsSimplifyDouglasPeuckerSimplifier, inputGeom_, ComVividsolutionsJtsGeomGeometry *)

@interface ComVividsolutionsJtsSimplifyDouglasPeuckerSimplifier_DPTransformer () {
 @public
  ComVividsolutionsJtsSimplifyDouglasPeuckerSimplifier *this$0_;
  jboolean isEnsureValidTopology_;
}

- (ComVividsolutionsJtsGeomGeometry *)createValidAreaWithComVividsolutionsJtsGeomGeometry:(ComVividsolutionsJtsGeomGeometry *)rawAreaGeom;

@end

J2OBJC_FIELD_SETTER(ComVividsolutionsJtsSimplifyDouglasPeuckerSimplifier_DPTransformer, this$0_, ComVividsolutionsJtsSimplifyDouglasPeuckerSimplifier *)

__attribute__((unused)) static ComVividsolutionsJtsGeomGeometry *ComVividsolutionsJtsSimplifyDouglasPeuckerSimplifier_DPTransformer_createValidAreaWithComVividsolutionsJtsGeomGeometry_(ComVividsolutionsJtsSimplifyDouglasPeuckerSimplifier_DPTransformer *self, ComVividsolutionsJtsGeomGeometry *rawAreaGeom);

@implementation ComVividsolutionsJtsSimplifyDouglasPeuckerSimplifier

+ (ComVividsolutionsJtsGeomGeometry *)simplifyWithComVividsolutionsJtsGeomGeometry:(ComVividsolutionsJtsGeomGeometry *)geom
                                                                        withDouble:(jdouble)distanceTolerance {
  return ComVividsolutionsJtsSimplifyDouglasPeuckerSimplifier_simplifyWithComVividsolutionsJtsGeomGeometry_withDouble_(geom, distanceTolerance);
}

- (instancetype)initWithComVividsolutionsJtsGeomGeometry:(ComVividsolutionsJtsGeomGeometry *)inputGeom {
  ComVividsolutionsJtsSimplifyDouglasPeuckerSimplifier_initWithComVividsolutionsJtsGeomGeometry_(self, inputGeom);
  return self;
}

- (void)setDistanceToleranceWithDouble:(jdouble)distanceTolerance {
  if (distanceTolerance < 0.0) @throw [new_JavaLangIllegalArgumentException_initWithNSString_(@"Tolerance must be non-negative") autorelease];
  self->distanceTolerance_ = distanceTolerance;
}

- (void)setEnsureValidWithBoolean:(jboolean)isEnsureValidTopology {
  self->isEnsureValidTopology_ = isEnsureValidTopology;
}

- (ComVividsolutionsJtsGeomGeometry *)getResultGeometry {
  return [([new_ComVividsolutionsJtsSimplifyDouglasPeuckerSimplifier_DPTransformer_initWithComVividsolutionsJtsSimplifyDouglasPeuckerSimplifier_withBoolean_(self, isEnsureValidTopology_) autorelease]) transformWithComVividsolutionsJtsGeomGeometry:inputGeom_];
}

- (void)dealloc {
  RELEASE_(inputGeom_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "simplifyWithComVividsolutionsJtsGeomGeometry:withDouble:", "simplify", "Lcom.vividsolutions.jts.geom.Geometry;", 0x9, NULL, NULL },
    { "initWithComVividsolutionsJtsGeomGeometry:", "DouglasPeuckerSimplifier", NULL, 0x1, NULL, NULL },
    { "setDistanceToleranceWithDouble:", "setDistanceTolerance", "V", 0x1, NULL, NULL },
    { "setEnsureValidWithBoolean:", "setEnsureValid", "V", 0x1, NULL, NULL },
    { "getResultGeometry", NULL, "Lcom.vividsolutions.jts.geom.Geometry;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "inputGeom_", NULL, 0x2, "Lcom.vividsolutions.jts.geom.Geometry;", NULL, NULL,  },
    { "distanceTolerance_", NULL, 0x2, "D", NULL, NULL,  },
    { "isEnsureValidTopology_", NULL, 0x2, "Z", NULL, NULL,  },
  };
  static const char *inner_classes[] = {"Lcom.vividsolutions.jts.simplify.DouglasPeuckerSimplifier$DPTransformer;"};
  static const J2ObjcClassInfo _ComVividsolutionsJtsSimplifyDouglasPeuckerSimplifier = { 2, "DouglasPeuckerSimplifier", "com.vividsolutions.jts.simplify", NULL, 0x1, 5, methods, 3, fields, 0, NULL, 1, inner_classes, NULL, NULL };
  return &_ComVividsolutionsJtsSimplifyDouglasPeuckerSimplifier;
}

@end

ComVividsolutionsJtsGeomGeometry *ComVividsolutionsJtsSimplifyDouglasPeuckerSimplifier_simplifyWithComVividsolutionsJtsGeomGeometry_withDouble_(ComVividsolutionsJtsGeomGeometry *geom, jdouble distanceTolerance) {
  ComVividsolutionsJtsSimplifyDouglasPeuckerSimplifier_initialize();
  ComVividsolutionsJtsSimplifyDouglasPeuckerSimplifier *tss = [new_ComVividsolutionsJtsSimplifyDouglasPeuckerSimplifier_initWithComVividsolutionsJtsGeomGeometry_(geom) autorelease];
  [tss setDistanceToleranceWithDouble:distanceTolerance];
  return [tss getResultGeometry];
}

void ComVividsolutionsJtsSimplifyDouglasPeuckerSimplifier_initWithComVividsolutionsJtsGeomGeometry_(ComVividsolutionsJtsSimplifyDouglasPeuckerSimplifier *self, ComVividsolutionsJtsGeomGeometry *inputGeom) {
  NSObject_init(self);
  self->isEnsureValidTopology_ = YES;
  ComVividsolutionsJtsSimplifyDouglasPeuckerSimplifier_set_inputGeom_(self, inputGeom);
}

ComVividsolutionsJtsSimplifyDouglasPeuckerSimplifier *new_ComVividsolutionsJtsSimplifyDouglasPeuckerSimplifier_initWithComVividsolutionsJtsGeomGeometry_(ComVividsolutionsJtsGeomGeometry *inputGeom) {
  ComVividsolutionsJtsSimplifyDouglasPeuckerSimplifier *self = [ComVividsolutionsJtsSimplifyDouglasPeuckerSimplifier alloc];
  ComVividsolutionsJtsSimplifyDouglasPeuckerSimplifier_initWithComVividsolutionsJtsGeomGeometry_(self, inputGeom);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComVividsolutionsJtsSimplifyDouglasPeuckerSimplifier)

@implementation ComVividsolutionsJtsSimplifyDouglasPeuckerSimplifier_DPTransformer

- (instancetype)initWithComVividsolutionsJtsSimplifyDouglasPeuckerSimplifier:(ComVividsolutionsJtsSimplifyDouglasPeuckerSimplifier *)outer$
                                                                 withBoolean:(jboolean)isEnsureValidTopology {
  ComVividsolutionsJtsSimplifyDouglasPeuckerSimplifier_DPTransformer_initWithComVividsolutionsJtsSimplifyDouglasPeuckerSimplifier_withBoolean_(self, outer$, isEnsureValidTopology);
  return self;
}

- (id<ComVividsolutionsJtsGeomCoordinateSequence>)transformCoordinatesWithComVividsolutionsJtsGeomCoordinateSequence:(id<ComVividsolutionsJtsGeomCoordinateSequence>)coords
                                                                                withComVividsolutionsJtsGeomGeometry:(ComVividsolutionsJtsGeomGeometry *)parent {
  IOSObjectArray *inputPts = [((id<ComVividsolutionsJtsGeomCoordinateSequence>) nil_chk(coords)) toCoordinateArray];
  IOSObjectArray *newPts = ComVividsolutionsJtsSimplifyDouglasPeuckerLineSimplifier_simplifyWithComVividsolutionsJtsGeomCoordinateArray_withDouble_(inputPts, this$0_->distanceTolerance_);
  return [((id<ComVividsolutionsJtsGeomCoordinateSequenceFactory>) nil_chk([((ComVividsolutionsJtsGeomGeometryFactory *) nil_chk(factory_)) getCoordinateSequenceFactory])) createWithComVividsolutionsJtsGeomCoordinateArray:newPts];
}

- (ComVividsolutionsJtsGeomGeometry *)transformPolygonWithComVividsolutionsJtsGeomPolygon:(ComVividsolutionsJtsGeomPolygon *)geom
                                                     withComVividsolutionsJtsGeomGeometry:(ComVividsolutionsJtsGeomGeometry *)parent {
  ComVividsolutionsJtsGeomGeometry *rawGeom = [super transformPolygonWithComVividsolutionsJtsGeomPolygon:geom withComVividsolutionsJtsGeomGeometry:parent];
  if ([parent isKindOfClass:[ComVividsolutionsJtsGeomMultiPolygon class]]) {
    return rawGeom;
  }
  return ComVividsolutionsJtsSimplifyDouglasPeuckerSimplifier_DPTransformer_createValidAreaWithComVividsolutionsJtsGeomGeometry_(self, rawGeom);
}

- (ComVividsolutionsJtsGeomGeometry *)transformLinearRingWithComVividsolutionsJtsGeomLinearRing:(ComVividsolutionsJtsGeomLinearRing *)geom
                                                           withComVividsolutionsJtsGeomGeometry:(ComVividsolutionsJtsGeomGeometry *)parent {
  jboolean removeDegenerateRings = [parent isKindOfClass:[ComVividsolutionsJtsGeomPolygon class]];
  ComVividsolutionsJtsGeomGeometry *simpResult = [super transformLinearRingWithComVividsolutionsJtsGeomLinearRing:geom withComVividsolutionsJtsGeomGeometry:parent];
  if (removeDegenerateRings && !([simpResult isKindOfClass:[ComVividsolutionsJtsGeomLinearRing class]])) return nil;
  ;
  return simpResult;
}

- (ComVividsolutionsJtsGeomGeometry *)transformMultiPolygonWithComVividsolutionsJtsGeomMultiPolygon:(ComVividsolutionsJtsGeomMultiPolygon *)geom
                                                               withComVividsolutionsJtsGeomGeometry:(ComVividsolutionsJtsGeomGeometry *)parent {
  ComVividsolutionsJtsGeomGeometry *rawGeom = [super transformMultiPolygonWithComVividsolutionsJtsGeomMultiPolygon:geom withComVividsolutionsJtsGeomGeometry:parent];
  return ComVividsolutionsJtsSimplifyDouglasPeuckerSimplifier_DPTransformer_createValidAreaWithComVividsolutionsJtsGeomGeometry_(self, rawGeom);
}

- (ComVividsolutionsJtsGeomGeometry *)createValidAreaWithComVividsolutionsJtsGeomGeometry:(ComVividsolutionsJtsGeomGeometry *)rawAreaGeom {
  return ComVividsolutionsJtsSimplifyDouglasPeuckerSimplifier_DPTransformer_createValidAreaWithComVividsolutionsJtsGeomGeometry_(self, rawAreaGeom);
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithComVividsolutionsJtsSimplifyDouglasPeuckerSimplifier:withBoolean:", "DPTransformer", NULL, 0x1, NULL, NULL },
    { "transformCoordinatesWithComVividsolutionsJtsGeomCoordinateSequence:withComVividsolutionsJtsGeomGeometry:", "transformCoordinates", "Lcom.vividsolutions.jts.geom.CoordinateSequence;", 0x4, NULL, NULL },
    { "transformPolygonWithComVividsolutionsJtsGeomPolygon:withComVividsolutionsJtsGeomGeometry:", "transformPolygon", "Lcom.vividsolutions.jts.geom.Geometry;", 0x4, NULL, NULL },
    { "transformLinearRingWithComVividsolutionsJtsGeomLinearRing:withComVividsolutionsJtsGeomGeometry:", "transformLinearRing", "Lcom.vividsolutions.jts.geom.Geometry;", 0x4, NULL, NULL },
    { "transformMultiPolygonWithComVividsolutionsJtsGeomMultiPolygon:withComVividsolutionsJtsGeomGeometry:", "transformMultiPolygon", "Lcom.vividsolutions.jts.geom.Geometry;", 0x4, NULL, NULL },
    { "createValidAreaWithComVividsolutionsJtsGeomGeometry:", "createValidArea", "Lcom.vividsolutions.jts.geom.Geometry;", 0x2, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lcom.vividsolutions.jts.simplify.DouglasPeuckerSimplifier;", NULL, NULL,  },
    { "isEnsureValidTopology_", NULL, 0x2, "Z", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _ComVividsolutionsJtsSimplifyDouglasPeuckerSimplifier_DPTransformer = { 2, "DPTransformer", "com.vividsolutions.jts.simplify", "DouglasPeuckerSimplifier", 0x0, 6, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ComVividsolutionsJtsSimplifyDouglasPeuckerSimplifier_DPTransformer;
}

@end

void ComVividsolutionsJtsSimplifyDouglasPeuckerSimplifier_DPTransformer_initWithComVividsolutionsJtsSimplifyDouglasPeuckerSimplifier_withBoolean_(ComVividsolutionsJtsSimplifyDouglasPeuckerSimplifier_DPTransformer *self, ComVividsolutionsJtsSimplifyDouglasPeuckerSimplifier *outer$, jboolean isEnsureValidTopology) {
  ComVividsolutionsJtsSimplifyDouglasPeuckerSimplifier_DPTransformer_set_this$0_(self, outer$);
  ComVividsolutionsJtsGeomUtilGeometryTransformer_init(self);
  self->isEnsureValidTopology_ = YES;
  self->isEnsureValidTopology_ = isEnsureValidTopology;
}

ComVividsolutionsJtsSimplifyDouglasPeuckerSimplifier_DPTransformer *new_ComVividsolutionsJtsSimplifyDouglasPeuckerSimplifier_DPTransformer_initWithComVividsolutionsJtsSimplifyDouglasPeuckerSimplifier_withBoolean_(ComVividsolutionsJtsSimplifyDouglasPeuckerSimplifier *outer$, jboolean isEnsureValidTopology) {
  ComVividsolutionsJtsSimplifyDouglasPeuckerSimplifier_DPTransformer *self = [ComVividsolutionsJtsSimplifyDouglasPeuckerSimplifier_DPTransformer alloc];
  ComVividsolutionsJtsSimplifyDouglasPeuckerSimplifier_DPTransformer_initWithComVividsolutionsJtsSimplifyDouglasPeuckerSimplifier_withBoolean_(self, outer$, isEnsureValidTopology);
  return self;
}

ComVividsolutionsJtsGeomGeometry *ComVividsolutionsJtsSimplifyDouglasPeuckerSimplifier_DPTransformer_createValidAreaWithComVividsolutionsJtsGeomGeometry_(ComVividsolutionsJtsSimplifyDouglasPeuckerSimplifier_DPTransformer *self, ComVividsolutionsJtsGeomGeometry *rawAreaGeom) {
  if (self->isEnsureValidTopology_) return [((ComVividsolutionsJtsGeomGeometry *) nil_chk(rawAreaGeom)) bufferWithDouble:0.0];
  return rawAreaGeom;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComVividsolutionsJtsSimplifyDouglasPeuckerSimplifier_DPTransformer)
