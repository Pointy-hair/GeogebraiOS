//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/geos/GeoElementGraphicsAdapter.java
//


#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "geogebra/common/awt/MyImage.h"
#include "geogebra/common/kernel/geos/GeoElementGraphicsAdapter.h"

@implementation GeogebraCommonKernelGeosGeoElementGraphicsAdapter

- (id<GeogebraCommonAwtMyImage>)getImageOnly {
  return image_;
}

- (void)setImageOnlyWithGeogebraCommonAwtMyImage:(id<GeogebraCommonAwtMyImage>)ba {
  GeogebraCommonKernelGeosGeoElementGraphicsAdapter_set_image_(self, ba);
}

- (void)setImageFileNameOnlyWithNSString:(NSString *)fn {
  GeogebraCommonKernelGeosGeoElementGraphicsAdapter_set_imageFileName_(self, fn);
}

- (NSString *)getImageFileName {
  return imageFileName_;
}

- (id<GeogebraCommonAwtMyImage>)getFillImage {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (void)setImageFileNameWithNSString:(NSString *)fileName {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)setFillImageWithNSString:(NSString *)filename {
  [self setImageFileNameOnlyWithNSString:filename];
  GeogebraCommonKernelGeosGeoElementGraphicsAdapter_set_image_(self, nil);
}

- (void)convertToSaveableFormat {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (instancetype)init {
  GeogebraCommonKernelGeosGeoElementGraphicsAdapter_init(self);
  return self;
}

- (void)dealloc {
  RELEASE_(imageFileName_);
  RELEASE_(image_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "getImageOnly", NULL, "Lgeogebra.common.awt.MyImage;", 0x1, NULL, NULL },
    { "setImageOnlyWithGeogebraCommonAwtMyImage:", "setImageOnly", "V", 0x1, NULL, NULL },
    { "setImageFileNameOnlyWithNSString:", "setImageFileNameOnly", "V", 0x1, NULL, NULL },
    { "getImageFileName", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getFillImage", NULL, "Lgeogebra.common.awt.MyImage;", 0x401, NULL, NULL },
    { "setImageFileNameWithNSString:", "setImageFileName", "V", 0x401, NULL, NULL },
    { "setFillImageWithNSString:", "setFillImage", "V", 0x1, NULL, NULL },
    { "convertToSaveableFormat", NULL, "V", 0x401, NULL, NULL },
    { "init", NULL, NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "imageFileName_", NULL, 0x4, "Ljava.lang.String;", NULL, NULL,  },
    { "image_", NULL, 0x4, "Lgeogebra.common.awt.MyImage;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelGeosGeoElementGraphicsAdapter = { 2, "GeoElementGraphicsAdapter", "geogebra.common.kernel.geos", NULL, 0x401, 9, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelGeosGeoElementGraphicsAdapter;
}

@end

void GeogebraCommonKernelGeosGeoElementGraphicsAdapter_init(GeogebraCommonKernelGeosGeoElementGraphicsAdapter *self) {
  NSObject_init(self);
  GeogebraCommonKernelGeosGeoElementGraphicsAdapter_set_imageFileName_(self, @"");
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelGeosGeoElementGraphicsAdapter)
