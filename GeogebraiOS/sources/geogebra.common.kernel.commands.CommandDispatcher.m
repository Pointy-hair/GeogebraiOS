//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/commands/CommandDispatcher.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "geogebra/common/GeoGebraConstants.h"
#include "geogebra/common/kernel/Construction.h"
#include "geogebra/common/kernel/Kernel.h"
#include "geogebra/common/kernel/Macro.h"
#include "geogebra/common/kernel/arithmetic/Command.h"
#include "geogebra/common/kernel/commands/CAScmdProcessor.h"
#include "geogebra/common/kernel/commands/CmdDerivative.h"
#include "geogebra/common/kernel/commands/CommandDispatcher.h"
#include "geogebra/common/kernel/commands/CommandDispatcherAdvanced.h"
#include "geogebra/common/kernel/commands/CommandDispatcherBasic.h"
#include "geogebra/common/kernel/commands/CommandDispatcherCAS.h"
#include "geogebra/common/kernel/commands/CommandDispatcherDiscrete.h"
#include "geogebra/common/kernel/commands/CommandDispatcherInterface.h"
#include "geogebra/common/kernel/commands/CommandDispatcherScripting.h"
#include "geogebra/common/kernel/commands/CommandDispatcherStats.h"
#include "geogebra/common/kernel/commands/CommandProcessor.h"
#include "geogebra/common/kernel/commands/Commands.h"
#include "geogebra/common/kernel/commands/CommandsConstants.h"
#include "geogebra/common/kernel/commands/MacroProcessor.h"
#include "geogebra/common/main/App.h"
#include "geogebra/common/main/Localization.h"
#include "geogebra/common/main/MyError.h"
#include "geogebra/common/util/debug/Log.h"
#include "java/lang/Exception.h"
#include "java/util/HashMap.h"

@interface GeogebraCommonKernelCommandsCommandDispatcher () {
 @public
  GeogebraCommonKernelConstruction *cons_;
  GeogebraCommonMainApp *app_;
  jboolean isCasActive_;
  GeogebraCommonKernelCommandsMacroProcessor *macroProc_;
  GeogebraCommonKernelCommandsCommandDispatcherStats *statsDispatcher_;
  GeogebraCommonKernelCommandsCommandDispatcherBasic *basicDispatcher_;
}

- (GeogebraCommonKernelCommandsCommandDispatcherStats *)getStatsDispatcher;

- (GeogebraCommonKernelCommandsCommandDispatcherBasic *)getBasicDispatcher;

@end

J2OBJC_FIELD_SETTER(GeogebraCommonKernelCommandsCommandDispatcher, cons_, GeogebraCommonKernelConstruction *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelCommandsCommandDispatcher, app_, GeogebraCommonMainApp *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelCommandsCommandDispatcher, macroProc_, GeogebraCommonKernelCommandsMacroProcessor *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelCommandsCommandDispatcher, statsDispatcher_, GeogebraCommonKernelCommandsCommandDispatcherStats *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelCommandsCommandDispatcher, basicDispatcher_, GeogebraCommonKernelCommandsCommandDispatcherBasic *)

__attribute__((unused)) static GeogebraCommonKernelCommandsCommandDispatcherStats *GeogebraCommonKernelCommandsCommandDispatcher_getStatsDispatcher(GeogebraCommonKernelCommandsCommandDispatcher *self);

__attribute__((unused)) static GeogebraCommonKernelCommandsCommandDispatcherBasic *GeogebraCommonKernelCommandsCommandDispatcher_getBasicDispatcher(GeogebraCommonKernelCommandsCommandDispatcher *self);

@implementation GeogebraCommonKernelCommandsCommandDispatcher

- (NSString *)getSubCommandSetNameWithInt:(jint)index {
  switch (index) {
    case GeogebraCommonKernelCommandsCommandsConstants_TABLE_GEOMETRY:
    return [((GeogebraCommonMainApp *) nil_chk(app_)) getMenuWithNSString:@"Type.Geometry"];
    case GeogebraCommonKernelCommandsCommandsConstants_TABLE_ALGEBRA:
    return [((GeogebraCommonMainApp *) nil_chk(app_)) getMenuWithNSString:@"Type.Algebra"];
    case GeogebraCommonKernelCommandsCommandsConstants_TABLE_TEXT:
    return [((GeogebraCommonMainApp *) nil_chk(app_)) getMenuWithNSString:@"Type.Text"];
    case GeogebraCommonKernelCommandsCommandsConstants_TABLE_LOGICAL:
    return [((GeogebraCommonMainApp *) nil_chk(app_)) getMenuWithNSString:@"Type.Logic"];
    case GeogebraCommonKernelCommandsCommandsConstants_TABLE_FUNCTION:
    return [((GeogebraCommonMainApp *) nil_chk(app_)) getMenuWithNSString:@"Type.FunctionsAndCalculus"];
    case GeogebraCommonKernelCommandsCommandsConstants_TABLE_CONIC:
    return [((GeogebraCommonMainApp *) nil_chk(app_)) getMenuWithNSString:@"Type.Conic"];
    case GeogebraCommonKernelCommandsCommandsConstants_TABLE_LIST:
    return [((GeogebraCommonMainApp *) nil_chk(app_)) getMenuWithNSString:@"Type.List"];
    case GeogebraCommonKernelCommandsCommandsConstants_TABLE_VECTOR:
    return [((GeogebraCommonMainApp *) nil_chk(app_)) getMenuWithNSString:@"Type.VectorAndMatrix"];
    case GeogebraCommonKernelCommandsCommandsConstants_TABLE_TRANSFORMATION:
    return [((GeogebraCommonMainApp *) nil_chk(app_)) getMenuWithNSString:@"Type.Transformation"];
    case GeogebraCommonKernelCommandsCommandsConstants_TABLE_CHARTS:
    return [((GeogebraCommonMainApp *) nil_chk(app_)) getMenuWithNSString:@"Type.Chart"];
    case GeogebraCommonKernelCommandsCommandsConstants_TABLE_STATISTICS:
    return [((GeogebraCommonMainApp *) nil_chk(app_)) getMenuWithNSString:@"Type.Statistics"];
    case GeogebraCommonKernelCommandsCommandsConstants_TABLE_PROBABILITY:
    return [((GeogebraCommonMainApp *) nil_chk(app_)) getMenuWithNSString:@"Type.Probability"];
    case GeogebraCommonKernelCommandsCommandsConstants_TABLE_SPREADSHEET:
    return [((GeogebraCommonMainApp *) nil_chk(app_)) getMenuWithNSString:@"Type.Spreadsheet"];
    case GeogebraCommonKernelCommandsCommandsConstants_TABLE_SCRIPTING:
    return [((GeogebraCommonMainApp *) nil_chk(app_)) getMenuWithNSString:@"Type.Scripting"];
    case GeogebraCommonKernelCommandsCommandsConstants_TABLE_DISCRETE:
    return [((GeogebraCommonMainApp *) nil_chk(app_)) getMenuWithNSString:@"Type.DiscreteMath"];
    case GeogebraCommonKernelCommandsCommandsConstants_TABLE_GEOGEBRA:
    return [((GeogebraCommonMainApp *) nil_chk(app_)) getMenuWithNSString:@"Type.GeoGebra"];
    case GeogebraCommonKernelCommandsCommandsConstants_TABLE_OPTIMIZATION:
    return [((GeogebraCommonMainApp *) nil_chk(app_)) getMenuWithNSString:@"Type.OptimizationCommands"];
    case GeogebraCommonKernelCommandsCommandsConstants_TABLE_CAS:
    return [((GeogebraCommonMainApp *) nil_chk(app_)) getMenuWithNSString:@"Type.CAS"];
    case GeogebraCommonKernelCommandsCommandsConstants_TABLE_3D:
    return [((GeogebraCommonMainApp *) nil_chk(app_)) getMenuWithNSString:@"Type.3D"];
    case GeogebraCommonKernelCommandsCommandsConstants_TABLE_FINANCIAL:
    return [((GeogebraCommonMainApp *) nil_chk(app_)) getMenuWithNSString:@"Type.Financial"];
    default:
    return nil;
  }
}

- (instancetype)initWithGeogebraCommonKernelKernel:(GeogebraCommonKernelKernel *)kernel2 {
  GeogebraCommonKernelCommandsCommandDispatcher_initWithGeogebraCommonKernelKernel_(self, kernel2);
  return self;
}

- (jboolean)isCommandAvailableWithNSString:(NSString *)cmd {
  if (cmdTable_ == nil) {
    [self initCmdTable];
  }
  return [((JavaUtilHashMap *) nil_chk(cmdTable_)) containsKeyWithId:cmd];
}

- (IOSObjectArray *)processCommandWithGeogebraCommonKernelArithmeticCommand:(GeogebraCommonKernelArithmeticCommand *)c
                                                                withBoolean:(jboolean)labelOutput {
  if (cmdTable_ == nil) {
    [self initCmdTable];
  }
  NSString *cmdName = [((GeogebraCommonKernelArithmeticCommand *) nil_chk(c)) getName];
  GeogebraCommonKernelCommandsCommandProcessor *cmdProc;
  GeogebraCommonKernelMacro *macro = [((GeogebraCommonKernelKernel *) nil_chk(kernel_)) getMacroWithNSString:cmdName];
  if (macro != nil) {
    [c setMacroWithGeogebraCommonKernelMacro:macro];
    cmdProc = macroProc_;
  }
  else {
    cmdProc = [((JavaUtilHashMap *) nil_chk(cmdTable_)) getWithId:cmdName];
    if (cmdProc == nil) {
      cmdProc = [self commandTableSwitchWithNSString:cmdName];
      if (cmdProc != nil) {
        [cmdTable_ putWithId:cmdName withId:cmdProc];
      }
    }
    if (cmdProc == nil && internalCmdTable_ != nil) {
      cmdProc = [internalCmdTable_ getWithId:cmdName];
    }
  }
  if (cmdProc == nil) @throw [new_GeogebraCommonMainMyError_initWithGeogebraCommonMainLocalization_withNSString_([((GeogebraCommonMainApp *) nil_chk(app_)) getLocalization], JreStrcat("$$$", [((GeogebraCommonMainLocalization *) nil_chk([app_ getLocalization])) getErrorWithNSString:@"UnknownCommand"], @" : ", [((GeogebraCommonMainLocalization *) nil_chk([app_ getLocalization])) getCommandWithNSString:[c getName]])) autorelease];
  jboolean oldMacroMode = [((GeogebraCommonKernelConstruction *) nil_chk(cons_)) isSuppressLabelsActive];
  if (!labelOutput) [cons_ setSuppressLabelCreationWithBoolean:YES];
  IOSObjectArray *ret = nil;
  @try {
    ret = [((GeogebraCommonKernelCommandsCommandProcessor *) nil_chk(cmdProc)) processWithGeogebraCommonKernelArithmeticCommand:c];
  }
  @catch (GeogebraCommonMainMyError *e) {
    @throw e;
  }
  @catch (JavaLangException *e) {
    [cons_ setSuppressLabelCreationWithBoolean:oldMacroMode];
    [((JavaLangException *) nil_chk(e)) printStackTrace];
    @throw [new_GeogebraCommonMainMyError_initWithGeogebraCommonMainLocalization_withNSString_([((GeogebraCommonMainApp *) nil_chk(app_)) getLocalization], @"CAS.GeneralErrorMessage") autorelease];
  }
  @finally {
    [cons_ setSuppressLabelCreationWithBoolean:oldMacroMode];
  }
  if (macro != nil) [cons_ addUsedMacroWithGeogebraCommonKernelMacro:macro];
  return ret;
}

- (void)initCmdTable {
  GeogebraCommonKernelCommandsCommandDispatcher_setAndConsume_macroProc_(self, new_GeogebraCommonKernelCommandsMacroProcessor_initWithGeogebraCommonKernelKernel_(kernel_));
  GeogebraCommonKernelCommandsCommandDispatcher_setAndConsume_cmdTable_(self, new_JavaUtilHashMap_initWithInt_(500));
  GeogebraCommonKernelCommandsCommandDispatcher_setAndConsume_casTable_(self, new_JavaUtilHashMap_initWithInt_(500));
  {
    IOSObjectArray *a__ = GeogebraCommonKernelCommandsCommandsEnum_values();
    GeogebraCommonKernelCommandsCommandsEnum * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    GeogebraCommonKernelCommandsCommandsEnum * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      GeogebraCommonKernelCommandsCommandsEnum *comm = *b__++;
      [cmdTable_ putWithId:[((GeogebraCommonKernelCommandsCommandsEnum *) nil_chk(comm)) name] withId:nil];
    }
  }
  if ([((GeogebraCommonMainApp *) nil_chk(app_)) isUsingFullGui]) [self initCASCommands];
}

- (void)initCASCommands {
  isCasActive_ = YES;
  if (cmdTable_ == nil) return;
  [self fillInternalCmdTable];
}

- (void)fillInternalCmdTable {
  GeogebraCommonKernelCommandsCommandDispatcher_setAndConsume_internalCmdTable_(self, new_JavaUtilHashMap_init());
  [internalCmdTable_ putWithId:@"diff" withId:[new_GeogebraCommonKernelCommandsCmdDerivative_initWithGeogebraCommonKernelKernel_(kernel_) autorelease]];
}

- (GeogebraCommonKernelCommandsCommandProcessor *)commandTableSwitchWithNSString:(NSString *)cmdName {
  @try {
    GeogebraCommonKernelCommandsCommandsEnum *command = GeogebraCommonKernelCommandsCommandsEnum_valueOfWithNSString_(cmdName);
    switch ([command ordinal]) {
      case GeogebraCommonKernelCommandsCommands_RigidPolygon:
      case GeogebraCommonKernelCommandsCommands_Relation:
      case GeogebraCommonKernelCommandsCommands_CopyFreeObject:
      case GeogebraCommonKernelCommandsCommands_SetColor:
      case GeogebraCommonKernelCommandsCommands_SetBackgroundColor:
      case GeogebraCommonKernelCommandsCommands_SetDynamicColor:
      case GeogebraCommonKernelCommandsCommands_SetConditionToShowObject:
      case GeogebraCommonKernelCommandsCommands_SetFilling:
      case GeogebraCommonKernelCommandsCommands_SetLineThickness:
      case GeogebraCommonKernelCommandsCommands_SetLineStyle:
      case GeogebraCommonKernelCommandsCommands_SetPointStyle:
      case GeogebraCommonKernelCommandsCommands_SetPointSize:
      case GeogebraCommonKernelCommandsCommands_SetFixed:
      case GeogebraCommonKernelCommandsCommands_SetTrace:
      case GeogebraCommonKernelCommandsCommands_Rename:
      case GeogebraCommonKernelCommandsCommands_HideLayer:
      case GeogebraCommonKernelCommandsCommands_ShowLayer:
      case GeogebraCommonKernelCommandsCommands_SetCoords:
      case GeogebraCommonKernelCommandsCommands_Pan:
      case GeogebraCommonKernelCommandsCommands_CenterView:
      case GeogebraCommonKernelCommandsCommands_ZoomIn:
      case GeogebraCommonKernelCommandsCommands_SetSeed:
      case GeogebraCommonKernelCommandsCommands_ZoomOut:
      case GeogebraCommonKernelCommandsCommands_SetActiveView:
      case GeogebraCommonKernelCommandsCommands_SelectObjects:
      case GeogebraCommonKernelCommandsCommands_SetLayer:
      case GeogebraCommonKernelCommandsCommands_SetCaption:
      case GeogebraCommonKernelCommandsCommands_SetLabelMode:
      case GeogebraCommonKernelCommandsCommands_SetTooltipMode:
      case GeogebraCommonKernelCommandsCommands_UpdateConstruction:
      case GeogebraCommonKernelCommandsCommands_SetValue:
      case GeogebraCommonKernelCommandsCommands_PlaySound:
      case GeogebraCommonKernelCommandsCommands_ParseToNumber:
      case GeogebraCommonKernelCommandsCommands_ParseToFunction:
      case GeogebraCommonKernelCommandsCommands_StartAnimation:
      case GeogebraCommonKernelCommandsCommands_StartLogging:
      case GeogebraCommonKernelCommandsCommands_StopLogging:
      case GeogebraCommonKernelCommandsCommands_StartRecord:
      case GeogebraCommonKernelCommandsCommands_SetPerspective:
      case GeogebraCommonKernelCommandsCommands_Delete:
      case GeogebraCommonKernelCommandsCommands_Slider:
      case GeogebraCommonKernelCommandsCommands_Checkbox:
      case GeogebraCommonKernelCommandsCommands_InputBox:
      case GeogebraCommonKernelCommandsCommands_Textfield:
      case GeogebraCommonKernelCommandsCommands_Button:
      case GeogebraCommonKernelCommandsCommands_Execute:
      case GeogebraCommonKernelCommandsCommands_GetTime:
      case GeogebraCommonKernelCommandsCommands_ShowLabel:
      case GeogebraCommonKernelCommandsCommands_SetAxesRatio:
      case GeogebraCommonKernelCommandsCommands_SetVisibleInView:
      case GeogebraCommonKernelCommandsCommands_ShowAxes:
      case GeogebraCommonKernelCommandsCommands_ShowGrid:
      case GeogebraCommonKernelCommandsCommands_SlowPlot:
      case GeogebraCommonKernelCommandsCommands_ToolImage:
      case GeogebraCommonKernelCommandsCommands_Turtle:
      case GeogebraCommonKernelCommandsCommands_TurtleForward:
      case GeogebraCommonKernelCommandsCommands_TurtleBack:
      case GeogebraCommonKernelCommandsCommands_TurtleLeft:
      case GeogebraCommonKernelCommandsCommands_TurtleRight:
      case GeogebraCommonKernelCommandsCommands_TurtleUp:
      case GeogebraCommonKernelCommandsCommands_TurtleDown:
      case GeogebraCommonKernelCommandsCommands_RunClickScript:
      case GeogebraCommonKernelCommandsCommands_RunUpdateScript:
      return [((id<GeogebraCommonKernelCommandsCommandDispatcherInterface>) nil_chk([self getScriptingDispatcher])) dispatchWithGeogebraCommonKernelCommandsCommandsEnum:command withGeogebraCommonKernelKernel:kernel_];
      case GeogebraCommonKernelCommandsCommands_IntersectPath:
      case GeogebraCommonKernelCommandsCommands_IntersectRegion:
      case GeogebraCommonKernelCommandsCommands_Direction:
      case GeogebraCommonKernelCommandsCommands_TaylorPolynomial:
      case GeogebraCommonKernelCommandsCommands_TaylorSeries:
      case GeogebraCommonKernelCommandsCommands_SecondAxis:
      case GeogebraCommonKernelCommandsCommands_MinorAxis:
      case GeogebraCommonKernelCommandsCommands_SemiMinorAxisLength:
      case GeogebraCommonKernelCommandsCommands_SecondAxisLength:
      case GeogebraCommonKernelCommandsCommands_Directrix:
      case GeogebraCommonKernelCommandsCommands_Numerator:
      case GeogebraCommonKernelCommandsCommands_Denominator:
      case GeogebraCommonKernelCommandsCommands_ComplexRoot:
      case GeogebraCommonKernelCommandsCommands_SlopeField:
      case GeogebraCommonKernelCommandsCommands_Iteration:
      case GeogebraCommonKernelCommandsCommands_PathParameter:
      case GeogebraCommonKernelCommandsCommands_Asymptote:
      case GeogebraCommonKernelCommandsCommands_CurvatureVector:
      case GeogebraCommonKernelCommandsCommands_Curvature:
      case GeogebraCommonKernelCommandsCommands_OsculatingCircle:
      case GeogebraCommonKernelCommandsCommands_IterationList:
      case GeogebraCommonKernelCommandsCommands_RootList:
      case GeogebraCommonKernelCommandsCommands_ImplicitCurve:
      case GeogebraCommonKernelCommandsCommands_Roots:
      case GeogebraCommonKernelCommandsCommands_AffineRatio:
      case GeogebraCommonKernelCommandsCommands_CrossRatio:
      case GeogebraCommonKernelCommandsCommands_ClosestPoint:
      case GeogebraCommonKernelCommandsCommands_IsInRegion:
      case GeogebraCommonKernelCommandsCommands_PrimeFactors:
      case GeogebraCommonKernelCommandsCommands_CompleteSquare:
      case GeogebraCommonKernelCommandsCommands_Union:
      case GeogebraCommonKernelCommandsCommands_ScientificText:
      case GeogebraCommonKernelCommandsCommands_VerticalText:
      case GeogebraCommonKernelCommandsCommands_RotateText:
      case GeogebraCommonKernelCommandsCommands_Ordinal:
      case GeogebraCommonKernelCommandsCommands_Parameter:
      case GeogebraCommonKernelCommandsCommands_Incircle:
      case GeogebraCommonKernelCommandsCommands_SelectedElement:
      case GeogebraCommonKernelCommandsCommands_SelectedIndex:
      case GeogebraCommonKernelCommandsCommands_Unique:
      case GeogebraCommonKernelCommandsCommands_Zip:
      case GeogebraCommonKernelCommandsCommands_Intersection:
      case GeogebraCommonKernelCommandsCommands_PointList:
      case GeogebraCommonKernelCommandsCommands_ApplyMatrix:
      case GeogebraCommonKernelCommandsCommands_Invert:
      case GeogebraCommonKernelCommandsCommands_Transpose:
      case GeogebraCommonKernelCommandsCommands_ReducedRowEchelonForm:
      case GeogebraCommonKernelCommandsCommands_Determinant:
      case GeogebraCommonKernelCommandsCommands_Identity:
      case GeogebraCommonKernelCommandsCommands_Centroid:
      case GeogebraCommonKernelCommandsCommands_MajorAxis:
      case GeogebraCommonKernelCommandsCommands_FirstAxis:
      case GeogebraCommonKernelCommandsCommands_SemiMajorAxisLength:
      case GeogebraCommonKernelCommandsCommands_FirstAxisLength:
      case GeogebraCommonKernelCommandsCommands_AxisStepX:
      case GeogebraCommonKernelCommandsCommands_AxisStepY:
      case GeogebraCommonKernelCommandsCommands_ConstructionStep:
      case GeogebraCommonKernelCommandsCommands_Polar:
      case GeogebraCommonKernelCommandsCommands_LinearEccentricity:
      case GeogebraCommonKernelCommandsCommands_Excentricity:
      case GeogebraCommonKernelCommandsCommands_Eccentricity:
      case GeogebraCommonKernelCommandsCommands_Axes:
      case GeogebraCommonKernelCommandsCommands_IndexOf:
      case GeogebraCommonKernelCommandsCommands_Flatten:
      case GeogebraCommonKernelCommandsCommands_Insert:
      case GeogebraCommonKernelCommandsCommands_Prove:
      case GeogebraCommonKernelCommandsCommands_ProveDetails:
      case GeogebraCommonKernelCommandsCommands_DynamicCoordinates:
      case GeogebraCommonKernelCommandsCommands_Maximize:
      case GeogebraCommonKernelCommandsCommands_Minimize:
      case GeogebraCommonKernelCommandsCommands_AreCollinear:
      case GeogebraCommonKernelCommandsCommands_AreParallel:
      case GeogebraCommonKernelCommandsCommands_AreConcyclic:
      case GeogebraCommonKernelCommandsCommands_ArePerpendicular:
      case GeogebraCommonKernelCommandsCommands_AreEqual:
      case GeogebraCommonKernelCommandsCommands_AreConcurrent:
      case GeogebraCommonKernelCommandsCommands_ToBase:
      case GeogebraCommonKernelCommandsCommands_FromBase:
      case GeogebraCommonKernelCommandsCommands_ContinuedFraction:
      case GeogebraCommonKernelCommandsCommands_AttachCopyToView:
      case GeogebraCommonKernelCommandsCommands_Divisors:
      case GeogebraCommonKernelCommandsCommands_DivisorsSum:
      case GeogebraCommonKernelCommandsCommands_Dimension:
      case GeogebraCommonKernelCommandsCommands_DivisorsList:
      case GeogebraCommonKernelCommandsCommands_IsPrime:
      case GeogebraCommonKernelCommandsCommands_LeftSide:
      case GeogebraCommonKernelCommandsCommands_RightSide:
      case GeogebraCommonKernelCommandsCommands_Division:
      case GeogebraCommonKernelCommandsCommands_MatrixRank:
      case GeogebraCommonKernelCommandsCommands_CommonDenominator:
      case GeogebraCommonKernelCommandsCommands_ToPoint:
      case GeogebraCommonKernelCommandsCommands_ToComplex:
      case GeogebraCommonKernelCommandsCommands_ToPolar:
      case GeogebraCommonKernelCommandsCommands_Factors:
      case GeogebraCommonKernelCommandsCommands_NSolveODE:
      case GeogebraCommonKernelCommandsCommands_Rate:
      case GeogebraCommonKernelCommandsCommands_Periods:
      case GeogebraCommonKernelCommandsCommands_Payment:
      case GeogebraCommonKernelCommandsCommands_FutureValue:
      case GeogebraCommonKernelCommandsCommands_PresentValue:
      return [((id<GeogebraCommonKernelCommandsCommandDispatcherInterface>) nil_chk([self getAdvancedDispatcher])) dispatchWithGeogebraCommonKernelCommandsCommandsEnum:command withGeogebraCommonKernelKernel:kernel_];
      case GeogebraCommonKernelCommandsCommands_Tangent:
      case GeogebraCommonKernelCommandsCommands_Length:
      case GeogebraCommonKernelCommandsCommands_UnitPerpendicularVector:
      case GeogebraCommonKernelCommandsCommands_UnitOrthogonalVector:
      case GeogebraCommonKernelCommandsCommands_Sort:
      case GeogebraCommonKernelCommandsCommands_BarChart:
      case GeogebraCommonKernelCommandsCommands_Product:
      case GeogebraCommonKernelCommandsCommands_Join:
      case GeogebraCommonKernelCommandsCommands_LCM:
      case GeogebraCommonKernelCommandsCommands_GCD:
      case GeogebraCommonKernelCommandsCommands_LetterToUnicode:
      case GeogebraCommonKernelCommandsCommands_UnicodeToLetter:
      case GeogebraCommonKernelCommandsCommands_Object:
      case GeogebraCommonKernelCommandsCommands_CountIf:
      case GeogebraCommonKernelCommandsCommands_Extremum:
      case GeogebraCommonKernelCommandsCommands_UnitVector:
      case GeogebraCommonKernelCommandsCommands_Text:
      case GeogebraCommonKernelCommandsCommands_Vector:
      case GeogebraCommonKernelCommandsCommands_Dot:
      case GeogebraCommonKernelCommandsCommands_Cross:
      case GeogebraCommonKernelCommandsCommands_PolyLine:
      case GeogebraCommonKernelCommandsCommands_PointIn:
      case GeogebraCommonKernelCommandsCommands_Line:
      case GeogebraCommonKernelCommandsCommands_Ray:
      case GeogebraCommonKernelCommandsCommands_AngleBisector:
      case GeogebraCommonKernelCommandsCommands_AngularBisector:
      case GeogebraCommonKernelCommandsCommands_Segment:
      case GeogebraCommonKernelCommandsCommands_Slope:
      case GeogebraCommonKernelCommandsCommands_Angle:
      case GeogebraCommonKernelCommandsCommands_Point:
      case GeogebraCommonKernelCommandsCommands_Midpoint:
      case GeogebraCommonKernelCommandsCommands_Intersect:
      case GeogebraCommonKernelCommandsCommands_Distance:
      case GeogebraCommonKernelCommandsCommands_Radius:
      case GeogebraCommonKernelCommandsCommands_Arc:
      case GeogebraCommonKernelCommandsCommands_Sector:
      case GeogebraCommonKernelCommandsCommands_CircleArc:
      case GeogebraCommonKernelCommandsCommands_CircularArc:
      case GeogebraCommonKernelCommandsCommands_CircleSector:
      case GeogebraCommonKernelCommandsCommands_CircularSector:
      case GeogebraCommonKernelCommandsCommands_CircumcircleSector:
      case GeogebraCommonKernelCommandsCommands_CircumcircularSector:
      case GeogebraCommonKernelCommandsCommands_CircumcircleArc:
      case GeogebraCommonKernelCommandsCommands_CircumcircularArc:
      case GeogebraCommonKernelCommandsCommands_Polygon:
      case GeogebraCommonKernelCommandsCommands_Area:
      case GeogebraCommonKernelCommandsCommands_Circumference:
      case GeogebraCommonKernelCommandsCommands_Perimeter:
      case GeogebraCommonKernelCommandsCommands_Locus:
      case GeogebraCommonKernelCommandsCommands_Vertex:
      case GeogebraCommonKernelCommandsCommands_If:
      case GeogebraCommonKernelCommandsCommands_Root:
      case GeogebraCommonKernelCommandsCommands_TurningPoint:
      case GeogebraCommonKernelCommandsCommands_Polynomial:
      case GeogebraCommonKernelCommandsCommands_Spline:
      case GeogebraCommonKernelCommandsCommands_Function:
      case GeogebraCommonKernelCommandsCommands_Curve:
      case GeogebraCommonKernelCommandsCommands_CurveCartesian:
      case GeogebraCommonKernelCommandsCommands_LowerSum:
      case GeogebraCommonKernelCommandsCommands_LeftSum:
      case GeogebraCommonKernelCommandsCommands_RectangleSum:
      case GeogebraCommonKernelCommandsCommands_UpperSum:
      case GeogebraCommonKernelCommandsCommands_TrapezoidalSum:
      case GeogebraCommonKernelCommandsCommands_Ellipse:
      case GeogebraCommonKernelCommandsCommands_Hyperbola:
      case GeogebraCommonKernelCommandsCommands_Conic:
      case GeogebraCommonKernelCommandsCommands_Circle:
      case GeogebraCommonKernelCommandsCommands_Semicircle:
      case GeogebraCommonKernelCommandsCommands_Parabola:
      case GeogebraCommonKernelCommandsCommands_Focus:
      case GeogebraCommonKernelCommandsCommands_Center:
      case GeogebraCommonKernelCommandsCommands_Element:
      case GeogebraCommonKernelCommandsCommands_Sequence:
      case GeogebraCommonKernelCommandsCommands_Reflect:
      case GeogebraCommonKernelCommandsCommands_Mirror:
      case GeogebraCommonKernelCommandsCommands_Dilate:
      case GeogebraCommonKernelCommandsCommands_Rotate:
      case GeogebraCommonKernelCommandsCommands_Translate:
      case GeogebraCommonKernelCommandsCommands_Shear:
      case GeogebraCommonKernelCommandsCommands_Stretch:
      case GeogebraCommonKernelCommandsCommands_Corner:
      case GeogebraCommonKernelCommandsCommands_Name:
      case GeogebraCommonKernelCommandsCommands_Diameter:
      case GeogebraCommonKernelCommandsCommands_ConjugateDiameter:
      case GeogebraCommonKernelCommandsCommands_LineBisector:
      case GeogebraCommonKernelCommandsCommands_PerpendicularBisector:
      case GeogebraCommonKernelCommandsCommands_OrthogonalLine:
      case GeogebraCommonKernelCommandsCommands_PerpendicularLine:
      case GeogebraCommonKernelCommandsCommands_OrthogonalVector:
      case GeogebraCommonKernelCommandsCommands_PerpendicularVector:
      case GeogebraCommonKernelCommandsCommands_Random:
      case GeogebraCommonKernelCommandsCommands_RandomBetween:
      case GeogebraCommonKernelCommandsCommands_Sum:
      case GeogebraCommonKernelCommandsCommands_Binomial:
      case GeogebraCommonKernelCommandsCommands_BinomialCoefficient:
      case GeogebraCommonKernelCommandsCommands_Mod:
      case GeogebraCommonKernelCommandsCommands_Div:
      case GeogebraCommonKernelCommandsCommands_Min:
      case GeogebraCommonKernelCommandsCommands_Max:
      case GeogebraCommonKernelCommandsCommands_Append:
      case GeogebraCommonKernelCommandsCommands_First:
      case GeogebraCommonKernelCommandsCommands_Last:
      case GeogebraCommonKernelCommandsCommands_Remove:
      case GeogebraCommonKernelCommandsCommands_RemoveUndefined:
      case GeogebraCommonKernelCommandsCommands_Reverse:
      case GeogebraCommonKernelCommandsCommands_TableText:
      case GeogebraCommonKernelCommandsCommands_Take:
      case GeogebraCommonKernelCommandsCommands_TextToUnicode:
      case GeogebraCommonKernelCommandsCommands_UnicodeToText:
      case GeogebraCommonKernelCommandsCommands_FractionText:
      case GeogebraCommonKernelCommandsCommands_KeepIf:
      case GeogebraCommonKernelCommandsCommands_IsInteger:
      case GeogebraCommonKernelCommandsCommands_Defined:
      case GeogebraCommonKernelCommandsCommands_IsDefined:
      case GeogebraCommonKernelCommandsCommands_FormulaText:
      case GeogebraCommonKernelCommandsCommands_LaTeX:
      return [((GeogebraCommonKernelCommandsCommandDispatcherBasic *) nil_chk(GeogebraCommonKernelCommandsCommandDispatcher_getBasicDispatcher(self))) dispatchWithGeogebraCommonKernelCommandsCommandsEnum:command withGeogebraCommonKernelKernel:kernel_];
      case GeogebraCommonKernelCommandsCommands_CFactor:
      case GeogebraCommonKernelCommandsCommands_CIFactor:
      case GeogebraCommonKernelCommandsCommands_CSolutions:
      case GeogebraCommonKernelCommandsCommands_CSolve:
      case GeogebraCommonKernelCommandsCommands_Eliminate:
      case GeogebraCommonKernelCommandsCommands_GroebnerLex:
      case GeogebraCommonKernelCommandsCommands_GroebnerDegRevLex:
      case GeogebraCommonKernelCommandsCommands_GroebnerLexDeg:
      case GeogebraCommonKernelCommandsCommands_NSolve:
      case GeogebraCommonKernelCommandsCommands_NSolutions:
      case GeogebraCommonKernelCommandsCommands_Numeric:
      case GeogebraCommonKernelCommandsCommands_MixedNumber:
      case GeogebraCommonKernelCommandsCommands_Rationalize:
      case GeogebraCommonKernelCommandsCommands_Solutions:
      case GeogebraCommonKernelCommandsCommands_Solve:
      case GeogebraCommonKernelCommandsCommands_Substitute:
      case GeogebraCommonKernelCommandsCommands_ToExponential:
      return [new_GeogebraCommonKernelCommandsCAScmdProcessor_initWithGeogebraCommonKernelKernel_(kernel_) autorelease];
      case GeogebraCommonKernelCommandsCommands_ANOVA:
      case GeogebraCommonKernelCommandsCommands_Bernoulli:
      case GeogebraCommonKernelCommandsCommands_BinomialDist:
      case GeogebraCommonKernelCommandsCommands_BoxPlot:
      case GeogebraCommonKernelCommandsCommands_Cauchy:
      case GeogebraCommonKernelCommandsCommands_Cell:
      case GeogebraCommonKernelCommandsCommands_CellRange:
      case GeogebraCommonKernelCommandsCommands_ChiSquaredTest:
      case GeogebraCommonKernelCommandsCommands_ChiSquared:
      case GeogebraCommonKernelCommandsCommands_Classes:
      case GeogebraCommonKernelCommandsCommands_Column:
      case GeogebraCommonKernelCommandsCommands_ColumnName:
      case GeogebraCommonKernelCommandsCommands_CorrelationCoefficient:
      case GeogebraCommonKernelCommandsCommands_Covariance:
      case GeogebraCommonKernelCommandsCommands_ContingencyTable:
      case GeogebraCommonKernelCommandsCommands_DotPlot:
      case GeogebraCommonKernelCommandsCommands_Erlang:
      case GeogebraCommonKernelCommandsCommands_Exponential:
      case GeogebraCommonKernelCommandsCommands_FDistribution:
      case GeogebraCommonKernelCommandsCommands_FillCells:
      case GeogebraCommonKernelCommandsCommands_FillColumn:
      case GeogebraCommonKernelCommandsCommands_FillRow:
      case GeogebraCommonKernelCommandsCommands_Fit:
      case GeogebraCommonKernelCommandsCommands_FitImplicit:
      case GeogebraCommonKernelCommandsCommands_FitExp:
      case GeogebraCommonKernelCommandsCommands_FitGrowth:
      case GeogebraCommonKernelCommandsCommands_FitLine:
      case GeogebraCommonKernelCommandsCommands_FitLineX:
      case GeogebraCommonKernelCommandsCommands_FitLineY:
      case GeogebraCommonKernelCommandsCommands_FitLog:
      case GeogebraCommonKernelCommandsCommands_FitLogistic:
      case GeogebraCommonKernelCommandsCommands_FitPoly:
      case GeogebraCommonKernelCommandsCommands_FitPow:
      case GeogebraCommonKernelCommandsCommands_FitSin:
      case GeogebraCommonKernelCommandsCommands_Frequency:
      case GeogebraCommonKernelCommandsCommands_FrequencyPolygon:
      case GeogebraCommonKernelCommandsCommands_FrequencyTable:
      case GeogebraCommonKernelCommandsCommands_Gamma:
      case GeogebraCommonKernelCommandsCommands_GeometricMean:
      case GeogebraCommonKernelCommandsCommands_HarmonicMean:
      case GeogebraCommonKernelCommandsCommands_Histogram:
      case GeogebraCommonKernelCommandsCommands_HistogramRight:
      case GeogebraCommonKernelCommandsCommands_HyperGeometric:
      case GeogebraCommonKernelCommandsCommands_InverseBinomial:
      case GeogebraCommonKernelCommandsCommands_InverseCauchy:
      case GeogebraCommonKernelCommandsCommands_InverseChiSquared:
      case GeogebraCommonKernelCommandsCommands_InverseExponential:
      case GeogebraCommonKernelCommandsCommands_InverseFDistribution:
      case GeogebraCommonKernelCommandsCommands_InverseGamma:
      case GeogebraCommonKernelCommandsCommands_InverseHyperGeometric:
      case GeogebraCommonKernelCommandsCommands_InverseLogNormal:
      case GeogebraCommonKernelCommandsCommands_InverseLogistic:
      case GeogebraCommonKernelCommandsCommands_InverseNormal:
      case GeogebraCommonKernelCommandsCommands_InversePascal:
      case GeogebraCommonKernelCommandsCommands_InversePoisson:
      case GeogebraCommonKernelCommandsCommands_InverseTDistribution:
      case GeogebraCommonKernelCommandsCommands_InverseWeibull:
      case GeogebraCommonKernelCommandsCommands_InverseZipf:
      case GeogebraCommonKernelCommandsCommands_LogNormal:
      case GeogebraCommonKernelCommandsCommands_Logistic:
      case GeogebraCommonKernelCommandsCommands_Mean:
      case GeogebraCommonKernelCommandsCommands_MeanX:
      case GeogebraCommonKernelCommandsCommands_MeanY:
      case GeogebraCommonKernelCommandsCommands_Median:
      case GeogebraCommonKernelCommandsCommands_Mode:
      case GeogebraCommonKernelCommandsCommands_Normal:
      case GeogebraCommonKernelCommandsCommands_Normalize:
      case GeogebraCommonKernelCommandsCommands_NormalQuantilePlot:
      case GeogebraCommonKernelCommandsCommands_nPr:
      case GeogebraCommonKernelCommandsCommands_OrdinalRank:
      case GeogebraCommonKernelCommandsCommands_PMCC:
      case GeogebraCommonKernelCommandsCommands_Pascal:
      case GeogebraCommonKernelCommandsCommands_Percentile:
      case GeogebraCommonKernelCommandsCommands_Poisson:
      case GeogebraCommonKernelCommandsCommands_Q1:
      case GeogebraCommonKernelCommandsCommands_Q3:
      case GeogebraCommonKernelCommandsCommands_RSquare:
      case GeogebraCommonKernelCommandsCommands_RandomElement:
      case GeogebraCommonKernelCommandsCommands_RandomPolynomial:
      case GeogebraCommonKernelCommandsCommands_RandomBinomial:
      case GeogebraCommonKernelCommandsCommands_RandomNormal:
      case GeogebraCommonKernelCommandsCommands_RandomPoisson:
      case GeogebraCommonKernelCommandsCommands_RandomUniform:
      case GeogebraCommonKernelCommandsCommands_RandomDiscrete:
      case GeogebraCommonKernelCommandsCommands_ResidualPlot:
      case GeogebraCommonKernelCommandsCommands_RootMeanSquare:
      case GeogebraCommonKernelCommandsCommands_Row:
      case GeogebraCommonKernelCommandsCommands_SD:
      case GeogebraCommonKernelCommandsCommands_SDX:
      case GeogebraCommonKernelCommandsCommands_SDY:
      case GeogebraCommonKernelCommandsCommands_SXX:
      case GeogebraCommonKernelCommandsCommands_SXY:
      case GeogebraCommonKernelCommandsCommands_SYY:
      case GeogebraCommonKernelCommandsCommands_Sample:
      case GeogebraCommonKernelCommandsCommands_SampleSD:
      case GeogebraCommonKernelCommandsCommands_SampleSDX:
      case GeogebraCommonKernelCommandsCommands_SampleSDY:
      case GeogebraCommonKernelCommandsCommands_SampleVariance:
      case GeogebraCommonKernelCommandsCommands_Shuffle:
      case GeogebraCommonKernelCommandsCommands_SigmaXX:
      case GeogebraCommonKernelCommandsCommands_SigmaXY:
      case GeogebraCommonKernelCommandsCommands_SigmaYY:
      case GeogebraCommonKernelCommandsCommands_Spearman:
      case GeogebraCommonKernelCommandsCommands_StemPlot:
      case GeogebraCommonKernelCommandsCommands_StepGraph:
      case GeogebraCommonKernelCommandsCommands_StickGraph:
      case GeogebraCommonKernelCommandsCommands_SumSquaredErrors:
      case GeogebraCommonKernelCommandsCommands_TDistribution:
      case GeogebraCommonKernelCommandsCommands_TMean2Estimate:
      case GeogebraCommonKernelCommandsCommands_TMeanEstimate:
      case GeogebraCommonKernelCommandsCommands_TTest2:
      case GeogebraCommonKernelCommandsCommands_TTest:
      case GeogebraCommonKernelCommandsCommands_TTestPaired:
      case GeogebraCommonKernelCommandsCommands_TiedRank:
      case GeogebraCommonKernelCommandsCommands_Triangular:
      case GeogebraCommonKernelCommandsCommands_Uniform:
      case GeogebraCommonKernelCommandsCommands_Variance:
      case GeogebraCommonKernelCommandsCommands_Weibull:
      case GeogebraCommonKernelCommandsCommands_ZMean2Estimate:
      case GeogebraCommonKernelCommandsCommands_ZMean2Test:
      case GeogebraCommonKernelCommandsCommands_ZMeanEstimate:
      case GeogebraCommonKernelCommandsCommands_ZMeanTest:
      case GeogebraCommonKernelCommandsCommands_ZProportion2Estimate:
      case GeogebraCommonKernelCommandsCommands_ZProportion2Test:
      case GeogebraCommonKernelCommandsCommands_ZProportionEstimate:
      case GeogebraCommonKernelCommandsCommands_ZProportionTest:
      case GeogebraCommonKernelCommandsCommands_Zipf:
      return [((GeogebraCommonKernelCommandsCommandDispatcherStats *) nil_chk(GeogebraCommonKernelCommandsCommandDispatcher_getStatsDispatcher(self))) dispatchWithGeogebraCommonKernelCommandsCommandsEnum:command withGeogebraCommonKernelKernel:kernel_];
      case GeogebraCommonKernelCommandsCommands_TriangleCenter:
      case GeogebraCommonKernelCommandsCommands_Barycenter:
      case GeogebraCommonKernelCommandsCommands_Trilinear:
      case GeogebraCommonKernelCommandsCommands_Cubic:
      case GeogebraCommonKernelCommandsCommands_TriangleCurve:
      case GeogebraCommonKernelCommandsCommands_Voronoi:
      case GeogebraCommonKernelCommandsCommands_Hull:
      case GeogebraCommonKernelCommandsCommands_ConvexHull:
      case GeogebraCommonKernelCommandsCommands_MinimumSpanningTree:
      case GeogebraCommonKernelCommandsCommands_DelauneyTriangulation:
      case GeogebraCommonKernelCommandsCommands_TravelingSalesman:
      case GeogebraCommonKernelCommandsCommands_ShortestDistance:
      return [((id<GeogebraCommonKernelCommandsCommandDispatcherInterface>) nil_chk([self getDiscreteDispatcher])) dispatchWithGeogebraCommonKernelCommandsCommandsEnum:command withGeogebraCommonKernelKernel:kernel_];
      case GeogebraCommonKernelCommandsCommands_LocusEquation:
      case GeogebraCommonKernelCommandsCommands_Envelope:
      case GeogebraCommonKernelCommandsCommands_Expand:
      case GeogebraCommonKernelCommandsCommands_Factor:
      case GeogebraCommonKernelCommandsCommands_IFactor:
      case GeogebraCommonKernelCommandsCommands_Simplify:
      case GeogebraCommonKernelCommandsCommands_SurdText:
      case GeogebraCommonKernelCommandsCommands_ParametricDerivative:
      case GeogebraCommonKernelCommandsCommands_Derivative:
      case GeogebraCommonKernelCommandsCommands_Integral:
      case GeogebraCommonKernelCommandsCommands_IntegralBetween:
      case GeogebraCommonKernelCommandsCommands_NIntegral:
      case GeogebraCommonKernelCommandsCommands_TrigExpand:
      case GeogebraCommonKernelCommandsCommands_TrigSimplify:
      case GeogebraCommonKernelCommandsCommands_TrigCombine:
      case GeogebraCommonKernelCommandsCommands_Limit:
      case GeogebraCommonKernelCommandsCommands_LimitBelow:
      case GeogebraCommonKernelCommandsCommands_LimitAbove:
      case GeogebraCommonKernelCommandsCommands_Degree:
      case GeogebraCommonKernelCommandsCommands_Coefficients:
      case GeogebraCommonKernelCommandsCommands_PartialFractions:
      case GeogebraCommonKernelCommandsCommands_SolveODE:
      case GeogebraCommonKernelCommandsCommands_ImplicitDerivative:
      case GeogebraCommonKernelCommandsCommands_NextPrime:
      case GeogebraCommonKernelCommandsCommands_PreviousPrime:
      return [((id<GeogebraCommonKernelCommandsCommandDispatcherInterface>) nil_chk([self getCASDispatcher])) dispatchWithGeogebraCommonKernelCommandsCommandsEnum:command withGeogebraCommonKernelKernel:kernel_];
      default:
      GeogebraCommonUtilDebugLog_errorWithNSString_(JreStrcat("$$", @"missing case in CommandDispatcher ", cmdName));
      return nil;
    }
  }
  @catch (JavaLangException *e) {
    GeogebraCommonUtilDebugLog_warnWithNSString_(JreStrcat("$$", @"command not found / CAS command called:", cmdName));
  }
  return nil;
}

- (GeogebraCommonKernelCommandsCommandDispatcherStats *)getStatsDispatcher {
  return GeogebraCommonKernelCommandsCommandDispatcher_getStatsDispatcher(self);
}

- (id<GeogebraCommonKernelCommandsCommandDispatcherInterface>)getDiscreteDispatcher {
  if (discreteDispatcher_ == nil) {
    GeogebraCommonKernelCommandsCommandDispatcher_setAndConsume_discreteDispatcher_(self, new_GeogebraCommonKernelCommandsCommandDispatcherDiscrete_init());
  }
  return discreteDispatcher_;
}

- (id<GeogebraCommonKernelCommandsCommandDispatcherInterface>)getCASDispatcher {
  if (casDispatcher_ == nil) {
    GeogebraCommonKernelCommandsCommandDispatcher_setAndConsume_casDispatcher_(self, new_GeogebraCommonKernelCommandsCommandDispatcherCAS_init());
  }
  return casDispatcher_;
}

- (id<GeogebraCommonKernelCommandsCommandDispatcherInterface>)getScriptingDispatcher {
  if (scriptingDispatcher_ == nil) {
    GeogebraCommonKernelCommandsCommandDispatcher_setAndConsume_scriptingDispatcher_(self, new_GeogebraCommonKernelCommandsCommandDispatcherScripting_init());
  }
  return scriptingDispatcher_;
}

- (id<GeogebraCommonKernelCommandsCommandDispatcherInterface>)getAdvancedDispatcher {
  if (advancedDispatcher_ == nil) {
    GeogebraCommonKernelCommandsCommandDispatcher_setAndConsume_advancedDispatcher_(self, new_GeogebraCommonKernelCommandsCommandDispatcherAdvanced_init());
  }
  return advancedDispatcher_;
}

- (GeogebraCommonKernelCommandsCommandDispatcherBasic *)getBasicDispatcher {
  return GeogebraCommonKernelCommandsCommandDispatcher_getBasicDispatcher(self);
}

- (void)dealloc {
  RELEASE_(kernel_);
  RELEASE_(cons_);
  RELEASE_(app_);
  RELEASE_(cmdTable_);
  RELEASE_(casTable_);
  RELEASE_(internalCmdTable_);
  RELEASE_(macroProc_);
  RELEASE_(statsDispatcher_);
  RELEASE_(discreteDispatcher_);
  RELEASE_(casDispatcher_);
  RELEASE_(scriptingDispatcher_);
  RELEASE_(advancedDispatcher_);
  RELEASE_(basicDispatcher_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "getSubCommandSetNameWithInt:", "getSubCommandSetName", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "initWithGeogebraCommonKernelKernel:", "CommandDispatcher", NULL, 0x1, NULL, NULL },
    { "isCommandAvailableWithNSString:", "isCommandAvailable", "Z", 0x1, NULL, NULL },
    { "processCommandWithGeogebraCommonKernelArithmeticCommand:withBoolean:", "processCommand", "[Lgeogebra.common.kernel.geos.GeoElement;", 0x11, "Lgeogebra.common.main.MyError;", NULL },
    { "initCmdTable", NULL, "V", 0x4, NULL, NULL },
    { "initCASCommands", NULL, "V", 0x1, NULL, NULL },
    { "fillInternalCmdTable", NULL, "V", 0x4, NULL, NULL },
    { "commandTableSwitchWithNSString:", "commandTableSwitch", "Lgeogebra.common.kernel.commands.CommandProcessor;", 0x1, NULL, NULL },
    { "getStatsDispatcher", NULL, "Lgeogebra.common.kernel.commands.CommandDispatcherStats;", 0x2, NULL, NULL },
    { "getDiscreteDispatcher", NULL, "Lgeogebra.common.kernel.commands.CommandDispatcherInterface;", 0x4, NULL, NULL },
    { "getCASDispatcher", NULL, "Lgeogebra.common.kernel.commands.CommandDispatcherInterface;", 0x4, NULL, NULL },
    { "getScriptingDispatcher", NULL, "Lgeogebra.common.kernel.commands.CommandDispatcherInterface;", 0x4, NULL, NULL },
    { "getAdvancedDispatcher", NULL, "Lgeogebra.common.kernel.commands.CommandDispatcherInterface;", 0x4, NULL, NULL },
    { "getBasicDispatcher", NULL, "Lgeogebra.common.kernel.commands.CommandDispatcherBasic;", 0x2, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "kernel_", NULL, 0x4, "Lgeogebra.common.kernel.Kernel;", NULL, NULL,  },
    { "cons_", NULL, 0x2, "Lgeogebra.common.kernel.Construction;", NULL, NULL,  },
    { "app_", NULL, 0x2, "Lgeogebra.common.main.App;", NULL, NULL,  },
    { "isCasActive_", NULL, 0x2, "Z", NULL, NULL,  },
    { "cmdTable_", NULL, 0x4, "Ljava.util.HashMap;", NULL, "Ljava/util/HashMap<Ljava/lang/String;Lgeogebra/common/kernel/commands/CommandProcessor;>;",  },
    { "casTable_", NULL, 0x4, "Ljava.util.HashMap;", NULL, "Ljava/util/HashMap<Ljava/lang/String;Lgeogebra/common/kernel/commands/CommandProcessor;>;",  },
    { "tableCount_", NULL, 0x19, "I", NULL, NULL, .constantValue.asInt = GeogebraCommonKernelCommandsCommandDispatcher_tableCount },
    { "internalCmdTable_", NULL, 0x4, "Ljava.util.HashMap;", NULL, "Ljava/util/HashMap<Ljava/lang/String;Lgeogebra/common/kernel/commands/CommandProcessor;>;",  },
    { "macroProc_", NULL, 0x2, "Lgeogebra.common.kernel.commands.MacroProcessor;", NULL, NULL,  },
    { "statsDispatcher_", NULL, 0x2, "Lgeogebra.common.kernel.commands.CommandDispatcherStats;", NULL, NULL,  },
    { "discreteDispatcher_", NULL, 0x4, "Lgeogebra.common.kernel.commands.CommandDispatcherInterface;", NULL, NULL,  },
    { "casDispatcher_", NULL, 0x4, "Lgeogebra.common.kernel.commands.CommandDispatcherInterface;", NULL, NULL,  },
    { "scriptingDispatcher_", NULL, 0x4, "Lgeogebra.common.kernel.commands.CommandDispatcherInterface;", NULL, NULL,  },
    { "advancedDispatcher_", NULL, 0x4, "Lgeogebra.common.kernel.commands.CommandDispatcherInterface;", NULL, NULL,  },
    { "basicDispatcher_", NULL, 0x2, "Lgeogebra.common.kernel.commands.CommandDispatcherBasic;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelCommandsCommandDispatcher = { 2, "CommandDispatcher", "geogebra.common.kernel.commands", NULL, 0x401, 14, methods, 15, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelCommandsCommandDispatcher;
}

@end

void GeogebraCommonKernelCommandsCommandDispatcher_initWithGeogebraCommonKernelKernel_(GeogebraCommonKernelCommandsCommandDispatcher *self, GeogebraCommonKernelKernel *kernel2) {
  NSObject_init(self);
  self->isCasActive_ = NO;
  GeogebraCommonKernelCommandsCommandDispatcher_set_statsDispatcher_(self, nil);
  GeogebraCommonKernelCommandsCommandDispatcher_set_discreteDispatcher_(self, nil);
  GeogebraCommonKernelCommandsCommandDispatcher_set_casDispatcher_(self, nil);
  GeogebraCommonKernelCommandsCommandDispatcher_set_scriptingDispatcher_(self, nil);
  GeogebraCommonKernelCommandsCommandDispatcher_set_advancedDispatcher_(self, nil);
  GeogebraCommonKernelCommandsCommandDispatcher_set_basicDispatcher_(self, nil);
  GeogebraCommonKernelCommandsCommandDispatcher_set_kernel_(self, kernel2);
  GeogebraCommonKernelCommandsCommandDispatcher_set_cons_(self, [((GeogebraCommonKernelKernel *) nil_chk(kernel2)) getConstruction]);
  GeogebraCommonKernelCommandsCommandDispatcher_set_app_(self, [kernel2 getApplication]);
}

GeogebraCommonKernelCommandsCommandDispatcherStats *GeogebraCommonKernelCommandsCommandDispatcher_getStatsDispatcher(GeogebraCommonKernelCommandsCommandDispatcher *self) {
  if (self->statsDispatcher_ == nil) {
    GeogebraCommonKernelCommandsCommandDispatcher_setAndConsume_statsDispatcher_(self, new_GeogebraCommonKernelCommandsCommandDispatcherStats_init());
  }
  return self->statsDispatcher_;
}

GeogebraCommonKernelCommandsCommandDispatcherBasic *GeogebraCommonKernelCommandsCommandDispatcher_getBasicDispatcher(GeogebraCommonKernelCommandsCommandDispatcher *self) {
  if (self->basicDispatcher_ == nil) {
    GeogebraCommonKernelCommandsCommandDispatcher_setAndConsume_basicDispatcher_(self, new_GeogebraCommonKernelCommandsCommandDispatcherBasic_init());
  }
  return self->basicDispatcher_;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelCommandsCommandDispatcher)
