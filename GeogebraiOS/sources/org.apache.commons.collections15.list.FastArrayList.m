//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/org/apache/commons/collections15/list/FastArrayList.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/IllegalStateException.h"
#include "java/lang/StringBuffer.h"
#include "java/util/ArrayList.h"
#include "java/util/Collection.h"
#include "java/util/ConcurrentModificationException.h"
#include "java/util/Iterator.h"
#include "java/util/List.h"
#include "java/util/ListIterator.h"
#include "org/apache/commons/collections15/list/FastArrayList.h"

@interface OrgApacheCommonsCollections15ListFastArrayList_SubList : NSObject < JavaUtilList > {
 @public
  OrgApacheCommonsCollections15ListFastArrayList *this$0_;
  jint first_;
  jint last_;
  id<JavaUtilList> expected_;
}

- (instancetype)initWithOrgApacheCommonsCollections15ListFastArrayList:(OrgApacheCommonsCollections15ListFastArrayList *)outer$
                                                               withInt:(jint)first
                                                               withInt:(jint)last;

- (id<JavaUtilList>)getWithJavaUtilList:(id<JavaUtilList>)l;

- (void)clear;

- (jboolean)removeWithId:(id)o;

- (jboolean)removeAllWithJavaUtilCollection:(id<JavaUtilCollection>)o;

- (jboolean)retainAllWithJavaUtilCollection:(id<JavaUtilCollection>)o;

- (jint)size;

- (jboolean)isEmpty;

- (jboolean)containsWithId:(id)o;

- (jboolean)containsAllWithJavaUtilCollection:(id<JavaUtilCollection>)o;

- (IOSObjectArray *)toArrayWithNSObjectArray:(IOSObjectArray *)o;

- (IOSObjectArray *)toArray;

- (jboolean)isEqual:(id)o;

- (NSUInteger)hash;

- (jboolean)addWithId:(id)o;

- (jboolean)addAllWithJavaUtilCollection:(id<JavaUtilCollection>)o;

- (void)addWithInt:(jint)i
            withId:(id)o;

- (jboolean)addAllWithInt:(jint)i
   withJavaUtilCollection:(id<JavaUtilCollection>)o;

- (id)removeWithInt:(jint)i;

- (id)setWithInt:(jint)i
          withId:(id)a;

- (id<JavaUtilIterator>)iterator;

- (id<JavaUtilListIterator>)listIterator;

- (id<JavaUtilListIterator>)listIteratorWithInt:(jint)i;

- (id)getWithInt:(jint)i;

- (jint)indexOfWithId:(id)o;

- (jint)lastIndexOfWithId:(id)o;

- (id<JavaUtilList>)subListWithInt:(jint)f
                           withInt:(jint)l;


@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheCommonsCollections15ListFastArrayList_SubList)

J2OBJC_FIELD_SETTER(OrgApacheCommonsCollections15ListFastArrayList_SubList, this$0_, OrgApacheCommonsCollections15ListFastArrayList *)
J2OBJC_FIELD_SETTER(OrgApacheCommonsCollections15ListFastArrayList_SubList, expected_, id<JavaUtilList>)

__attribute__((unused)) static void OrgApacheCommonsCollections15ListFastArrayList_SubList_initWithOrgApacheCommonsCollections15ListFastArrayList_withInt_withInt_(OrgApacheCommonsCollections15ListFastArrayList_SubList *self, OrgApacheCommonsCollections15ListFastArrayList *outer$, jint first, jint last);

__attribute__((unused)) static OrgApacheCommonsCollections15ListFastArrayList_SubList *new_OrgApacheCommonsCollections15ListFastArrayList_SubList_initWithOrgApacheCommonsCollections15ListFastArrayList_withInt_withInt_(OrgApacheCommonsCollections15ListFastArrayList *outer$, jint first, jint last) NS_RETURNS_RETAINED;

__attribute__((unused)) static id<JavaUtilList> OrgApacheCommonsCollections15ListFastArrayList_SubList_getWithJavaUtilList_(OrgApacheCommonsCollections15ListFastArrayList_SubList *self, id<JavaUtilList> l);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheCommonsCollections15ListFastArrayList_SubList)

@interface OrgApacheCommonsCollections15ListFastArrayList_SubList_SubListIter : NSObject < JavaUtilListIterator > {
 @public
  OrgApacheCommonsCollections15ListFastArrayList_SubList *this$0_;
  id<JavaUtilList> expected1_;
  id<JavaUtilListIterator> iter_;
  jint lastReturnedIndex_;
}

- (instancetype)initWithOrgApacheCommonsCollections15ListFastArrayList_SubList:(OrgApacheCommonsCollections15ListFastArrayList_SubList *)outer$
                                                                       withInt:(jint)i;

- (void)checkMod;

- (id<JavaUtilList>)get;

- (jboolean)hasNext;

- (id)next;

- (jboolean)hasPrevious;

- (id)previous;

- (jint)previousIndex;

- (jint)nextIndex;

- (void)remove;

- (void)setWithId:(id)o;

- (void)addWithId:(id)o;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheCommonsCollections15ListFastArrayList_SubList_SubListIter)

J2OBJC_FIELD_SETTER(OrgApacheCommonsCollections15ListFastArrayList_SubList_SubListIter, this$0_, OrgApacheCommonsCollections15ListFastArrayList_SubList *)
J2OBJC_FIELD_SETTER(OrgApacheCommonsCollections15ListFastArrayList_SubList_SubListIter, expected1_, id<JavaUtilList>)
J2OBJC_FIELD_SETTER(OrgApacheCommonsCollections15ListFastArrayList_SubList_SubListIter, iter_, id<JavaUtilListIterator>)

__attribute__((unused)) static void OrgApacheCommonsCollections15ListFastArrayList_SubList_SubListIter_initWithOrgApacheCommonsCollections15ListFastArrayList_SubList_withInt_(OrgApacheCommonsCollections15ListFastArrayList_SubList_SubListIter *self, OrgApacheCommonsCollections15ListFastArrayList_SubList *outer$, jint i);

__attribute__((unused)) static OrgApacheCommonsCollections15ListFastArrayList_SubList_SubListIter *new_OrgApacheCommonsCollections15ListFastArrayList_SubList_SubListIter_initWithOrgApacheCommonsCollections15ListFastArrayList_SubList_withInt_(OrgApacheCommonsCollections15ListFastArrayList_SubList *outer$, jint i) NS_RETURNS_RETAINED;

__attribute__((unused)) static void OrgApacheCommonsCollections15ListFastArrayList_SubList_SubListIter_checkMod(OrgApacheCommonsCollections15ListFastArrayList_SubList_SubListIter *self);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheCommonsCollections15ListFastArrayList_SubList_SubListIter)

@interface OrgApacheCommonsCollections15ListFastArrayList_ListIter : NSObject < JavaUtilListIterator > {
 @public
  OrgApacheCommonsCollections15ListFastArrayList *this$0_;
  id<JavaUtilList> expected_;
  id<JavaUtilListIterator> iter_;
  jint lastReturnedIndex_;
}

- (instancetype)initWithOrgApacheCommonsCollections15ListFastArrayList:(OrgApacheCommonsCollections15ListFastArrayList *)outer$
                                                               withInt:(jint)i;

- (void)checkMod;

- (id<JavaUtilList>)get;

- (jboolean)hasNext;

- (id)next;

- (jboolean)hasPrevious;

- (id)previous;

- (jint)previousIndex;

- (jint)nextIndex;

- (void)remove;

- (void)setWithId:(id)o;

- (void)addWithId:(id)o;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheCommonsCollections15ListFastArrayList_ListIter)

J2OBJC_FIELD_SETTER(OrgApacheCommonsCollections15ListFastArrayList_ListIter, this$0_, OrgApacheCommonsCollections15ListFastArrayList *)
J2OBJC_FIELD_SETTER(OrgApacheCommonsCollections15ListFastArrayList_ListIter, expected_, id<JavaUtilList>)
J2OBJC_FIELD_SETTER(OrgApacheCommonsCollections15ListFastArrayList_ListIter, iter_, id<JavaUtilListIterator>)

__attribute__((unused)) static void OrgApacheCommonsCollections15ListFastArrayList_ListIter_initWithOrgApacheCommonsCollections15ListFastArrayList_withInt_(OrgApacheCommonsCollections15ListFastArrayList_ListIter *self, OrgApacheCommonsCollections15ListFastArrayList *outer$, jint i);

__attribute__((unused)) static OrgApacheCommonsCollections15ListFastArrayList_ListIter *new_OrgApacheCommonsCollections15ListFastArrayList_ListIter_initWithOrgApacheCommonsCollections15ListFastArrayList_withInt_(OrgApacheCommonsCollections15ListFastArrayList *outer$, jint i) NS_RETURNS_RETAINED;

__attribute__((unused)) static void OrgApacheCommonsCollections15ListFastArrayList_ListIter_checkMod(OrgApacheCommonsCollections15ListFastArrayList_ListIter *self);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheCommonsCollections15ListFastArrayList_ListIter)

@implementation OrgApacheCommonsCollections15ListFastArrayList

- (instancetype)init {
  OrgApacheCommonsCollections15ListFastArrayList_init(self);
  return self;
}

- (instancetype)initWithInt:(jint)capacity {
  OrgApacheCommonsCollections15ListFastArrayList_initWithInt_(self, capacity);
  return self;
}

- (instancetype)initWithJavaUtilCollection:(id<JavaUtilCollection>)collection {
  OrgApacheCommonsCollections15ListFastArrayList_initWithJavaUtilCollection_(self, collection);
  return self;
}

- (jboolean)getFast {
  return (self->fast_);
}

- (void)setFastWithBoolean:(jboolean)fast {
  self->fast_ = fast;
}

- (jboolean)addWithId:(id)element {
  if (fast_) {
    @synchronized(self) {
      JavaUtilArrayList *temp = (JavaUtilArrayList *) check_class_cast([((JavaUtilArrayList *) nil_chk(list_)) clone], [JavaUtilArrayList class]);
      jboolean result = [((JavaUtilArrayList *) nil_chk(temp)) addWithId:element];
      OrgApacheCommonsCollections15ListFastArrayList_set_list_(self, temp);
      return (result);
    }
  }
  else {
    @synchronized(list_) {
      return ([((JavaUtilArrayList *) nil_chk(list_)) addWithId:element]);
    }
  }
}

- (void)addWithInt:(jint)index
            withId:(id)element {
  if (fast_) {
    @synchronized(self) {
      JavaUtilArrayList *temp = (JavaUtilArrayList *) check_class_cast([((JavaUtilArrayList *) nil_chk(list_)) clone], [JavaUtilArrayList class]);
      [((JavaUtilArrayList *) nil_chk(temp)) addWithInt:index withId:element];
      OrgApacheCommonsCollections15ListFastArrayList_set_list_(self, temp);
    }
  }
  else {
    @synchronized(list_) {
      [((JavaUtilArrayList *) nil_chk(list_)) addWithInt:index withId:element];
    }
  }
}

- (jboolean)addAllWithJavaUtilCollection:(id<JavaUtilCollection>)collection {
  if (fast_) {
    @synchronized(self) {
      JavaUtilArrayList *temp = (JavaUtilArrayList *) check_class_cast([((JavaUtilArrayList *) nil_chk(list_)) clone], [JavaUtilArrayList class]);
      jboolean result = [((JavaUtilArrayList *) nil_chk(temp)) addAllWithJavaUtilCollection:collection];
      OrgApacheCommonsCollections15ListFastArrayList_set_list_(self, temp);
      return (result);
    }
  }
  else {
    @synchronized(list_) {
      return ([((JavaUtilArrayList *) nil_chk(list_)) addAllWithJavaUtilCollection:collection]);
    }
  }
}

- (jboolean)addAllWithInt:(jint)index
   withJavaUtilCollection:(id<JavaUtilCollection>)collection {
  if (fast_) {
    @synchronized(self) {
      JavaUtilArrayList *temp = (JavaUtilArrayList *) check_class_cast([((JavaUtilArrayList *) nil_chk(list_)) clone], [JavaUtilArrayList class]);
      jboolean result = [((JavaUtilArrayList *) nil_chk(temp)) addAllWithInt:index withJavaUtilCollection:collection];
      OrgApacheCommonsCollections15ListFastArrayList_set_list_(self, temp);
      return (result);
    }
  }
  else {
    @synchronized(list_) {
      return ([((JavaUtilArrayList *) nil_chk(list_)) addAllWithInt:index withJavaUtilCollection:collection]);
    }
  }
}

- (void)clear {
  if (fast_) {
    @synchronized(self) {
      JavaUtilArrayList *temp = (JavaUtilArrayList *) check_class_cast([((JavaUtilArrayList *) nil_chk(list_)) clone], [JavaUtilArrayList class]);
      [((JavaUtilArrayList *) nil_chk(temp)) clear];
      OrgApacheCommonsCollections15ListFastArrayList_set_list_(self, temp);
    }
  }
  else {
    @synchronized(list_) {
      [((JavaUtilArrayList *) nil_chk(list_)) clear];
    }
  }
}

- (id)clone {
  OrgApacheCommonsCollections15ListFastArrayList *results = nil;
  if (fast_) {
    results = [new_OrgApacheCommonsCollections15ListFastArrayList_initWithJavaUtilCollection_(list_) autorelease];
  }
  else {
    @synchronized(list_) {
      results = [new_OrgApacheCommonsCollections15ListFastArrayList_initWithJavaUtilCollection_(list_) autorelease];
    }
  }
  [((OrgApacheCommonsCollections15ListFastArrayList *) nil_chk(results)) setFastWithBoolean:[self getFast]];
  return (results);
}

- (jboolean)containsWithId:(id)element {
  if (fast_) {
    return ([((JavaUtilArrayList *) nil_chk(list_)) containsWithId:element]);
  }
  else {
    @synchronized(list_) {
      return ([((JavaUtilArrayList *) nil_chk(list_)) containsWithId:element]);
    }
  }
}

- (jboolean)containsAllWithJavaUtilCollection:(id<JavaUtilCollection>)collection {
  if (fast_) {
    return ([((JavaUtilArrayList *) nil_chk(list_)) containsAllWithJavaUtilCollection:collection]);
  }
  else {
    @synchronized(list_) {
      return ([((JavaUtilArrayList *) nil_chk(list_)) containsAllWithJavaUtilCollection:collection]);
    }
  }
}

- (void)ensureCapacityWithInt:(jint)capacity {
  if (fast_) {
    @synchronized(self) {
      JavaUtilArrayList *temp = (JavaUtilArrayList *) check_class_cast([((JavaUtilArrayList *) nil_chk(list_)) clone], [JavaUtilArrayList class]);
      [((JavaUtilArrayList *) nil_chk(temp)) ensureCapacityWithInt:capacity];
      OrgApacheCommonsCollections15ListFastArrayList_set_list_(self, temp);
    }
  }
  else {
    @synchronized(list_) {
      [((JavaUtilArrayList *) nil_chk(list_)) ensureCapacityWithInt:capacity];
    }
  }
}

- (jboolean)isEqual:(id)o {
  if (o == self) return YES;
  else if (!([JavaUtilList_class_() isInstance:o])) return NO;
  id<JavaUtilList> lo = (id<JavaUtilList>) check_protocol_cast(o, @protocol(JavaUtilList));
  if (fast_) {
    id<JavaUtilListIterator> li1 = [((JavaUtilArrayList *) nil_chk(list_)) listIterator];
    id<JavaUtilListIterator> li2 = [((id<JavaUtilList>) nil_chk(lo)) listIterator];
    while ([((id<JavaUtilListIterator>) nil_chk(li1)) hasNext] && [((id<JavaUtilListIterator>) nil_chk(li2)) hasNext]) {
      id o1 = [li1 next];
      id o2 = [((id<JavaUtilListIterator>) nil_chk(li2)) next];
      if (!(o1 == nil ? o2 == nil : [o1 isEqual:o2])) return NO;
    }
    return (!([li1 hasNext] || [((id<JavaUtilListIterator>) nil_chk(li2)) hasNext]));
  }
  else {
    @synchronized(list_) {
      id<JavaUtilListIterator> li1 = [((JavaUtilArrayList *) nil_chk(list_)) listIterator];
      id<JavaUtilListIterator> li2 = [((id<JavaUtilList>) nil_chk(lo)) listIterator];
      while ([((id<JavaUtilListIterator>) nil_chk(li1)) hasNext] && [((id<JavaUtilListIterator>) nil_chk(li2)) hasNext]) {
        id o1 = [li1 next];
        id o2 = [((id<JavaUtilListIterator>) nil_chk(li2)) next];
        if (!(o1 == nil ? o2 == nil : [o1 isEqual:o2])) return NO;
      }
      return (!([li1 hasNext] || [((id<JavaUtilListIterator>) nil_chk(li2)) hasNext]));
    }
  }
}

- (id)getWithInt:(jint)index {
  if (fast_) {
    return ([((JavaUtilArrayList *) nil_chk(list_)) getWithInt:index]);
  }
  else {
    @synchronized(list_) {
      return ([((JavaUtilArrayList *) nil_chk(list_)) getWithInt:index]);
    }
  }
}

- (NSUInteger)hash {
  if (fast_) {
    jint hashCode = 1;
    id<JavaUtilIterator> i = [((JavaUtilArrayList *) nil_chk(list_)) iterator];
    while ([((id<JavaUtilIterator>) nil_chk(i)) hasNext]) {
      id o = [i next];
      hashCode = 31 * hashCode + (o == nil ? 0 : ((jint) [o hash]));
    }
    return (hashCode);
  }
  else {
    @synchronized(list_) {
      jint hashCode = 1;
      id<JavaUtilIterator> i = [((JavaUtilArrayList *) nil_chk(list_)) iterator];
      while ([((id<JavaUtilIterator>) nil_chk(i)) hasNext]) {
        id o = [i next];
        hashCode = 31 * hashCode + (o == nil ? 0 : ((jint) [o hash]));
      }
      return (hashCode);
    }
  }
}

- (jint)indexOfWithId:(id)element {
  if (fast_) {
    return ([((JavaUtilArrayList *) nil_chk(list_)) indexOfWithId:element]);
  }
  else {
    @synchronized(list_) {
      return ([((JavaUtilArrayList *) nil_chk(list_)) indexOfWithId:element]);
    }
  }
}

- (jboolean)isEmpty {
  if (fast_) {
    return ([((JavaUtilArrayList *) nil_chk(list_)) isEmpty]);
  }
  else {
    @synchronized(list_) {
      return ([((JavaUtilArrayList *) nil_chk(list_)) isEmpty]);
    }
  }
}

- (id<JavaUtilIterator>)iterator {
  if (fast_) {
    return [new_OrgApacheCommonsCollections15ListFastArrayList_ListIter_initWithOrgApacheCommonsCollections15ListFastArrayList_withInt_(self, 0) autorelease];
  }
  else {
    return [((JavaUtilArrayList *) nil_chk(list_)) iterator];
  }
}

- (jint)lastIndexOfWithId:(id)element {
  if (fast_) {
    return ([((JavaUtilArrayList *) nil_chk(list_)) lastIndexOfWithId:element]);
  }
  else {
    @synchronized(list_) {
      return ([((JavaUtilArrayList *) nil_chk(list_)) lastIndexOfWithId:element]);
    }
  }
}

- (id<JavaUtilListIterator>)listIterator {
  if (fast_) {
    return [new_OrgApacheCommonsCollections15ListFastArrayList_ListIter_initWithOrgApacheCommonsCollections15ListFastArrayList_withInt_(self, 0) autorelease];
  }
  else {
    return [((JavaUtilArrayList *) nil_chk(list_)) listIterator];
  }
}

- (id<JavaUtilListIterator>)listIteratorWithInt:(jint)index {
  if (fast_) {
    return [new_OrgApacheCommonsCollections15ListFastArrayList_ListIter_initWithOrgApacheCommonsCollections15ListFastArrayList_withInt_(self, index) autorelease];
  }
  else {
    return [((JavaUtilArrayList *) nil_chk(list_)) listIteratorWithInt:index];
  }
}

- (id)removeWithInt:(jint)index {
  if (fast_) {
    @synchronized(self) {
      JavaUtilArrayList *temp = (JavaUtilArrayList *) check_class_cast([((JavaUtilArrayList *) nil_chk(list_)) clone], [JavaUtilArrayList class]);
      id result = [((JavaUtilArrayList *) nil_chk(temp)) removeWithInt:index];
      OrgApacheCommonsCollections15ListFastArrayList_set_list_(self, temp);
      return (result);
    }
  }
  else {
    @synchronized(list_) {
      return ([((JavaUtilArrayList *) nil_chk(list_)) removeWithInt:index]);
    }
  }
}

- (jboolean)removeWithId:(id)element {
  if (fast_) {
    @synchronized(self) {
      JavaUtilArrayList *temp = (JavaUtilArrayList *) check_class_cast([((JavaUtilArrayList *) nil_chk(list_)) clone], [JavaUtilArrayList class]);
      jboolean result = [((JavaUtilArrayList *) nil_chk(temp)) removeWithId:element];
      OrgApacheCommonsCollections15ListFastArrayList_set_list_(self, temp);
      return (result);
    }
  }
  else {
    @synchronized(list_) {
      return ([((JavaUtilArrayList *) nil_chk(list_)) removeWithId:element]);
    }
  }
}

- (jboolean)removeAllWithJavaUtilCollection:(id<JavaUtilCollection>)collection {
  if (fast_) {
    @synchronized(self) {
      JavaUtilArrayList *temp = (JavaUtilArrayList *) check_class_cast([((JavaUtilArrayList *) nil_chk(list_)) clone], [JavaUtilArrayList class]);
      jboolean result = [((JavaUtilArrayList *) nil_chk(temp)) removeAllWithJavaUtilCollection:collection];
      OrgApacheCommonsCollections15ListFastArrayList_set_list_(self, temp);
      return (result);
    }
  }
  else {
    @synchronized(list_) {
      return ([((JavaUtilArrayList *) nil_chk(list_)) removeAllWithJavaUtilCollection:collection]);
    }
  }
}

- (jboolean)retainAllWithJavaUtilCollection:(id<JavaUtilCollection>)collection {
  if (fast_) {
    @synchronized(self) {
      JavaUtilArrayList *temp = (JavaUtilArrayList *) check_class_cast([((JavaUtilArrayList *) nil_chk(list_)) clone], [JavaUtilArrayList class]);
      jboolean result = [((JavaUtilArrayList *) nil_chk(temp)) retainAllWithJavaUtilCollection:collection];
      OrgApacheCommonsCollections15ListFastArrayList_set_list_(self, temp);
      return (result);
    }
  }
  else {
    @synchronized(list_) {
      return ([((JavaUtilArrayList *) nil_chk(list_)) retainAllWithJavaUtilCollection:collection]);
    }
  }
}

- (id)setWithInt:(jint)index
          withId:(id)element {
  if (fast_) {
    return ([((JavaUtilArrayList *) nil_chk(list_)) setWithInt:index withId:element]);
  }
  else {
    @synchronized(list_) {
      return ([((JavaUtilArrayList *) nil_chk(list_)) setWithInt:index withId:element]);
    }
  }
}

- (jint)size {
  if (fast_) {
    return ([((JavaUtilArrayList *) nil_chk(list_)) size]);
  }
  else {
    @synchronized(list_) {
      return ([((JavaUtilArrayList *) nil_chk(list_)) size]);
    }
  }
}

- (id<JavaUtilList>)subListWithInt:(jint)fromIndex
                           withInt:(jint)toIndex {
  if (fast_) {
    return [new_OrgApacheCommonsCollections15ListFastArrayList_SubList_initWithOrgApacheCommonsCollections15ListFastArrayList_withInt_withInt_(self, fromIndex, toIndex) autorelease];
  }
  else {
    return [((JavaUtilArrayList *) nil_chk(list_)) subListWithInt:fromIndex withInt:toIndex];
  }
}

- (IOSObjectArray *)toArray {
  if (fast_) {
    return ([((JavaUtilArrayList *) nil_chk(list_)) toArray]);
  }
  else {
    @synchronized(list_) {
      return ([((JavaUtilArrayList *) nil_chk(list_)) toArray]);
    }
  }
}

- (IOSObjectArray *)toArrayWithNSObjectArray:(IOSObjectArray *)array {
  if (fast_) {
    return ([((JavaUtilArrayList *) nil_chk(list_)) toArrayWithNSObjectArray:array]);
  }
  else {
    @synchronized(list_) {
      return ([((JavaUtilArrayList *) nil_chk(list_)) toArrayWithNSObjectArray:array]);
    }
  }
}

- (NSString *)description {
  JavaLangStringBuffer *sb = [new_JavaLangStringBuffer_initWithNSString_(@"FastArrayList[") autorelease];
  [sb appendWithNSString:[((JavaUtilArrayList *) nil_chk(list_)) description]];
  [sb appendWithNSString:@"]"];
  return ([sb description]);
}

- (void)trimToSize {
  if (fast_) {
    @synchronized(self) {
      JavaUtilArrayList *temp = (JavaUtilArrayList *) check_class_cast([((JavaUtilArrayList *) nil_chk(list_)) clone], [JavaUtilArrayList class]);
      [((JavaUtilArrayList *) nil_chk(temp)) trimToSize];
      OrgApacheCommonsCollections15ListFastArrayList_set_list_(self, temp);
    }
  }
  else {
    @synchronized(list_) {
      [((JavaUtilArrayList *) nil_chk(list_)) trimToSize];
    }
  }
}

- (void)dealloc {
  RELEASE_(list_);
  [super dealloc];
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "FastArrayList", NULL, 0x1, NULL, NULL },
    { "initWithInt:", "FastArrayList", NULL, 0x1, NULL, NULL },
    { "initWithJavaUtilCollection:", "FastArrayList", NULL, 0x1, NULL, NULL },
    { "getFast", NULL, "Z", 0x1, NULL, NULL },
    { "setFastWithBoolean:", "setFast", "V", 0x1, NULL, NULL },
    { "addWithId:", "add", "Z", 0x1, NULL, "(TE;)Z" },
    { "addWithInt:withId:", "add", "V", 0x1, NULL, "(ITE;)V" },
    { "addAllWithJavaUtilCollection:", "addAll", "Z", 0x1, NULL, NULL },
    { "addAllWithInt:withJavaUtilCollection:", "addAll", "Z", 0x1, NULL, NULL },
    { "clear", NULL, "V", 0x1, NULL, NULL },
    { "clone", NULL, "Ljava.lang.Object;", 0x1, NULL, NULL },
    { "containsWithId:", "contains", "Z", 0x1, NULL, NULL },
    { "containsAllWithJavaUtilCollection:", "containsAll", "Z", 0x1, NULL, NULL },
    { "ensureCapacityWithInt:", "ensureCapacity", "V", 0x1, NULL, NULL },
    { "isEqual:", "equals", "Z", 0x1, NULL, NULL },
    { "getWithInt:", "get", "TE;", 0x1, NULL, "(I)TE;" },
    { "hash", "hashCode", "I", 0x1, NULL, NULL },
    { "indexOfWithId:", "indexOf", "I", 0x1, NULL, NULL },
    { "isEmpty", NULL, "Z", 0x1, NULL, NULL },
    { "iterator", NULL, "Ljava.util.Iterator;", 0x1, NULL, NULL },
    { "lastIndexOfWithId:", "lastIndexOf", "I", 0x1, NULL, NULL },
    { "listIterator", NULL, "Ljava.util.ListIterator;", 0x1, NULL, NULL },
    { "listIteratorWithInt:", "listIterator", "Ljava.util.ListIterator;", 0x1, NULL, NULL },
    { "removeWithInt:", "remove", "TE;", 0x1, NULL, "(I)TE;" },
    { "removeWithId:", "remove", "Z", 0x1, NULL, NULL },
    { "removeAllWithJavaUtilCollection:", "removeAll", "Z", 0x1, NULL, NULL },
    { "retainAllWithJavaUtilCollection:", "retainAll", "Z", 0x1, NULL, NULL },
    { "setWithInt:withId:", "set", "TE;", 0x1, NULL, "(ITE;)TE;" },
    { "size", NULL, "I", 0x1, NULL, NULL },
    { "subListWithInt:withInt:", "subList", "Ljava.util.List;", 0x1, NULL, NULL },
    { "toArray", NULL, "[Ljava.lang.Object;", 0x1, NULL, NULL },
    { "toArrayWithNSObjectArray:", "toArray", "[Ljava.lang.Object;", 0x1, NULL, "<T:Ljava/lang/Object;>([TT;)[TT;" },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "trimToSize", NULL, "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "list_", NULL, 0x4, "Ljava.util.ArrayList;", NULL, "Ljava/util/ArrayList<TE;>;",  },
    { "fast_", NULL, 0x4, "Z", NULL, NULL,  },
  };
  static const char *superclass_type_args[] = {"TE;"};
  static const char *inner_classes[] = {"Lorg.apache.commons.collections15.list.FastArrayList$SubList;", "Lorg.apache.commons.collections15.list.FastArrayList$ListIter;"};
  static const J2ObjcClassInfo _OrgApacheCommonsCollections15ListFastArrayList = { 2, "FastArrayList", "org.apache.commons.collections15.list", NULL, 0x1, 34, methods, 2, fields, 1, superclass_type_args, 2, inner_classes, NULL, "<E:Ljava/lang/Object;>Ljava/util/ArrayList<TE;>;" };
  return &_OrgApacheCommonsCollections15ListFastArrayList;
}

@end

void OrgApacheCommonsCollections15ListFastArrayList_init(OrgApacheCommonsCollections15ListFastArrayList *self) {
  JavaUtilArrayList_init(self);
  OrgApacheCommonsCollections15ListFastArrayList_set_list_(self, nil);
  self->fast_ = NO;
  OrgApacheCommonsCollections15ListFastArrayList_setAndConsume_list_(self, new_JavaUtilArrayList_init());
}

OrgApacheCommonsCollections15ListFastArrayList *new_OrgApacheCommonsCollections15ListFastArrayList_init() {
  OrgApacheCommonsCollections15ListFastArrayList *self = [OrgApacheCommonsCollections15ListFastArrayList alloc];
  OrgApacheCommonsCollections15ListFastArrayList_init(self);
  return self;
}

void OrgApacheCommonsCollections15ListFastArrayList_initWithInt_(OrgApacheCommonsCollections15ListFastArrayList *self, jint capacity) {
  JavaUtilArrayList_init(self);
  OrgApacheCommonsCollections15ListFastArrayList_set_list_(self, nil);
  self->fast_ = NO;
  OrgApacheCommonsCollections15ListFastArrayList_setAndConsume_list_(self, new_JavaUtilArrayList_initWithInt_(capacity));
}

OrgApacheCommonsCollections15ListFastArrayList *new_OrgApacheCommonsCollections15ListFastArrayList_initWithInt_(jint capacity) {
  OrgApacheCommonsCollections15ListFastArrayList *self = [OrgApacheCommonsCollections15ListFastArrayList alloc];
  OrgApacheCommonsCollections15ListFastArrayList_initWithInt_(self, capacity);
  return self;
}

void OrgApacheCommonsCollections15ListFastArrayList_initWithJavaUtilCollection_(OrgApacheCommonsCollections15ListFastArrayList *self, id<JavaUtilCollection> collection) {
  JavaUtilArrayList_init(self);
  OrgApacheCommonsCollections15ListFastArrayList_set_list_(self, nil);
  self->fast_ = NO;
  OrgApacheCommonsCollections15ListFastArrayList_setAndConsume_list_(self, new_JavaUtilArrayList_initWithJavaUtilCollection_(collection));
}

OrgApacheCommonsCollections15ListFastArrayList *new_OrgApacheCommonsCollections15ListFastArrayList_initWithJavaUtilCollection_(id<JavaUtilCollection> collection) {
  OrgApacheCommonsCollections15ListFastArrayList *self = [OrgApacheCommonsCollections15ListFastArrayList alloc];
  OrgApacheCommonsCollections15ListFastArrayList_initWithJavaUtilCollection_(self, collection);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheCommonsCollections15ListFastArrayList)

@implementation OrgApacheCommonsCollections15ListFastArrayList_SubList

- (instancetype)initWithOrgApacheCommonsCollections15ListFastArrayList:(OrgApacheCommonsCollections15ListFastArrayList *)outer$
                                                               withInt:(jint)first
                                                               withInt:(jint)last {
  OrgApacheCommonsCollections15ListFastArrayList_SubList_initWithOrgApacheCommonsCollections15ListFastArrayList_withInt_withInt_(self, outer$, first, last);
  return self;
}

- (id<JavaUtilList>)getWithJavaUtilList:(id<JavaUtilList>)l {
  return OrgApacheCommonsCollections15ListFastArrayList_SubList_getWithJavaUtilList_(self, l);
}

- (void)clear {
  if (this$0_->fast_) {
    @synchronized(this$0_) {
      JavaUtilArrayList *temp = (JavaUtilArrayList *) check_class_cast([((JavaUtilArrayList *) nil_chk(this$0_->list_)) clone], [JavaUtilArrayList class]);
      [((id<JavaUtilList>) nil_chk(OrgApacheCommonsCollections15ListFastArrayList_SubList_getWithJavaUtilList_(self, temp))) clear];
      last_ = first_;
      OrgApacheCommonsCollections15ListFastArrayList_set_list_(this$0_, temp);
      OrgApacheCommonsCollections15ListFastArrayList_SubList_set_expected_(self, temp);
    }
  }
  else {
    @synchronized(this$0_->list_) {
      [((id<JavaUtilList>) nil_chk(OrgApacheCommonsCollections15ListFastArrayList_SubList_getWithJavaUtilList_(self, expected_))) clear];
    }
  }
}

- (jboolean)removeWithId:(id)o {
  if (this$0_->fast_) {
    @synchronized(this$0_) {
      JavaUtilArrayList *temp = (JavaUtilArrayList *) check_class_cast([((JavaUtilArrayList *) nil_chk(this$0_->list_)) clone], [JavaUtilArrayList class]);
      jboolean r = [((id<JavaUtilList>) nil_chk(OrgApacheCommonsCollections15ListFastArrayList_SubList_getWithJavaUtilList_(self, temp))) removeWithId:o];
      if (r) last_--;
      OrgApacheCommonsCollections15ListFastArrayList_set_list_(this$0_, temp);
      OrgApacheCommonsCollections15ListFastArrayList_SubList_set_expected_(self, temp);
      return r;
    }
  }
  else {
    @synchronized(this$0_->list_) {
      return [((id<JavaUtilList>) nil_chk(OrgApacheCommonsCollections15ListFastArrayList_SubList_getWithJavaUtilList_(self, expected_))) removeWithId:o];
    }
  }
}

- (jboolean)removeAllWithJavaUtilCollection:(id<JavaUtilCollection>)o {
  if (this$0_->fast_) {
    @synchronized(this$0_) {
      JavaUtilArrayList *temp = (JavaUtilArrayList *) check_class_cast([((JavaUtilArrayList *) nil_chk(this$0_->list_)) clone], [JavaUtilArrayList class]);
      id<JavaUtilList> sub = OrgApacheCommonsCollections15ListFastArrayList_SubList_getWithJavaUtilList_(self, temp);
      jboolean r = [((id<JavaUtilList>) nil_chk(sub)) removeAllWithJavaUtilCollection:o];
      if (r) last_ = first_ + [sub size];
      OrgApacheCommonsCollections15ListFastArrayList_set_list_(this$0_, temp);
      OrgApacheCommonsCollections15ListFastArrayList_SubList_set_expected_(self, temp);
      return r;
    }
  }
  else {
    @synchronized(this$0_->list_) {
      return [((id<JavaUtilList>) nil_chk(OrgApacheCommonsCollections15ListFastArrayList_SubList_getWithJavaUtilList_(self, expected_))) removeAllWithJavaUtilCollection:o];
    }
  }
}

- (jboolean)retainAllWithJavaUtilCollection:(id<JavaUtilCollection>)o {
  if (this$0_->fast_) {
    @synchronized(this$0_) {
      JavaUtilArrayList *temp = (JavaUtilArrayList *) check_class_cast([((JavaUtilArrayList *) nil_chk(this$0_->list_)) clone], [JavaUtilArrayList class]);
      id<JavaUtilList> sub = OrgApacheCommonsCollections15ListFastArrayList_SubList_getWithJavaUtilList_(self, temp);
      jboolean r = [((id<JavaUtilList>) nil_chk(sub)) retainAllWithJavaUtilCollection:o];
      if (r) last_ = first_ + [sub size];
      OrgApacheCommonsCollections15ListFastArrayList_set_list_(this$0_, temp);
      OrgApacheCommonsCollections15ListFastArrayList_SubList_set_expected_(self, temp);
      return r;
    }
  }
  else {
    @synchronized(this$0_->list_) {
      return [((id<JavaUtilList>) nil_chk(OrgApacheCommonsCollections15ListFastArrayList_SubList_getWithJavaUtilList_(self, expected_))) retainAllWithJavaUtilCollection:o];
    }
  }
}

- (jint)size {
  if (this$0_->fast_) {
    return [((id<JavaUtilList>) nil_chk(OrgApacheCommonsCollections15ListFastArrayList_SubList_getWithJavaUtilList_(self, expected_))) size];
  }
  else {
    @synchronized(this$0_->list_) {
      return [((id<JavaUtilList>) nil_chk(OrgApacheCommonsCollections15ListFastArrayList_SubList_getWithJavaUtilList_(self, expected_))) size];
    }
  }
}

- (jboolean)isEmpty {
  if (this$0_->fast_) {
    return [((id<JavaUtilList>) nil_chk(OrgApacheCommonsCollections15ListFastArrayList_SubList_getWithJavaUtilList_(self, expected_))) isEmpty];
  }
  else {
    @synchronized(this$0_->list_) {
      return [((id<JavaUtilList>) nil_chk(OrgApacheCommonsCollections15ListFastArrayList_SubList_getWithJavaUtilList_(self, expected_))) isEmpty];
    }
  }
}

- (jboolean)containsWithId:(id)o {
  if (this$0_->fast_) {
    return [((id<JavaUtilList>) nil_chk(OrgApacheCommonsCollections15ListFastArrayList_SubList_getWithJavaUtilList_(self, expected_))) containsWithId:o];
  }
  else {
    @synchronized(this$0_->list_) {
      return [((id<JavaUtilList>) nil_chk(OrgApacheCommonsCollections15ListFastArrayList_SubList_getWithJavaUtilList_(self, expected_))) containsWithId:o];
    }
  }
}

- (jboolean)containsAllWithJavaUtilCollection:(id<JavaUtilCollection>)o {
  if (this$0_->fast_) {
    return [((id<JavaUtilList>) nil_chk(OrgApacheCommonsCollections15ListFastArrayList_SubList_getWithJavaUtilList_(self, expected_))) containsAllWithJavaUtilCollection:o];
  }
  else {
    @synchronized(this$0_->list_) {
      return [((id<JavaUtilList>) nil_chk(OrgApacheCommonsCollections15ListFastArrayList_SubList_getWithJavaUtilList_(self, expected_))) containsAllWithJavaUtilCollection:o];
    }
  }
}

- (IOSObjectArray *)toArrayWithNSObjectArray:(IOSObjectArray *)o {
  if (this$0_->fast_) {
    return [((id<JavaUtilList>) nil_chk(OrgApacheCommonsCollections15ListFastArrayList_SubList_getWithJavaUtilList_(self, expected_))) toArrayWithNSObjectArray:o];
  }
  else {
    @synchronized(this$0_->list_) {
      return [((id<JavaUtilList>) nil_chk(OrgApacheCommonsCollections15ListFastArrayList_SubList_getWithJavaUtilList_(self, expected_))) toArrayWithNSObjectArray:o];
    }
  }
}

- (IOSObjectArray *)toArray {
  if (this$0_->fast_) {
    return [((id<JavaUtilList>) nil_chk(OrgApacheCommonsCollections15ListFastArrayList_SubList_getWithJavaUtilList_(self, expected_))) toArray];
  }
  else {
    @synchronized(this$0_->list_) {
      return [((id<JavaUtilList>) nil_chk(OrgApacheCommonsCollections15ListFastArrayList_SubList_getWithJavaUtilList_(self, expected_))) toArray];
    }
  }
}

- (jboolean)isEqual:(id)o {
  if (o == self) return YES;
  if (this$0_->fast_) {
    return [((id<JavaUtilList>) nil_chk(OrgApacheCommonsCollections15ListFastArrayList_SubList_getWithJavaUtilList_(self, expected_))) isEqual:o];
  }
  else {
    @synchronized(this$0_->list_) {
      return [((id<JavaUtilList>) nil_chk(OrgApacheCommonsCollections15ListFastArrayList_SubList_getWithJavaUtilList_(self, expected_))) isEqual:o];
    }
  }
}

- (NSUInteger)hash {
  if (this$0_->fast_) {
    return ((jint) [((id<JavaUtilList>) nil_chk(OrgApacheCommonsCollections15ListFastArrayList_SubList_getWithJavaUtilList_(self, expected_))) hash]);
  }
  else {
    @synchronized(this$0_->list_) {
      return ((jint) [((id<JavaUtilList>) nil_chk(OrgApacheCommonsCollections15ListFastArrayList_SubList_getWithJavaUtilList_(self, expected_))) hash]);
    }
  }
}

- (jboolean)addWithId:(id)o {
  if (this$0_->fast_) {
    @synchronized(this$0_) {
      JavaUtilArrayList *temp = (JavaUtilArrayList *) check_class_cast([((JavaUtilArrayList *) nil_chk(this$0_->list_)) clone], [JavaUtilArrayList class]);
      jboolean r = [((id<JavaUtilList>) nil_chk(OrgApacheCommonsCollections15ListFastArrayList_SubList_getWithJavaUtilList_(self, temp))) addWithId:o];
      if (r) last_++;
      OrgApacheCommonsCollections15ListFastArrayList_set_list_(this$0_, temp);
      OrgApacheCommonsCollections15ListFastArrayList_SubList_set_expected_(self, temp);
      return r;
    }
  }
  else {
    @synchronized(this$0_->list_) {
      return [((id<JavaUtilList>) nil_chk(OrgApacheCommonsCollections15ListFastArrayList_SubList_getWithJavaUtilList_(self, expected_))) addWithId:o];
    }
  }
}

- (jboolean)addAllWithJavaUtilCollection:(id<JavaUtilCollection>)o {
  if (this$0_->fast_) {
    @synchronized(this$0_) {
      JavaUtilArrayList *temp = (JavaUtilArrayList *) check_class_cast([((JavaUtilArrayList *) nil_chk(this$0_->list_)) clone], [JavaUtilArrayList class]);
      jboolean r = [((id<JavaUtilList>) nil_chk(OrgApacheCommonsCollections15ListFastArrayList_SubList_getWithJavaUtilList_(self, temp))) addAllWithJavaUtilCollection:o];
      if (r) last_ += [((id<JavaUtilCollection>) nil_chk(o)) size];
      OrgApacheCommonsCollections15ListFastArrayList_set_list_(this$0_, temp);
      OrgApacheCommonsCollections15ListFastArrayList_SubList_set_expected_(self, temp);
      return r;
    }
  }
  else {
    @synchronized(this$0_->list_) {
      return [((id<JavaUtilList>) nil_chk(OrgApacheCommonsCollections15ListFastArrayList_SubList_getWithJavaUtilList_(self, expected_))) addAllWithJavaUtilCollection:o];
    }
  }
}

- (void)addWithInt:(jint)i
            withId:(id)o {
  if (this$0_->fast_) {
    @synchronized(this$0_) {
      JavaUtilArrayList *temp = (JavaUtilArrayList *) check_class_cast([((JavaUtilArrayList *) nil_chk(this$0_->list_)) clone], [JavaUtilArrayList class]);
      [((id<JavaUtilList>) nil_chk(OrgApacheCommonsCollections15ListFastArrayList_SubList_getWithJavaUtilList_(self, temp))) addWithInt:i withId:o];
      last_++;
      OrgApacheCommonsCollections15ListFastArrayList_set_list_(this$0_, temp);
      OrgApacheCommonsCollections15ListFastArrayList_SubList_set_expected_(self, temp);
    }
  }
  else {
    @synchronized(this$0_->list_) {
      [((id<JavaUtilList>) nil_chk(OrgApacheCommonsCollections15ListFastArrayList_SubList_getWithJavaUtilList_(self, expected_))) addWithInt:i withId:o];
    }
  }
}

- (jboolean)addAllWithInt:(jint)i
   withJavaUtilCollection:(id<JavaUtilCollection>)o {
  if (this$0_->fast_) {
    @synchronized(this$0_) {
      JavaUtilArrayList *temp = (JavaUtilArrayList *) check_class_cast([((JavaUtilArrayList *) nil_chk(this$0_->list_)) clone], [JavaUtilArrayList class]);
      jboolean r = [((id<JavaUtilList>) nil_chk(OrgApacheCommonsCollections15ListFastArrayList_SubList_getWithJavaUtilList_(self, temp))) addAllWithInt:i withJavaUtilCollection:o];
      OrgApacheCommonsCollections15ListFastArrayList_set_list_(this$0_, temp);
      if (r) last_ += [((id<JavaUtilCollection>) nil_chk(o)) size];
      OrgApacheCommonsCollections15ListFastArrayList_SubList_set_expected_(self, temp);
      return r;
    }
  }
  else {
    @synchronized(this$0_->list_) {
      return [((id<JavaUtilList>) nil_chk(OrgApacheCommonsCollections15ListFastArrayList_SubList_getWithJavaUtilList_(self, expected_))) addAllWithInt:i withJavaUtilCollection:o];
    }
  }
}

- (id)removeWithInt:(jint)i {
  if (this$0_->fast_) {
    @synchronized(this$0_) {
      JavaUtilArrayList *temp = (JavaUtilArrayList *) check_class_cast([((JavaUtilArrayList *) nil_chk(this$0_->list_)) clone], [JavaUtilArrayList class]);
      id o = [((id<JavaUtilList>) nil_chk(OrgApacheCommonsCollections15ListFastArrayList_SubList_getWithJavaUtilList_(self, temp))) removeWithInt:i];
      last_--;
      OrgApacheCommonsCollections15ListFastArrayList_set_list_(this$0_, temp);
      OrgApacheCommonsCollections15ListFastArrayList_SubList_set_expected_(self, temp);
      return o;
    }
  }
  else {
    @synchronized(this$0_->list_) {
      return [((id<JavaUtilList>) nil_chk(OrgApacheCommonsCollections15ListFastArrayList_SubList_getWithJavaUtilList_(self, expected_))) removeWithInt:i];
    }
  }
}

- (id)setWithInt:(jint)i
          withId:(id)a {
  if (this$0_->fast_) {
    @synchronized(this$0_) {
      JavaUtilArrayList *temp = (JavaUtilArrayList *) check_class_cast([((JavaUtilArrayList *) nil_chk(this$0_->list_)) clone], [JavaUtilArrayList class]);
      id o = [((id<JavaUtilList>) nil_chk(OrgApacheCommonsCollections15ListFastArrayList_SubList_getWithJavaUtilList_(self, temp))) setWithInt:i withId:a];
      OrgApacheCommonsCollections15ListFastArrayList_set_list_(this$0_, temp);
      OrgApacheCommonsCollections15ListFastArrayList_SubList_set_expected_(self, temp);
      return o;
    }
  }
  else {
    @synchronized(this$0_->list_) {
      return [((id<JavaUtilList>) nil_chk(OrgApacheCommonsCollections15ListFastArrayList_SubList_getWithJavaUtilList_(self, expected_))) setWithInt:i withId:a];
    }
  }
}

- (id<JavaUtilIterator>)iterator {
  return [new_OrgApacheCommonsCollections15ListFastArrayList_SubList_SubListIter_initWithOrgApacheCommonsCollections15ListFastArrayList_SubList_withInt_(self, 0) autorelease];
}

- (id<JavaUtilListIterator>)listIterator {
  return [new_OrgApacheCommonsCollections15ListFastArrayList_SubList_SubListIter_initWithOrgApacheCommonsCollections15ListFastArrayList_SubList_withInt_(self, 0) autorelease];
}

- (id<JavaUtilListIterator>)listIteratorWithInt:(jint)i {
  return [new_OrgApacheCommonsCollections15ListFastArrayList_SubList_SubListIter_initWithOrgApacheCommonsCollections15ListFastArrayList_SubList_withInt_(self, i) autorelease];
}

- (id)getWithInt:(jint)i {
  if (this$0_->fast_) {
    return [((id<JavaUtilList>) nil_chk(OrgApacheCommonsCollections15ListFastArrayList_SubList_getWithJavaUtilList_(self, expected_))) getWithInt:i];
  }
  else {
    @synchronized(this$0_->list_) {
      return [((id<JavaUtilList>) nil_chk(OrgApacheCommonsCollections15ListFastArrayList_SubList_getWithJavaUtilList_(self, expected_))) getWithInt:i];
    }
  }
}

- (jint)indexOfWithId:(id)o {
  if (this$0_->fast_) {
    return [((id<JavaUtilList>) nil_chk(OrgApacheCommonsCollections15ListFastArrayList_SubList_getWithJavaUtilList_(self, expected_))) indexOfWithId:o];
  }
  else {
    @synchronized(this$0_->list_) {
      return [((id<JavaUtilList>) nil_chk(OrgApacheCommonsCollections15ListFastArrayList_SubList_getWithJavaUtilList_(self, expected_))) indexOfWithId:o];
    }
  }
}

- (jint)lastIndexOfWithId:(id)o {
  if (this$0_->fast_) {
    return [((id<JavaUtilList>) nil_chk(OrgApacheCommonsCollections15ListFastArrayList_SubList_getWithJavaUtilList_(self, expected_))) lastIndexOfWithId:o];
  }
  else {
    @synchronized(this$0_->list_) {
      return [((id<JavaUtilList>) nil_chk(OrgApacheCommonsCollections15ListFastArrayList_SubList_getWithJavaUtilList_(self, expected_))) lastIndexOfWithId:o];
    }
  }
}

- (id<JavaUtilList>)subListWithInt:(jint)f
                           withInt:(jint)l {
  if (this$0_->list_ != expected_) {
    @throw [new_JavaUtilConcurrentModificationException_init() autorelease];
  }
  return [new_OrgApacheCommonsCollections15ListFastArrayList_SubList_initWithOrgApacheCommonsCollections15ListFastArrayList_withInt_withInt_(this$0_, first_ + f, f + l) autorelease];
}

- (void)dealloc {
  RELEASE_(this$0_);
  RELEASE_(expected_);
  [super dealloc];
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgApacheCommonsCollections15ListFastArrayList:withInt:withInt:", "SubList", NULL, 0x1, NULL, NULL },
    { "getWithJavaUtilList:", "get", "Ljava.util.List;", 0x2, NULL, NULL },
    { "clear", NULL, "V", 0x1, NULL, NULL },
    { "removeWithId:", "remove", "Z", 0x1, NULL, NULL },
    { "removeAllWithJavaUtilCollection:", "removeAll", "Z", 0x1, NULL, NULL },
    { "retainAllWithJavaUtilCollection:", "retainAll", "Z", 0x1, NULL, NULL },
    { "size", NULL, "I", 0x1, NULL, NULL },
    { "isEmpty", NULL, "Z", 0x1, NULL, NULL },
    { "containsWithId:", "contains", "Z", 0x1, NULL, NULL },
    { "containsAllWithJavaUtilCollection:", "containsAll", "Z", 0x1, NULL, NULL },
    { "toArrayWithNSObjectArray:", "toArray", "[Ljava.lang.Object;", 0x1, NULL, "<T:Ljava/lang/Object;>([TT;)[TT;" },
    { "toArray", NULL, "[Ljava.lang.Object;", 0x1, NULL, NULL },
    { "isEqual:", "equals", "Z", 0x1, NULL, NULL },
    { "hash", "hashCode", "I", 0x1, NULL, NULL },
    { "addWithId:", "add", "Z", 0x1, NULL, "(TE;)Z" },
    { "addAllWithJavaUtilCollection:", "addAll", "Z", 0x1, NULL, NULL },
    { "addWithInt:withId:", "add", "V", 0x1, NULL, "(ITE;)V" },
    { "addAllWithInt:withJavaUtilCollection:", "addAll", "Z", 0x1, NULL, NULL },
    { "removeWithInt:", "remove", "TE;", 0x1, NULL, "(I)TE;" },
    { "setWithInt:withId:", "set", "TE;", 0x1, NULL, "(ITE;)TE;" },
    { "iterator", NULL, "Ljava.util.Iterator;", 0x1, NULL, NULL },
    { "listIterator", NULL, "Ljava.util.ListIterator;", 0x1, NULL, NULL },
    { "listIteratorWithInt:", "listIterator", "Ljava.util.ListIterator;", 0x1, NULL, NULL },
    { "getWithInt:", "get", "TE;", 0x1, NULL, "(I)TE;" },
    { "indexOfWithId:", "indexOf", "I", 0x1, NULL, NULL },
    { "lastIndexOfWithId:", "lastIndexOf", "I", 0x1, NULL, NULL },
    { "subListWithInt:withInt:", "subList", "Ljava.util.List;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lorg.apache.commons.collections15.list.FastArrayList;", NULL, NULL,  },
    { "first_", NULL, 0x2, "I", NULL, NULL,  },
    { "last_", NULL, 0x2, "I", NULL, NULL,  },
    { "expected_", NULL, 0x2, "Ljava.util.List;", NULL, "Ljava/util/List<TE;>;",  },
  };
  static const char *inner_classes[] = {"Lorg.apache.commons.collections15.list.FastArrayList$SubList$SubListIter;"};
  static const J2ObjcClassInfo _OrgApacheCommonsCollections15ListFastArrayList_SubList = { 2, "SubList", "org.apache.commons.collections15.list", "FastArrayList", 0x2, 27, methods, 4, fields, 0, NULL, 1, inner_classes, NULL, "Ljava/lang/Object;Ljava/util/List<TE;>;" };
  return &_OrgApacheCommonsCollections15ListFastArrayList_SubList;
}

@end

void OrgApacheCommonsCollections15ListFastArrayList_SubList_initWithOrgApacheCommonsCollections15ListFastArrayList_withInt_withInt_(OrgApacheCommonsCollections15ListFastArrayList_SubList *self, OrgApacheCommonsCollections15ListFastArrayList *outer$, jint first, jint last) {
  OrgApacheCommonsCollections15ListFastArrayList_SubList_set_this$0_(self, outer$);
  NSObject_init(self);
  self->first_ = first;
  self->last_ = last;
  OrgApacheCommonsCollections15ListFastArrayList_SubList_set_expected_(self, outer$->list_);
}

OrgApacheCommonsCollections15ListFastArrayList_SubList *new_OrgApacheCommonsCollections15ListFastArrayList_SubList_initWithOrgApacheCommonsCollections15ListFastArrayList_withInt_withInt_(OrgApacheCommonsCollections15ListFastArrayList *outer$, jint first, jint last) {
  OrgApacheCommonsCollections15ListFastArrayList_SubList *self = [OrgApacheCommonsCollections15ListFastArrayList_SubList alloc];
  OrgApacheCommonsCollections15ListFastArrayList_SubList_initWithOrgApacheCommonsCollections15ListFastArrayList_withInt_withInt_(self, outer$, first, last);
  return self;
}

id<JavaUtilList> OrgApacheCommonsCollections15ListFastArrayList_SubList_getWithJavaUtilList_(OrgApacheCommonsCollections15ListFastArrayList_SubList *self, id<JavaUtilList> l) {
  if (self->this$0_->list_ != self->expected_) {
    @throw [new_JavaUtilConcurrentModificationException_init() autorelease];
  }
  return [((id<JavaUtilList>) nil_chk(l)) subListWithInt:self->first_ withInt:self->last_];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheCommonsCollections15ListFastArrayList_SubList)

@implementation OrgApacheCommonsCollections15ListFastArrayList_SubList_SubListIter

- (instancetype)initWithOrgApacheCommonsCollections15ListFastArrayList_SubList:(OrgApacheCommonsCollections15ListFastArrayList_SubList *)outer$
                                                                       withInt:(jint)i {
  OrgApacheCommonsCollections15ListFastArrayList_SubList_SubListIter_initWithOrgApacheCommonsCollections15ListFastArrayList_SubList_withInt_(self, outer$, i);
  return self;
}

- (void)checkMod {
  OrgApacheCommonsCollections15ListFastArrayList_SubList_SubListIter_checkMod(self);
}

- (id<JavaUtilList>)get {
  return OrgApacheCommonsCollections15ListFastArrayList_SubList_getWithJavaUtilList_(this$0_, expected1_);
}

- (jboolean)hasNext {
  OrgApacheCommonsCollections15ListFastArrayList_SubList_SubListIter_checkMod(self);
  return [((id<JavaUtilListIterator>) nil_chk(iter_)) hasNext];
}

- (id)next {
  OrgApacheCommonsCollections15ListFastArrayList_SubList_SubListIter_checkMod(self);
  lastReturnedIndex_ = [((id<JavaUtilListIterator>) nil_chk(iter_)) nextIndex];
  return [iter_ next];
}

- (jboolean)hasPrevious {
  OrgApacheCommonsCollections15ListFastArrayList_SubList_SubListIter_checkMod(self);
  return [((id<JavaUtilListIterator>) nil_chk(iter_)) hasPrevious];
}

- (id)previous {
  OrgApacheCommonsCollections15ListFastArrayList_SubList_SubListIter_checkMod(self);
  lastReturnedIndex_ = [((id<JavaUtilListIterator>) nil_chk(iter_)) previousIndex];
  return [iter_ previous];
}

- (jint)previousIndex {
  OrgApacheCommonsCollections15ListFastArrayList_SubList_SubListIter_checkMod(self);
  return [((id<JavaUtilListIterator>) nil_chk(iter_)) previousIndex];
}

- (jint)nextIndex {
  OrgApacheCommonsCollections15ListFastArrayList_SubList_SubListIter_checkMod(self);
  return [((id<JavaUtilListIterator>) nil_chk(iter_)) nextIndex];
}

- (void)remove {
  OrgApacheCommonsCollections15ListFastArrayList_SubList_SubListIter_checkMod(self);
  if (lastReturnedIndex_ < 0) {
    @throw [new_JavaLangIllegalStateException_init() autorelease];
  }
  [((id<JavaUtilList>) nil_chk([self get])) removeWithInt:lastReturnedIndex_];
  this$0_->last_--;
  OrgApacheCommonsCollections15ListFastArrayList_SubList_SubListIter_set_expected1_(self, this$0_->this$0_->list_);
  OrgApacheCommonsCollections15ListFastArrayList_SubList_SubListIter_set_iter_(self, [((id<JavaUtilList>) nil_chk([self get])) listIteratorWithInt:[self previousIndex]]);
  lastReturnedIndex_ = -1;
}

- (void)setWithId:(id)o {
  OrgApacheCommonsCollections15ListFastArrayList_SubList_SubListIter_checkMod(self);
  if (lastReturnedIndex_ < 0) {
    @throw [new_JavaLangIllegalStateException_init() autorelease];
  }
  [((id<JavaUtilList>) nil_chk([self get])) setWithInt:lastReturnedIndex_ withId:o];
  OrgApacheCommonsCollections15ListFastArrayList_SubList_SubListIter_set_expected1_(self, this$0_->this$0_->list_);
  OrgApacheCommonsCollections15ListFastArrayList_SubList_SubListIter_set_iter_(self, [((id<JavaUtilList>) nil_chk([self get])) listIteratorWithInt:[self previousIndex] + 1]);
}

- (void)addWithId:(id)o {
  OrgApacheCommonsCollections15ListFastArrayList_SubList_SubListIter_checkMod(self);
  jint i = [self nextIndex];
  [((id<JavaUtilList>) nil_chk([self get])) addWithInt:i withId:o];
  this$0_->last_++;
  OrgApacheCommonsCollections15ListFastArrayList_SubList_SubListIter_set_iter_(self, [((id<JavaUtilList>) nil_chk([self get])) listIteratorWithInt:i + 1]);
  lastReturnedIndex_ = 1;
}

- (void)dealloc {
  RELEASE_(this$0_);
  RELEASE_(expected1_);
  RELEASE_(iter_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgApacheCommonsCollections15ListFastArrayList_SubList:withInt:", "SubListIter", NULL, 0x1, NULL, NULL },
    { "checkMod", NULL, "V", 0x2, NULL, NULL },
    { "get", NULL, "Ljava.util.List;", 0x0, NULL, NULL },
    { "hasNext", NULL, "Z", 0x1, NULL, NULL },
    { "next", NULL, "TE;", 0x1, NULL, "()TE;" },
    { "hasPrevious", NULL, "Z", 0x1, NULL, NULL },
    { "previous", NULL, "TE;", 0x1, NULL, "()TE;" },
    { "previousIndex", NULL, "I", 0x1, NULL, NULL },
    { "nextIndex", NULL, "I", 0x1, NULL, NULL },
    { "remove", NULL, "V", 0x1, NULL, NULL },
    { "setWithId:", "set", "V", 0x1, NULL, "(TE;)V" },
    { "addWithId:", "add", "V", 0x1, NULL, "(TE;)V" },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lorg.apache.commons.collections15.list.FastArrayList$SubList;", NULL, NULL,  },
    { "expected1_", NULL, 0x2, "Ljava.util.List;", NULL, "Ljava/util/List<TE;>;",  },
    { "iter_", NULL, 0x2, "Ljava.util.ListIterator;", NULL, "Ljava/util/ListIterator<TE;>;",  },
    { "lastReturnedIndex_", NULL, 0x2, "I", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgApacheCommonsCollections15ListFastArrayList_SubList_SubListIter = { 2, "SubListIter", "org.apache.commons.collections15.list", "FastArrayList$SubList", 0x2, 12, methods, 4, fields, 0, NULL, 0, NULL, NULL, "Ljava/lang/Object;Ljava/util/ListIterator<TE;>;" };
  return &_OrgApacheCommonsCollections15ListFastArrayList_SubList_SubListIter;
}

@end

void OrgApacheCommonsCollections15ListFastArrayList_SubList_SubListIter_initWithOrgApacheCommonsCollections15ListFastArrayList_SubList_withInt_(OrgApacheCommonsCollections15ListFastArrayList_SubList_SubListIter *self, OrgApacheCommonsCollections15ListFastArrayList_SubList *outer$, jint i) {
  OrgApacheCommonsCollections15ListFastArrayList_SubList_SubListIter_set_this$0_(self, outer$);
  NSObject_init(self);
  self->lastReturnedIndex_ = -1;
  OrgApacheCommonsCollections15ListFastArrayList_SubList_SubListIter_set_expected1_(self, outer$->this$0_->list_);
  OrgApacheCommonsCollections15ListFastArrayList_SubList_SubListIter_set_iter_(self, [((id<JavaUtilList>) nil_chk(OrgApacheCommonsCollections15ListFastArrayList_SubList_getWithJavaUtilList_(outer$, self->expected1_))) listIteratorWithInt:i]);
}

OrgApacheCommonsCollections15ListFastArrayList_SubList_SubListIter *new_OrgApacheCommonsCollections15ListFastArrayList_SubList_SubListIter_initWithOrgApacheCommonsCollections15ListFastArrayList_SubList_withInt_(OrgApacheCommonsCollections15ListFastArrayList_SubList *outer$, jint i) {
  OrgApacheCommonsCollections15ListFastArrayList_SubList_SubListIter *self = [OrgApacheCommonsCollections15ListFastArrayList_SubList_SubListIter alloc];
  OrgApacheCommonsCollections15ListFastArrayList_SubList_SubListIter_initWithOrgApacheCommonsCollections15ListFastArrayList_SubList_withInt_(self, outer$, i);
  return self;
}

void OrgApacheCommonsCollections15ListFastArrayList_SubList_SubListIter_checkMod(OrgApacheCommonsCollections15ListFastArrayList_SubList_SubListIter *self) {
  if (self->this$0_->this$0_->list_ != self->expected1_) {
    @throw [new_JavaUtilConcurrentModificationException_init() autorelease];
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheCommonsCollections15ListFastArrayList_SubList_SubListIter)

@implementation OrgApacheCommonsCollections15ListFastArrayList_ListIter

- (instancetype)initWithOrgApacheCommonsCollections15ListFastArrayList:(OrgApacheCommonsCollections15ListFastArrayList *)outer$
                                                               withInt:(jint)i {
  OrgApacheCommonsCollections15ListFastArrayList_ListIter_initWithOrgApacheCommonsCollections15ListFastArrayList_withInt_(self, outer$, i);
  return self;
}

- (void)checkMod {
  OrgApacheCommonsCollections15ListFastArrayList_ListIter_checkMod(self);
}

- (id<JavaUtilList>)get {
  return expected_;
}

- (jboolean)hasNext {
  OrgApacheCommonsCollections15ListFastArrayList_ListIter_checkMod(self);
  return [((id<JavaUtilListIterator>) nil_chk(iter_)) hasNext];
}

- (id)next {
  OrgApacheCommonsCollections15ListFastArrayList_ListIter_checkMod(self);
  lastReturnedIndex_ = [((id<JavaUtilListIterator>) nil_chk(iter_)) nextIndex];
  return [iter_ next];
}

- (jboolean)hasPrevious {
  OrgApacheCommonsCollections15ListFastArrayList_ListIter_checkMod(self);
  return [((id<JavaUtilListIterator>) nil_chk(iter_)) hasPrevious];
}

- (id)previous {
  OrgApacheCommonsCollections15ListFastArrayList_ListIter_checkMod(self);
  lastReturnedIndex_ = [((id<JavaUtilListIterator>) nil_chk(iter_)) previousIndex];
  return [iter_ previous];
}

- (jint)previousIndex {
  OrgApacheCommonsCollections15ListFastArrayList_ListIter_checkMod(self);
  return [((id<JavaUtilListIterator>) nil_chk(iter_)) previousIndex];
}

- (jint)nextIndex {
  OrgApacheCommonsCollections15ListFastArrayList_ListIter_checkMod(self);
  return [((id<JavaUtilListIterator>) nil_chk(iter_)) nextIndex];
}

- (void)remove {
  OrgApacheCommonsCollections15ListFastArrayList_ListIter_checkMod(self);
  if (lastReturnedIndex_ < 0) {
    @throw [new_JavaLangIllegalStateException_init() autorelease];
  }
  [((id<JavaUtilList>) nil_chk([self get])) removeWithInt:lastReturnedIndex_];
  OrgApacheCommonsCollections15ListFastArrayList_ListIter_set_expected_(self, this$0_->list_);
  OrgApacheCommonsCollections15ListFastArrayList_ListIter_set_iter_(self, [((id<JavaUtilList>) nil_chk([self get])) listIteratorWithInt:[self previousIndex]]);
  lastReturnedIndex_ = -1;
}

- (void)setWithId:(id)o {
  OrgApacheCommonsCollections15ListFastArrayList_ListIter_checkMod(self);
  if (lastReturnedIndex_ < 0) {
    @throw [new_JavaLangIllegalStateException_init() autorelease];
  }
  [((id<JavaUtilList>) nil_chk([self get])) setWithInt:lastReturnedIndex_ withId:o];
  OrgApacheCommonsCollections15ListFastArrayList_ListIter_set_expected_(self, this$0_->list_);
  OrgApacheCommonsCollections15ListFastArrayList_ListIter_set_iter_(self, [((id<JavaUtilList>) nil_chk([self get])) listIteratorWithInt:[self previousIndex] + 1]);
}

- (void)addWithId:(id)o {
  OrgApacheCommonsCollections15ListFastArrayList_ListIter_checkMod(self);
  jint i = [self nextIndex];
  [((id<JavaUtilList>) nil_chk([self get])) addWithInt:i withId:o];
  OrgApacheCommonsCollections15ListFastArrayList_ListIter_set_iter_(self, [((id<JavaUtilList>) nil_chk([self get])) listIteratorWithInt:i + 1]);
  lastReturnedIndex_ = -1;
}

- (void)dealloc {
  RELEASE_(this$0_);
  RELEASE_(expected_);
  RELEASE_(iter_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgApacheCommonsCollections15ListFastArrayList:withInt:", "ListIter", NULL, 0x1, NULL, NULL },
    { "checkMod", NULL, "V", 0x2, NULL, NULL },
    { "get", NULL, "Ljava.util.List;", 0x0, NULL, NULL },
    { "hasNext", NULL, "Z", 0x1, NULL, NULL },
    { "next", NULL, "TE;", 0x1, NULL, "()TE;" },
    { "hasPrevious", NULL, "Z", 0x1, NULL, NULL },
    { "previous", NULL, "TE;", 0x1, NULL, "()TE;" },
    { "previousIndex", NULL, "I", 0x1, NULL, NULL },
    { "nextIndex", NULL, "I", 0x1, NULL, NULL },
    { "remove", NULL, "V", 0x1, NULL, NULL },
    { "setWithId:", "set", "V", 0x1, NULL, "(TE;)V" },
    { "addWithId:", "add", "V", 0x1, NULL, "(TE;)V" },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lorg.apache.commons.collections15.list.FastArrayList;", NULL, NULL,  },
    { "expected_", NULL, 0x2, "Ljava.util.List;", NULL, "Ljava/util/List<TE;>;",  },
    { "iter_", NULL, 0x2, "Ljava.util.ListIterator;", NULL, "Ljava/util/ListIterator<TE;>;",  },
    { "lastReturnedIndex_", NULL, 0x2, "I", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgApacheCommonsCollections15ListFastArrayList_ListIter = { 2, "ListIter", "org.apache.commons.collections15.list", "FastArrayList", 0x2, 12, methods, 4, fields, 0, NULL, 0, NULL, NULL, "Ljava/lang/Object;Ljava/util/ListIterator<TE;>;" };
  return &_OrgApacheCommonsCollections15ListFastArrayList_ListIter;
}

@end

void OrgApacheCommonsCollections15ListFastArrayList_ListIter_initWithOrgApacheCommonsCollections15ListFastArrayList_withInt_(OrgApacheCommonsCollections15ListFastArrayList_ListIter *self, OrgApacheCommonsCollections15ListFastArrayList *outer$, jint i) {
  OrgApacheCommonsCollections15ListFastArrayList_ListIter_set_this$0_(self, outer$);
  NSObject_init(self);
  self->lastReturnedIndex_ = -1;
  OrgApacheCommonsCollections15ListFastArrayList_ListIter_set_expected_(self, outer$->list_);
  OrgApacheCommonsCollections15ListFastArrayList_ListIter_set_iter_(self, [((id<JavaUtilList>) nil_chk([self get])) listIteratorWithInt:i]);
}

OrgApacheCommonsCollections15ListFastArrayList_ListIter *new_OrgApacheCommonsCollections15ListFastArrayList_ListIter_initWithOrgApacheCommonsCollections15ListFastArrayList_withInt_(OrgApacheCommonsCollections15ListFastArrayList *outer$, jint i) {
  OrgApacheCommonsCollections15ListFastArrayList_ListIter *self = [OrgApacheCommonsCollections15ListFastArrayList_ListIter alloc];
  OrgApacheCommonsCollections15ListFastArrayList_ListIter_initWithOrgApacheCommonsCollections15ListFastArrayList_withInt_(self, outer$, i);
  return self;
}

void OrgApacheCommonsCollections15ListFastArrayList_ListIter_checkMod(OrgApacheCommonsCollections15ListFastArrayList_ListIter *self) {
  if (self->this$0_->list_ != self->expected_) {
    @throw [new_JavaUtilConcurrentModificationException_init() autorelease];
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheCommonsCollections15ListFastArrayList_ListIter)
