//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/main/settings/Settings.java
//


#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "geogebra/common/main/settings/AlgebraSettings.h"
#include "geogebra/common/main/settings/ApplicationSettings.h"
#include "geogebra/common/main/settings/CASSettings.h"
#include "geogebra/common/main/settings/ConstructionProtocolSettings.h"
#include "geogebra/common/main/settings/EuclidianSettings.h"
#include "geogebra/common/main/settings/EuclidianSettings3D.h"
#include "geogebra/common/main/settings/KeyboardSettings.h"
#include "geogebra/common/main/settings/LayoutSettings.h"
#include "geogebra/common/main/settings/ProbabilityCalculatorSettings.h"
#include "geogebra/common/main/settings/SettingListener.h"
#include "geogebra/common/main/settings/Settings.h"
#include "geogebra/common/main/settings/SpreadsheetSettings.h"
#include "java/util/Collection.h"
#include "java/util/HashMap.h"
#include "java/util/Iterator.h"
#include "java/util/LinkedList.h"

@interface GeogebraCommonMainSettingsSettings () {
 @public
  IOSObjectArray *euclidianSettings_;
  JavaUtilHashMap *euclidianSettingsForPlane_;
  GeogebraCommonMainSettingsAlgebraSettings *algebraSettings_;
  GeogebraCommonMainSettingsSpreadsheetSettings *spreadsheetSettings_;
  GeogebraCommonMainSettingsConstructionProtocolSettings *consProtSettings_;
  GeogebraCommonMainSettingsLayoutSettings *layoutSettings_;
  GeogebraCommonMainSettingsApplicationSettings *applicationSettings_;
  GeogebraCommonMainSettingsKeyboardSettings *keyboardSettings_;
  GeogebraCommonMainSettingsCASSettings *casSettings_;
  GeogebraCommonMainSettingsProbabilityCalculatorSettings *probCalcSettings_;
}

- (GeogebraCommonMainSettingsEuclidianSettings *)createEuclidanSettingsWithInt:(jint)i;

@end

J2OBJC_FIELD_SETTER(GeogebraCommonMainSettingsSettings, euclidianSettings_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(GeogebraCommonMainSettingsSettings, euclidianSettingsForPlane_, JavaUtilHashMap *)
J2OBJC_FIELD_SETTER(GeogebraCommonMainSettingsSettings, algebraSettings_, GeogebraCommonMainSettingsAlgebraSettings *)
J2OBJC_FIELD_SETTER(GeogebraCommonMainSettingsSettings, spreadsheetSettings_, GeogebraCommonMainSettingsSpreadsheetSettings *)
J2OBJC_FIELD_SETTER(GeogebraCommonMainSettingsSettings, consProtSettings_, GeogebraCommonMainSettingsConstructionProtocolSettings *)
J2OBJC_FIELD_SETTER(GeogebraCommonMainSettingsSettings, layoutSettings_, GeogebraCommonMainSettingsLayoutSettings *)
J2OBJC_FIELD_SETTER(GeogebraCommonMainSettingsSettings, applicationSettings_, GeogebraCommonMainSettingsApplicationSettings *)
J2OBJC_FIELD_SETTER(GeogebraCommonMainSettingsSettings, keyboardSettings_, GeogebraCommonMainSettingsKeyboardSettings *)
J2OBJC_FIELD_SETTER(GeogebraCommonMainSettingsSettings, casSettings_, GeogebraCommonMainSettingsCASSettings *)
J2OBJC_FIELD_SETTER(GeogebraCommonMainSettingsSettings, probCalcSettings_, GeogebraCommonMainSettingsProbabilityCalculatorSettings *)

__attribute__((unused)) static GeogebraCommonMainSettingsEuclidianSettings *GeogebraCommonMainSettingsSettings_createEuclidanSettingsWithInt_(GeogebraCommonMainSettingsSettings *self, jint i);

@implementation GeogebraCommonMainSettingsSettings

- (instancetype)initWithInt:(jint)euclidianLength {
  GeogebraCommonMainSettingsSettings_initWithInt_(self, euclidianLength);
  return self;
}

- (GeogebraCommonMainSettingsEuclidianSettings *)createEuclidanSettingsWithInt:(jint)i {
  return GeogebraCommonMainSettingsSettings_createEuclidanSettingsWithInt_(self, i);
}

- (void)resetSettings {
  for (jint i = 0; i < ((IOSObjectArray *) nil_chk(euclidianSettings_))->size_; ++i) {
    if (IOSObjectArray_Get(euclidianSettings_, i) == nil) {
      IOSObjectArray_Set(euclidianSettings_, i, GeogebraCommonMainSettingsSettings_createEuclidanSettingsWithInt_(self, i));
    }
    else {
      JavaUtilLinkedList *ls = [((GeogebraCommonMainSettingsEuclidianSettings *) nil_chk(IOSObjectArray_Get(euclidianSettings_, i))) getListeners];
      IOSObjectArray_Set(euclidianSettings_, i, GeogebraCommonMainSettingsSettings_createEuclidanSettingsWithInt_(self, i));
      id<JavaUtilIterator> lsi = [((JavaUtilLinkedList *) nil_chk(ls)) iterator];
      while ([((id<JavaUtilIterator>) nil_chk(lsi)) hasNext]) {
        id<GeogebraCommonMainSettingsSettingListener> a = [lsi next];
        [((GeogebraCommonMainSettingsEuclidianSettings *) nil_chk(IOSObjectArray_Get(euclidianSettings_, i))) addListenerWithGeogebraCommonMainSettingsSettingListener:a];
      }
    }
  }
  for (GeogebraCommonMainSettingsEuclidianSettings * __strong settings in nil_chk([((JavaUtilHashMap *) nil_chk(euclidianSettingsForPlane_)) values])) {
    [((GeogebraCommonMainSettingsEuclidianSettings *) nil_chk(settings)) reset];
  }
  if (algebraSettings_ == nil) {
    GeogebraCommonMainSettingsSettings_setAndConsume_algebraSettings_(self, new_GeogebraCommonMainSettingsAlgebraSettings_init());
  }
  else {
    JavaUtilLinkedList *listeners = [algebraSettings_ getListeners];
    GeogebraCommonMainSettingsSettings_setAndConsume_algebraSettings_(self, new_GeogebraCommonMainSettingsAlgebraSettings_init());
    [algebraSettings_ setListenersWithJavaUtilLinkedList:listeners];
    [algebraSettings_ settingChanged];
  }
  if (spreadsheetSettings_ == nil) {
    GeogebraCommonMainSettingsSettings_setAndConsume_spreadsheetSettings_(self, new_GeogebraCommonMainSettingsSpreadsheetSettings_init());
  }
  else {
    GeogebraCommonMainSettingsSettings_setAndConsume_spreadsheetSettings_(self, new_GeogebraCommonMainSettingsSpreadsheetSettings_initWithJavaUtilLinkedList_([spreadsheetSettings_ getListeners]));
  }
  if (consProtSettings_ == nil) {
    GeogebraCommonMainSettingsSettings_setAndConsume_consProtSettings_(self, new_GeogebraCommonMainSettingsConstructionProtocolSettings_init());
  }
  else {
    GeogebraCommonMainSettingsSettings_setAndConsume_consProtSettings_(self, new_GeogebraCommonMainSettingsConstructionProtocolSettings_initWithJavaUtilLinkedList_([consProtSettings_ getListeners]));
  }
  if (layoutSettings_ == nil) {
    GeogebraCommonMainSettingsSettings_setAndConsume_layoutSettings_(self, new_GeogebraCommonMainSettingsLayoutSettings_init());
  }
  else {
    GeogebraCommonMainSettingsSettings_setAndConsume_layoutSettings_(self, new_GeogebraCommonMainSettingsLayoutSettings_initWithJavaUtilLinkedList_([layoutSettings_ getListeners]));
  }
  if (applicationSettings_ == nil) {
    GeogebraCommonMainSettingsSettings_setAndConsume_applicationSettings_(self, new_GeogebraCommonMainSettingsApplicationSettings_init());
  }
  else {
    GeogebraCommonMainSettingsSettings_setAndConsume_applicationSettings_(self, new_GeogebraCommonMainSettingsApplicationSettings_initWithJavaUtilLinkedList_([applicationSettings_ getListeners]));
  }
  if (keyboardSettings_ == nil) {
    GeogebraCommonMainSettingsSettings_setAndConsume_keyboardSettings_(self, new_GeogebraCommonMainSettingsKeyboardSettings_init());
  }
  else {
    GeogebraCommonMainSettingsSettings_setAndConsume_keyboardSettings_(self, new_GeogebraCommonMainSettingsKeyboardSettings_initWithJavaUtilLinkedList_([keyboardSettings_ getListeners]));
  }
  if (casSettings_ == nil) {
    GeogebraCommonMainSettingsSettings_setAndConsume_casSettings_(self, new_GeogebraCommonMainSettingsCASSettings_init());
  }
  else {
    GeogebraCommonMainSettingsSettings_setAndConsume_casSettings_(self, new_GeogebraCommonMainSettingsCASSettings_initWithJavaUtilLinkedList_([casSettings_ getListeners]));
  }
  if (probCalcSettings_ == nil) {
    GeogebraCommonMainSettingsSettings_setAndConsume_probCalcSettings_(self, new_GeogebraCommonMainSettingsProbabilityCalculatorSettings_init());
  }
  else {
    GeogebraCommonMainSettingsSettings_setAndConsume_probCalcSettings_(self, new_GeogebraCommonMainSettingsProbabilityCalculatorSettings_initWithJavaUtilLinkedList_([probCalcSettings_ getListeners]));
  }
}

- (void)beginBatch {
  {
    IOSObjectArray *a__ = euclidianSettings_;
    GeogebraCommonMainSettingsEuclidianSettings * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    GeogebraCommonMainSettingsEuclidianSettings * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      GeogebraCommonMainSettingsEuclidianSettings *settings = *b__++;
      [((GeogebraCommonMainSettingsEuclidianSettings *) nil_chk(settings)) beginBatch];
    }
  }
  for (GeogebraCommonMainSettingsEuclidianSettings * __strong settings in nil_chk([((JavaUtilHashMap *) nil_chk(euclidianSettingsForPlane_)) values])) {
    [((GeogebraCommonMainSettingsEuclidianSettings *) nil_chk(settings)) beginBatch];
  }
  [((GeogebraCommonMainSettingsAlgebraSettings *) nil_chk(algebraSettings_)) beginBatch];
  [((GeogebraCommonMainSettingsSpreadsheetSettings *) nil_chk(spreadsheetSettings_)) beginBatch];
  [((GeogebraCommonMainSettingsConstructionProtocolSettings *) nil_chk(consProtSettings_)) beginBatch];
  [((GeogebraCommonMainSettingsLayoutSettings *) nil_chk(layoutSettings_)) beginBatch];
  [((GeogebraCommonMainSettingsApplicationSettings *) nil_chk(applicationSettings_)) beginBatch];
  [((GeogebraCommonMainSettingsKeyboardSettings *) nil_chk(keyboardSettings_)) beginBatch];
  [((GeogebraCommonMainSettingsCASSettings *) nil_chk(casSettings_)) beginBatch];
  [((GeogebraCommonMainSettingsProbabilityCalculatorSettings *) nil_chk(probCalcSettings_)) beginBatch];
}

- (void)endBatch {
  {
    IOSObjectArray *a__ = euclidianSettings_;
    GeogebraCommonMainSettingsEuclidianSettings * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    GeogebraCommonMainSettingsEuclidianSettings * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      GeogebraCommonMainSettingsEuclidianSettings *settings = *b__++;
      [((GeogebraCommonMainSettingsEuclidianSettings *) nil_chk(settings)) endBatch];
    }
  }
  for (GeogebraCommonMainSettingsEuclidianSettings * __strong settings in nil_chk([((JavaUtilHashMap *) nil_chk(euclidianSettingsForPlane_)) values])) {
    [((GeogebraCommonMainSettingsEuclidianSettings *) nil_chk(settings)) endBatch];
  }
  [((GeogebraCommonMainSettingsAlgebraSettings *) nil_chk(algebraSettings_)) endBatch];
  [((GeogebraCommonMainSettingsSpreadsheetSettings *) nil_chk(spreadsheetSettings_)) endBatch];
  [((GeogebraCommonMainSettingsConstructionProtocolSettings *) nil_chk(consProtSettings_)) endBatch];
  [((GeogebraCommonMainSettingsLayoutSettings *) nil_chk(layoutSettings_)) endBatch];
  [((GeogebraCommonMainSettingsApplicationSettings *) nil_chk(applicationSettings_)) endBatch];
  [((GeogebraCommonMainSettingsKeyboardSettings *) nil_chk(keyboardSettings_)) endBatch];
  [((GeogebraCommonMainSettingsCASSettings *) nil_chk(casSettings_)) endBatch];
  [((GeogebraCommonMainSettingsProbabilityCalculatorSettings *) nil_chk(probCalcSettings_)) endBatch];
}

- (GeogebraCommonMainSettingsEuclidianSettings *)getEuclidianWithInt:(jint)number {
  return IOSObjectArray_Get(nil_chk(euclidianSettings_), number - 1);
}

- (GeogebraCommonMainSettingsEuclidianSettings *)getEuclidianForPlaneWithNSString:(NSString *)plane {
  return [((JavaUtilHashMap *) nil_chk(euclidianSettingsForPlane_)) getWithId:plane];
}

- (void)setEuclidianSettingsForPlaneWithNSString:(NSString *)plane
 withGeogebraCommonMainSettingsEuclidianSettings:(GeogebraCommonMainSettingsEuclidianSettings *)settings {
  [((JavaUtilHashMap *) nil_chk(euclidianSettingsForPlane_)) putWithId:plane withId:settings];
}

- (void)clearEuclidianSettingsForPlane {
  [((JavaUtilHashMap *) nil_chk(euclidianSettingsForPlane_)) clear];
}

- (void)removeEuclidianSettingsForPlaneWithNSString:(NSString *)plane {
  [((JavaUtilHashMap *) nil_chk(euclidianSettingsForPlane_)) removeWithId:plane];
}

- (GeogebraCommonMainSettingsAlgebraSettings *)getAlgebra {
  return algebraSettings_;
}

- (GeogebraCommonMainSettingsSpreadsheetSettings *)getSpreadsheet {
  return spreadsheetSettings_;
}

- (void)restoreDefaultSpreadsheetSettings {
  if (spreadsheetSettings_ == nil) {
    GeogebraCommonMainSettingsSettings_setAndConsume_spreadsheetSettings_(self, new_GeogebraCommonMainSettingsSpreadsheetSettings_init());
  }
  else {
    GeogebraCommonMainSettingsSettings_setAndConsume_spreadsheetSettings_(self, new_GeogebraCommonMainSettingsSpreadsheetSettings_initWithJavaUtilLinkedList_([spreadsheetSettings_ getListeners]));
  }
}

- (GeogebraCommonMainSettingsProbabilityCalculatorSettings *)getProbCalcSettings {
  return probCalcSettings_;
}

- (GeogebraCommonMainSettingsConstructionProtocolSettings *)getConstructionProtocol {
  return consProtSettings_;
}

- (GeogebraCommonMainSettingsLayoutSettings *)getLayout {
  return layoutSettings_;
}

- (GeogebraCommonMainSettingsApplicationSettings *)getApplication {
  return applicationSettings_;
}

- (GeogebraCommonMainSettingsKeyboardSettings *)getKeyboard {
  return keyboardSettings_;
}

- (GeogebraCommonMainSettingsCASSettings *)getCasSettings {
  return casSettings_;
}

- (void)dealloc {
  RELEASE_(euclidianSettings_);
  RELEASE_(euclidianSettingsForPlane_);
  RELEASE_(algebraSettings_);
  RELEASE_(spreadsheetSettings_);
  RELEASE_(consProtSettings_);
  RELEASE_(layoutSettings_);
  RELEASE_(applicationSettings_);
  RELEASE_(keyboardSettings_);
  RELEASE_(casSettings_);
  RELEASE_(probCalcSettings_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithInt:", "Settings", NULL, 0x1, NULL, NULL },
    { "createEuclidanSettingsWithInt:", "createEuclidanSettings", "Lgeogebra.common.main.settings.EuclidianSettings;", 0x2, NULL, NULL },
    { "resetSettings", NULL, "V", 0x1, NULL, NULL },
    { "beginBatch", NULL, "V", 0x1, NULL, NULL },
    { "endBatch", NULL, "V", 0x1, NULL, NULL },
    { "getEuclidianWithInt:", "getEuclidian", "Lgeogebra.common.main.settings.EuclidianSettings;", 0x11, NULL, NULL },
    { "getEuclidianForPlaneWithNSString:", "getEuclidianForPlane", "Lgeogebra.common.main.settings.EuclidianSettings;", 0x11, NULL, NULL },
    { "setEuclidianSettingsForPlaneWithNSString:withGeogebraCommonMainSettingsEuclidianSettings:", "setEuclidianSettingsForPlane", "V", 0x11, NULL, NULL },
    { "clearEuclidianSettingsForPlane", NULL, "V", 0x11, NULL, NULL },
    { "removeEuclidianSettingsForPlaneWithNSString:", "removeEuclidianSettingsForPlane", "V", 0x11, NULL, NULL },
    { "getAlgebra", NULL, "Lgeogebra.common.main.settings.AlgebraSettings;", 0x11, NULL, NULL },
    { "getSpreadsheet", NULL, "Lgeogebra.common.main.settings.SpreadsheetSettings;", 0x11, NULL, NULL },
    { "restoreDefaultSpreadsheetSettings", NULL, "V", 0x1, NULL, NULL },
    { "getProbCalcSettings", NULL, "Lgeogebra.common.main.settings.ProbabilityCalculatorSettings;", 0x11, NULL, NULL },
    { "getConstructionProtocol", NULL, "Lgeogebra.common.main.settings.ConstructionProtocolSettings;", 0x11, NULL, NULL },
    { "getLayout", NULL, "Lgeogebra.common.main.settings.LayoutSettings;", 0x11, NULL, NULL },
    { "getApplication", NULL, "Lgeogebra.common.main.settings.ApplicationSettings;", 0x11, NULL, NULL },
    { "getKeyboard", NULL, "Lgeogebra.common.main.settings.KeyboardSettings;", 0x11, NULL, NULL },
    { "getCasSettings", NULL, "Lgeogebra.common.main.settings.CASSettings;", 0x11, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "euclidianSettings_", NULL, 0x12, "[Lgeogebra.common.main.settings.EuclidianSettings;", NULL, NULL,  },
    { "euclidianSettingsForPlane_", NULL, 0x2, "Ljava.util.HashMap;", NULL, "Ljava/util/HashMap<Ljava/lang/String;Lgeogebra/common/main/settings/EuclidianSettings;>;",  },
    { "algebraSettings_", NULL, 0x2, "Lgeogebra.common.main.settings.AlgebraSettings;", NULL, NULL,  },
    { "spreadsheetSettings_", NULL, 0x2, "Lgeogebra.common.main.settings.SpreadsheetSettings;", NULL, NULL,  },
    { "consProtSettings_", NULL, 0x2, "Lgeogebra.common.main.settings.ConstructionProtocolSettings;", NULL, NULL,  },
    { "layoutSettings_", NULL, 0x2, "Lgeogebra.common.main.settings.LayoutSettings;", NULL, NULL,  },
    { "applicationSettings_", NULL, 0x2, "Lgeogebra.common.main.settings.ApplicationSettings;", NULL, NULL,  },
    { "keyboardSettings_", NULL, 0x2, "Lgeogebra.common.main.settings.KeyboardSettings;", NULL, NULL,  },
    { "casSettings_", NULL, 0x2, "Lgeogebra.common.main.settings.CASSettings;", NULL, NULL,  },
    { "probCalcSettings_", NULL, 0x2, "Lgeogebra.common.main.settings.ProbabilityCalculatorSettings;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _GeogebraCommonMainSettingsSettings = { 2, "Settings", "geogebra.common.main.settings", NULL, 0x1, 19, methods, 10, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonMainSettingsSettings;
}

@end

void GeogebraCommonMainSettingsSettings_initWithInt_(GeogebraCommonMainSettingsSettings *self, jint euclidianLength) {
  NSObject_init(self);
  GeogebraCommonMainSettingsSettings_setAndConsume_euclidianSettings_(self, [IOSObjectArray newArrayWithLength:euclidianLength type:GeogebraCommonMainSettingsEuclidianSettings_class_()]);
  GeogebraCommonMainSettingsSettings_setAndConsume_euclidianSettingsForPlane_(self, new_JavaUtilHashMap_init());
  [self resetSettings];
}

GeogebraCommonMainSettingsSettings *new_GeogebraCommonMainSettingsSettings_initWithInt_(jint euclidianLength) {
  GeogebraCommonMainSettingsSettings *self = [GeogebraCommonMainSettingsSettings alloc];
  GeogebraCommonMainSettingsSettings_initWithInt_(self, euclidianLength);
  return self;
}

GeogebraCommonMainSettingsEuclidianSettings *GeogebraCommonMainSettingsSettings_createEuclidanSettingsWithInt_(GeogebraCommonMainSettingsSettings *self, jint i) {
  GeogebraCommonMainSettingsEuclidianSettings *base = nil;
  if (i != 0) {
    base = IOSObjectArray_Get(nil_chk(self->euclidianSettings_), 0);
  }
  if (i == 2) {
    return [new_GeogebraCommonMainSettingsEuclidianSettings3D_initWithGeogebraCommonMainSettingsEuclidianSettings_(base) autorelease];
  }
  return [new_GeogebraCommonMainSettingsEuclidianSettings_initWithGeogebraCommonMainSettingsEuclidianSettings_(base) autorelease];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonMainSettingsSettings)
