//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/advanced/AlgoTextElement.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "geogebra/common/kernel/Construction.h"
#include "geogebra/common/kernel/advanced/AlgoTextElement.h"
#include "geogebra/common/kernel/algos/AlgoElement.h"
#include "geogebra/common/kernel/arithmetic/MyDouble.h"
#include "geogebra/common/kernel/arithmetic/NumberValue.h"
#include "geogebra/common/kernel/commands/Commands.h"
#include "geogebra/common/kernel/geos/GeoElement.h"
#include "geogebra/common/kernel/geos/GeoText.h"

@interface GeogebraCommonKernelAdvancedAlgoTextElement () {
 @public
  GeogebraCommonKernelGeosGeoText *text_;
  id<GeogebraCommonKernelArithmeticNumberValue> num_;
  GeogebraCommonKernelGeosGeoElement *numGeo_;
  GeogebraCommonKernelGeosGeoText *textOut_;
}

@end

J2OBJC_FIELD_SETTER(GeogebraCommonKernelAdvancedAlgoTextElement, text_, GeogebraCommonKernelGeosGeoText *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelAdvancedAlgoTextElement, num_, id<GeogebraCommonKernelArithmeticNumberValue>)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelAdvancedAlgoTextElement, numGeo_, GeogebraCommonKernelGeosGeoElement *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelAdvancedAlgoTextElement, textOut_, GeogebraCommonKernelGeosGeoText *)

__attribute__((unused)) static void GeogebraCommonKernelAdvancedAlgoTextElement_compute(GeogebraCommonKernelAdvancedAlgoTextElement *self);

@implementation GeogebraCommonKernelAdvancedAlgoTextElement

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                                            withNSString:(NSString *)label
                     withGeogebraCommonKernelGeosGeoText:(GeogebraCommonKernelGeosGeoText *)text
           withGeogebraCommonKernelArithmeticNumberValue:(id<GeogebraCommonKernelArithmeticNumberValue>)num {
  GeogebraCommonKernelAdvancedAlgoTextElement_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoText_withGeogebraCommonKernelArithmeticNumberValue_(self, cons, label, text, num);
  return self;
}

- (GeogebraCommonKernelCommandsCommandsEnum *)getClassName {
  return GeogebraCommonKernelCommandsCommandsEnum_get_Element();
}

- (void)setInputOutput {
  GeogebraCommonKernelAlgosAlgoElement_setAndConsume_input_(self, [IOSObjectArray newArrayWithLength:2 type:GeogebraCommonKernelGeosGeoElement_class_()]);
  IOSObjectArray_Set(input_, 0, text_);
  IOSObjectArray_Set(input_, 1, numGeo_);
  [super setOutputLengthWithInt:1];
  [super setOutputWithInt:0 withGeogebraCommonKernelGeosGeoElement:textOut_];
  [self setDependencies];
}

- (GeogebraCommonKernelGeosGeoText *)getText {
  return text_;
}

- (void)compute {
  GeogebraCommonKernelAdvancedAlgoTextElement_compute(self);
}

- (void)dealloc {
  RELEASE_(text_);
  RELEASE_(num_);
  RELEASE_(numGeo_);
  RELEASE_(textOut_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonKernelConstruction:withNSString:withGeogebraCommonKernelGeosGeoText:withGeogebraCommonKernelArithmeticNumberValue:", "AlgoTextElement", NULL, 0x1, NULL, NULL },
    { "getClassName", NULL, "Lgeogebra.common.kernel.commands.Commands;", 0x1, NULL, NULL },
    { "setInputOutput", NULL, "V", 0x4, NULL, NULL },
    { "getText", NULL, "Lgeogebra.common.kernel.geos.GeoText;", 0x1, NULL, NULL },
    { "compute", NULL, "V", 0x11, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "text_", NULL, 0x2, "Lgeogebra.common.kernel.geos.GeoText;", NULL, NULL,  },
    { "num_", NULL, 0x2, "Lgeogebra.common.kernel.arithmetic.NumberValue;", NULL, NULL,  },
    { "numGeo_", NULL, 0x2, "Lgeogebra.common.kernel.geos.GeoElement;", NULL, NULL,  },
    { "textOut_", NULL, 0x2, "Lgeogebra.common.kernel.geos.GeoText;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelAdvancedAlgoTextElement = { 2, "AlgoTextElement", "geogebra.common.kernel.advanced", NULL, 0x1, 5, methods, 4, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelAdvancedAlgoTextElement;
}

@end

void GeogebraCommonKernelAdvancedAlgoTextElement_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoText_withGeogebraCommonKernelArithmeticNumberValue_(GeogebraCommonKernelAdvancedAlgoTextElement *self, GeogebraCommonKernelConstruction *cons, NSString *label, GeogebraCommonKernelGeosGeoText *text, id<GeogebraCommonKernelArithmeticNumberValue> num) {
  GeogebraCommonKernelAlgosAlgoElement_initWithGeogebraCommonKernelConstruction_(self, cons);
  GeogebraCommonKernelAdvancedAlgoTextElement_set_num_(self, nil);
  GeogebraCommonKernelAdvancedAlgoTextElement_set_text_(self, text);
  GeogebraCommonKernelAdvancedAlgoTextElement_set_num_(self, num);
  GeogebraCommonKernelAdvancedAlgoTextElement_set_numGeo_(self, [((id<GeogebraCommonKernelArithmeticNumberValue>) nil_chk(num)) toGeoElement]);
  GeogebraCommonKernelAdvancedAlgoTextElement_setAndConsume_textOut_(self, new_GeogebraCommonKernelGeosGeoText_initWithGeogebraCommonKernelConstruction_(cons));
  [self->textOut_ setIsTextCommandWithBoolean:YES];
  [self setInputOutput];
  GeogebraCommonKernelAdvancedAlgoTextElement_compute(self);
  [self->textOut_ setLabelWithNSString:label];
}

GeogebraCommonKernelAdvancedAlgoTextElement *new_GeogebraCommonKernelAdvancedAlgoTextElement_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoText_withGeogebraCommonKernelArithmeticNumberValue_(GeogebraCommonKernelConstruction *cons, NSString *label, GeogebraCommonKernelGeosGeoText *text, id<GeogebraCommonKernelArithmeticNumberValue> num) {
  GeogebraCommonKernelAdvancedAlgoTextElement *self = [GeogebraCommonKernelAdvancedAlgoTextElement alloc];
  GeogebraCommonKernelAdvancedAlgoTextElement_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoText_withGeogebraCommonKernelArithmeticNumberValue_(self, cons, label, text, num);
  return self;
}

void GeogebraCommonKernelAdvancedAlgoTextElement_compute(GeogebraCommonKernelAdvancedAlgoTextElement *self) {
  if (![((GeogebraCommonKernelGeosGeoElement *) nil_chk(self->numGeo_)) isDefined] || ![((GeogebraCommonKernelGeosGeoText *) nil_chk(self->text_)) isDefined]) {
    [((GeogebraCommonKernelGeosGeoText *) nil_chk(self->textOut_)) setUndefined];
    return;
  }
  NSString *str = [((GeogebraCommonKernelGeosGeoText *) nil_chk(self->text_)) getTextString];
  jint n = J2ObjCFpToInt([((GeogebraCommonKernelArithmeticMyDouble *) nil_chk([((id<GeogebraCommonKernelArithmeticNumberValue>) nil_chk(self->num_)) getNumber])) getDouble]);
  if (n < 1 || n > ((jint) [((NSString *) nil_chk(str)) length])) {
    [((GeogebraCommonKernelGeosGeoText *) nil_chk(self->textOut_)) setUndefined];
  }
  else {
    [((GeogebraCommonKernelGeosGeoText *) nil_chk(self->textOut_)) setTextStringWithNSString:JreStrcat("C", [str charAtWithInt:n - 1])];
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelAdvancedAlgoTextElement)
