//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/geogebra3D/kernel3D/algos/AlgoDependentPoint3D.java
//


#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "geogebra/common/geogebra3D/kernel3D/algos/AlgoDependentPoint3D.h"
#include "geogebra/common/geogebra3D/kernel3D/algos/AlgoElement3D.h"
#include "geogebra/common/geogebra3D/kernel3D/geos/GeoPoint3D.h"
#include "geogebra/common/kernel/Construction.h"
#include "geogebra/common/kernel/StringTemplate.h"
#include "geogebra/common/kernel/algos/AlgoElement.h"
#include "geogebra/common/kernel/algos/Algos.h"
#include "geogebra/common/kernel/arithmetic/ExpressionNode.h"
#include "geogebra/common/kernel/arithmetic/ExpressionValue.h"
#include "geogebra/common/kernel/arithmetic3D/Vector3DValue.h"
#include "java/lang/Double.h"
#include "java/lang/Exception.h"

#define GeogebraCommonGeogebra3DKernel3DAlgosAlgoDependentPoint3D_serialVersionUID 1LL

@interface GeogebraCommonGeogebra3DKernel3DAlgosAlgoDependentPoint3D () {
 @public
  GeogebraCommonKernelArithmeticExpressionNode *root_;
  GeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *P_;
  IOSDoubleArray *temp_;
}

@end

J2OBJC_FIELD_SETTER(GeogebraCommonGeogebra3DKernel3DAlgosAlgoDependentPoint3D, root_, GeogebraCommonKernelArithmeticExpressionNode *)
J2OBJC_FIELD_SETTER(GeogebraCommonGeogebra3DKernel3DAlgosAlgoDependentPoint3D, P_, GeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *)
J2OBJC_FIELD_SETTER(GeogebraCommonGeogebra3DKernel3DAlgosAlgoDependentPoint3D, temp_, IOSDoubleArray *)

J2OBJC_STATIC_FIELD_GETTER(GeogebraCommonGeogebra3DKernel3DAlgosAlgoDependentPoint3D, serialVersionUID, jlong)

__attribute__((unused)) static void GeogebraCommonGeogebra3DKernel3DAlgosAlgoDependentPoint3D_compute(GeogebraCommonGeogebra3DKernel3DAlgosAlgoDependentPoint3D *self);

@implementation GeogebraCommonGeogebra3DKernel3DAlgosAlgoDependentPoint3D

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                                            withNSString:(NSString *)label
        withGeogebraCommonKernelArithmeticExpressionNode:(GeogebraCommonKernelArithmeticExpressionNode *)root {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoDependentPoint3D_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelArithmeticExpressionNode_(self, cons, label, root);
  return self;
}

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
        withGeogebraCommonKernelArithmeticExpressionNode:(GeogebraCommonKernelArithmeticExpressionNode *)root {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoDependentPoint3D_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelArithmeticExpressionNode_(self, cons, root);
  return self;
}

- (GeogebraCommonKernelAlgosAlgosEnum *)getClassName {
  return GeogebraCommonKernelAlgosAlgosEnum_get_Expression();
}

- (void)setInputOutput {
  GeogebraCommonKernelAlgosAlgoElement_set_input_(self, [((GeogebraCommonKernelArithmeticExpressionNode *) nil_chk(root_)) getGeoElementVariables]);
  [self setOnlyOutputWithGeogebraCommonKernelGeosToGeoElement:P_];
  [self setDependencies];
}

- (GeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *)getPoint3D {
  return P_;
}

- (GeogebraCommonKernelArithmeticExpressionNode *)getExpressionNode {
  return root_;
}

- (void)compute {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoDependentPoint3D_compute(self);
}

- (NSString *)toStringWithGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl {
  return [((GeogebraCommonKernelArithmeticExpressionNode *) nil_chk(root_)) toStringWithGeogebraCommonKernelStringTemplate:tpl];
}

- (void)dealloc {
  RELEASE_(root_);
  RELEASE_(P_);
  RELEASE_(temp_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonKernelConstruction:withNSString:withGeogebraCommonKernelArithmeticExpressionNode:", "AlgoDependentPoint3D", NULL, 0x1, NULL, NULL },
    { "initWithGeogebraCommonKernelConstruction:withGeogebraCommonKernelArithmeticExpressionNode:", "AlgoDependentPoint3D", NULL, 0x1, NULL, NULL },
    { "getClassName", NULL, "Lgeogebra.common.kernel.algos.Algos;", 0x1, NULL, NULL },
    { "setInputOutput", NULL, "V", 0x4, NULL, NULL },
    { "getPoint3D", NULL, "Lgeogebra.common.geogebra3D.kernel3D.geos.GeoPoint3D;", 0x1, NULL, NULL },
    { "getExpressionNode", NULL, "Lgeogebra.common.kernel.arithmetic.ExpressionNode;", 0x1, NULL, NULL },
    { "compute", NULL, "V", 0x11, NULL, NULL },
    { "toStringWithGeogebraCommonKernelStringTemplate:", "toString", "Ljava.lang.String;", 0x11, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID_", NULL, 0x1a, "J", NULL, NULL, .constantValue.asLong = GeogebraCommonGeogebra3DKernel3DAlgosAlgoDependentPoint3D_serialVersionUID },
    { "root_", NULL, 0x2, "Lgeogebra.common.kernel.arithmetic.ExpressionNode;", NULL, NULL,  },
    { "P_", NULL, 0x2, "Lgeogebra.common.geogebra3D.kernel3D.geos.GeoPoint3D;", NULL, NULL,  },
    { "temp_", NULL, 0x2, "[D", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _GeogebraCommonGeogebra3DKernel3DAlgosAlgoDependentPoint3D = { 2, "AlgoDependentPoint3D", "geogebra.common.geogebra3D.kernel3D.algos", NULL, 0x1, 8, methods, 4, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonGeogebra3DKernel3DAlgosAlgoDependentPoint3D;
}

@end

void GeogebraCommonGeogebra3DKernel3DAlgosAlgoDependentPoint3D_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelArithmeticExpressionNode_(GeogebraCommonGeogebra3DKernel3DAlgosAlgoDependentPoint3D *self, GeogebraCommonKernelConstruction *cons, NSString *label, GeogebraCommonKernelArithmeticExpressionNode *root) {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoDependentPoint3D_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelArithmeticExpressionNode_(self, cons, root);
  [((GeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *) nil_chk(self->P_)) setLabelWithNSString:label];
}

GeogebraCommonGeogebra3DKernel3DAlgosAlgoDependentPoint3D *new_GeogebraCommonGeogebra3DKernel3DAlgosAlgoDependentPoint3D_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelArithmeticExpressionNode_(GeogebraCommonKernelConstruction *cons, NSString *label, GeogebraCommonKernelArithmeticExpressionNode *root) {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoDependentPoint3D *self = [GeogebraCommonGeogebra3DKernel3DAlgosAlgoDependentPoint3D alloc];
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoDependentPoint3D_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelArithmeticExpressionNode_(self, cons, label, root);
  return self;
}

void GeogebraCommonGeogebra3DKernel3DAlgosAlgoDependentPoint3D_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelArithmeticExpressionNode_(GeogebraCommonGeogebra3DKernel3DAlgosAlgoDependentPoint3D *self, GeogebraCommonKernelConstruction *cons, GeogebraCommonKernelArithmeticExpressionNode *root) {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoElement3D_initWithGeogebraCommonKernelConstruction_(self, cons);
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoDependentPoint3D_set_root_(self, root);
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoDependentPoint3D_setAndConsume_P_(self, new_GeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D_initWithGeogebraCommonKernelConstruction_(cons));
  [self setInputOutput];
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoDependentPoint3D_compute(self);
}

GeogebraCommonGeogebra3DKernel3DAlgosAlgoDependentPoint3D *new_GeogebraCommonGeogebra3DKernel3DAlgosAlgoDependentPoint3D_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelArithmeticExpressionNode_(GeogebraCommonKernelConstruction *cons, GeogebraCommonKernelArithmeticExpressionNode *root) {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoDependentPoint3D *self = [GeogebraCommonGeogebra3DKernel3DAlgosAlgoDependentPoint3D alloc];
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoDependentPoint3D_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelArithmeticExpressionNode_(self, cons, root);
  return self;
}

void GeogebraCommonGeogebra3DKernel3DAlgosAlgoDependentPoint3D_compute(GeogebraCommonGeogebra3DKernel3DAlgosAlgoDependentPoint3D *self) {
  @try {
    GeogebraCommonGeogebra3DKernel3DAlgosAlgoDependentPoint3D_set_temp_(self, [((id<GeogebraCommonKernelArithmetic3DVector3DValue>) nil_chk(((id<GeogebraCommonKernelArithmetic3DVector3DValue>) check_protocol_cast([((GeogebraCommonKernelArithmeticExpressionNode *) nil_chk(self->root_)) evaluateWithGeogebraCommonKernelStringTemplate:GeogebraCommonKernelStringTemplate_get_defaultTemplate_()], @protocol(GeogebraCommonKernelArithmetic3DVector3DValue))))) getPointAsDouble]);
    if (JavaLangDouble_isInfiniteWithDouble_(IOSDoubleArray_Get(nil_chk(self->temp_), 0)) || JavaLangDouble_isInfiniteWithDouble_(IOSDoubleArray_Get(self->temp_, 1)) || JavaLangDouble_isInfiniteWithDouble_(IOSDoubleArray_Get(self->temp_, 2))) {
      [((GeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *) nil_chk(self->P_)) setUndefined];
    }
    else {
      [((GeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *) nil_chk(self->P_)) setCoordsWithDouble:IOSDoubleArray_Get(self->temp_, 0) withDouble:IOSDoubleArray_Get(self->temp_, 1) withDouble:IOSDoubleArray_Get(self->temp_, 2) withDouble:1.0];
    }
  }
  @catch (JavaLangException *e) {
    [((GeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *) nil_chk(self->P_)) setUndefined];
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonGeogebra3DKernel3DAlgosAlgoDependentPoint3D)
