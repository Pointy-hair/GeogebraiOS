//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/org/apache/commons/collections15/iterators/ObjectArrayIterator.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/ArrayIndexOutOfBoundsException.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/IllegalStateException.h"
#include "java/lang/UnsupportedOperationException.h"
#include "java/util/NoSuchElementException.h"
#include "org/apache/commons/collections15/iterators/ObjectArrayIterator.h"

@implementation OrgApacheCommonsCollections15IteratorsObjectArrayIterator

- (instancetype)init {
  OrgApacheCommonsCollections15IteratorsObjectArrayIterator_init(self);
  return self;
}

- (instancetype)initWithNSObjectArray:(IOSObjectArray *)array {
  OrgApacheCommonsCollections15IteratorsObjectArrayIterator_initWithNSObjectArray_(self, array);
  return self;
}

- (instancetype)initWithNSObjectArray:(IOSObjectArray *)array
                              withInt:(jint)start {
  OrgApacheCommonsCollections15IteratorsObjectArrayIterator_initWithNSObjectArray_withInt_(self, array, start);
  return self;
}

- (instancetype)initWithNSObjectArray:(IOSObjectArray *)array
                              withInt:(jint)start
                              withInt:(jint)end {
  OrgApacheCommonsCollections15IteratorsObjectArrayIterator_initWithNSObjectArray_withInt_withInt_(self, array, start, end);
  return self;
}

- (jboolean)hasNext {
  return (self->index_ < self->endIndex_);
}

- (id)next {
  if ([self hasNext] == NO) {
    @throw [new_JavaUtilNoSuchElementException_init() autorelease];
  }
  return IOSObjectArray_Get(nil_chk(self->array_), self->index_++);
}

- (void)remove {
  @throw [new_JavaLangUnsupportedOperationException_initWithNSString_(@"remove() method is not supported for an ObjectArrayIterator") autorelease];
}

- (IOSObjectArray *)getArray {
  return self->array_;
}

- (void)setArrayWithNSObjectArray:(IOSObjectArray *)array {
  if (self->array_ != nil) {
    @throw [new_JavaLangIllegalStateException_initWithNSString_(@"The array to iterate over has already been set") autorelease];
  }
  OrgApacheCommonsCollections15IteratorsObjectArrayIterator_set_array_(self, array);
  self->startIndex_ = 0;
  self->endIndex_ = ((IOSObjectArray *) nil_chk(array))->size_;
  self->index_ = 0;
}

- (jint)getStartIndex {
  return self->startIndex_;
}

- (jint)getEndIndex {
  return self->endIndex_;
}

- (void)reset {
  self->index_ = self->startIndex_;
}

- (void)dealloc {
  RELEASE_(array_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "ObjectArrayIterator", NULL, 0x1, NULL, NULL },
    { "initWithNSObjectArray:", "ObjectArrayIterator", NULL, 0x1, NULL, NULL },
    { "initWithNSObjectArray:withInt:", "ObjectArrayIterator", NULL, 0x1, NULL, NULL },
    { "initWithNSObjectArray:withInt:withInt:", "ObjectArrayIterator", NULL, 0x1, NULL, NULL },
    { "hasNext", NULL, "Z", 0x1, NULL, NULL },
    { "next", NULL, "TE;", 0x1, NULL, "()TE;" },
    { "remove", NULL, "V", 0x1, NULL, NULL },
    { "getArray", NULL, "[Ljava.lang.Object;", 0x1, NULL, NULL },
    { "setArrayWithNSObjectArray:", "setArray", "V", 0x1, NULL, NULL },
    { "getStartIndex", NULL, "I", 0x1, NULL, NULL },
    { "getEndIndex", NULL, "I", 0x1, NULL, NULL },
    { "reset", NULL, "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "array_", NULL, 0x4, "[Ljava.lang.Object;", NULL, "[TE;",  },
    { "startIndex_", NULL, 0x4, "I", NULL, NULL,  },
    { "endIndex_", NULL, 0x4, "I", NULL, NULL,  },
    { "index_", NULL, 0x4, "I", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgApacheCommonsCollections15IteratorsObjectArrayIterator = { 2, "ObjectArrayIterator", "org.apache.commons.collections15.iterators", NULL, 0x1, 12, methods, 4, fields, 0, NULL, 0, NULL, NULL, "<E:Ljava/lang/Object;>Ljava/lang/Object;Ljava/util/Iterator<TE;>;Lorg/apache/commons/collections15/ResettableIterator<TE;>;" };
  return &_OrgApacheCommonsCollections15IteratorsObjectArrayIterator;
}

@end

void OrgApacheCommonsCollections15IteratorsObjectArrayIterator_init(OrgApacheCommonsCollections15IteratorsObjectArrayIterator *self) {
  NSObject_init(self);
  OrgApacheCommonsCollections15IteratorsObjectArrayIterator_set_array_(self, nil);
  self->startIndex_ = 0;
  self->endIndex_ = 0;
  self->index_ = 0;
}

OrgApacheCommonsCollections15IteratorsObjectArrayIterator *new_OrgApacheCommonsCollections15IteratorsObjectArrayIterator_init() {
  OrgApacheCommonsCollections15IteratorsObjectArrayIterator *self = [OrgApacheCommonsCollections15IteratorsObjectArrayIterator alloc];
  OrgApacheCommonsCollections15IteratorsObjectArrayIterator_init(self);
  return self;
}

void OrgApacheCommonsCollections15IteratorsObjectArrayIterator_initWithNSObjectArray_(OrgApacheCommonsCollections15IteratorsObjectArrayIterator *self, IOSObjectArray *array) {
  OrgApacheCommonsCollections15IteratorsObjectArrayIterator_initWithNSObjectArray_withInt_withInt_(self, array, 0, ((IOSObjectArray *) nil_chk(array))->size_);
}

OrgApacheCommonsCollections15IteratorsObjectArrayIterator *new_OrgApacheCommonsCollections15IteratorsObjectArrayIterator_initWithNSObjectArray_(IOSObjectArray *array) {
  OrgApacheCommonsCollections15IteratorsObjectArrayIterator *self = [OrgApacheCommonsCollections15IteratorsObjectArrayIterator alloc];
  OrgApacheCommonsCollections15IteratorsObjectArrayIterator_initWithNSObjectArray_(self, array);
  return self;
}

void OrgApacheCommonsCollections15IteratorsObjectArrayIterator_initWithNSObjectArray_withInt_(OrgApacheCommonsCollections15IteratorsObjectArrayIterator *self, IOSObjectArray *array, jint start) {
  OrgApacheCommonsCollections15IteratorsObjectArrayIterator_initWithNSObjectArray_withInt_withInt_(self, array, start, ((IOSObjectArray *) nil_chk(array))->size_);
}

OrgApacheCommonsCollections15IteratorsObjectArrayIterator *new_OrgApacheCommonsCollections15IteratorsObjectArrayIterator_initWithNSObjectArray_withInt_(IOSObjectArray *array, jint start) {
  OrgApacheCommonsCollections15IteratorsObjectArrayIterator *self = [OrgApacheCommonsCollections15IteratorsObjectArrayIterator alloc];
  OrgApacheCommonsCollections15IteratorsObjectArrayIterator_initWithNSObjectArray_withInt_(self, array, start);
  return self;
}

void OrgApacheCommonsCollections15IteratorsObjectArrayIterator_initWithNSObjectArray_withInt_withInt_(OrgApacheCommonsCollections15IteratorsObjectArrayIterator *self, IOSObjectArray *array, jint start, jint end) {
  NSObject_init(self);
  OrgApacheCommonsCollections15IteratorsObjectArrayIterator_set_array_(self, nil);
  self->startIndex_ = 0;
  self->endIndex_ = 0;
  self->index_ = 0;
  if (start < 0) {
    @throw [new_JavaLangArrayIndexOutOfBoundsException_initWithNSString_(@"Start index must not be less than zero") autorelease];
  }
  if (end > ((IOSObjectArray *) nil_chk(array))->size_) {
    @throw [new_JavaLangArrayIndexOutOfBoundsException_initWithNSString_(@"End index must not be greater than the array length") autorelease];
  }
  if (start > array->size_) {
    @throw [new_JavaLangArrayIndexOutOfBoundsException_initWithNSString_(@"Start index must not be greater than the array length") autorelease];
  }
  if (end < start) {
    @throw [new_JavaLangIllegalArgumentException_initWithNSString_(@"End index must not be less than start index") autorelease];
  }
  OrgApacheCommonsCollections15IteratorsObjectArrayIterator_set_array_(self, array);
  self->startIndex_ = start;
  self->endIndex_ = end;
  self->index_ = start;
}

OrgApacheCommonsCollections15IteratorsObjectArrayIterator *new_OrgApacheCommonsCollections15IteratorsObjectArrayIterator_initWithNSObjectArray_withInt_withInt_(IOSObjectArray *array, jint start, jint end) {
  OrgApacheCommonsCollections15IteratorsObjectArrayIterator *self = [OrgApacheCommonsCollections15IteratorsObjectArrayIterator alloc];
  OrgApacheCommonsCollections15IteratorsObjectArrayIterator_initWithNSObjectArray_withInt_withInt_(self, array, start, end);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheCommonsCollections15IteratorsObjectArrayIterator)
