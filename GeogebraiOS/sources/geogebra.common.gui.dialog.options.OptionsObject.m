//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/gui/dialog/options/OptionsObject.java
//


#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "geogebra/common/gui/dialog/options/OptionsObject.h"
#include "geogebra/common/kernel/Kernel.h"
#include "geogebra/common/kernel/geos/GeoElement.h"
#include "geogebra/common/main/App.h"
#include "geogebra/common/main/Localization.h"
#include "java/lang/StringBuilder.h"
#include "java/util/ArrayList.h"

@interface GeogebraCommonGuiDialogOptionsOptionsObject () {
 @public
  JavaLangStringBuilder *sb_;
}

@end

J2OBJC_FIELD_SETTER(GeogebraCommonGuiDialogOptionsOptionsObject, sb_, JavaLangStringBuilder *)

@implementation GeogebraCommonGuiDialogOptionsOptionsObject

- (void)addWithGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)geo {
  GeogebraCommonGuiDialogOptionsOptionsObject_set_geoAdded_(self, geo);
}

- (void)forgetGeoAdded {
  GeogebraCommonGuiDialogOptionsOptionsObject_set_geoAdded_(self, nil);
}

- (GeogebraCommonKernelGeosGeoElement *)consumeGeoAdded {
  GeogebraCommonKernelGeosGeoElement *ret = geoAdded_;
  [self forgetGeoAdded];
  return ret;
}

- (NSString *)getSelectionDescription {
  if (selection_ == nil || [selection_ size] == 0) {
    return [((GeogebraCommonMainApp *) nil_chk(app_)) getPlainWithNSString:@"Properties"];
  }
  else if ([selection_ size] == 1) {
    GeogebraCommonKernelGeosGeoElement *geo = [selection_ getWithInt:0];
    [((JavaLangStringBuilder *) nil_chk(sb_)) setLengthWithInt:0];
    [sb_ appendWithNSString:@"<html>"];
    [sb_ appendWithNSString:[((GeogebraCommonMainLocalization *) nil_chk([((GeogebraCommonMainApp *) nil_chk(app_)) getLocalization])) getPlainWithNSString:@"PropertiesOfA" withNSString:[((GeogebraCommonKernelGeosGeoElement *) nil_chk(geo)) getNameDescriptionHTMLWithBoolean:NO withBoolean:NO]]];
    [sb_ appendWithNSString:@"</html>"];
    return [sb_ description];
  }
  else {
    return [((GeogebraCommonMainLocalization *) nil_chk([((GeogebraCommonMainApp *) nil_chk(app_)) getLocalization])) getPlainWithNSString:@"PropertiesOfA" withNSString:[app_ getPlainWithNSString:@"Selection"]];
  }
}

- (instancetype)init {
  GeogebraCommonGuiDialogOptionsOptionsObject_init(self);
  return self;
}

- (void)dealloc {
  RELEASE_(kernel_);
  RELEASE_(geoAdded_);
  RELEASE_(selection_);
  RELEASE_(sb_);
  RELEASE_(app_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "addWithGeogebraCommonKernelGeosGeoElement:", "add", "V", 0x1, NULL, NULL },
    { "forgetGeoAdded", NULL, "V", 0x1, NULL, NULL },
    { "consumeGeoAdded", NULL, "Lgeogebra.common.kernel.geos.GeoElement;", 0x1, NULL, NULL },
    { "getSelectionDescription", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "init", NULL, NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "MIN_LIST_WIDTH_", NULL, 0x1c, "I", NULL, NULL, .constantValue.asInt = GeogebraCommonGuiDialogOptionsOptionsObject_MIN_LIST_WIDTH },
    { "TEXT_FIELD_FRACTION_DIGITS_", NULL, 0x19, "I", NULL, NULL, .constantValue.asInt = GeogebraCommonGuiDialogOptionsOptionsObject_TEXT_FIELD_FRACTION_DIGITS },
    { "kernel_", NULL, 0x4, "Lgeogebra.common.kernel.Kernel;", NULL, NULL,  },
    { "SLIDER_MAX_WIDTH_", NULL, 0x19, "I", NULL, NULL, .constantValue.asInt = GeogebraCommonGuiDialogOptionsOptionsObject_SLIDER_MAX_WIDTH },
    { "MIN_WIDTH_", NULL, 0x1c, "I", NULL, NULL, .constantValue.asInt = GeogebraCommonGuiDialogOptionsOptionsObject_MIN_WIDTH },
    { "MIN_HEIGHT_", NULL, 0x1c, "I", NULL, NULL, .constantValue.asInt = GeogebraCommonGuiDialogOptionsOptionsObject_MIN_HEIGHT },
    { "geoAdded_", NULL, 0x4, "Lgeogebra.common.kernel.geos.GeoElement;", NULL, NULL,  },
    { "firstTime_", NULL, 0x4, "Z", NULL, NULL,  },
    { "selection_", NULL, 0x4, "Ljava.util.ArrayList;", NULL, "Ljava/util/ArrayList<Lgeogebra/common/kernel/geos/GeoElement;>;",  },
    { "sb_", NULL, 0x2, "Ljava.lang.StringBuilder;", NULL, NULL,  },
    { "app_", NULL, 0x1, "Lgeogebra.common.main.App;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _GeogebraCommonGuiDialogOptionsOptionsObject = { 2, "OptionsObject", "geogebra.common.gui.dialog.options", NULL, 0x401, 5, methods, 11, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonGuiDialogOptionsOptionsObject;
}

@end

void GeogebraCommonGuiDialogOptionsOptionsObject_init(GeogebraCommonGuiDialogOptionsOptionsObject *self) {
  NSObject_init(self);
  GeogebraCommonGuiDialogOptionsOptionsObject_set_geoAdded_(self, nil);
  self->firstTime_ = YES;
  GeogebraCommonGuiDialogOptionsOptionsObject_setAndConsume_sb_(self, new_JavaLangStringBuilder_init());
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonGuiDialogOptionsOptionsObject)
