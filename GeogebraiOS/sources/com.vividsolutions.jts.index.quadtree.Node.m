//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/com/vividsolutions/jts/index/quadtree/Node.java
//


#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "com/vividsolutions/jts/geom/Coordinate.h"
#include "com/vividsolutions/jts/geom/Envelope.h"
#include "com/vividsolutions/jts/index/quadtree/Key.h"
#include "com/vividsolutions/jts/index/quadtree/Node.h"
#include "com/vividsolutions/jts/index/quadtree/NodeBase.h"
#include "com/vividsolutions/jts/util/Assert.h"

@interface ComVividsolutionsJtsIndexQuadtreeNode () {
 @public
  ComVividsolutionsJtsGeomEnvelope *env_;
  ComVividsolutionsJtsGeomCoordinate *centre_;
  jint level_;
}

- (ComVividsolutionsJtsIndexQuadtreeNode *)getSubnodeWithInt:(jint)index;

- (ComVividsolutionsJtsIndexQuadtreeNode *)createSubnodeWithInt:(jint)index;

@end

J2OBJC_FIELD_SETTER(ComVividsolutionsJtsIndexQuadtreeNode, env_, ComVividsolutionsJtsGeomEnvelope *)
J2OBJC_FIELD_SETTER(ComVividsolutionsJtsIndexQuadtreeNode, centre_, ComVividsolutionsJtsGeomCoordinate *)

__attribute__((unused)) static ComVividsolutionsJtsIndexQuadtreeNode *ComVividsolutionsJtsIndexQuadtreeNode_getSubnodeWithInt_(ComVividsolutionsJtsIndexQuadtreeNode *self, jint index);

__attribute__((unused)) static ComVividsolutionsJtsIndexQuadtreeNode *ComVividsolutionsJtsIndexQuadtreeNode_createSubnodeWithInt_(ComVividsolutionsJtsIndexQuadtreeNode *self, jint index);

@implementation ComVividsolutionsJtsIndexQuadtreeNode

+ (ComVividsolutionsJtsIndexQuadtreeNode *)createNodeWithComVividsolutionsJtsGeomEnvelope:(ComVividsolutionsJtsGeomEnvelope *)env {
  return ComVividsolutionsJtsIndexQuadtreeNode_createNodeWithComVividsolutionsJtsGeomEnvelope_(env);
}

+ (ComVividsolutionsJtsIndexQuadtreeNode *)createExpandedWithComVividsolutionsJtsIndexQuadtreeNode:(ComVividsolutionsJtsIndexQuadtreeNode *)node
                                                              withComVividsolutionsJtsGeomEnvelope:(ComVividsolutionsJtsGeomEnvelope *)addEnv {
  return ComVividsolutionsJtsIndexQuadtreeNode_createExpandedWithComVividsolutionsJtsIndexQuadtreeNode_withComVividsolutionsJtsGeomEnvelope_(node, addEnv);
}

- (instancetype)initWithComVividsolutionsJtsGeomEnvelope:(ComVividsolutionsJtsGeomEnvelope *)env
                                                 withInt:(jint)level {
  ComVividsolutionsJtsIndexQuadtreeNode_initWithComVividsolutionsJtsGeomEnvelope_withInt_(self, env, level);
  return self;
}

- (ComVividsolutionsJtsGeomEnvelope *)getEnvelope {
  return env_;
}

- (jboolean)isSearchMatchWithComVividsolutionsJtsGeomEnvelope:(ComVividsolutionsJtsGeomEnvelope *)searchEnv {
  return [((ComVividsolutionsJtsGeomEnvelope *) nil_chk(env_)) intersectsWithComVividsolutionsJtsGeomEnvelope:searchEnv];
}

- (ComVividsolutionsJtsIndexQuadtreeNode *)getNodeWithComVividsolutionsJtsGeomEnvelope:(ComVividsolutionsJtsGeomEnvelope *)searchEnv {
  jint subnodeIndex = ComVividsolutionsJtsIndexQuadtreeNodeBase_getSubnodeIndexWithComVividsolutionsJtsGeomEnvelope_withComVividsolutionsJtsGeomCoordinate_(searchEnv, centre_);
  if (subnodeIndex != -1) {
    ComVividsolutionsJtsIndexQuadtreeNode *node = ComVividsolutionsJtsIndexQuadtreeNode_getSubnodeWithInt_(self, subnodeIndex);
    return [((ComVividsolutionsJtsIndexQuadtreeNode *) nil_chk(node)) getNodeWithComVividsolutionsJtsGeomEnvelope:searchEnv];
  }
  else {
    return self;
  }
}

- (ComVividsolutionsJtsIndexQuadtreeNodeBase *)findWithComVividsolutionsJtsGeomEnvelope:(ComVividsolutionsJtsGeomEnvelope *)searchEnv {
  jint subnodeIndex = ComVividsolutionsJtsIndexQuadtreeNodeBase_getSubnodeIndexWithComVividsolutionsJtsGeomEnvelope_withComVividsolutionsJtsGeomCoordinate_(searchEnv, centre_);
  if (subnodeIndex == -1) return self;
  if (IOSObjectArray_Get(nil_chk(subnode_), subnodeIndex) != nil) {
    ComVividsolutionsJtsIndexQuadtreeNode *node = IOSObjectArray_Get(subnode_, subnodeIndex);
    return [((ComVividsolutionsJtsIndexQuadtreeNode *) nil_chk(node)) findWithComVividsolutionsJtsGeomEnvelope:searchEnv];
  }
  return self;
}

- (void)insertNodeWithComVividsolutionsJtsIndexQuadtreeNode:(ComVividsolutionsJtsIndexQuadtreeNode *)node {
  ComVividsolutionsJtsUtilAssert_isTrueWithBoolean_(env_ == nil || [env_ containsWithComVividsolutionsJtsGeomEnvelope:((ComVividsolutionsJtsIndexQuadtreeNode *) nil_chk(node))->env_]);
  jint index = ComVividsolutionsJtsIndexQuadtreeNodeBase_getSubnodeIndexWithComVividsolutionsJtsGeomEnvelope_withComVividsolutionsJtsGeomCoordinate_(((ComVividsolutionsJtsIndexQuadtreeNode *) nil_chk(node))->env_, centre_);
  if (node->level_ == level_ - 1) {
    IOSObjectArray_Set(nil_chk(subnode_), index, node);
  }
  else {
    ComVividsolutionsJtsIndexQuadtreeNode *childNode = ComVividsolutionsJtsIndexQuadtreeNode_createSubnodeWithInt_(self, index);
    [((ComVividsolutionsJtsIndexQuadtreeNode *) nil_chk(childNode)) insertNodeWithComVividsolutionsJtsIndexQuadtreeNode:node];
    IOSObjectArray_Set(nil_chk(subnode_), index, childNode);
  }
}

- (ComVividsolutionsJtsIndexQuadtreeNode *)getSubnodeWithInt:(jint)index {
  return ComVividsolutionsJtsIndexQuadtreeNode_getSubnodeWithInt_(self, index);
}

- (ComVividsolutionsJtsIndexQuadtreeNode *)createSubnodeWithInt:(jint)index {
  return ComVividsolutionsJtsIndexQuadtreeNode_createSubnodeWithInt_(self, index);
}

- (void)dealloc {
  RELEASE_(env_);
  RELEASE_(centre_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "createNodeWithComVividsolutionsJtsGeomEnvelope:", "createNode", "Lcom.vividsolutions.jts.index.quadtree.Node;", 0x9, NULL, NULL },
    { "createExpandedWithComVividsolutionsJtsIndexQuadtreeNode:withComVividsolutionsJtsGeomEnvelope:", "createExpanded", "Lcom.vividsolutions.jts.index.quadtree.Node;", 0x9, NULL, NULL },
    { "initWithComVividsolutionsJtsGeomEnvelope:withInt:", "Node", NULL, 0x1, NULL, NULL },
    { "getEnvelope", NULL, "Lcom.vividsolutions.jts.geom.Envelope;", 0x1, NULL, NULL },
    { "isSearchMatchWithComVividsolutionsJtsGeomEnvelope:", "isSearchMatch", "Z", 0x4, NULL, NULL },
    { "getNodeWithComVividsolutionsJtsGeomEnvelope:", "getNode", "Lcom.vividsolutions.jts.index.quadtree.Node;", 0x1, NULL, NULL },
    { "findWithComVividsolutionsJtsGeomEnvelope:", "find", "Lcom.vividsolutions.jts.index.quadtree.NodeBase;", 0x1, NULL, NULL },
    { "insertNodeWithComVividsolutionsJtsIndexQuadtreeNode:", "insertNode", "V", 0x0, NULL, NULL },
    { "getSubnodeWithInt:", "getSubnode", "Lcom.vividsolutions.jts.index.quadtree.Node;", 0x2, NULL, NULL },
    { "createSubnodeWithInt:", "createSubnode", "Lcom.vividsolutions.jts.index.quadtree.Node;", 0x2, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "env_", NULL, 0x2, "Lcom.vividsolutions.jts.geom.Envelope;", NULL, NULL,  },
    { "centre_", NULL, 0x2, "Lcom.vividsolutions.jts.geom.Coordinate;", NULL, NULL,  },
    { "level_", NULL, 0x2, "I", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _ComVividsolutionsJtsIndexQuadtreeNode = { 2, "Node", "com.vividsolutions.jts.index.quadtree", NULL, 0x1, 10, methods, 3, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ComVividsolutionsJtsIndexQuadtreeNode;
}

@end

ComVividsolutionsJtsIndexQuadtreeNode *ComVividsolutionsJtsIndexQuadtreeNode_createNodeWithComVividsolutionsJtsGeomEnvelope_(ComVividsolutionsJtsGeomEnvelope *env) {
  ComVividsolutionsJtsIndexQuadtreeNode_initialize();
  ComVividsolutionsJtsIndexQuadtreeKey *key = [new_ComVividsolutionsJtsIndexQuadtreeKey_initWithComVividsolutionsJtsGeomEnvelope_(env) autorelease];
  ComVividsolutionsJtsIndexQuadtreeNode *node = [new_ComVividsolutionsJtsIndexQuadtreeNode_initWithComVividsolutionsJtsGeomEnvelope_withInt_([key getEnvelope], [key getLevel]) autorelease];
  return node;
}

ComVividsolutionsJtsIndexQuadtreeNode *ComVividsolutionsJtsIndexQuadtreeNode_createExpandedWithComVividsolutionsJtsIndexQuadtreeNode_withComVividsolutionsJtsGeomEnvelope_(ComVividsolutionsJtsIndexQuadtreeNode *node, ComVividsolutionsJtsGeomEnvelope *addEnv) {
  ComVividsolutionsJtsIndexQuadtreeNode_initialize();
  ComVividsolutionsJtsGeomEnvelope *expandEnv = [new_ComVividsolutionsJtsGeomEnvelope_initWithComVividsolutionsJtsGeomEnvelope_(addEnv) autorelease];
  if (node != nil) [expandEnv expandToIncludeWithComVividsolutionsJtsGeomEnvelope:node->env_];
  ComVividsolutionsJtsIndexQuadtreeNode *largerNode = ComVividsolutionsJtsIndexQuadtreeNode_createNodeWithComVividsolutionsJtsGeomEnvelope_(expandEnv);
  if (node != nil) [((ComVividsolutionsJtsIndexQuadtreeNode *) nil_chk(largerNode)) insertNodeWithComVividsolutionsJtsIndexQuadtreeNode:node];
  return largerNode;
}

void ComVividsolutionsJtsIndexQuadtreeNode_initWithComVividsolutionsJtsGeomEnvelope_withInt_(ComVividsolutionsJtsIndexQuadtreeNode *self, ComVividsolutionsJtsGeomEnvelope *env, jint level) {
  ComVividsolutionsJtsIndexQuadtreeNodeBase_init(self);
  ComVividsolutionsJtsIndexQuadtreeNode_set_env_(self, env);
  self->level_ = level;
  ComVividsolutionsJtsIndexQuadtreeNode_setAndConsume_centre_(self, new_ComVividsolutionsJtsGeomCoordinate_init());
  self->centre_->x_ = ([((ComVividsolutionsJtsGeomEnvelope *) nil_chk(env)) getMinX] + [env getMaxX]) / 2;
  self->centre_->y_ = ([env getMinY] + [env getMaxY]) / 2;
}

ComVividsolutionsJtsIndexQuadtreeNode *new_ComVividsolutionsJtsIndexQuadtreeNode_initWithComVividsolutionsJtsGeomEnvelope_withInt_(ComVividsolutionsJtsGeomEnvelope *env, jint level) {
  ComVividsolutionsJtsIndexQuadtreeNode *self = [ComVividsolutionsJtsIndexQuadtreeNode alloc];
  ComVividsolutionsJtsIndexQuadtreeNode_initWithComVividsolutionsJtsGeomEnvelope_withInt_(self, env, level);
  return self;
}

ComVividsolutionsJtsIndexQuadtreeNode *ComVividsolutionsJtsIndexQuadtreeNode_getSubnodeWithInt_(ComVividsolutionsJtsIndexQuadtreeNode *self, jint index) {
  if (IOSObjectArray_Get(nil_chk(self->subnode_), index) == nil) {
    IOSObjectArray_Set(self->subnode_, index, ComVividsolutionsJtsIndexQuadtreeNode_createSubnodeWithInt_(self, index));
  }
  return IOSObjectArray_Get(self->subnode_, index);
}

ComVividsolutionsJtsIndexQuadtreeNode *ComVividsolutionsJtsIndexQuadtreeNode_createSubnodeWithInt_(ComVividsolutionsJtsIndexQuadtreeNode *self, jint index) {
  jdouble minx = 0.0;
  jdouble maxx = 0.0;
  jdouble miny = 0.0;
  jdouble maxy = 0.0;
  switch (index) {
    case 0:
    minx = [((ComVividsolutionsJtsGeomEnvelope *) nil_chk(self->env_)) getMinX];
    maxx = ((ComVividsolutionsJtsGeomCoordinate *) nil_chk(self->centre_))->x_;
    miny = [self->env_ getMinY];
    maxy = self->centre_->y_;
    break;
    case 1:
    minx = ((ComVividsolutionsJtsGeomCoordinate *) nil_chk(self->centre_))->x_;
    maxx = [((ComVividsolutionsJtsGeomEnvelope *) nil_chk(self->env_)) getMaxX];
    miny = [self->env_ getMinY];
    maxy = self->centre_->y_;
    break;
    case 2:
    minx = [((ComVividsolutionsJtsGeomEnvelope *) nil_chk(self->env_)) getMinX];
    maxx = ((ComVividsolutionsJtsGeomCoordinate *) nil_chk(self->centre_))->x_;
    miny = self->centre_->y_;
    maxy = [self->env_ getMaxY];
    break;
    case 3:
    minx = ((ComVividsolutionsJtsGeomCoordinate *) nil_chk(self->centre_))->x_;
    maxx = [((ComVividsolutionsJtsGeomEnvelope *) nil_chk(self->env_)) getMaxX];
    miny = self->centre_->y_;
    maxy = [self->env_ getMaxY];
    break;
  }
  ComVividsolutionsJtsGeomEnvelope *sqEnv = [new_ComVividsolutionsJtsGeomEnvelope_initWithDouble_withDouble_withDouble_withDouble_(minx, maxx, miny, maxy) autorelease];
  ComVividsolutionsJtsIndexQuadtreeNode *node = [new_ComVividsolutionsJtsIndexQuadtreeNode_initWithComVividsolutionsJtsGeomEnvelope_withInt_(sqEnv, self->level_ - 1) autorelease];
  return node;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComVividsolutionsJtsIndexQuadtreeNode)
