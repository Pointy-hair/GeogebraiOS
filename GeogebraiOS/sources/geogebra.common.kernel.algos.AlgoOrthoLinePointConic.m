//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/algos/AlgoOrthoLinePointConic.java
//


#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "geogebra/common/euclidian/EuclidianConstants.h"
#include "geogebra/common/kernel/Construction.h"
#include "geogebra/common/kernel/StringTemplate.h"
#include "geogebra/common/kernel/algos/AlgoClosestPoint.h"
#include "geogebra/common/kernel/algos/AlgoElement.h"
#include "geogebra/common/kernel/algos/AlgoOrthoLinePointConic.h"
#include "geogebra/common/kernel/algos/AlgoPointOnPath.h"
#include "geogebra/common/kernel/algos/ConstructionElement.h"
#include "geogebra/common/kernel/commands/Commands.h"
#include "geogebra/common/kernel/geos/GeoConic.h"
#include "geogebra/common/kernel/geos/GeoElement.h"
#include "geogebra/common/kernel/geos/GeoLine.h"
#include "geogebra/common/kernel/geos/GeoNumeric.h"
#include "geogebra/common/kernel/geos/GeoPoint.h"
#include "geogebra/common/kernel/geos/GeoVec3D.h"
#include "geogebra/common/kernel/kernelND/GeoPointND.h"
#include "geogebra/common/main/Localization.h"

@interface GeogebraCommonKernelAlgosAlgoOrthoLinePointConic () {
 @public
  GeogebraCommonKernelGeosGeoPoint *P_;
  GeogebraCommonKernelGeosGeoConic *l_;
  IOSObjectArray *g_;
  IOSObjectArray *n_;
  IOSObjectArray *algoPoint_;
  GeogebraCommonKernelAlgosAlgoClosestPoint *closestPoint_;
}

- (void)addIncidence;

@end

J2OBJC_FIELD_SETTER(GeogebraCommonKernelAlgosAlgoOrthoLinePointConic, P_, GeogebraCommonKernelGeosGeoPoint *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelAlgosAlgoOrthoLinePointConic, l_, GeogebraCommonKernelGeosGeoConic *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelAlgosAlgoOrthoLinePointConic, g_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelAlgosAlgoOrthoLinePointConic, n_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelAlgosAlgoOrthoLinePointConic, algoPoint_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelAlgosAlgoOrthoLinePointConic, closestPoint_, GeogebraCommonKernelAlgosAlgoClosestPoint *)

__attribute__((unused)) static void GeogebraCommonKernelAlgosAlgoOrthoLinePointConic_addIncidence(GeogebraCommonKernelAlgosAlgoOrthoLinePointConic *self);

__attribute__((unused)) static void GeogebraCommonKernelAlgosAlgoOrthoLinePointConic_compute(GeogebraCommonKernelAlgosAlgoOrthoLinePointConic *self);

@implementation GeogebraCommonKernelAlgosAlgoOrthoLinePointConic

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                                            withNSString:(NSString *)label
                    withGeogebraCommonKernelGeosGeoPoint:(GeogebraCommonKernelGeosGeoPoint *)P
                    withGeogebraCommonKernelGeosGeoConic:(GeogebraCommonKernelGeosGeoConic *)l {
  GeogebraCommonKernelAlgosAlgoOrthoLinePointConic_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoPoint_withGeogebraCommonKernelGeosGeoConic_(self, cons, label, P, l);
  return self;
}

- (GeogebraCommonKernelCommandsCommandsEnum *)getClassName {
  return GeogebraCommonKernelCommandsCommandsEnum_get_OrthogonalLine();
}

- (jint)getRelatedModeID {
  return GeogebraCommonEuclidianEuclidianConstants_MODE_ORTHOGONAL;
}

- (void)addIncidence {
  GeogebraCommonKernelAlgosAlgoOrthoLinePointConic_addIncidence(self);
}

- (void)setInputOutput {
  GeogebraCommonKernelAlgosAlgoElement_setAndConsume_input_(self, [IOSObjectArray newArrayWithLength:2 type:GeogebraCommonKernelGeosGeoElement_class_()]);
  IOSObjectArray_Set(input_, 0, P_);
  IOSObjectArray_Set(input_, 1, [((GeogebraCommonKernelGeosGeoConic *) nil_chk(l_)) toGeoElement]);
  [self setOutputLengthWithInt:4];
  for (jint i = 0; i < 4; i++) [self setOutputWithInt:i withGeogebraCommonKernelGeosGeoElement:IOSObjectArray_Get(nil_chk(g_), i)];
  [self setDependencies];
}

- (GeogebraCommonKernelGeosGeoConic *)getC {
  return l_;
}

- (IOSObjectArray *)getLines {
  return g_;
}

- (GeogebraCommonKernelGeosGeoPoint *)getP {
  return P_;
}

- (void)compute {
  GeogebraCommonKernelAlgosAlgoOrthoLinePointConic_compute(self);
}

- (NSString *)toStringWithGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl {
  return [((GeogebraCommonMainLocalization *) nil_chk([self getLoc])) getPlainWithNSString:@"LineThroughAPerpendicularToB" withNSString:[((GeogebraCommonKernelGeosGeoPoint *) nil_chk(P_)) getLabelWithGeogebraCommonKernelStringTemplate:tpl] withNSString:[((GeogebraCommonKernelGeosGeoElement *) nil_chk([((GeogebraCommonKernelGeosGeoConic *) nil_chk(l_)) toGeoElement])) getLabelWithGeogebraCommonKernelStringTemplate:tpl]];
}

- (void)dealloc {
  RELEASE_(P_);
  RELEASE_(l_);
  RELEASE_(g_);
  RELEASE_(n_);
  RELEASE_(algoPoint_);
  RELEASE_(closestPoint_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonKernelConstruction:withNSString:withGeogebraCommonKernelGeosGeoPoint:withGeogebraCommonKernelGeosGeoConic:", "AlgoOrthoLinePointConic", NULL, 0x1, NULL, NULL },
    { "getClassName", NULL, "Lgeogebra.common.kernel.commands.Commands;", 0x1, NULL, NULL },
    { "getRelatedModeID", NULL, "I", 0x1, NULL, NULL },
    { "addIncidence", NULL, "V", 0x2, NULL, NULL },
    { "setInputOutput", NULL, "V", 0x1, NULL, NULL },
    { "getC", NULL, "Lgeogebra.common.kernel.geos.GeoConic;", 0x0, NULL, NULL },
    { "getLines", NULL, "[Lgeogebra.common.kernel.geos.GeoLine;", 0x0, NULL, NULL },
    { "getP", NULL, "Lgeogebra.common.kernel.geos.GeoPoint;", 0x0, NULL, NULL },
    { "compute", NULL, "V", 0x11, NULL, NULL },
    { "toStringWithGeogebraCommonKernelStringTemplate:", "toString", "Ljava.lang.String;", 0x11, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "P_", NULL, 0x2, "Lgeogebra.common.kernel.geos.GeoPoint;", NULL, NULL,  },
    { "l_", NULL, 0x2, "Lgeogebra.common.kernel.geos.GeoConic;", NULL, NULL,  },
    { "g_", NULL, 0x2, "[Lgeogebra.common.kernel.geos.GeoLine;", NULL, NULL,  },
    { "n_", NULL, 0x2, "[Lgeogebra.common.kernel.geos.GeoNumeric;", NULL, NULL,  },
    { "algoPoint_", NULL, 0x2, "[Lgeogebra.common.kernel.algos.AlgoPointOnPath;", NULL, NULL,  },
    { "closestPoint_", NULL, 0x2, "Lgeogebra.common.kernel.algos.AlgoClosestPoint;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelAlgosAlgoOrthoLinePointConic = { 2, "AlgoOrthoLinePointConic", "geogebra.common.kernel.algos", NULL, 0x1, 10, methods, 6, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelAlgosAlgoOrthoLinePointConic;
}

@end

void GeogebraCommonKernelAlgosAlgoOrthoLinePointConic_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoPoint_withGeogebraCommonKernelGeosGeoConic_(GeogebraCommonKernelAlgosAlgoOrthoLinePointConic *self, GeogebraCommonKernelConstruction *cons, NSString *label, GeogebraCommonKernelGeosGeoPoint *P, GeogebraCommonKernelGeosGeoConic *l) {
  GeogebraCommonKernelAlgosAlgoElement_initWithGeogebraCommonKernelConstruction_(self, cons);
  GeogebraCommonKernelAlgosAlgoOrthoLinePointConic_set_P_(self, P);
  GeogebraCommonKernelAlgosAlgoOrthoLinePointConic_set_l_(self, l);
  GeogebraCommonKernelAlgosAlgoOrthoLinePointConic_setAndConsume_g_(self, [IOSObjectArray newArrayWithLength:4 type:GeogebraCommonKernelGeosGeoLine_class_()]);
  GeogebraCommonKernelAlgosAlgoOrthoLinePointConic_setAndConsume_n_(self, [IOSObjectArray newArrayWithLength:4 type:GeogebraCommonKernelGeosGeoNumeric_class_()]);
  GeogebraCommonKernelAlgosAlgoOrthoLinePointConic_setAndConsume_algoPoint_(self, [IOSObjectArray newArrayWithLength:4 type:GeogebraCommonKernelAlgosAlgoPointOnPath_class_()]);
  GeogebraCommonKernelAlgosAlgoOrthoLinePointConic_setAndConsume_closestPoint_(self, new_GeogebraCommonKernelAlgosAlgoClosestPoint_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelPath_withGeogebraCommonKernelKernelNDGeoPointND_(cons, l, P));
  for (jint i = 0; i < 4; i++) {
    IOSObjectArray_SetAndConsume(self->g_, i, new_GeogebraCommonKernelGeosGeoLine_initWithGeogebraCommonKernelConstruction_(cons));
    [((GeogebraCommonKernelGeosGeoLine *) nil_chk(IOSObjectArray_Get(self->g_, i))) setStartPointWithGeogebraCommonKernelGeosGeoPoint:P];
    IOSObjectArray_SetAndConsume(self->n_, i, new_GeogebraCommonKernelGeosGeoNumeric_initWithGeogebraCommonKernelConstruction_(cons));
    IOSObjectArray_SetAndConsume(self->algoPoint_, i, new_GeogebraCommonKernelAlgosAlgoPointOnPath_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelPath_withDouble_withDouble_withGeogebraCommonKernelArithmeticNumberValue_(cons, l, 0, 0, IOSObjectArray_Get(self->n_, i)));
    [((GeogebraCommonKernelConstruction *) nil_chk(cons)) removeFromConstructionListWithGeogebraCommonKernelAlgosConstructionElement:IOSObjectArray_Get(self->algoPoint_, i)];
  }
  [self setInputOutput];
  GeogebraCommonKernelAlgosAlgoOrthoLinePointConic_compute(self);
  for (jint i = 0; i < 4; i++) [((GeogebraCommonKernelGeosGeoLine *) nil_chk(IOSObjectArray_Get(self->g_, 0))) setLabelWithNSString:label];
  GeogebraCommonKernelAlgosAlgoOrthoLinePointConic_addIncidence(self);
}

GeogebraCommonKernelAlgosAlgoOrthoLinePointConic *new_GeogebraCommonKernelAlgosAlgoOrthoLinePointConic_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoPoint_withGeogebraCommonKernelGeosGeoConic_(GeogebraCommonKernelConstruction *cons, NSString *label, GeogebraCommonKernelGeosGeoPoint *P, GeogebraCommonKernelGeosGeoConic *l) {
  GeogebraCommonKernelAlgosAlgoOrthoLinePointConic *self = [GeogebraCommonKernelAlgosAlgoOrthoLinePointConic alloc];
  GeogebraCommonKernelAlgosAlgoOrthoLinePointConic_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoPoint_withGeogebraCommonKernelGeosGeoConic_(self, cons, label, P, l);
  return self;
}

void GeogebraCommonKernelAlgosAlgoOrthoLinePointConic_addIncidence(GeogebraCommonKernelAlgosAlgoOrthoLinePointConic *self) {
  [((GeogebraCommonKernelGeosGeoPoint *) nil_chk(self->P_)) addIncidenceWithGeogebraCommonKernelGeosGeoElement:IOSObjectArray_Get(nil_chk(self->g_), 0) withBoolean:NO];
}

void GeogebraCommonKernelAlgosAlgoOrthoLinePointConic_compute(GeogebraCommonKernelAlgosAlgoOrthoLinePointConic *self) {
  GeogebraCommonKernelGeosGeoVec3D_lineThroughPointsWithGeogebraCommonKernelGeosGeoPoint_withGeogebraCommonKernelGeosGeoPoint_withGeogebraCommonKernelGeosGeoLine_(self->P_, (GeogebraCommonKernelGeosGeoPoint *) check_class_cast([((GeogebraCommonKernelAlgosAlgoClosestPoint *) nil_chk(self->closestPoint_)) getP], [GeogebraCommonKernelGeosGeoPoint class]), IOSObjectArray_Get(nil_chk(self->g_), 0));
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelAlgosAlgoOrthoLinePointConic)
