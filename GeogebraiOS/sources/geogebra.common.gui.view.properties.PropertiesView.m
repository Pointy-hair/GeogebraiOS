//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/gui/view/properties/PropertiesView.java
//


#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "geogebra/common/gui/dialog/options/OptionsObject.h"
#include "geogebra/common/gui/view/properties/PropertiesView.h"
#include "geogebra/common/kernel/Kernel.h"
#include "geogebra/common/main/App.h"
#include "geogebra/common/main/GuiManagerInterface.h"
#include "geogebra/common/main/Localization.h"
#include "geogebra/common/main/OptionType.h"
#include "java/lang/Integer.h"
#include "java/util/ArrayList.h"
#include "java/util/HashMap.h"

#pragma clang diagnostic ignored "-Wprotocol"

J2OBJC_INITIALIZED_DEFN(GeogebraCommonGuiViewPropertiesPropertiesView)

JavaUtilHashMap *GeogebraCommonGuiViewPropertiesPropertiesView_viewMap_;

@implementation GeogebraCommonGuiViewPropertiesPropertiesView

- (instancetype)initWithGeogebraCommonMainApp:(GeogebraCommonMainApp *)app2 {
  GeogebraCommonGuiViewPropertiesPropertiesView_initWithGeogebraCommonMainApp_(self, app2);
  return self;
}

- (void)updateSelection {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)updateSelectionWithJavaUtilArrayList:(JavaUtilArrayList *)geos {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)setOptionPanelWithGeogebraCommonMainOptionTypeEnum:(GeogebraCommonMainOptionTypeEnum *)type {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)setOptionPanelWithGeogebraCommonMainOptionTypeEnum:(GeogebraCommonMainOptionTypeEnum *)type
                                                   withInt:(jint)subType {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)mousePressedForPropertiesView {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)updatePropertiesView {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)detachView {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)attachView {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (NSString *)getTypeStringWithGeogebraCommonMainOptionTypeEnum:(GeogebraCommonMainOptionTypeEnum *)type {
  switch ([type ordinal]) {
    case GeogebraCommonMainOptionType_DEFAULTS:
    return [loc_ getPlainWithNSString:@"PreferencesOfA" withNSString:[((GeogebraCommonMainLocalization *) nil_chk(loc_)) getPlainWithNSString:@"Defaults"]];
    case GeogebraCommonMainOptionType_SPREADSHEET:
    return [loc_ getPlainWithNSString:@"PreferencesOfA" withNSString:[((GeogebraCommonMainLocalization *) nil_chk(loc_)) getPlainWithNSString:@"Spreadsheet"]];
    case GeogebraCommonMainOptionType_EUCLIDIAN:
    return [loc_ getPlainWithNSString:@"PreferencesOfA" withNSString:[((GeogebraCommonMainLocalization *) nil_chk(loc_)) getPlainWithNSString:@"DrawingPad"]];
    case GeogebraCommonMainOptionType_EUCLIDIAN2:
    return [loc_ getPlainWithNSString:@"PreferencesOfA" withNSString:[((GeogebraCommonMainLocalization *) nil_chk(loc_)) getPlainWithNSString:@"DrawingPad2"]];
    case GeogebraCommonMainOptionType_EUCLIDIAN3D:
    return [loc_ getPlainWithNSString:@"PreferencesOfA" withNSString:[((GeogebraCommonMainLocalization *) nil_chk(loc_)) getPlainWithNSString:@"GraphicsView3D"]];
    case GeogebraCommonMainOptionType_CAS:
    return [loc_ getPlainWithNSString:@"PreferencesOfA" withNSString:[((GeogebraCommonMainLocalization *) nil_chk(loc_)) getPlainWithNSString:@"CAS"]];
    case GeogebraCommonMainOptionType_ADVANCED:
    return [((GeogebraCommonMainLocalization *) nil_chk(loc_)) getPlainWithNSString:@"PreferencesOfA" withNSString:[((GeogebraCommonMainApp *) nil_chk(app_)) getMenuWithNSString:@"Advanced"]];
    case GeogebraCommonMainOptionType_OBJECTS:
    return objectPanel_ == nil ? [((GeogebraCommonMainApp *) nil_chk(app_)) getMenuWithNSString:@"Objects"] : [objectPanel_ getSelectionDescription];
    case GeogebraCommonMainOptionType_LAYOUT:
    return [((GeogebraCommonMainLocalization *) nil_chk(loc_)) getPlainWithNSString:@"PreferencesOfA" withNSString:[((GeogebraCommonMainApp *) nil_chk(app_)) getMenuWithNSString:@"Layout"]];
  }
  return nil;
}

+ (NSString *)getTypeStringSimpleWithGeogebraCommonMainLocalization:(GeogebraCommonMainLocalization *)loc
                               withGeogebraCommonMainOptionTypeEnum:(GeogebraCommonMainOptionTypeEnum *)type {
  return GeogebraCommonGuiViewPropertiesPropertiesView_getTypeStringSimpleWithGeogebraCommonMainLocalization_withGeogebraCommonMainOptionTypeEnum_(loc, type);
}

- (void)updateTitleBar {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (GeogebraCommonMainOptionTypeEnum *)getSelectedOptionType {
  return selectedOptionType_;
}

+ (jboolean)isOptionPanelAvailableWithGeogebraCommonMainApp:(GeogebraCommonMainApp *)app
                       withGeogebraCommonMainOptionTypeEnum:(GeogebraCommonMainOptionTypeEnum *)type {
  return GeogebraCommonGuiViewPropertiesPropertiesView_isOptionPanelAvailableWithGeogebraCommonMainApp_withGeogebraCommonMainOptionTypeEnum_(app, type);
}

- (void)startBatchUpdate {
}

- (void)endBatchUpdate {
}

- (void)dealloc {
  RELEASE_(kernel_);
  RELEASE_(app_);
  RELEASE_(loc_);
  RELEASE_(selectedOptionType_);
  RELEASE_(objectPanel_);
  [super dealloc];
}

+ (void)initialize {
  if (self == [GeogebraCommonGuiViewPropertiesPropertiesView class]) {
    JreStrongAssignAndConsume(&GeogebraCommonGuiViewPropertiesPropertiesView_viewMap_, nil, new_JavaUtilHashMap_init());
    {
      JreStrongAssignAndConsume(&GeogebraCommonGuiViewPropertiesPropertiesView_viewMap_, nil, new_JavaUtilHashMap_init());
      [GeogebraCommonGuiViewPropertiesPropertiesView_viewMap_ putWithId:JavaLangInteger_valueOfWithInt_(GeogebraCommonMainApp_VIEW_CAS) withId:GeogebraCommonMainOptionTypeEnum_get_CAS()];
      [GeogebraCommonGuiViewPropertiesPropertiesView_viewMap_ putWithId:JavaLangInteger_valueOfWithInt_(GeogebraCommonMainApp_VIEW_SPREADSHEET) withId:GeogebraCommonMainOptionTypeEnum_get_SPREADSHEET()];
      [GeogebraCommonGuiViewPropertiesPropertiesView_viewMap_ putWithId:JavaLangInteger_valueOfWithInt_(GeogebraCommonMainApp_VIEW_EUCLIDIAN) withId:GeogebraCommonMainOptionTypeEnum_get_EUCLIDIAN()];
      [GeogebraCommonGuiViewPropertiesPropertiesView_viewMap_ putWithId:JavaLangInteger_valueOfWithInt_(GeogebraCommonMainApp_VIEW_EUCLIDIAN2) withId:GeogebraCommonMainOptionTypeEnum_get_EUCLIDIAN2()];
      [GeogebraCommonGuiViewPropertiesPropertiesView_viewMap_ putWithId:JavaLangInteger_valueOfWithInt_(GeogebraCommonMainApp_VIEW_EUCLIDIAN3D) withId:GeogebraCommonMainOptionTypeEnum_get_EUCLIDIAN3D()];
    }
    J2OBJC_SET_INITIALIZED(GeogebraCommonGuiViewPropertiesPropertiesView)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonMainApp:", "PropertiesView", NULL, 0x1, NULL, NULL },
    { "updateSelection", NULL, "V", 0x401, NULL, NULL },
    { "updateSelectionWithJavaUtilArrayList:", "updateSelection", "V", 0x401, NULL, NULL },
    { "setOptionPanelWithGeogebraCommonMainOptionTypeEnum:", "setOptionPanel", "V", 0x401, NULL, NULL },
    { "setOptionPanelWithGeogebraCommonMainOptionTypeEnum:withInt:", "setOptionPanel", "V", 0x401, NULL, NULL },
    { "mousePressedForPropertiesView", NULL, "V", 0x401, NULL, NULL },
    { "updatePropertiesView", NULL, "V", 0x401, NULL, NULL },
    { "detachView", NULL, "V", 0x401, NULL, NULL },
    { "attachView", NULL, "V", 0x401, NULL, NULL },
    { "getTypeStringWithGeogebraCommonMainOptionTypeEnum:", "getTypeString", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getTypeStringSimpleWithGeogebraCommonMainLocalization:withGeogebraCommonMainOptionTypeEnum:", "getTypeStringSimple", "Ljava.lang.String;", 0x19, NULL, NULL },
    { "updateTitleBar", NULL, "V", 0x404, NULL, NULL },
    { "getSelectedOptionType", NULL, "Lgeogebra.common.main.OptionType;", 0x1, NULL, NULL },
    { "isOptionPanelAvailableWithGeogebraCommonMainApp:withGeogebraCommonMainOptionTypeEnum:", "isOptionPanelAvailable", "Z", 0x9, NULL, NULL },
    { "startBatchUpdate", NULL, "V", 0x1, NULL, NULL },
    { "endBatchUpdate", NULL, "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "viewMap_", NULL, 0xc, "Ljava.util.HashMap;", &GeogebraCommonGuiViewPropertiesPropertiesView_viewMap_, "Ljava/util/HashMap<Ljava/lang/Integer;Lgeogebra/common/main/OptionType;>;",  },
    { "kernel_", NULL, 0x4, "Lgeogebra.common.kernel.Kernel;", NULL, NULL,  },
    { "attached_", NULL, 0x4, "Z", NULL, NULL,  },
    { "app_", NULL, 0x4, "Lgeogebra.common.main.App;", NULL, NULL,  },
    { "loc_", NULL, 0x14, "Lgeogebra.common.main.Localization;", NULL, NULL,  },
    { "selectedOptionType_", NULL, 0x4, "Lgeogebra.common.main.OptionType;", NULL, NULL,  },
    { "objectPanel_", NULL, 0x4, "Lgeogebra.common.gui.dialog.options.OptionsObject;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _GeogebraCommonGuiViewPropertiesPropertiesView = { 2, "PropertiesView", "geogebra.common.gui.view.properties", NULL, 0x401, 16, methods, 7, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonGuiViewPropertiesPropertiesView;
}

@end

void GeogebraCommonGuiViewPropertiesPropertiesView_initWithGeogebraCommonMainApp_(GeogebraCommonGuiViewPropertiesPropertiesView *self, GeogebraCommonMainApp *app2) {
  NSObject_init(self);
  GeogebraCommonGuiViewPropertiesPropertiesView_set_selectedOptionType_(self, GeogebraCommonMainOptionTypeEnum_get_EUCLIDIAN());
  GeogebraCommonGuiViewPropertiesPropertiesView_set_app_(self, app2);
  GeogebraCommonGuiViewPropertiesPropertiesView_set_kernel_(self, [((GeogebraCommonMainApp *) nil_chk(self->app_)) getKernel]);
  GeogebraCommonGuiViewPropertiesPropertiesView_set_loc_(self, [self->app_ getLocalization]);
}

NSString *GeogebraCommonGuiViewPropertiesPropertiesView_getTypeStringSimpleWithGeogebraCommonMainLocalization_withGeogebraCommonMainOptionTypeEnum_(GeogebraCommonMainLocalization *loc, GeogebraCommonMainOptionTypeEnum *type) {
  GeogebraCommonGuiViewPropertiesPropertiesView_initialize();
  switch ([type ordinal]) {
    case GeogebraCommonMainOptionType_DEFAULTS:
    return [((GeogebraCommonMainLocalization *) nil_chk(loc)) getPlainWithNSString:@"Defaults"];
    case GeogebraCommonMainOptionType_SPREADSHEET:
    return [((GeogebraCommonMainLocalization *) nil_chk(loc)) getPlainWithNSString:@"Spreadsheet"];
    case GeogebraCommonMainOptionType_EUCLIDIAN:
    return [((GeogebraCommonMainLocalization *) nil_chk(loc)) getPlainWithNSString:@"DrawingPad"];
    case GeogebraCommonMainOptionType_EUCLIDIAN2:
    return [((GeogebraCommonMainLocalization *) nil_chk(loc)) getPlainWithNSString:@"DrawingPad2"];
    case GeogebraCommonMainOptionType_CAS:
    return [((GeogebraCommonMainLocalization *) nil_chk(loc)) getPlainWithNSString:@"CAS"];
    case GeogebraCommonMainOptionType_ADVANCED:
    return [((GeogebraCommonMainLocalization *) nil_chk(loc)) getMenuWithNSString:@"Advanced"];
    case GeogebraCommonMainOptionType_OBJECTS:
    return [((GeogebraCommonMainLocalization *) nil_chk(loc)) getMenuWithNSString:@"Objects"];
    case GeogebraCommonMainOptionType_LAYOUT:
    return [((GeogebraCommonMainLocalization *) nil_chk(loc)) getMenuWithNSString:@"Layout"];
    case GeogebraCommonMainOptionType_EUCLIDIAN3D:
    return [((GeogebraCommonMainLocalization *) nil_chk(loc)) getPlainWithNSString:@"GraphicsView3D"];
  }
  return nil;
}

jboolean GeogebraCommonGuiViewPropertiesPropertiesView_isOptionPanelAvailableWithGeogebraCommonMainApp_withGeogebraCommonMainOptionTypeEnum_(GeogebraCommonMainApp *app, GeogebraCommonMainOptionTypeEnum *type) {
  GeogebraCommonGuiViewPropertiesPropertiesView_initialize();
  jboolean isAvailable = YES;
  switch ([type ordinal]) {
    case GeogebraCommonMainOptionType_EUCLIDIAN:
    isAvailable = [((id<GeogebraCommonMainGuiManagerInterface>) nil_chk([((GeogebraCommonMainApp *) nil_chk(app)) getGuiManager])) showViewWithInt:GeogebraCommonMainApp_VIEW_EUCLIDIAN];
    break;
    case GeogebraCommonMainOptionType_EUCLIDIAN2:
    isAvailable = [((id<GeogebraCommonMainGuiManagerInterface>) nil_chk([((GeogebraCommonMainApp *) nil_chk(app)) getGuiManager])) showViewWithInt:GeogebraCommonMainApp_VIEW_EUCLIDIAN2];
    break;
    case GeogebraCommonMainOptionType_EUCLIDIAN3D:
    isAvailable = [((id<GeogebraCommonMainGuiManagerInterface>) nil_chk([((GeogebraCommonMainApp *) nil_chk(app)) getGuiManager])) showViewWithInt:GeogebraCommonMainApp_VIEW_EUCLIDIAN3D];
    break;
    case GeogebraCommonMainOptionType_SPREADSHEET:
    isAvailable = [((id<GeogebraCommonMainGuiManagerInterface>) nil_chk([((GeogebraCommonMainApp *) nil_chk(app)) getGuiManager])) showViewWithInt:GeogebraCommonMainApp_VIEW_SPREADSHEET];
    break;
    case GeogebraCommonMainOptionType_CAS:
    isAvailable = [((id<GeogebraCommonMainGuiManagerInterface>) nil_chk([((GeogebraCommonMainApp *) nil_chk(app)) getGuiManager])) showViewWithInt:GeogebraCommonMainApp_VIEW_CAS];
    break;
    case GeogebraCommonMainOptionType_OBJECTS:
    break;
  }
  return isAvailable;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonGuiViewPropertiesPropertiesView)
