//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/geogebra3D/kernel3D/algos/AlgoCircle3DThreePoints.java
//


#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "geogebra/common/geogebra3D/kernel3D/algos/AlgoCircle3DThreePoints.h"
#include "geogebra/common/geogebra3D/kernel3D/geos/GeoConic3D.h"
#include "geogebra/common/kernel/Construction.h"
#include "geogebra/common/kernel/Matrix/CoordSys.h"
#include "geogebra/common/kernel/Matrix/Coords.h"
#include "geogebra/common/kernel/StringTemplate.h"
#include "geogebra/common/kernel/algos/AlgoCircleThreePoints.h"
#include "geogebra/common/kernel/algos/AlgoElement.h"
#include "geogebra/common/kernel/algos/ConstructionElement.h"
#include "geogebra/common/kernel/geos/GeoElement.h"
#include "geogebra/common/kernel/geos/GeoPoint.h"
#include "geogebra/common/kernel/kernelND/GeoConicND.h"
#include "geogebra/common/kernel/kernelND/GeoPointND.h"
#include "geogebra/common/main/Localization.h"

@interface GeogebraCommonGeogebra3DKernel3DAlgosAlgoCircle3DThreePoints () {
 @public
  GeogebraCommonKernelMatrixCoordSys *coordSys_;
  IOSObjectArray *points2D_;
  IOSObjectArray *points_;
}

@end

J2OBJC_FIELD_SETTER(GeogebraCommonGeogebra3DKernel3DAlgosAlgoCircle3DThreePoints, coordSys_, GeogebraCommonKernelMatrixCoordSys *)
J2OBJC_FIELD_SETTER(GeogebraCommonGeogebra3DKernel3DAlgosAlgoCircle3DThreePoints, points2D_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(GeogebraCommonGeogebra3DKernel3DAlgosAlgoCircle3DThreePoints, points_, IOSObjectArray *)

@implementation GeogebraCommonGeogebra3DKernel3DAlgosAlgoCircle3DThreePoints

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                                            withNSString:(NSString *)label
              withGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)A
              withGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)B
              withGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)C {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoCircle3DThreePoints_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoPointND_(self, cons, label, A, B, C);
  return self;
}

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
              withGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)A
              withGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)B
              withGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)C {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoCircle3DThreePoints_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoPointND_(self, cons, A, B, C);
  return self;
}

- (void)setPointsWithGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)A
                 withGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)B
                 withGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)C {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoCircle3DThreePoints_setAndConsume_points_(self, [IOSObjectArray newArrayWithLength:3 type:GeogebraCommonKernelKernelNDGeoPointND_class_()]);
  IOSObjectArray_Set(points_, 0, A);
  IOSObjectArray_Set(points_, 1, B);
  IOSObjectArray_Set(points_, 2, C);
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoCircle3DThreePoints_setAndConsume_coordSys_(self, new_GeogebraCommonKernelMatrixCoordSys_initWithInt_(2));
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoCircle3DThreePoints_setAndConsume_points2D_(self, [IOSObjectArray newArrayWithLength:3 type:GeogebraCommonKernelGeosGeoPoint_class_()]);
  for (jint i = 0; i < 3; i++) IOSObjectArray_SetAndConsume(points2D_, i, new_GeogebraCommonKernelGeosGeoPoint_initWithGeogebraCommonKernelConstruction_([self getConstruction]));
  [super setPointsWithGeogebraCommonKernelKernelNDGeoPointND:IOSObjectArray_Get(points2D_, 0) withGeogebraCommonKernelKernelNDGeoPointND:IOSObjectArray_Get(points2D_, 1) withGeogebraCommonKernelKernelNDGeoPointND:IOSObjectArray_Get(points2D_, 2)];
}

- (GeogebraCommonKernelGeosGeoPoint *)getPoint2DWithInt:(jint)i {
  return IOSObjectArray_Get(nil_chk(points2D_), i);
}

- (void)createCircle {
  GeogebraCommonKernelAlgosAlgoCircleThreePoints_setAndConsume_circle_(self, new_GeogebraCommonGeogebra3DKernel3DGeosGeoConic3D_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelMatrixCoordSys_(cons_, coordSys_));
}

- (void)setInput {
  GeogebraCommonKernelAlgosAlgoElement_setAndConsume_input_(self, [IOSObjectArray newArrayWithLength:3 type:GeogebraCommonKernelGeosGeoElement_class_()]);
  for (jint i = 0; i < 3; i++) IOSObjectArray_Set(input_, i, (GeogebraCommonKernelGeosGeoElement *) check_class_cast(IOSObjectArray_Get(nil_chk(points_), i), [GeogebraCommonKernelGeosGeoElement class]));
}

- (void)setOutput {
  [self setOnlyOutputWithGeogebraCommonKernelGeosToGeoElement:circle_];
}

- (void)compute {
  [((GeogebraCommonKernelMatrixCoordSys *) nil_chk(coordSys_)) resetCoordSys];
  for (jint i = 0; i < 3; i++) [coordSys_ addPointWithGeogebraCommonKernelMatrixCoords:[((id<GeogebraCommonKernelKernelNDGeoPointND>) nil_chk(IOSObjectArray_Get(nil_chk(points_), i))) getInhomCoordsInD3]];
  if (![coordSys_ isMadeCoordSys]) {
    [coordSys_ completeCoordSys2D];
  }
  [coordSys_ makeOrthoMatrixWithBoolean:NO withBoolean:NO];
  for (jint i = 0; i < 3; i++) {
    IOSObjectArray *project = [coordSys_ getNormalProjectionWithGeogebraCommonKernelMatrixCoords:[((id<GeogebraCommonKernelKernelNDGeoPointND>) nil_chk(IOSObjectArray_Get(nil_chk(points_), i))) getInhomCoordsInD3]];
    [((GeogebraCommonKernelGeosGeoPoint *) nil_chk(IOSObjectArray_Get(nil_chk(points2D_), i))) setCoordsWithDouble:[((GeogebraCommonKernelMatrixCoords *) nil_chk(IOSObjectArray_Get(nil_chk(project), 1))) getX] withDouble:[((GeogebraCommonKernelMatrixCoords *) nil_chk(IOSObjectArray_Get(project, 1))) getY] withDouble:[((GeogebraCommonKernelMatrixCoords *) nil_chk(IOSObjectArray_Get(project, 1))) getW]];
  }
  [super compute];
}

- (NSString *)toStringWithGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl {
  return [((GeogebraCommonMainLocalization *) nil_chk([self getLoc])) getPlainWithNSString:@"CircleThroughABC" withNSString:[((id<GeogebraCommonKernelKernelNDGeoPointND>) nil_chk(IOSObjectArray_Get(nil_chk(points_), 0))) getLabelWithGeogebraCommonKernelStringTemplate:tpl] withNSString:[((id<GeogebraCommonKernelKernelNDGeoPointND>) nil_chk(IOSObjectArray_Get(points_, 1))) getLabelWithGeogebraCommonKernelStringTemplate:tpl] withNSString:[((id<GeogebraCommonKernelKernelNDGeoPointND>) nil_chk(IOSObjectArray_Get(points_, 2))) getLabelWithGeogebraCommonKernelStringTemplate:tpl]];
}

- (void)dealloc {
  RELEASE_(coordSys_);
  RELEASE_(points2D_);
  RELEASE_(points_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonKernelConstruction:withNSString:withGeogebraCommonKernelKernelNDGeoPointND:withGeogebraCommonKernelKernelNDGeoPointND:withGeogebraCommonKernelKernelNDGeoPointND:", "AlgoCircle3DThreePoints", NULL, 0x1, NULL, NULL },
    { "initWithGeogebraCommonKernelConstruction:withGeogebraCommonKernelKernelNDGeoPointND:withGeogebraCommonKernelKernelNDGeoPointND:withGeogebraCommonKernelKernelNDGeoPointND:", "AlgoCircle3DThreePoints", NULL, 0x1, NULL, NULL },
    { "setPointsWithGeogebraCommonKernelKernelNDGeoPointND:withGeogebraCommonKernelKernelNDGeoPointND:withGeogebraCommonKernelKernelNDGeoPointND:", "setPoints", "V", 0x4, NULL, NULL },
    { "getPoint2DWithInt:", "getPoint2D", "Lgeogebra.common.kernel.geos.GeoPoint;", 0x1, NULL, NULL },
    { "createCircle", NULL, "V", 0x4, NULL, NULL },
    { "setInput", NULL, "V", 0x4, NULL, NULL },
    { "setOutput", NULL, "V", 0x4, NULL, NULL },
    { "compute", NULL, "V", 0x1, NULL, NULL },
    { "toStringWithGeogebraCommonKernelStringTemplate:", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "coordSys_", NULL, 0x2, "Lgeogebra.common.kernel.Matrix.CoordSys;", NULL, NULL,  },
    { "points2D_", NULL, 0x2, "[Lgeogebra.common.kernel.geos.GeoPoint;", NULL, NULL,  },
    { "points_", NULL, 0x2, "[Lgeogebra.common.kernel.kernelND.GeoPointND;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _GeogebraCommonGeogebra3DKernel3DAlgosAlgoCircle3DThreePoints = { 2, "AlgoCircle3DThreePoints", "geogebra.common.geogebra3D.kernel3D.algos", NULL, 0x1, 9, methods, 3, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonGeogebra3DKernel3DAlgosAlgoCircle3DThreePoints;
}

@end

void GeogebraCommonGeogebra3DKernel3DAlgosAlgoCircle3DThreePoints_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoPointND_(GeogebraCommonGeogebra3DKernel3DAlgosAlgoCircle3DThreePoints *self, GeogebraCommonKernelConstruction *cons, NSString *label, id<GeogebraCommonKernelKernelNDGeoPointND> A, id<GeogebraCommonKernelKernelNDGeoPointND> B, id<GeogebraCommonKernelKernelNDGeoPointND> C) {
  GeogebraCommonKernelAlgosAlgoCircleThreePoints_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoPointND_(self, cons, label, A, B, C);
}

GeogebraCommonGeogebra3DKernel3DAlgosAlgoCircle3DThreePoints *new_GeogebraCommonGeogebra3DKernel3DAlgosAlgoCircle3DThreePoints_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoPointND_(GeogebraCommonKernelConstruction *cons, NSString *label, id<GeogebraCommonKernelKernelNDGeoPointND> A, id<GeogebraCommonKernelKernelNDGeoPointND> B, id<GeogebraCommonKernelKernelNDGeoPointND> C) {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoCircle3DThreePoints *self = [GeogebraCommonGeogebra3DKernel3DAlgosAlgoCircle3DThreePoints alloc];
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoCircle3DThreePoints_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoPointND_(self, cons, label, A, B, C);
  return self;
}

void GeogebraCommonGeogebra3DKernel3DAlgosAlgoCircle3DThreePoints_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoPointND_(GeogebraCommonGeogebra3DKernel3DAlgosAlgoCircle3DThreePoints *self, GeogebraCommonKernelConstruction *cons, id<GeogebraCommonKernelKernelNDGeoPointND> A, id<GeogebraCommonKernelKernelNDGeoPointND> B, id<GeogebraCommonKernelKernelNDGeoPointND> C) {
  GeogebraCommonKernelAlgosAlgoCircleThreePoints_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoPointND_(self, cons, A, B, C);
}

GeogebraCommonGeogebra3DKernel3DAlgosAlgoCircle3DThreePoints *new_GeogebraCommonGeogebra3DKernel3DAlgosAlgoCircle3DThreePoints_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoPointND_(GeogebraCommonKernelConstruction *cons, id<GeogebraCommonKernelKernelNDGeoPointND> A, id<GeogebraCommonKernelKernelNDGeoPointND> B, id<GeogebraCommonKernelKernelNDGeoPointND> C) {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoCircle3DThreePoints *self = [GeogebraCommonGeogebra3DKernel3DAlgosAlgoCircle3DThreePoints alloc];
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoCircle3DThreePoints_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoPointND_(self, cons, A, B, C);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonGeogebra3DKernel3DAlgosAlgoCircle3DThreePoints)
