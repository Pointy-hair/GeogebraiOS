//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/locusequ/elements/EquationCircleThreePoints.java
//


#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "geogebra/common/kernel/algos/AlgoCircleThreePoints.h"
#include "geogebra/common/kernel/algos/AlgoElement.h"
#include "geogebra/common/kernel/geos/GeoElement.h"
#include "geogebra/common/kernel/geos/GeoPoint.h"
#include "geogebra/common/kernel/locusequ/EquationPoint.h"
#include "geogebra/common/kernel/locusequ/EquationScope.h"
#include "geogebra/common/kernel/locusequ/elements/EquationCircleThreePoints.h"
#include "geogebra/common/kernel/locusequ/elements/EquationGenericConic.h"

@implementation GeogebraCommonKernelLocusequElementsEquationCircleThreePoints

- (instancetype)initWithGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)circle
             withGeogebraCommonKernelLocusequEquationScope:(GeogebraCommonKernelLocusequEquationScope *)scope {
  GeogebraCommonKernelLocusequElementsEquationCircleThreePoints_initWithGeogebraCommonKernelGeosGeoElement_withGeogebraCommonKernelLocusequEquationScope_(self, circle, scope);
  return self;
}

- (jboolean)isAlgebraic {
  return YES;
}

- (void)computeMatrix {
  [self setMatrixWithGeogebraCommonKernelLocusequArithEquationExpressionArray:[self matrixForCircleWithGeogebraCommonKernelLocusequEquationPoint:self->pequ_ withGeogebraCommonKernelLocusequEquationPoint:self->qequ_ withGeogebraCommonKernelLocusequEquationPoint:self->requ_]];
}

- (void)dealloc {
  RELEASE_(p_);
  RELEASE_(q_);
  RELEASE_(r_);
  RELEASE_(pequ_);
  RELEASE_(qequ_);
  RELEASE_(requ_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonKernelGeosGeoElement:withGeogebraCommonKernelLocusequEquationScope:", "EquationCircleThreePoints", NULL, 0x1, NULL, NULL },
    { "isAlgebraic", NULL, "Z", 0x1, NULL, NULL },
    { "computeMatrix", NULL, "V", 0x4, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "p_", NULL, 0x4, "Lgeogebra.common.kernel.geos.GeoPoint;", NULL, NULL,  },
    { "q_", NULL, 0x4, "Lgeogebra.common.kernel.geos.GeoPoint;", NULL, NULL,  },
    { "r_", NULL, 0x4, "Lgeogebra.common.kernel.geos.GeoPoint;", NULL, NULL,  },
    { "pequ_", NULL, 0x4, "Lgeogebra.common.kernel.locusequ.EquationPoint;", NULL, NULL,  },
    { "qequ_", NULL, 0x4, "Lgeogebra.common.kernel.locusequ.EquationPoint;", NULL, NULL,  },
    { "requ_", NULL, 0x4, "Lgeogebra.common.kernel.locusequ.EquationPoint;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelLocusequElementsEquationCircleThreePoints = { 2, "EquationCircleThreePoints", "geogebra.common.kernel.locusequ.elements", NULL, 0x1, 3, methods, 6, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelLocusequElementsEquationCircleThreePoints;
}

@end

void GeogebraCommonKernelLocusequElementsEquationCircleThreePoints_initWithGeogebraCommonKernelGeosGeoElement_withGeogebraCommonKernelLocusequEquationScope_(GeogebraCommonKernelLocusequElementsEquationCircleThreePoints *self, GeogebraCommonKernelGeosGeoElement *circle, GeogebraCommonKernelLocusequEquationScope *scope) {
  GeogebraCommonKernelLocusequElementsEquationGenericConic_initWithGeogebraCommonKernelGeosGeoElement_withGeogebraCommonKernelLocusequEquationScope_(self, circle, scope);
  [self setScopeWithGeogebraCommonKernelLocusequEquationScope:scope];
  [self setResultWithGeogebraCommonKernelGeosGeoElement:circle];
  GeogebraCommonKernelAlgosAlgoCircleThreePoints *algo = (GeogebraCommonKernelAlgosAlgoCircleThreePoints *) check_class_cast([((GeogebraCommonKernelGeosGeoElement *) nil_chk(circle)) getParentAlgorithm], [GeogebraCommonKernelAlgosAlgoCircleThreePoints class]);
  GeogebraCommonKernelLocusequElementsEquationCircleThreePoints_set_p_(self, [((GeogebraCommonKernelAlgosAlgoCircleThreePoints *) nil_chk(algo)) getA]);
  GeogebraCommonKernelLocusequElementsEquationCircleThreePoints_set_q_(self, [algo getB]);
  GeogebraCommonKernelLocusequElementsEquationCircleThreePoints_set_r_(self, [algo getC]);
  GeogebraCommonKernelLocusequElementsEquationCircleThreePoints_set_pequ_(self, [((GeogebraCommonKernelLocusequEquationScope *) nil_chk(scope)) getPointWithGeogebraCommonKernelGeosGeoPoint:self->p_]);
  GeogebraCommonKernelLocusequElementsEquationCircleThreePoints_set_qequ_(self, [scope getPointWithGeogebraCommonKernelGeosGeoPoint:self->q_]);
  GeogebraCommonKernelLocusequElementsEquationCircleThreePoints_set_requ_(self, [scope getPointWithGeogebraCommonKernelGeosGeoPoint:self->r_]);
  [self computeMatrix];
}

GeogebraCommonKernelLocusequElementsEquationCircleThreePoints *new_GeogebraCommonKernelLocusequElementsEquationCircleThreePoints_initWithGeogebraCommonKernelGeosGeoElement_withGeogebraCommonKernelLocusequEquationScope_(GeogebraCommonKernelGeosGeoElement *circle, GeogebraCommonKernelLocusequEquationScope *scope) {
  GeogebraCommonKernelLocusequElementsEquationCircleThreePoints *self = [GeogebraCommonKernelLocusequElementsEquationCircleThreePoints alloc];
  GeogebraCommonKernelLocusequElementsEquationCircleThreePoints_initWithGeogebraCommonKernelGeosGeoElement_withGeogebraCommonKernelLocusequEquationScope_(self, circle, scope);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelLocusequElementsEquationCircleThreePoints)
