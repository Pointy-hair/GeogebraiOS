//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/geogebra3D/kernel3D/algos/AlgoOrthoVectorLineDirection.java
//


#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "geogebra/common/geogebra3D/kernel3D/algos/AlgoElement3D.h"
#include "geogebra/common/geogebra3D/kernel3D/algos/AlgoOrthoVectorLineDirection.h"
#include "geogebra/common/geogebra3D/kernel3D/geos/GeoVector3D.h"
#include "geogebra/common/kernel/Construction.h"
#include "geogebra/common/kernel/Matrix/Coords.h"
#include "geogebra/common/kernel/commands/Commands.h"
#include "geogebra/common/kernel/geos/GeoElement.h"
#include "geogebra/common/kernel/kernelND/GeoDirectionND.h"
#include "geogebra/common/kernel/kernelND/GeoLineND.h"

@interface GeogebraCommonGeogebra3DKernel3DAlgosAlgoOrthoVectorLineDirection () {
 @public
  id<GeogebraCommonKernelKernelNDGeoLineND> line_;
  id<GeogebraCommonKernelKernelNDGeoDirectionND> direction_;
  GeogebraCommonGeogebra3DKernel3DGeosGeoVector3D *vector_;
}

@end

J2OBJC_FIELD_SETTER(GeogebraCommonGeogebra3DKernel3DAlgosAlgoOrthoVectorLineDirection, line_, id<GeogebraCommonKernelKernelNDGeoLineND>)
J2OBJC_FIELD_SETTER(GeogebraCommonGeogebra3DKernel3DAlgosAlgoOrthoVectorLineDirection, direction_, id<GeogebraCommonKernelKernelNDGeoDirectionND>)
J2OBJC_FIELD_SETTER(GeogebraCommonGeogebra3DKernel3DAlgosAlgoOrthoVectorLineDirection, vector_, GeogebraCommonGeogebra3DKernel3DGeosGeoVector3D *)

@implementation GeogebraCommonGeogebra3DKernel3DAlgosAlgoOrthoVectorLineDirection

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                                            withNSString:(NSString *)label
               withGeogebraCommonKernelKernelNDGeoLineND:(id<GeogebraCommonKernelKernelNDGeoLineND>)line
          withGeogebraCommonKernelKernelNDGeoDirectionND:(id<GeogebraCommonKernelKernelNDGeoDirectionND>)direction {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoOrthoVectorLineDirection_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelKernelNDGeoLineND_withGeogebraCommonKernelKernelNDGeoDirectionND_(self, cons, label, line, direction);
  return self;
}

- (GeogebraCommonGeogebra3DKernel3DGeosGeoVector3D *)getVector {
  return vector_;
}

- (void)compute {
  if (![((GeogebraCommonKernelGeosGeoElement *) nil_chk(((GeogebraCommonKernelGeosGeoElement *) check_class_cast(line_, [GeogebraCommonKernelGeosGeoElement class])))) isDefined] || ![((GeogebraCommonKernelGeosGeoElement *) nil_chk(((GeogebraCommonKernelGeosGeoElement *) check_class_cast(direction_, [GeogebraCommonKernelGeosGeoElement class])))) isDefined]) {
    [((GeogebraCommonGeogebra3DKernel3DGeosGeoVector3D *) nil_chk(vector_)) setUndefined];
    return;
  }
  GeogebraCommonKernelMatrixCoords *d1 = [((id<GeogebraCommonKernelKernelNDGeoLineND>) nil_chk(line_)) getDirectionInD3];
  GeogebraCommonKernelMatrixCoords *d2 = [((id<GeogebraCommonKernelKernelNDGeoDirectionND>) nil_chk(direction_)) getDirectionInD3];
  [((GeogebraCommonGeogebra3DKernel3DGeosGeoVector3D *) nil_chk(vector_)) setCoordsWithGeogebraCommonKernelMatrixCoords:[((GeogebraCommonKernelMatrixCoords *) nil_chk(d2)) crossProduct4WithGeogebraCommonKernelMatrixCoords:d1]];
}

- (GeogebraCommonKernelCommandsCommandsEnum *)getClassName {
  return GeogebraCommonKernelCommandsCommandsEnum_get_OrthogonalVector();
}

- (void)dealloc {
  RELEASE_(line_);
  RELEASE_(direction_);
  RELEASE_(vector_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonKernelConstruction:withNSString:withGeogebraCommonKernelKernelNDGeoLineND:withGeogebraCommonKernelKernelNDGeoDirectionND:", "AlgoOrthoVectorLineDirection", NULL, 0x0, NULL, NULL },
    { "getVector", NULL, "Lgeogebra.common.geogebra3D.kernel3D.geos.GeoVector3D;", 0x1, NULL, NULL },
    { "compute", NULL, "V", 0x1, NULL, NULL },
    { "getClassName", NULL, "Lgeogebra.common.kernel.commands.Commands;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "line_", NULL, 0x2, "Lgeogebra.common.kernel.kernelND.GeoLineND;", NULL, NULL,  },
    { "direction_", NULL, 0x2, "Lgeogebra.common.kernel.kernelND.GeoDirectionND;", NULL, NULL,  },
    { "vector_", NULL, 0x2, "Lgeogebra.common.geogebra3D.kernel3D.geos.GeoVector3D;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _GeogebraCommonGeogebra3DKernel3DAlgosAlgoOrthoVectorLineDirection = { 2, "AlgoOrthoVectorLineDirection", "geogebra.common.geogebra3D.kernel3D.algos", NULL, 0x1, 4, methods, 3, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonGeogebra3DKernel3DAlgosAlgoOrthoVectorLineDirection;
}

@end

void GeogebraCommonGeogebra3DKernel3DAlgosAlgoOrthoVectorLineDirection_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelKernelNDGeoLineND_withGeogebraCommonKernelKernelNDGeoDirectionND_(GeogebraCommonGeogebra3DKernel3DAlgosAlgoOrthoVectorLineDirection *self, GeogebraCommonKernelConstruction *cons, NSString *label, id<GeogebraCommonKernelKernelNDGeoLineND> line, id<GeogebraCommonKernelKernelNDGeoDirectionND> direction) {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoElement3D_initWithGeogebraCommonKernelConstruction_(self, cons);
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoOrthoVectorLineDirection_set_line_(self, line);
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoOrthoVectorLineDirection_set_direction_(self, direction);
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoOrthoVectorLineDirection_setAndConsume_vector_(self, new_GeogebraCommonGeogebra3DKernel3DGeosGeoVector3D_initWithGeogebraCommonKernelConstruction_(cons));
  [self setInputOutputWithGeogebraCommonKernelGeosGeoElementArray:[IOSObjectArray arrayWithObjects:(id[]){ (GeogebraCommonKernelGeosGeoElement *) check_class_cast(line, [GeogebraCommonKernelGeosGeoElement class]), (GeogebraCommonKernelGeosGeoElement *) check_class_cast(direction, [GeogebraCommonKernelGeosGeoElement class]) } count:2 type:GeogebraCommonKernelGeosGeoElement_class_()] withGeogebraCommonKernelGeosGeoElementArray:[IOSObjectArray arrayWithObjects:(id[]){ self->vector_ } count:1 type:GeogebraCommonKernelGeosGeoElement_class_()]];
  [self->vector_ setLabelWithNSString:label];
}

GeogebraCommonGeogebra3DKernel3DAlgosAlgoOrthoVectorLineDirection *new_GeogebraCommonGeogebra3DKernel3DAlgosAlgoOrthoVectorLineDirection_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelKernelNDGeoLineND_withGeogebraCommonKernelKernelNDGeoDirectionND_(GeogebraCommonKernelConstruction *cons, NSString *label, id<GeogebraCommonKernelKernelNDGeoLineND> line, id<GeogebraCommonKernelKernelNDGeoDirectionND> direction) {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoOrthoVectorLineDirection *self = [GeogebraCommonGeogebra3DKernel3DAlgosAlgoOrthoVectorLineDirection alloc];
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoOrthoVectorLineDirection_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelKernelNDGeoLineND_withGeogebraCommonKernelKernelNDGeoDirectionND_(self, cons, label, line, direction);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonGeogebra3DKernel3DAlgosAlgoOrthoVectorLineDirection)
