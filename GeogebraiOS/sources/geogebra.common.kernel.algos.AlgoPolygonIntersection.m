//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/algos/AlgoPolygonIntersection.java
//


#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "geogebra/common/kernel/Construction.h"
#include "geogebra/common/kernel/algos/AlgoPolygonIntersection.h"
#include "geogebra/common/kernel/algos/AlgoPolygonOperation.h"
#include "geogebra/common/kernel/algos/PolyOperation.h"
#include "geogebra/common/kernel/commands/Commands.h"
#include "geogebra/common/kernel/geos/GeoPolygon.h"

@implementation GeogebraCommonKernelAlgosAlgoPolygonIntersection

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                                       withNSStringArray:(IOSObjectArray *)labels
                  withGeogebraCommonKernelGeosGeoPolygon:(GeogebraCommonKernelGeosGeoPolygon *)inPoly0
                  withGeogebraCommonKernelGeosGeoPolygon:(GeogebraCommonKernelGeosGeoPolygon *)inPoly1 {
  GeogebraCommonKernelAlgosAlgoPolygonIntersection_initWithGeogebraCommonKernelConstruction_withNSStringArray_withGeogebraCommonKernelGeosGeoPolygon_withGeogebraCommonKernelGeosGeoPolygon_(self, cons, labels, inPoly0, inPoly1);
  return self;
}

- (GeogebraCommonKernelCommandsCommandsEnum *)getClassName {
  return GeogebraCommonKernelCommandsCommandsEnum_get_IntersectPath();
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonKernelConstruction:withNSStringArray:withGeogebraCommonKernelGeosGeoPolygon:withGeogebraCommonKernelGeosGeoPolygon:", "AlgoPolygonIntersection", NULL, 0x1, NULL, NULL },
    { "getClassName", NULL, "Lgeogebra.common.kernel.commands.Commands;", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelAlgosAlgoPolygonIntersection = { 2, "AlgoPolygonIntersection", "geogebra.common.kernel.algos", NULL, 0x1, 2, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelAlgosAlgoPolygonIntersection;
}

@end

void GeogebraCommonKernelAlgosAlgoPolygonIntersection_initWithGeogebraCommonKernelConstruction_withNSStringArray_withGeogebraCommonKernelGeosGeoPolygon_withGeogebraCommonKernelGeosGeoPolygon_(GeogebraCommonKernelAlgosAlgoPolygonIntersection *self, GeogebraCommonKernelConstruction *cons, IOSObjectArray *labels, GeogebraCommonKernelGeosGeoPolygon *inPoly0, GeogebraCommonKernelGeosGeoPolygon *inPoly1) {
  GeogebraCommonKernelAlgosAlgoPolygonOperation_initWithGeogebraCommonKernelConstruction_withNSStringArray_withGeogebraCommonKernelGeosGeoPolygon_withGeogebraCommonKernelGeosGeoPolygon_withGeogebraCommonKernelAlgosPolyOperationEnum_(self, cons, labels, inPoly0, inPoly1, GeogebraCommonKernelAlgosPolyOperationEnum_get_INTERSECTION());
}

GeogebraCommonKernelAlgosAlgoPolygonIntersection *new_GeogebraCommonKernelAlgosAlgoPolygonIntersection_initWithGeogebraCommonKernelConstruction_withNSStringArray_withGeogebraCommonKernelGeosGeoPolygon_withGeogebraCommonKernelGeosGeoPolygon_(GeogebraCommonKernelConstruction *cons, IOSObjectArray *labels, GeogebraCommonKernelGeosGeoPolygon *inPoly0, GeogebraCommonKernelGeosGeoPolygon *inPoly1) {
  GeogebraCommonKernelAlgosAlgoPolygonIntersection *self = [GeogebraCommonKernelAlgosAlgoPolygonIntersection alloc];
  GeogebraCommonKernelAlgosAlgoPolygonIntersection_initWithGeogebraCommonKernelConstruction_withNSStringArray_withGeogebraCommonKernelGeosGeoPolygon_withGeogebraCommonKernelGeosGeoPolygon_(self, cons, labels, inPoly0, inPoly1);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelAlgosAlgoPolygonIntersection)
