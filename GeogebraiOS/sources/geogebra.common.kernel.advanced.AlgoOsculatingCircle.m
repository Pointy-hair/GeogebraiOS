//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/advanced/AlgoOsculatingCircle.java
//


#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "geogebra/common/kernel/Construction.h"
#include "geogebra/common/kernel/Kernel.h"
#include "geogebra/common/kernel/advanced/AlgoCurvature.h"
#include "geogebra/common/kernel/advanced/AlgoCurvatureVector.h"
#include "geogebra/common/kernel/advanced/AlgoOsculatingCircle.h"
#include "geogebra/common/kernel/algos/AlgoElement.h"
#include "geogebra/common/kernel/commands/Commands.h"
#include "geogebra/common/kernel/geos/GeoConic.h"
#include "geogebra/common/kernel/geos/GeoElement.h"
#include "geogebra/common/kernel/geos/GeoFunction.h"
#include "geogebra/common/kernel/geos/GeoNumeric.h"
#include "geogebra/common/kernel/geos/GeoPoint.h"
#include "geogebra/common/kernel/geos/GeoVector.h"
#include "java/lang/Math.h"

@interface GeogebraCommonKernelAdvancedAlgoOsculatingCircle () {
 @public
  GeogebraCommonKernelGeosGeoPoint *A_, *R_;
  GeogebraCommonKernelGeosGeoFunction *f_;
  GeogebraCommonKernelGeosGeoVector *v_;
  GeogebraCommonKernelGeosGeoNumeric *curv_;
  GeogebraCommonKernelGeosGeoConic *circle_;
}

@end

J2OBJC_FIELD_SETTER(GeogebraCommonKernelAdvancedAlgoOsculatingCircle, A_, GeogebraCommonKernelGeosGeoPoint *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelAdvancedAlgoOsculatingCircle, R_, GeogebraCommonKernelGeosGeoPoint *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelAdvancedAlgoOsculatingCircle, f_, GeogebraCommonKernelGeosGeoFunction *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelAdvancedAlgoOsculatingCircle, v_, GeogebraCommonKernelGeosGeoVector *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelAdvancedAlgoOsculatingCircle, curv_, GeogebraCommonKernelGeosGeoNumeric *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelAdvancedAlgoOsculatingCircle, circle_, GeogebraCommonKernelGeosGeoConic *)

__attribute__((unused)) static void GeogebraCommonKernelAdvancedAlgoOsculatingCircle_compute(GeogebraCommonKernelAdvancedAlgoOsculatingCircle *self);

@implementation GeogebraCommonKernelAdvancedAlgoOsculatingCircle

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                                            withNSString:(NSString *)label
                    withGeogebraCommonKernelGeosGeoPoint:(GeogebraCommonKernelGeosGeoPoint *)A
                 withGeogebraCommonKernelGeosGeoFunction:(GeogebraCommonKernelGeosGeoFunction *)f {
  GeogebraCommonKernelAdvancedAlgoOsculatingCircle_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoPoint_withGeogebraCommonKernelGeosGeoFunction_(self, cons, label, A, f);
  return self;
}

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                    withGeogebraCommonKernelGeosGeoPoint:(GeogebraCommonKernelGeosGeoPoint *)A
                 withGeogebraCommonKernelGeosGeoFunction:(GeogebraCommonKernelGeosGeoFunction *)f {
  GeogebraCommonKernelAdvancedAlgoOsculatingCircle_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoPoint_withGeogebraCommonKernelGeosGeoFunction_(self, cons, A, f);
  return self;
}

- (GeogebraCommonKernelCommandsCommandsEnum *)getClassName {
  return GeogebraCommonKernelCommandsCommandsEnum_get_OsculatingCircle();
}

- (void)setInputOutput {
  GeogebraCommonKernelAlgosAlgoElement_setAndConsume_input_(self, [IOSObjectArray newArrayWithLength:2 type:GeogebraCommonKernelGeosGeoElement_class_()]);
  IOSObjectArray_Set(input_, 0, A_);
  IOSObjectArray_Set(input_, 1, f_);
  [super setOutputLengthWithInt:1];
  [super setOutputWithInt:0 withGeogebraCommonKernelGeosGeoElement:circle_];
  [self setDependencies];
}

- (GeogebraCommonKernelGeosGeoConic *)getCircle {
  return circle_;
}

- (void)compute {
  GeogebraCommonKernelAdvancedAlgoOsculatingCircle_compute(self);
}

- (void)remove {
  if (removed_) return;
  [super remove];
  [((GeogebraCommonKernelGeosGeoFunction *) nil_chk(f_)) removeAlgorithmWithGeogebraCommonKernelAlgosAlgoElement:algo_];
  [f_ removeAlgorithmWithGeogebraCommonKernelAlgosAlgoElement:cv_];
  [((GeogebraCommonKernelGeosGeoPoint *) nil_chk(A_)) removeAlgorithmWithGeogebraCommonKernelAlgosAlgoElement:algo_];
  [A_ removeAlgorithmWithGeogebraCommonKernelAlgosAlgoElement:cv_];
  [((GeogebraCommonKernelAdvancedAlgoCurvatureVector *) nil_chk(cv_)) remove];
}

- (void)dealloc {
  RELEASE_(A_);
  RELEASE_(R_);
  RELEASE_(f_);
  RELEASE_(v_);
  RELEASE_(curv_);
  RELEASE_(circle_);
  RELEASE_(algo_);
  RELEASE_(cv_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonKernelConstruction:withNSString:withGeogebraCommonKernelGeosGeoPoint:withGeogebraCommonKernelGeosGeoFunction:", "AlgoOsculatingCircle", NULL, 0x1, NULL, NULL },
    { "initWithGeogebraCommonKernelConstruction:withGeogebraCommonKernelGeosGeoPoint:withGeogebraCommonKernelGeosGeoFunction:", "AlgoOsculatingCircle", NULL, 0x1, NULL, NULL },
    { "getClassName", NULL, "Lgeogebra.common.kernel.commands.Commands;", 0x1, NULL, NULL },
    { "setInputOutput", NULL, "V", 0x4, NULL, NULL },
    { "getCircle", NULL, "Lgeogebra.common.kernel.geos.GeoConic;", 0x1, NULL, NULL },
    { "compute", NULL, "V", 0x11, NULL, NULL },
    { "remove", NULL, "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "A_", NULL, 0x2, "Lgeogebra.common.kernel.geos.GeoPoint;", NULL, NULL,  },
    { "R_", NULL, 0x2, "Lgeogebra.common.kernel.geos.GeoPoint;", NULL, NULL,  },
    { "f_", NULL, 0x2, "Lgeogebra.common.kernel.geos.GeoFunction;", NULL, NULL,  },
    { "v_", NULL, 0x2, "Lgeogebra.common.kernel.geos.GeoVector;", NULL, NULL,  },
    { "curv_", NULL, 0x2, "Lgeogebra.common.kernel.geos.GeoNumeric;", NULL, NULL,  },
    { "circle_", NULL, 0x2, "Lgeogebra.common.kernel.geos.GeoConic;", NULL, NULL,  },
    { "algo_", NULL, 0x0, "Lgeogebra.common.kernel.advanced.AlgoCurvature;", NULL, NULL,  },
    { "cv_", NULL, 0x0, "Lgeogebra.common.kernel.advanced.AlgoCurvatureVector;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelAdvancedAlgoOsculatingCircle = { 2, "AlgoOsculatingCircle", "geogebra.common.kernel.advanced", NULL, 0x1, 7, methods, 8, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelAdvancedAlgoOsculatingCircle;
}

@end

void GeogebraCommonKernelAdvancedAlgoOsculatingCircle_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoPoint_withGeogebraCommonKernelGeosGeoFunction_(GeogebraCommonKernelAdvancedAlgoOsculatingCircle *self, GeogebraCommonKernelConstruction *cons, NSString *label, GeogebraCommonKernelGeosGeoPoint *A, GeogebraCommonKernelGeosGeoFunction *f) {
  GeogebraCommonKernelAdvancedAlgoOsculatingCircle_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoPoint_withGeogebraCommonKernelGeosGeoFunction_(self, cons, A, f);
  [((GeogebraCommonKernelGeosGeoConic *) nil_chk(self->circle_)) setLabelWithNSString:label];
}

GeogebraCommonKernelAdvancedAlgoOsculatingCircle *new_GeogebraCommonKernelAdvancedAlgoOsculatingCircle_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoPoint_withGeogebraCommonKernelGeosGeoFunction_(GeogebraCommonKernelConstruction *cons, NSString *label, GeogebraCommonKernelGeosGeoPoint *A, GeogebraCommonKernelGeosGeoFunction *f) {
  GeogebraCommonKernelAdvancedAlgoOsculatingCircle *self = [GeogebraCommonKernelAdvancedAlgoOsculatingCircle alloc];
  GeogebraCommonKernelAdvancedAlgoOsculatingCircle_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoPoint_withGeogebraCommonKernelGeosGeoFunction_(self, cons, label, A, f);
  return self;
}

void GeogebraCommonKernelAdvancedAlgoOsculatingCircle_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoPoint_withGeogebraCommonKernelGeosGeoFunction_(GeogebraCommonKernelAdvancedAlgoOsculatingCircle *self, GeogebraCommonKernelConstruction *cons, GeogebraCommonKernelGeosGeoPoint *A, GeogebraCommonKernelGeosGeoFunction *f) {
  GeogebraCommonKernelAlgosAlgoElement_initWithGeogebraCommonKernelConstruction_(self, cons);
  GeogebraCommonKernelAdvancedAlgoOsculatingCircle_set_A_(self, A);
  GeogebraCommonKernelAdvancedAlgoOsculatingCircle_set_f_(self, f);
  GeogebraCommonKernelAdvancedAlgoOsculatingCircle_setAndConsume_R_(self, new_GeogebraCommonKernelGeosGeoPoint_initWithGeogebraCommonKernelConstruction_(cons));
  GeogebraCommonKernelAdvancedAlgoOsculatingCircle_setAndConsume_circle_(self, new_GeogebraCommonKernelGeosGeoConic_initWithGeogebraCommonKernelConstruction_(cons));
  GeogebraCommonKernelAdvancedAlgoOsculatingCircle_setAndConsume_algo_(self, new_GeogebraCommonKernelAdvancedAlgoCurvature_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelGeosGeoFunction_(cons, A, f));
  GeogebraCommonKernelAdvancedAlgoOsculatingCircle_setAndConsume_cv_(self, new_GeogebraCommonKernelAdvancedAlgoCurvatureVector_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoPoint_withGeogebraCommonKernelGeosGeoFunction_(cons, A, f));
  GeogebraCommonKernelAdvancedAlgoOsculatingCircle_set_curv_(self, [self->algo_ getResult]);
  GeogebraCommonKernelAdvancedAlgoOsculatingCircle_set_v_(self, [self->cv_ getVector]);
  [((GeogebraCommonKernelConstruction *) nil_chk(cons)) removeFromConstructionListWithGeogebraCommonKernelAlgosConstructionElement:self->algo_];
  [cons removeFromConstructionListWithGeogebraCommonKernelAlgosConstructionElement:self->cv_];
  [cons removeFromAlgorithmListWithGeogebraCommonKernelAlgosAlgoElement:self->algo_];
  [cons removeFromAlgorithmListWithGeogebraCommonKernelAlgosAlgoElement:self->cv_];
  [self setInputOutput];
  GeogebraCommonKernelAdvancedAlgoOsculatingCircle_compute(self);
}

GeogebraCommonKernelAdvancedAlgoOsculatingCircle *new_GeogebraCommonKernelAdvancedAlgoOsculatingCircle_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoPoint_withGeogebraCommonKernelGeosGeoFunction_(GeogebraCommonKernelConstruction *cons, GeogebraCommonKernelGeosGeoPoint *A, GeogebraCommonKernelGeosGeoFunction *f) {
  GeogebraCommonKernelAdvancedAlgoOsculatingCircle *self = [GeogebraCommonKernelAdvancedAlgoOsculatingCircle alloc];
  GeogebraCommonKernelAdvancedAlgoOsculatingCircle_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoPoint_withGeogebraCommonKernelGeosGeoFunction_(self, cons, A, f);
  return self;
}

void GeogebraCommonKernelAdvancedAlgoOsculatingCircle_compute(GeogebraCommonKernelAdvancedAlgoOsculatingCircle *self) {
  if (![((GeogebraCommonKernelGeosGeoFunction *) nil_chk(self->f_)) isOnPathWithGeogebraCommonKernelKernelNDGeoPointND:self->A_ withDouble:GeogebraCommonKernelKernel_MIN_PRECISION]) {
    [((GeogebraCommonKernelGeosGeoConic *) nil_chk(self->circle_)) setUndefined];
    return;
  }
  jdouble radius = 1 / JavaLangMath_absWithDouble_([((GeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->curv_)) getValue]);
  jdouble r2 = radius * radius;
  jdouble x = r2 * ((GeogebraCommonKernelGeosGeoVector *) nil_chk(self->v_))->x_;
  jdouble y = r2 * self->v_->y_;
  [((GeogebraCommonKernelGeosGeoPoint *) nil_chk(self->R_)) setCoordsWithDouble:((GeogebraCommonKernelGeosGeoPoint *) nil_chk(self->A_))->inhomX_ + x withDouble:self->A_->inhomY_ + y withDouble:1.0];
  [((GeogebraCommonKernelGeosGeoConic *) nil_chk(self->circle_)) setCircleWithGeogebraCommonKernelGeosGeoPoint:self->R_ withGeogebraCommonKernelGeosGeoPoint:self->A_];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelAdvancedAlgoOsculatingCircle)
