//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/advanced/AlgoCurvatureSurface.java
//


#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "geogebra/common/kernel/Construction.h"
#include "geogebra/common/kernel/Kernel.h"
#include "geogebra/common/kernel/advanced/AlgoCurvatureSurface.h"
#include "geogebra/common/kernel/algos/AlgoElement.h"
#include "geogebra/common/kernel/arithmetic/FunctionVariable.h"
#include "geogebra/common/kernel/arithmetic/MyDouble.h"
#include "geogebra/common/kernel/cas/AlgoDerivative.h"
#include "geogebra/common/kernel/commands/Commands.h"
#include "geogebra/common/kernel/geos/GeoElement.h"
#include "geogebra/common/kernel/geos/GeoFunctionNVar.h"
#include "geogebra/common/kernel/geos/GeoNumeric.h"
#include "geogebra/common/kernel/kernelND/GeoPointND.h"

@interface GeogebraCommonKernelAdvancedAlgoCurvatureSurface () {
 @public
  id<GeogebraCommonKernelKernelNDGeoPointND> A_;
  GeogebraCommonKernelGeosGeoFunctionNVar *f_;
  GeogebraCommonKernelGeosGeoFunctionNVar *fx_, *fxx_, *fy_, *fyy_, *fxy_;
  GeogebraCommonKernelGeosGeoNumeric *n_;
  GeogebraCommonKernelCasAlgoDerivative *algoCASfx_, *algoCASfxx_, *algoCASfy_, *algoCASfyy_, *algoCASfxy_;
}

@end

J2OBJC_FIELD_SETTER(GeogebraCommonKernelAdvancedAlgoCurvatureSurface, A_, id<GeogebraCommonKernelKernelNDGeoPointND>)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelAdvancedAlgoCurvatureSurface, f_, GeogebraCommonKernelGeosGeoFunctionNVar *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelAdvancedAlgoCurvatureSurface, fx_, GeogebraCommonKernelGeosGeoFunctionNVar *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelAdvancedAlgoCurvatureSurface, fxx_, GeogebraCommonKernelGeosGeoFunctionNVar *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelAdvancedAlgoCurvatureSurface, fy_, GeogebraCommonKernelGeosGeoFunctionNVar *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelAdvancedAlgoCurvatureSurface, fyy_, GeogebraCommonKernelGeosGeoFunctionNVar *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelAdvancedAlgoCurvatureSurface, fxy_, GeogebraCommonKernelGeosGeoFunctionNVar *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelAdvancedAlgoCurvatureSurface, n_, GeogebraCommonKernelGeosGeoNumeric *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelAdvancedAlgoCurvatureSurface, algoCASfx_, GeogebraCommonKernelCasAlgoDerivative *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelAdvancedAlgoCurvatureSurface, algoCASfxx_, GeogebraCommonKernelCasAlgoDerivative *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelAdvancedAlgoCurvatureSurface, algoCASfy_, GeogebraCommonKernelCasAlgoDerivative *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelAdvancedAlgoCurvatureSurface, algoCASfyy_, GeogebraCommonKernelCasAlgoDerivative *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelAdvancedAlgoCurvatureSurface, algoCASfxy_, GeogebraCommonKernelCasAlgoDerivative *)

__attribute__((unused)) static void GeogebraCommonKernelAdvancedAlgoCurvatureSurface_compute(GeogebraCommonKernelAdvancedAlgoCurvatureSurface *self);

@implementation GeogebraCommonKernelAdvancedAlgoCurvatureSurface

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                                            withNSString:(NSString *)label
              withGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)A
             withGeogebraCommonKernelGeosGeoFunctionNVar:(GeogebraCommonKernelGeosGeoFunctionNVar *)f {
  GeogebraCommonKernelAdvancedAlgoCurvatureSurface_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelGeosGeoFunctionNVar_(self, cons, label, A, f);
  return self;
}

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
              withGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)A
             withGeogebraCommonKernelGeosGeoFunctionNVar:(GeogebraCommonKernelGeosGeoFunctionNVar *)f {
  GeogebraCommonKernelAdvancedAlgoCurvatureSurface_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelGeosGeoFunctionNVar_(self, cons, A, f);
  return self;
}

- (GeogebraCommonKernelCommandsCommandsEnum *)getClassName {
  return GeogebraCommonKernelCommandsCommandsEnum_get_Curvature();
}

- (void)setInputOutput {
  GeogebraCommonKernelAlgosAlgoElement_setAndConsume_input_(self, [IOSObjectArray newArrayWithLength:2 type:GeogebraCommonKernelGeosGeoElement_class_()]);
  IOSObjectArray_Set(input_, 0, (GeogebraCommonKernelGeosGeoElement *) check_class_cast(A_, [GeogebraCommonKernelGeosGeoElement class]));
  IOSObjectArray_Set(input_, 1, f_);
  [super setOutputLengthWithInt:1];
  [super setOutputWithInt:0 withGeogebraCommonKernelGeosGeoElement:n_];
  [self setDependencies];
}

- (GeogebraCommonKernelGeosGeoNumeric *)getResult {
  return n_;
}

- (void)compute {
  GeogebraCommonKernelAdvancedAlgoCurvatureSurface_compute(self);
}

- (void)remove {
  if (removed_) return;
  [super remove];
  [((GeogebraCommonKernelGeosGeoElement *) nil_chk(((GeogebraCommonKernelGeosGeoElement *) check_class_cast(A_, [GeogebraCommonKernelGeosGeoElement class])))) removeAlgorithmWithGeogebraCommonKernelAlgosAlgoElement:algoCASfx_];
  [((GeogebraCommonKernelGeosGeoFunctionNVar *) nil_chk(f_)) removeAlgorithmWithGeogebraCommonKernelAlgosAlgoElement:algoCASfx_];
  [((GeogebraCommonKernelGeosGeoElement *) nil_chk(((GeogebraCommonKernelGeosGeoElement *) check_class_cast(A_, [GeogebraCommonKernelGeosGeoElement class])))) removeAlgorithmWithGeogebraCommonKernelAlgosAlgoElement:algoCASfxx_];
  [f_ removeAlgorithmWithGeogebraCommonKernelAlgosAlgoElement:algoCASfxx_];
  [((GeogebraCommonKernelGeosGeoElement *) nil_chk(((GeogebraCommonKernelGeosGeoElement *) check_class_cast(A_, [GeogebraCommonKernelGeosGeoElement class])))) removeAlgorithmWithGeogebraCommonKernelAlgosAlgoElement:algoCASfy_];
  [f_ removeAlgorithmWithGeogebraCommonKernelAlgosAlgoElement:algoCASfy_];
  [((GeogebraCommonKernelGeosGeoElement *) nil_chk(((GeogebraCommonKernelGeosGeoElement *) check_class_cast(A_, [GeogebraCommonKernelGeosGeoElement class])))) removeAlgorithmWithGeogebraCommonKernelAlgosAlgoElement:algoCASfyy_];
  [f_ removeAlgorithmWithGeogebraCommonKernelAlgosAlgoElement:algoCASfyy_];
  [((GeogebraCommonKernelGeosGeoElement *) nil_chk(((GeogebraCommonKernelGeosGeoElement *) check_class_cast(A_, [GeogebraCommonKernelGeosGeoElement class])))) removeAlgorithmWithGeogebraCommonKernelAlgosAlgoElement:algoCASfxy_];
  [f_ removeAlgorithmWithGeogebraCommonKernelAlgosAlgoElement:algoCASfxy_];
}

- (void)dealloc {
  RELEASE_(A_);
  RELEASE_(f_);
  RELEASE_(fx_);
  RELEASE_(fxx_);
  RELEASE_(fy_);
  RELEASE_(fyy_);
  RELEASE_(fxy_);
  RELEASE_(n_);
  RELEASE_(algoCASfx_);
  RELEASE_(algoCASfxx_);
  RELEASE_(algoCASfy_);
  RELEASE_(algoCASfyy_);
  RELEASE_(algoCASfxy_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonKernelConstruction:withNSString:withGeogebraCommonKernelKernelNDGeoPointND:withGeogebraCommonKernelGeosGeoFunctionNVar:", "AlgoCurvatureSurface", NULL, 0x1, NULL, NULL },
    { "initWithGeogebraCommonKernelConstruction:withGeogebraCommonKernelKernelNDGeoPointND:withGeogebraCommonKernelGeosGeoFunctionNVar:", "AlgoCurvatureSurface", NULL, 0x0, NULL, NULL },
    { "getClassName", NULL, "Lgeogebra.common.kernel.commands.Commands;", 0x1, NULL, NULL },
    { "setInputOutput", NULL, "V", 0x4, NULL, NULL },
    { "getResult", NULL, "Lgeogebra.common.kernel.geos.GeoNumeric;", 0x1, NULL, NULL },
    { "compute", NULL, "V", 0x11, NULL, NULL },
    { "remove", NULL, "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "A_", NULL, 0x2, "Lgeogebra.common.kernel.kernelND.GeoPointND;", NULL, NULL,  },
    { "f_", NULL, 0x2, "Lgeogebra.common.kernel.geos.GeoFunctionNVar;", NULL, NULL,  },
    { "fx_", NULL, 0x2, "Lgeogebra.common.kernel.geos.GeoFunctionNVar;", NULL, NULL,  },
    { "fxx_", NULL, 0x2, "Lgeogebra.common.kernel.geos.GeoFunctionNVar;", NULL, NULL,  },
    { "fy_", NULL, 0x2, "Lgeogebra.common.kernel.geos.GeoFunctionNVar;", NULL, NULL,  },
    { "fyy_", NULL, 0x2, "Lgeogebra.common.kernel.geos.GeoFunctionNVar;", NULL, NULL,  },
    { "fxy_", NULL, 0x2, "Lgeogebra.common.kernel.geos.GeoFunctionNVar;", NULL, NULL,  },
    { "n_", NULL, 0x2, "Lgeogebra.common.kernel.geos.GeoNumeric;", NULL, NULL,  },
    { "algoCASfx_", NULL, 0x2, "Lgeogebra.common.kernel.cas.AlgoDerivative;", NULL, NULL,  },
    { "algoCASfxx_", NULL, 0x2, "Lgeogebra.common.kernel.cas.AlgoDerivative;", NULL, NULL,  },
    { "algoCASfy_", NULL, 0x2, "Lgeogebra.common.kernel.cas.AlgoDerivative;", NULL, NULL,  },
    { "algoCASfyy_", NULL, 0x2, "Lgeogebra.common.kernel.cas.AlgoDerivative;", NULL, NULL,  },
    { "algoCASfxy_", NULL, 0x2, "Lgeogebra.common.kernel.cas.AlgoDerivative;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelAdvancedAlgoCurvatureSurface = { 2, "AlgoCurvatureSurface", "geogebra.common.kernel.advanced", NULL, 0x1, 7, methods, 13, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelAdvancedAlgoCurvatureSurface;
}

@end

void GeogebraCommonKernelAdvancedAlgoCurvatureSurface_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelGeosGeoFunctionNVar_(GeogebraCommonKernelAdvancedAlgoCurvatureSurface *self, GeogebraCommonKernelConstruction *cons, NSString *label, id<GeogebraCommonKernelKernelNDGeoPointND> A, GeogebraCommonKernelGeosGeoFunctionNVar *f) {
  GeogebraCommonKernelAdvancedAlgoCurvatureSurface_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelGeosGeoFunctionNVar_(self, cons, A, f);
  if (label != nil) {
    [((GeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->n_)) setLabelWithNSString:label];
  }
}

GeogebraCommonKernelAdvancedAlgoCurvatureSurface *new_GeogebraCommonKernelAdvancedAlgoCurvatureSurface_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelGeosGeoFunctionNVar_(GeogebraCommonKernelConstruction *cons, NSString *label, id<GeogebraCommonKernelKernelNDGeoPointND> A, GeogebraCommonKernelGeosGeoFunctionNVar *f) {
  GeogebraCommonKernelAdvancedAlgoCurvatureSurface *self = [GeogebraCommonKernelAdvancedAlgoCurvatureSurface alloc];
  GeogebraCommonKernelAdvancedAlgoCurvatureSurface_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelGeosGeoFunctionNVar_(self, cons, label, A, f);
  return self;
}

void GeogebraCommonKernelAdvancedAlgoCurvatureSurface_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelGeosGeoFunctionNVar_(GeogebraCommonKernelAdvancedAlgoCurvatureSurface *self, GeogebraCommonKernelConstruction *cons, id<GeogebraCommonKernelKernelNDGeoPointND> A, GeogebraCommonKernelGeosGeoFunctionNVar *f) {
  GeogebraCommonKernelAlgosAlgoElement_initWithGeogebraCommonKernelConstruction_(self, cons);
  GeogebraCommonKernelAdvancedAlgoCurvatureSurface_set_A_(self, A);
  GeogebraCommonKernelAdvancedAlgoCurvatureSurface_set_f_(self, f);
  GeogebraCommonKernelAdvancedAlgoCurvatureSurface_setAndConsume_n_(self, new_GeogebraCommonKernelGeosGeoNumeric_initWithGeogebraCommonKernelConstruction_(cons));
  IOSObjectArray *vars = [((GeogebraCommonKernelGeosGeoFunctionNVar *) nil_chk(f)) getFunctionVariables];
  if (((IOSObjectArray *) nil_chk(vars))->size_ != 2) {
    return;
  }
  GeogebraCommonKernelGeosGeoNumeric *x = [new_GeogebraCommonKernelGeosGeoNumeric_initWithGeogebraCommonKernelConstruction_(cons) autorelease];
  [x setLocalVariableLabelWithNSString:[((GeogebraCommonKernelArithmeticFunctionVariable *) nil_chk(IOSObjectArray_Get(vars, 0))) getSetVarString]];
  GeogebraCommonKernelGeosGeoNumeric *y = [new_GeogebraCommonKernelGeosGeoNumeric_initWithGeogebraCommonKernelConstruction_(cons) autorelease];
  [y setLocalVariableLabelWithNSString:[((GeogebraCommonKernelArithmeticFunctionVariable *) nil_chk(IOSObjectArray_Get(vars, 1))) getSetVarString]];
  GeogebraCommonKernelArithmeticMyDouble *one = [new_GeogebraCommonKernelArithmeticMyDouble_initWithGeogebraCommonKernelKernel_withDouble_(self->kernel_, 1) autorelease];
  GeogebraCommonKernelAdvancedAlgoCurvatureSurface_setAndConsume_algoCASfx_(self, new_GeogebraCommonKernelCasAlgoDerivative_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosCasEvaluableFunction_withGeogebraCommonKernelGeosGeoNumeric_withGeogebraCommonKernelArithmeticNumberValue_withBoolean_(cons, f, x, one, NO));
  [((GeogebraCommonKernelConstruction *) nil_chk(cons)) removeFromConstructionListWithGeogebraCommonKernelAlgosConstructionElement:self->algoCASfx_];
  GeogebraCommonKernelAdvancedAlgoCurvatureSurface_set_fx_(self, (GeogebraCommonKernelGeosGeoFunctionNVar *) check_class_cast([self->algoCASfx_ getResult], [GeogebraCommonKernelGeosGeoFunctionNVar class]));
  GeogebraCommonKernelAdvancedAlgoCurvatureSurface_setAndConsume_algoCASfxx_(self, new_GeogebraCommonKernelCasAlgoDerivative_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosCasEvaluableFunction_withGeogebraCommonKernelGeosGeoNumeric_withGeogebraCommonKernelArithmeticNumberValue_withBoolean_(cons, self->fx_, x, one, NO));
  [cons removeFromConstructionListWithGeogebraCommonKernelAlgosConstructionElement:self->algoCASfxx_];
  GeogebraCommonKernelAdvancedAlgoCurvatureSurface_set_fxx_(self, (GeogebraCommonKernelGeosGeoFunctionNVar *) check_class_cast([self->algoCASfxx_ getResult], [GeogebraCommonKernelGeosGeoFunctionNVar class]));
  GeogebraCommonKernelAdvancedAlgoCurvatureSurface_setAndConsume_algoCASfy_(self, new_GeogebraCommonKernelCasAlgoDerivative_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosCasEvaluableFunction_withGeogebraCommonKernelGeosGeoNumeric_withGeogebraCommonKernelArithmeticNumberValue_withBoolean_(cons, f, y, one, NO));
  [cons removeFromConstructionListWithGeogebraCommonKernelAlgosConstructionElement:self->algoCASfy_];
  GeogebraCommonKernelAdvancedAlgoCurvatureSurface_set_fy_(self, (GeogebraCommonKernelGeosGeoFunctionNVar *) check_class_cast([self->algoCASfy_ getResult], [GeogebraCommonKernelGeosGeoFunctionNVar class]));
  GeogebraCommonKernelAdvancedAlgoCurvatureSurface_setAndConsume_algoCASfyy_(self, new_GeogebraCommonKernelCasAlgoDerivative_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosCasEvaluableFunction_withGeogebraCommonKernelGeosGeoNumeric_withGeogebraCommonKernelArithmeticNumberValue_withBoolean_(cons, self->fy_, y, one, NO));
  [cons removeFromConstructionListWithGeogebraCommonKernelAlgosConstructionElement:self->algoCASfyy_];
  GeogebraCommonKernelAdvancedAlgoCurvatureSurface_set_fyy_(self, (GeogebraCommonKernelGeosGeoFunctionNVar *) check_class_cast([self->algoCASfyy_ getResult], [GeogebraCommonKernelGeosGeoFunctionNVar class]));
  GeogebraCommonKernelAdvancedAlgoCurvatureSurface_setAndConsume_algoCASfxy_(self, new_GeogebraCommonKernelCasAlgoDerivative_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosCasEvaluableFunction_withGeogebraCommonKernelGeosGeoNumeric_withGeogebraCommonKernelArithmeticNumberValue_withBoolean_(cons, self->fx_, y, one, NO));
  [cons removeFromConstructionListWithGeogebraCommonKernelAlgosConstructionElement:self->algoCASfxy_];
  GeogebraCommonKernelAdvancedAlgoCurvatureSurface_set_fxy_(self, (GeogebraCommonKernelGeosGeoFunctionNVar *) check_class_cast([self->algoCASfxy_ getResult], [GeogebraCommonKernelGeosGeoFunctionNVar class]));
  [self setInputOutput];
  GeogebraCommonKernelAdvancedAlgoCurvatureSurface_compute(self);
}

GeogebraCommonKernelAdvancedAlgoCurvatureSurface *new_GeogebraCommonKernelAdvancedAlgoCurvatureSurface_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelGeosGeoFunctionNVar_(GeogebraCommonKernelConstruction *cons, id<GeogebraCommonKernelKernelNDGeoPointND> A, GeogebraCommonKernelGeosGeoFunctionNVar *f) {
  GeogebraCommonKernelAdvancedAlgoCurvatureSurface *self = [GeogebraCommonKernelAdvancedAlgoCurvatureSurface alloc];
  GeogebraCommonKernelAdvancedAlgoCurvatureSurface_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelGeosGeoFunctionNVar_(self, cons, A, f);
  return self;
}

void GeogebraCommonKernelAdvancedAlgoCurvatureSurface_compute(GeogebraCommonKernelAdvancedAlgoCurvatureSurface *self) {
  if (![((id<GeogebraCommonKernelKernelNDGeoPointND>) nil_chk(self->A_)) isFinite] || self->fx_ == nil || self->fxx_ == nil || self->fy_ == nil || self->fyy_ == nil || self->fxy_ == nil) {
    [((GeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->n_)) setUndefined];
    return;
  }
  jdouble x = [self->A_ getInhomX];
  jdouble y = [self->A_ getInhomY];
  IOSDoubleArray *xy = [IOSDoubleArray arrayWithDoubles:(jdouble[]){ x, y } count:2];
  jdouble fxEval = [((GeogebraCommonKernelGeosGeoFunctionNVar *) nil_chk(self->fx_)) evaluateWithDoubleArray:xy];
  jdouble fyEval = [((GeogebraCommonKernelGeosGeoFunctionNVar *) nil_chk(self->fy_)) evaluateWithDoubleArray:xy];
  jdouble fxxEval = [((GeogebraCommonKernelGeosGeoFunctionNVar *) nil_chk(self->fxx_)) evaluateWithDoubleArray:xy];
  jdouble fyyEval = [((GeogebraCommonKernelGeosGeoFunctionNVar *) nil_chk(self->fyy_)) evaluateWithDoubleArray:xy];
  jdouble fxyEval = [((GeogebraCommonKernelGeosGeoFunctionNVar *) nil_chk(self->fxy_)) evaluateWithDoubleArray:xy];
  jdouble top = (fxxEval * fyyEval - fxyEval * fxyEval);
  jdouble bottomSqrt = 1 + fxEval * fxEval + fyEval * fyEval;
  jdouble k = top / (bottomSqrt * bottomSqrt);
  [((GeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->n_)) setValueWithDouble:k];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelAdvancedAlgoCurvatureSurface)
