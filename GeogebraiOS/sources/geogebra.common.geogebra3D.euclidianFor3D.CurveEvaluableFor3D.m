//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/geogebra3D/euclidianFor3D/CurveEvaluableFor3D.java
//


#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "geogebra/common/geogebra3D/euclidianFor3D/CurveEvaluableFor3D.h"
#include "geogebra/common/geogebra3D/kernel3D/geos/GeoCurveCartesian3D.h"
#include "geogebra/common/kernel/Kernel.h"
#include "geogebra/common/kernel/arithmetic/Function.h"
#include "geogebra/common/kernel/geos/GeoElement.h"
#include "geogebra/common/kernel/roots/RealRootFunction.h"
#include "java/lang/Double.h"
#include "java/lang/Math.h"

@class GeogebraCommonGeogebra3DEuclidianFor3DCurveEvaluableFor3D_FunMustBeZero;

@interface GeogebraCommonGeogebra3DEuclidianFor3DCurveEvaluableFor3D () {
 @public
  GeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D *parent_;
  IOSDoubleArray *parentOut_;
  GeogebraCommonGeogebra3DEuclidianFor3DCurveEvaluableFor3D_FunMustBeZero *funZ_;
}

@end

J2OBJC_FIELD_SETTER(GeogebraCommonGeogebra3DEuclidianFor3DCurveEvaluableFor3D, parent_, GeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D *)
J2OBJC_FIELD_SETTER(GeogebraCommonGeogebra3DEuclidianFor3DCurveEvaluableFor3D, parentOut_, IOSDoubleArray *)
J2OBJC_FIELD_SETTER(GeogebraCommonGeogebra3DEuclidianFor3DCurveEvaluableFor3D, funZ_, GeogebraCommonGeogebra3DEuclidianFor3DCurveEvaluableFor3D_FunMustBeZero *)

@interface GeogebraCommonGeogebra3DEuclidianFor3DCurveEvaluableFor3D_FunMustBeZero : NSObject < GeogebraCommonKernelRootsRealRootFunction > {
 @public
  id<GeogebraCommonKernelRootsRealRootFunction> parentFun_;
}

- (instancetype)initWithGeogebraCommonGeogebra3DEuclidianFor3DCurveEvaluableFor3D:(GeogebraCommonGeogebra3DEuclidianFor3DCurveEvaluableFor3D *)outer$;

- (void)setParentFunWithGeogebraCommonKernelRootsRealRootFunction:(id<GeogebraCommonKernelRootsRealRootFunction>)parentFun;

- (jdouble)evaluateWithDouble:(jdouble)t;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonGeogebra3DEuclidianFor3DCurveEvaluableFor3D_FunMustBeZero)

J2OBJC_FIELD_SETTER(GeogebraCommonGeogebra3DEuclidianFor3DCurveEvaluableFor3D_FunMustBeZero, parentFun_, id<GeogebraCommonKernelRootsRealRootFunction>)

__attribute__((unused)) static void GeogebraCommonGeogebra3DEuclidianFor3DCurveEvaluableFor3D_FunMustBeZero_initWithGeogebraCommonGeogebra3DEuclidianFor3DCurveEvaluableFor3D_(GeogebraCommonGeogebra3DEuclidianFor3DCurveEvaluableFor3D_FunMustBeZero *self, GeogebraCommonGeogebra3DEuclidianFor3DCurveEvaluableFor3D *outer$);

__attribute__((unused)) static GeogebraCommonGeogebra3DEuclidianFor3DCurveEvaluableFor3D_FunMustBeZero *new_GeogebraCommonGeogebra3DEuclidianFor3DCurveEvaluableFor3D_FunMustBeZero_initWithGeogebraCommonGeogebra3DEuclidianFor3DCurveEvaluableFor3D_(GeogebraCommonGeogebra3DEuclidianFor3DCurveEvaluableFor3D *outer$) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonGeogebra3DEuclidianFor3DCurveEvaluableFor3D_FunMustBeZero)

@implementation GeogebraCommonGeogebra3DEuclidianFor3DCurveEvaluableFor3D

- (instancetype)initWithGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D:(GeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D *)parent {
  GeogebraCommonGeogebra3DEuclidianFor3DCurveEvaluableFor3D_initWithGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D_(self, parent);
  return self;
}

- (void)evaluateCurveWithDouble:(jdouble)t
                withDoubleArray:(IOSDoubleArray *)outArg {
  [((GeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D *) nil_chk(parent_)) evaluateCurveWithDouble:t withDoubleArray:parentOut_];
  jdouble z = IOSDoubleArray_Get(nil_chk(parentOut_), 2);
  if (JavaLangDouble_isInfiniteWithDouble_(z) || JavaLangDouble_isNaNWithDouble_(z) || !GeogebraCommonKernelKernel_isZeroWithDouble_(z)) {
    *IOSDoubleArray_GetRef(nil_chk(outArg), 0) = JavaLangDouble_NaN;
  }
  else {
    for (jint i = 0; i < ((IOSDoubleArray *) nil_chk(outArg))->size_; i++) {
      *IOSDoubleArray_GetRef(outArg, i) = IOSDoubleArray_Get(parentOut_, i);
    }
  }
}

- (IOSDoubleArray *)getDefinedIntervalWithDouble:(jdouble)a
                                      withDouble:(jdouble)b {
  [((GeogebraCommonGeogebra3DEuclidianFor3DCurveEvaluableFor3D_FunMustBeZero *) nil_chk(funZ_)) setParentFunWithGeogebraCommonKernelRootsRealRootFunction:[((GeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D *) nil_chk(parent_)) getFunWithInt:2]];
  return GeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D_getDefinedIntervalWithDouble_withDouble_withGeogebraCommonKernelRootsRealRootFunction_withGeogebraCommonKernelRootsRealRootFunction_withGeogebraCommonKernelRootsRealRootFunction_(a, b, [parent_ getFunWithInt:0], [parent_ getFunWithInt:1], funZ_);
}

- (IOSDoubleArray *)newDoubleArray {
  return [IOSDoubleArray arrayWithLength:2];
}

- (jdouble)getMinParameter {
  return [((GeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D *) nil_chk(parent_)) getMinParameter];
}

- (jdouble)getMaxParameter {
  return [((GeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D *) nil_chk(parent_)) getMaxParameter];
}

- (jboolean)getTrace {
  return [((GeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D *) nil_chk(parent_)) getTrace];
}

- (jboolean)isClosedPath {
  return [((GeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D *) nil_chk(parent_)) isClosedPath];
}

- (jboolean)isFunctionInX {
  return [((GeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D *) nil_chk(parent_)) isFunctionInX];
}

- (GeogebraCommonKernelGeosGeoElement *)toGeoElement {
  return [((GeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D *) nil_chk(parent_)) toGeoElement];
}

- (jdouble)distanceMaxWithDoubleArray:(IOSDoubleArray *)p1
                      withDoubleArray:(IOSDoubleArray *)p2 {
  return JavaLangMath_maxWithDouble_withDouble_(JavaLangMath_absWithDouble_(IOSDoubleArray_Get(nil_chk(p1), 0) - IOSDoubleArray_Get(nil_chk(p2), 0)), JavaLangMath_absWithDouble_(IOSDoubleArray_Get(p1, 1) - IOSDoubleArray_Get(p2, 1)));
}

- (void)dealloc {
  RELEASE_(parent_);
  RELEASE_(parentOut_);
  RELEASE_(funZ_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D:", "CurveEvaluableFor3D", NULL, 0x1, NULL, NULL },
    { "evaluateCurveWithDouble:withDoubleArray:", "evaluateCurve", "V", 0x1, NULL, NULL },
    { "getDefinedIntervalWithDouble:withDouble:", "getDefinedInterval", "[D", 0x1, NULL, NULL },
    { "newDoubleArray", NULL, "[D", 0x1, NULL, NULL },
    { "getMinParameter", NULL, "D", 0x1, NULL, NULL },
    { "getMaxParameter", NULL, "D", 0x1, NULL, NULL },
    { "getTrace", NULL, "Z", 0x1, NULL, NULL },
    { "isClosedPath", NULL, "Z", 0x1, NULL, NULL },
    { "isFunctionInX", NULL, "Z", 0x1, NULL, NULL },
    { "toGeoElement", NULL, "Lgeogebra.common.kernel.geos.GeoElement;", 0x1, NULL, NULL },
    { "distanceMaxWithDoubleArray:withDoubleArray:", "distanceMax", "D", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "parent_", NULL, 0x2, "Lgeogebra.common.geogebra3D.kernel3D.geos.GeoCurveCartesian3D;", NULL, NULL,  },
    { "parentOut_", NULL, 0x2, "[D", NULL, NULL,  },
    { "funZ_", NULL, 0x2, "Lgeogebra.common.geogebra3D.euclidianFor3D.CurveEvaluableFor3D$FunMustBeZero;", NULL, NULL,  },
  };
  static const char *inner_classes[] = {"Lgeogebra.common.geogebra3D.euclidianFor3D.CurveEvaluableFor3D$FunMustBeZero;"};
  static const J2ObjcClassInfo _GeogebraCommonGeogebra3DEuclidianFor3DCurveEvaluableFor3D = { 2, "CurveEvaluableFor3D", "geogebra.common.geogebra3D.euclidianFor3D", NULL, 0x1, 11, methods, 3, fields, 0, NULL, 1, inner_classes, NULL, NULL };
  return &_GeogebraCommonGeogebra3DEuclidianFor3DCurveEvaluableFor3D;
}

@end

void GeogebraCommonGeogebra3DEuclidianFor3DCurveEvaluableFor3D_initWithGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D_(GeogebraCommonGeogebra3DEuclidianFor3DCurveEvaluableFor3D *self, GeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D *parent) {
  NSObject_init(self);
  GeogebraCommonGeogebra3DEuclidianFor3DCurveEvaluableFor3D_set_parent_(self, parent);
  GeogebraCommonGeogebra3DEuclidianFor3DCurveEvaluableFor3D_setAndConsume_parentOut_(self, [IOSDoubleArray newArrayWithLength:3]);
  GeogebraCommonGeogebra3DEuclidianFor3DCurveEvaluableFor3D_setAndConsume_funZ_(self, new_GeogebraCommonGeogebra3DEuclidianFor3DCurveEvaluableFor3D_FunMustBeZero_initWithGeogebraCommonGeogebra3DEuclidianFor3DCurveEvaluableFor3D_(self));
}

GeogebraCommonGeogebra3DEuclidianFor3DCurveEvaluableFor3D *new_GeogebraCommonGeogebra3DEuclidianFor3DCurveEvaluableFor3D_initWithGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D_(GeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D *parent) {
  GeogebraCommonGeogebra3DEuclidianFor3DCurveEvaluableFor3D *self = [GeogebraCommonGeogebra3DEuclidianFor3DCurveEvaluableFor3D alloc];
  GeogebraCommonGeogebra3DEuclidianFor3DCurveEvaluableFor3D_initWithGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D_(self, parent);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonGeogebra3DEuclidianFor3DCurveEvaluableFor3D)

@implementation GeogebraCommonGeogebra3DEuclidianFor3DCurveEvaluableFor3D_FunMustBeZero

- (instancetype)initWithGeogebraCommonGeogebra3DEuclidianFor3DCurveEvaluableFor3D:(GeogebraCommonGeogebra3DEuclidianFor3DCurveEvaluableFor3D *)outer$ {
  GeogebraCommonGeogebra3DEuclidianFor3DCurveEvaluableFor3D_FunMustBeZero_initWithGeogebraCommonGeogebra3DEuclidianFor3DCurveEvaluableFor3D_(self, outer$);
  return self;
}

- (void)setParentFunWithGeogebraCommonKernelRootsRealRootFunction:(id<GeogebraCommonKernelRootsRealRootFunction>)parentFun {
  GeogebraCommonGeogebra3DEuclidianFor3DCurveEvaluableFor3D_FunMustBeZero_set_parentFun_(self, parentFun);
}

- (jdouble)evaluateWithDouble:(jdouble)t {
  jdouble z = [((id<GeogebraCommonKernelRootsRealRootFunction>) nil_chk(parentFun_)) evaluateWithDouble:t];
  if (!GeogebraCommonKernelKernel_isZeroWithDouble_(z)) {
    return JavaLangDouble_NaN;
  }
  return 0;
}

- (void)dealloc {
  RELEASE_(parentFun_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonGeogebra3DEuclidianFor3DCurveEvaluableFor3D:", "FunMustBeZero", NULL, 0x1, NULL, NULL },
    { "setParentFunWithGeogebraCommonKernelRootsRealRootFunction:", "setParentFun", "V", 0x1, NULL, NULL },
    { "evaluateWithDouble:", "evaluate", "D", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "parentFun_", NULL, 0x2, "Lgeogebra.common.kernel.roots.RealRootFunction;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _GeogebraCommonGeogebra3DEuclidianFor3DCurveEvaluableFor3D_FunMustBeZero = { 2, "FunMustBeZero", "geogebra.common.geogebra3D.euclidianFor3D", "CurveEvaluableFor3D", 0x2, 3, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonGeogebra3DEuclidianFor3DCurveEvaluableFor3D_FunMustBeZero;
}

@end

void GeogebraCommonGeogebra3DEuclidianFor3DCurveEvaluableFor3D_FunMustBeZero_initWithGeogebraCommonGeogebra3DEuclidianFor3DCurveEvaluableFor3D_(GeogebraCommonGeogebra3DEuclidianFor3DCurveEvaluableFor3D_FunMustBeZero *self, GeogebraCommonGeogebra3DEuclidianFor3DCurveEvaluableFor3D *outer$) {
  NSObject_init(self);
}

GeogebraCommonGeogebra3DEuclidianFor3DCurveEvaluableFor3D_FunMustBeZero *new_GeogebraCommonGeogebra3DEuclidianFor3DCurveEvaluableFor3D_FunMustBeZero_initWithGeogebraCommonGeogebra3DEuclidianFor3DCurveEvaluableFor3D_(GeogebraCommonGeogebra3DEuclidianFor3DCurveEvaluableFor3D *outer$) {
  GeogebraCommonGeogebra3DEuclidianFor3DCurveEvaluableFor3D_FunMustBeZero *self = [GeogebraCommonGeogebra3DEuclidianFor3DCurveEvaluableFor3D_FunMustBeZero alloc];
  GeogebraCommonGeogebra3DEuclidianFor3DCurveEvaluableFor3D_FunMustBeZero_initWithGeogebraCommonGeogebra3DEuclidianFor3DCurveEvaluableFor3D_(self, outer$);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonGeogebra3DEuclidianFor3DCurveEvaluableFor3D_FunMustBeZero)
