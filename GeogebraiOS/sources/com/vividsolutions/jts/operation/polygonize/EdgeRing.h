//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/com/vividsolutions/jts/operation/polygonize/EdgeRing.java
//

#ifndef _ComVividsolutionsJtsOperationPolygonizeEdgeRing_H_
#define _ComVividsolutionsJtsOperationPolygonizeEdgeRing_H_

#include "J2ObjC_header.h"

@class ComVividsolutionsJtsGeomCoordinate;
@class ComVividsolutionsJtsGeomGeometryFactory;
@class ComVividsolutionsJtsGeomLineString;
@class ComVividsolutionsJtsGeomLinearRing;
@class ComVividsolutionsJtsGeomPolygon;
@class ComVividsolutionsJtsPlanargraphDirectedEdge;
@class IOSObjectArray;
@protocol JavaUtilList;

@interface ComVividsolutionsJtsOperationPolygonizeEdgeRing : NSObject

#pragma mark Public

- (instancetype)initWithComVividsolutionsJtsGeomGeometryFactory:(ComVividsolutionsJtsGeomGeometryFactory *)factory;

- (void)addWithComVividsolutionsJtsPlanargraphDirectedEdge:(ComVividsolutionsJtsPlanargraphDirectedEdge *)de;

- (void)addHoleWithComVividsolutionsJtsGeomLinearRing:(ComVividsolutionsJtsGeomLinearRing *)hole;

+ (ComVividsolutionsJtsOperationPolygonizeEdgeRing *)findEdgeRingContainingWithComVividsolutionsJtsOperationPolygonizeEdgeRing:(ComVividsolutionsJtsOperationPolygonizeEdgeRing *)testEr
                                                                                                              withJavaUtilList:(id<JavaUtilList>)shellList;

- (ComVividsolutionsJtsGeomLineString *)getLineString;

- (ComVividsolutionsJtsGeomPolygon *)getPolygon;

- (ComVividsolutionsJtsGeomLinearRing *)getRing;

- (jboolean)isHole;

+ (jboolean)isInListWithComVividsolutionsJtsGeomCoordinate:(ComVividsolutionsJtsGeomCoordinate *)pt
               withComVividsolutionsJtsGeomCoordinateArray:(IOSObjectArray *)pts;

- (jboolean)isValid;

+ (ComVividsolutionsJtsGeomCoordinate *)ptNotInListWithComVividsolutionsJtsGeomCoordinateArray:(IOSObjectArray *)testPts
                                                   withComVividsolutionsJtsGeomCoordinateArray:(IOSObjectArray *)pts;

@end

J2OBJC_EMPTY_STATIC_INIT(ComVividsolutionsJtsOperationPolygonizeEdgeRing)

FOUNDATION_EXPORT ComVividsolutionsJtsOperationPolygonizeEdgeRing *ComVividsolutionsJtsOperationPolygonizeEdgeRing_findEdgeRingContainingWithComVividsolutionsJtsOperationPolygonizeEdgeRing_withJavaUtilList_(ComVividsolutionsJtsOperationPolygonizeEdgeRing *testEr, id<JavaUtilList> shellList);

FOUNDATION_EXPORT ComVividsolutionsJtsGeomCoordinate *ComVividsolutionsJtsOperationPolygonizeEdgeRing_ptNotInListWithComVividsolutionsJtsGeomCoordinateArray_withComVividsolutionsJtsGeomCoordinateArray_(IOSObjectArray *testPts, IOSObjectArray *pts);

FOUNDATION_EXPORT jboolean ComVividsolutionsJtsOperationPolygonizeEdgeRing_isInListWithComVividsolutionsJtsGeomCoordinate_withComVividsolutionsJtsGeomCoordinateArray_(ComVividsolutionsJtsGeomCoordinate *pt, IOSObjectArray *pts);

FOUNDATION_EXPORT void ComVividsolutionsJtsOperationPolygonizeEdgeRing_initWithComVividsolutionsJtsGeomGeometryFactory_(ComVividsolutionsJtsOperationPolygonizeEdgeRing *self, ComVividsolutionsJtsGeomGeometryFactory *factory);

FOUNDATION_EXPORT ComVividsolutionsJtsOperationPolygonizeEdgeRing *new_ComVividsolutionsJtsOperationPolygonizeEdgeRing_initWithComVividsolutionsJtsGeomGeometryFactory_(ComVividsolutionsJtsGeomGeometryFactory *factory) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ComVividsolutionsJtsOperationPolygonizeEdgeRing)

#endif // _ComVividsolutionsJtsOperationPolygonizeEdgeRing_H_
