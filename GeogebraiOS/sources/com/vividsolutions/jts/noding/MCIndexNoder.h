//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/com/vividsolutions/jts/noding/MCIndexNoder.java
//

#ifndef _ComVividsolutionsJtsNodingMCIndexNoder_H_
#define _ComVividsolutionsJtsNodingMCIndexNoder_H_

#include "J2ObjC_header.h"
#include "com/vividsolutions/jts/index/chain/MonotoneChainOverlapAction.h"
#include "com/vividsolutions/jts/noding/SinglePassNoder.h"

@class ComVividsolutionsJtsIndexChainMonotoneChain;
@protocol ComVividsolutionsJtsIndexSpatialIndex;
@protocol ComVividsolutionsJtsNodingSegmentIntersector;
@protocol JavaUtilCollection;
@protocol JavaUtilList;

@interface ComVividsolutionsJtsNodingMCIndexNoder : ComVividsolutionsJtsNodingSinglePassNoder

#pragma mark Public

- (instancetype)init;

- (void)computeNodesWithJavaUtilCollection:(id<JavaUtilCollection>)inputSegStrings;

- (id<ComVividsolutionsJtsIndexSpatialIndex>)getIndex;

- (id<JavaUtilList>)getMonotoneChains;

- (id<JavaUtilCollection>)getNodedSubstrings;

@end

J2OBJC_EMPTY_STATIC_INIT(ComVividsolutionsJtsNodingMCIndexNoder)

FOUNDATION_EXPORT void ComVividsolutionsJtsNodingMCIndexNoder_init(ComVividsolutionsJtsNodingMCIndexNoder *self);

FOUNDATION_EXPORT ComVividsolutionsJtsNodingMCIndexNoder *new_ComVividsolutionsJtsNodingMCIndexNoder_init() NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ComVividsolutionsJtsNodingMCIndexNoder)

@interface ComVividsolutionsJtsNodingMCIndexNoder_SegmentOverlapAction : ComVividsolutionsJtsIndexChainMonotoneChainOverlapAction

#pragma mark Public

- (instancetype)initWithComVividsolutionsJtsNodingMCIndexNoder:(ComVividsolutionsJtsNodingMCIndexNoder *)outer$
              withComVividsolutionsJtsNodingSegmentIntersector:(id<ComVividsolutionsJtsNodingSegmentIntersector>)si;

- (void)overlapWithComVividsolutionsJtsIndexChainMonotoneChain:(ComVividsolutionsJtsIndexChainMonotoneChain *)mc1
                                                       withInt:(jint)start1
               withComVividsolutionsJtsIndexChainMonotoneChain:(ComVividsolutionsJtsIndexChainMonotoneChain *)mc2
                                                       withInt:(jint)start2;

@end

J2OBJC_EMPTY_STATIC_INIT(ComVividsolutionsJtsNodingMCIndexNoder_SegmentOverlapAction)

FOUNDATION_EXPORT void ComVividsolutionsJtsNodingMCIndexNoder_SegmentOverlapAction_initWithComVividsolutionsJtsNodingMCIndexNoder_withComVividsolutionsJtsNodingSegmentIntersector_(ComVividsolutionsJtsNodingMCIndexNoder_SegmentOverlapAction *self, ComVividsolutionsJtsNodingMCIndexNoder *outer$, id<ComVividsolutionsJtsNodingSegmentIntersector> si);

FOUNDATION_EXPORT ComVividsolutionsJtsNodingMCIndexNoder_SegmentOverlapAction *new_ComVividsolutionsJtsNodingMCIndexNoder_SegmentOverlapAction_initWithComVividsolutionsJtsNodingMCIndexNoder_withComVividsolutionsJtsNodingSegmentIntersector_(ComVividsolutionsJtsNodingMCIndexNoder *outer$, id<ComVividsolutionsJtsNodingSegmentIntersector> si) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ComVividsolutionsJtsNodingMCIndexNoder_SegmentOverlapAction)

#endif // _ComVividsolutionsJtsNodingMCIndexNoder_H_
