//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/com/vividsolutions/jts/simplify/DouglasPeuckerSimplifier.java
//

#ifndef _ComVividsolutionsJtsSimplifyDouglasPeuckerSimplifier_H_
#define _ComVividsolutionsJtsSimplifyDouglasPeuckerSimplifier_H_

#include "J2ObjC_header.h"
#include "com/vividsolutions/jts/geom/util/GeometryTransformer.h"

@class ComVividsolutionsJtsGeomGeometry;
@class ComVividsolutionsJtsGeomLinearRing;
@class ComVividsolutionsJtsGeomMultiPolygon;
@class ComVividsolutionsJtsGeomPolygon;
@protocol ComVividsolutionsJtsGeomCoordinateSequence;

@interface ComVividsolutionsJtsSimplifyDouglasPeuckerSimplifier : NSObject

#pragma mark Public

- (instancetype)initWithComVividsolutionsJtsGeomGeometry:(ComVividsolutionsJtsGeomGeometry *)inputGeom;

- (ComVividsolutionsJtsGeomGeometry *)getResultGeometry;

- (void)setDistanceToleranceWithDouble:(jdouble)distanceTolerance;

- (void)setEnsureValidWithBoolean:(jboolean)isEnsureValidTopology;

+ (ComVividsolutionsJtsGeomGeometry *)simplifyWithComVividsolutionsJtsGeomGeometry:(ComVividsolutionsJtsGeomGeometry *)geom
                                                                        withDouble:(jdouble)distanceTolerance;

@end

J2OBJC_EMPTY_STATIC_INIT(ComVividsolutionsJtsSimplifyDouglasPeuckerSimplifier)

FOUNDATION_EXPORT ComVividsolutionsJtsGeomGeometry *ComVividsolutionsJtsSimplifyDouglasPeuckerSimplifier_simplifyWithComVividsolutionsJtsGeomGeometry_withDouble_(ComVividsolutionsJtsGeomGeometry *geom, jdouble distanceTolerance);

FOUNDATION_EXPORT void ComVividsolutionsJtsSimplifyDouglasPeuckerSimplifier_initWithComVividsolutionsJtsGeomGeometry_(ComVividsolutionsJtsSimplifyDouglasPeuckerSimplifier *self, ComVividsolutionsJtsGeomGeometry *inputGeom);

FOUNDATION_EXPORT ComVividsolutionsJtsSimplifyDouglasPeuckerSimplifier *new_ComVividsolutionsJtsSimplifyDouglasPeuckerSimplifier_initWithComVividsolutionsJtsGeomGeometry_(ComVividsolutionsJtsGeomGeometry *inputGeom) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ComVividsolutionsJtsSimplifyDouglasPeuckerSimplifier)

@interface ComVividsolutionsJtsSimplifyDouglasPeuckerSimplifier_DPTransformer : ComVividsolutionsJtsGeomUtilGeometryTransformer

#pragma mark Public

- (instancetype)initWithComVividsolutionsJtsSimplifyDouglasPeuckerSimplifier:(ComVividsolutionsJtsSimplifyDouglasPeuckerSimplifier *)outer$
                                                                 withBoolean:(jboolean)isEnsureValidTopology;

#pragma mark Protected

- (id<ComVividsolutionsJtsGeomCoordinateSequence>)transformCoordinatesWithComVividsolutionsJtsGeomCoordinateSequence:(id<ComVividsolutionsJtsGeomCoordinateSequence>)coords
                                                                                withComVividsolutionsJtsGeomGeometry:(ComVividsolutionsJtsGeomGeometry *)parent;

- (ComVividsolutionsJtsGeomGeometry *)transformLinearRingWithComVividsolutionsJtsGeomLinearRing:(ComVividsolutionsJtsGeomLinearRing *)geom
                                                           withComVividsolutionsJtsGeomGeometry:(ComVividsolutionsJtsGeomGeometry *)parent;

- (ComVividsolutionsJtsGeomGeometry *)transformMultiPolygonWithComVividsolutionsJtsGeomMultiPolygon:(ComVividsolutionsJtsGeomMultiPolygon *)geom
                                                               withComVividsolutionsJtsGeomGeometry:(ComVividsolutionsJtsGeomGeometry *)parent;

- (ComVividsolutionsJtsGeomGeometry *)transformPolygonWithComVividsolutionsJtsGeomPolygon:(ComVividsolutionsJtsGeomPolygon *)geom
                                                     withComVividsolutionsJtsGeomGeometry:(ComVividsolutionsJtsGeomGeometry *)parent;

@end

J2OBJC_EMPTY_STATIC_INIT(ComVividsolutionsJtsSimplifyDouglasPeuckerSimplifier_DPTransformer)

FOUNDATION_EXPORT void ComVividsolutionsJtsSimplifyDouglasPeuckerSimplifier_DPTransformer_initWithComVividsolutionsJtsSimplifyDouglasPeuckerSimplifier_withBoolean_(ComVividsolutionsJtsSimplifyDouglasPeuckerSimplifier_DPTransformer *self, ComVividsolutionsJtsSimplifyDouglasPeuckerSimplifier *outer$, jboolean isEnsureValidTopology);

FOUNDATION_EXPORT ComVividsolutionsJtsSimplifyDouglasPeuckerSimplifier_DPTransformer *new_ComVividsolutionsJtsSimplifyDouglasPeuckerSimplifier_DPTransformer_initWithComVividsolutionsJtsSimplifyDouglasPeuckerSimplifier_withBoolean_(ComVividsolutionsJtsSimplifyDouglasPeuckerSimplifier *outer$, jboolean isEnsureValidTopology) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ComVividsolutionsJtsSimplifyDouglasPeuckerSimplifier_DPTransformer)

#endif // _ComVividsolutionsJtsSimplifyDouglasPeuckerSimplifier_H_
