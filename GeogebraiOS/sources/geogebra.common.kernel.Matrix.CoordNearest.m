//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/Matrix/CoordNearest.java
//


#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "geogebra/common/kernel/Matrix/CoordNearest.h"
#include "geogebra/common/kernel/Matrix/Coords.h"
#include "java/lang/Double.h"

@interface GeogebraCommonKernelMatrixCoordNearest () {
 @public
  GeogebraCommonKernelMatrixCoords *point_;
  jdouble currentDistance_;
  GeogebraCommonKernelMatrixCoords *currentNearest_;
}

@end

J2OBJC_FIELD_SETTER(GeogebraCommonKernelMatrixCoordNearest, point_, GeogebraCommonKernelMatrixCoords *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelMatrixCoordNearest, currentNearest_, GeogebraCommonKernelMatrixCoords *)

@implementation GeogebraCommonKernelMatrixCoordNearest

- (instancetype)initWithGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)point {
  GeogebraCommonKernelMatrixCoordNearest_initWithGeogebraCommonKernelMatrixCoords_(self, point);
  return self;
}

- (jboolean)checkWithGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)p {
  jdouble distance = [((GeogebraCommonKernelMatrixCoords *) nil_chk(p)) distanceWithGeogebraCommonKernelMatrixCoords:point_];
  if (distance < currentDistance_) {
    currentDistance_ = distance;
    GeogebraCommonKernelMatrixCoordNearest_set_currentNearest_(self, p);
    return YES;
  }
  return NO;
}

- (GeogebraCommonKernelMatrixCoords *)get {
  return currentNearest_;
}

- (void)dealloc {
  RELEASE_(point_);
  RELEASE_(currentNearest_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonKernelMatrixCoords:", "CoordNearest", NULL, 0x1, NULL, NULL },
    { "checkWithGeogebraCommonKernelMatrixCoords:", "check", "Z", 0x1, NULL, NULL },
    { "get", NULL, "Lgeogebra.common.kernel.Matrix.Coords;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "point_", NULL, 0x2, "Lgeogebra.common.kernel.Matrix.Coords;", NULL, NULL,  },
    { "currentDistance_", NULL, 0x2, "D", NULL, NULL,  },
    { "currentNearest_", NULL, 0x2, "Lgeogebra.common.kernel.Matrix.Coords;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelMatrixCoordNearest = { 2, "CoordNearest", "geogebra.common.kernel.Matrix", NULL, 0x1, 3, methods, 3, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelMatrixCoordNearest;
}

@end

void GeogebraCommonKernelMatrixCoordNearest_initWithGeogebraCommonKernelMatrixCoords_(GeogebraCommonKernelMatrixCoordNearest *self, GeogebraCommonKernelMatrixCoords *point) {
  NSObject_init(self);
  GeogebraCommonKernelMatrixCoordNearest_set_point_(self, point);
  self->currentDistance_ = JavaLangDouble_POSITIVE_INFINITY;
  GeogebraCommonKernelMatrixCoordNearest_set_currentNearest_(self, nil);
}

GeogebraCommonKernelMatrixCoordNearest *new_GeogebraCommonKernelMatrixCoordNearest_initWithGeogebraCommonKernelMatrixCoords_(GeogebraCommonKernelMatrixCoords *point) {
  GeogebraCommonKernelMatrixCoordNearest *self = [GeogebraCommonKernelMatrixCoordNearest alloc];
  GeogebraCommonKernelMatrixCoordNearest_initWithGeogebraCommonKernelMatrixCoords_(self, point);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelMatrixCoordNearest)
